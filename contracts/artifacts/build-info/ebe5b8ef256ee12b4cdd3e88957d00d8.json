{
	"id": "ebe5b8ef256ee12b4cdd3e88957d00d8",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.9",
	"solcLongVersion": "0.8.9+commit.e5eed63a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Staking.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.4;\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\nimport \"./SafeBEP20.sol\";\r\n\r\ncontract StakingPlatform is Ownable {\r\n    \r\n    using SafeMath for uint256;\r\n    using SafeBEP20 for IBEP20;\r\n    \r\n    // args for _stakers\r\n    struct Staker {\r\n        uint256 stakerCurrentReward;\r\n        uint256 stakedAmount;\r\n        uint256 mode;\r\n        uint256 stakeStartTime;\r\n        uint256 lastUpdatedBlockNumber;\r\n        uint256 staked;\r\n    }   \r\n    \r\n    // refer to CRSFANS token. Address: 0x7AD8A62451f79399c940fC1A6FE96358a80B1931\r\n    \r\n    uint256 private _unstakingFeeRate;\r\n    uint256 private _eventPeriod;\r\n    uint256 private _rewardRate;\r\n    uint256 private _rewardFeeRate;\r\n    uint256 private _lockupPeriod;\r\n    uint256 private _minStakeAmount_m;\r\n    uint256 private _minStakeAmount_g;\r\n    uint256 private _minStakeAmount_s;\r\n    uint256 private _minStakeAmount_c;\r\n    \r\n    address[] private _stakers;\r\n\r\n    mapping(address => Staker) private _staker;\r\n\r\n    // Total amount of token staked in staking pool.\r\n    uint256 public totalStaked;\r\n    IBEP20 public token;\r\n    \r\n    // Events triggered when start, stake, unstake(withdraw), get reward.\r\n    event Staked(address staker, uint256 amount);\r\n    event Harvest(address staker, uint256 rewardToClaim);\r\n    event Withdraw(address staker, uint256 amount);\r\n    event SetRewardRate(uint256 rewardRate);\r\n    event SetEventPeriod(uint256 lockupDuration);\r\n    event SetUnstakingFeeRate(uint256 unstakingFeeRate);\r\n\r\n    constructor(address _token) {\r\n        \r\n        Init();\r\n        token = IBEP20(_token);\r\n    }\r\n\r\n    function Init() internal {\r\n        \r\n        _rewardRate = 200; // per day\r\n        _unstakingFeeRate = 1500;\r\n        _rewardFeeRate = 100;\r\n        _eventPeriod = 7 days;\r\n        _lockupPeriod = 90 days;\r\n        _minStakeAmount_m = 3* 1e24;\r\n        _minStakeAmount_c = 1e24;\r\n        _minStakeAmount_s = 3 * 1e24;\r\n        _minStakeAmount_g = 7 * 1e24;\r\n    }\r\n\r\n    function calDaysFromTimestamp(uint256 timedur) internal pure returns (uint256) {\r\n        \r\n        return timedur.div(1 days);\r\n    }\r\n\r\n    // Update rewards for _stakers according to deposited amount.\r\n    function updateReward() private{\r\n        \r\n        uint256 stakerStakedAmount = _staker[msg.sender].stakedAmount;\r\n        \r\n        uint256 newReward = stakerStakedAmount.mul(block.number.sub(_staker[msg.sender].lastUpdatedBlockNumber).div(8640)).mul(_rewardRate).div(1e4);\r\n        _staker[msg.sender].stakerCurrentReward = _staker[msg.sender].stakerCurrentReward.add(newReward);\r\n        _staker[msg.sender].lastUpdatedBlockNumber = block.number;\r\n    }\r\n    \r\n    function startStaking(uint256 _amount, uint256 _mode) external {\r\n        \r\n        require(_amount > 0, \"Amount should be greater than 0\");\r\n        require(token.balanceOf(msg.sender) > _amount, \"Insufficient!\");\r\n        require(_staker[msg.sender].staked != 0x55, \"Already started\");\r\n        \r\n        if (_mode == 0) require(_amount >= _minStakeAmount_m, \"Insufficient\");\r\n        else if (_mode == 1) require(_amount >= _minStakeAmount_c, \"Insufficient\");\r\n        else if (_mode == 2) require(_amount >= _minStakeAmount_s, \"Insufficient\");\r\n        else if (_mode == 3) require(_amount >= _minStakeAmount_g, \"Insufficient\");\r\n        else require(_amount < 0, \"Invalid Mode\");\r\n        \r\n        _staker[msg.sender].mode = _mode;\r\n        _staker[msg.sender].stakeStartTime = block.timestamp;\r\n        _staker[msg.sender].staked = 0x55;\r\n        _stakers.push(msg.sender);\r\n        stake(_amount);\r\n    }\r\n    \r\n    // Staker tries to stake specific amount of token.\r\n    function stake(uint256 _amount) public{\r\n        \r\n        require(_amount > 0, \"Amount should be greater than 0\");\r\n        require(token.balanceOf(msg.sender) > _amount, \"Insufficient!\");\r\n        require(_staker[msg.sender].staked == 0x55, \"Error: invalid staker\");\r\n        \r\n        updateReward();\r\n        \r\n        token.safeTransferFrom(msg.sender, address(this), _amount);\r\n        _staker[msg.sender].stakedAmount = _staker[msg.sender].stakedAmount.add(_amount);\r\n        totalStaked = totalStaked.add(_amount);\r\n        \r\n        emit Staked(msg.sender, _amount);\r\n    }\r\n\r\n    function getTotalStaked() public view returns (uint256) {\r\n\r\n        return totalStaked;\r\n    }\r\n\r\n    function getNumberofStakers() public view returns (uint256) {\r\n\r\n        return _stakers.length;\r\n    }\r\n\r\n    function getStakerMode(address _address) public view returns (uint256) {\r\n\r\n        return _staker[_address].mode == 0 ? 0 : 1;\r\n    }\r\n\r\n    function isStartStaking(address _address) public view returns (uint256) {\r\n\r\n        return _staker[_address].staked;\r\n    }\r\n\r\n    function isLocked(address _address) public view returns (uint256) {\r\n\r\n        if (_staker[_address].staked != 0x55)\r\n            return 1;\r\n        if (_staker[_address].mode != 0)\r\n            return block.timestamp.sub(_staker[_address].stakeStartTime) % (7 days) == 0 ? 0 : 1;\r\n        else \r\n            return block.timestamp.sub(_staker[_address].stakeStartTime) >= _lockupPeriod ? 0 : 1;\r\n    }\r\n    \r\n    function stakedAmount(address _address) public view returns (uint256) {\r\n        \r\n        return _staker[_address].stakedAmount;\r\n    }\r\n    \r\n    function rewardAmount(address _address) public view returns (uint256) {\r\n\r\n        return _staker[_address].stakerCurrentReward;\r\n    }\r\n\r\n    function getRewardRate() public view returns (uint256) {\r\n\r\n        return _rewardRate;\r\n    }\r\n\r\n    // Withdraw some of token staked.\r\n    function withdraw(uint256 amount) external{\r\n        \r\n        require(amount > 0, \"Amount should be greater than 0\");\r\n        require(amount <= _staker[msg.sender].stakedAmount, \"Invalid amount\");\r\n\r\n        updateReward();\r\n        uint256 amountTobeWithdrawn = amount;\r\n        uint256 during = block.timestamp.sub(_staker[msg.sender].stakeStartTime).div(1 days);\r\n        uint256 fee = 100;\r\n        bool isLockupTimeOver = _staker[msg.sender].mode != 0 ? during % _eventPeriod == 0 && during > 0 :\r\n            block.timestamp >= _staker[msg.sender].stakeStartTime.add(_lockupPeriod);\r\n        if (!isLockupTimeOver) {\r\n            fee = _unstakingFeeRate;\r\n        }\r\n        _staker[msg.sender].stakedAmount = _staker[msg.sender].stakedAmount.sub(amountTobeWithdrawn);\r\n        totalStaked = totalStaked.sub(amountTobeWithdrawn);\r\n        amountTobeWithdrawn = amountTobeWithdrawn.sub(amountTobeWithdrawn.mul(fee).div(1e4));\r\n        token.safeTransfer(msg.sender, amountTobeWithdrawn);\r\n\r\n        emit Withdraw(msg.sender, amountTobeWithdrawn);\r\n    }\r\n    \r\n    function setRewardRate(uint256 __rewardRate) external onlyOwner {\r\n        \r\n        require(__rewardRate > 0, \"Invalid value\");\r\n        \r\n        _rewardRate = __rewardRate;\r\n\r\n        emit SetRewardRate(__rewardRate);\r\n    }\r\n\r\n    function setEventPeriod(uint256 __eventPeriod) external onlyOwner {\r\n        \r\n        require(__eventPeriod > 0, \"Invalid Lockup Duration\");\r\n\r\n        _eventPeriod = __eventPeriod.mul(1 days);\r\n\r\n        emit SetEventPeriod(__eventPeriod);\r\n    }\r\n\r\n    function setUnstakingFeeRate(uint256 __unstakingFeeRate) external onlyOwner {\r\n        \r\n        require(__unstakingFeeRate > 0, \"Invalid Unstaking Fee Rate\");\r\n\r\n        _unstakingFeeRate = __unstakingFeeRate;\r\n\r\n        emit SetUnstakingFeeRate(__unstakingFeeRate);\r\n    }\r\n\r\n    function setLockupTime(uint256 lockupTime) external onlyOwner {\r\n\r\n        require(lockupTime > 0, \"Can't be zero\");\r\n        \r\n        _lockupPeriod = lockupTime;\r\n    }\r\n\r\n    function setThreeMonthMinAmount(uint256 _minAmount) external onlyOwner {\r\n        \r\n        require (_minAmount > 0, \"Can't be zero\");\r\n\r\n        _minStakeAmount_m = _minAmount;\r\n    }\r\n\r\n    function setCopperMinAmount(uint256 _minAmount) external onlyOwner {\r\n\r\n        require (_minAmount > 0, \"Can't be zero\");\r\n\r\n        _minStakeAmount_c = _minAmount;\r\n    }\r\n\r\n    function setSilverMinAmount(uint256 _minAmount) external onlyOwner {\r\n\r\n        require (_minAmount > 0, \"Can't be zero\");\r\n\r\n        _minStakeAmount_s = _minAmount;\r\n    }\r\n\r\n    function setGoldMinAmount(uint256 _minAmount) external onlyOwner {\r\n\r\n        require (_minAmount > 0, \"Can't be zero\");\r\n\r\n        _minStakeAmount_g = _minAmount;\r\n    }\r\n    \r\n    // Amount of reward staker can be guaranteed.\r\n    function rewardToHarvest() public returns (uint256){\r\n        \r\n        updateReward();\r\n\r\n        return _staker[msg.sender].stakerCurrentReward;\r\n    }\r\n    \r\n    // Get reward of msg.sender\r\n    function harvest() public{\r\n        \r\n        updateReward();\r\n        \r\n        uint256 rewardToClaim = _staker[msg.sender].stakerCurrentReward.sub(_staker[msg.sender].stakerCurrentReward.mul(_rewardFeeRate).div(1e4));\r\n        \r\n        require(rewardToClaim > 0, \"Nothing to claim\");\r\n        if (rewardToClaim > token.balanceOf(address(this)))\r\n            rewardToClaim = token.balanceOf(address(this));\r\n        token.safeTransfer(msg.sender, rewardToClaim);\r\n        _staker[msg.sender].stakerCurrentReward = 0;\r\n        \r\n        emit Harvest(msg.sender, rewardToClaim);\r\n    }\r\n\r\n    function getMinimumStakingAmount(uint256 _mode) public view returns (uint256) {\r\n        \r\n        uint256 _minStakeAmount = 0;\r\n\r\n        if (_mode == 0 || _mode == 2) _minStakeAmount = _minStakeAmount_m;\r\n        else if (_mode == 1) _minStakeAmount = _minStakeAmount_c;\r\n        else if (_mode == 3) _minStakeAmount = _minStakeAmount_g;\r\n        else require (0 > 1, \"Invalid Mode\");\r\n\r\n        return _minStakeAmount;\r\n    }\r\n}\r\n"
			},
			"contracts/SafeBEP20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.4;\r\n\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\nimport \"@openzeppelin/contracts/utils/Address.sol\";\r\nimport \"./IBEP20.sol\";\r\n\r\nlibrary SafeBEP20 {\r\n    using SafeMath for uint256;\r\n    using Address for address;\r\n\r\n    function safeTransfer(IBEP20 token, address to, uint256 value) internal {\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\r\n    }\r\n\r\n    function safeTransferFrom(IBEP20 token, address from, address to, uint256 value) internal {\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\r\n    }\r\n\r\n    /**\r\n     * @dev Deprecated. This function has issues similar to the ones found in\r\n     * {IBEP20-approve}, and its usage is discouraged.\r\n     *\r\n     * Whenever possible, use {safeIncreaseAllowance} and\r\n     * {safeDecreaseAllowance} instead.\r\n     */\r\n    function safeApprove(IBEP20 token, address spender, uint256 value) internal {\r\n        // safeApprove should only be called when setting an initial allowance,\r\n        // or when resetting it to zero. To increase and decrease it, use\r\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\r\n        // solhint-disable-next-line max-line-length\r\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\r\n            \"SafeBEP20: approve from non-zero to non-zero allowance\"\r\n        );\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\r\n    }\r\n\r\n    function safeIncreaseAllowance(IBEP20 token, address spender, uint256 value) internal {\r\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\r\n    }\r\n\r\n    function safeDecreaseAllowance(IBEP20 token, address spender, uint256 value) internal {\r\n        uint256 newAllowance = token.allowance(address(this), spender).sub(value, \"SafeBEP20: decreased allowance below zero\");\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\r\n    }\r\n    \r\n    /**\r\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\r\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\r\n     * @param token The token targeted by the call.\r\n     * @param data The call data (encoded using abi.encode or one of its variants).\r\n     */\r\n    function _callOptionalReturn(IBEP20 token, bytes memory data) private {\r\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\r\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\r\n        // the target address contains contract code and also asserts for success in the low-level call.\r\n        \r\n        bytes memory returndata = address(token).functionCall(data, \"SafeBEP20: low-level call failed\");\r\n        if (returndata.length > 0) { // Return data is optional\r\n            // solhint-disable-next-line max-line-length\r\n            require(abi.decode(returndata, (bool)), \"SafeBEP20: BEP20 operation did not succeed\");\r\n        }\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"contracts/IBEP20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\ninterface IBEP20 {\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the token decimals.\r\n     */\r\n    function decimals() external view returns (uint8);\r\n\r\n    /**\r\n     * @dev Returns the token symbol.\r\n     */\r\n    function symbol() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the token name.\r\n     */\r\n    function name() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the bep token owner.\r\n     */\r\n    function getOwner() external view returns (address);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address _owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT:  Beware that changingan allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":194:8255  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":194:8255  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220de4c7be6b8589acbf5f63b9e86dcb90806b931fe0b5ceedb00dfd9183e5e8a1064736f6c63430008090033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220de4c7be6b8589acbf5f63b9e86dcb90806b931fe0b5ceedb00dfd9183e5e8a1064736f6c63430008090033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDE 0x4C PUSH28 0xE6B8589ACBF5F63B9E86DCB90806B931FE0B5CEEDB00DFD9183E5E8A LT PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ",
							"sourceMap": "194:8061:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220de4c7be6b8589acbf5f63b9e86dcb90806b931fe0b5ceedb00dfd9183e5e8a1064736f6c63430008090033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDE 0x4C PUSH28 0xE6B8589ACBF5F63B9E86DCB90806B931FE0B5CEEDB00DFD9183E5E8A LT PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ",
							"sourceMap": "194:8061:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220de4c7be6b8589acbf5f63b9e86dcb90806b931fe0b5ceedb00dfd9183e5e8a1064736f6c63430008090033",
									".code": [
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":467:6768  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":467:6768  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220ac86573c17e9dfe964dd12c44ce60777e5034c6b6ecd4d605a8898eb29a2c7a064736f6c63430008090033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ac86573c17e9dfe964dd12c44ce60777e5034c6b6ecd4d605a8898eb29a2c7a064736f6c63430008090033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAC DUP7 JUMPI EXTCODECOPY OR 0xE9 0xDF 0xE9 PUSH5 0xDD12C44CE6 SMOD PUSH24 0xE5034C6B6ECD4D605A8898EB29A2C7A064736F6C63430008 MULMOD STOP CALLER ",
							"sourceMap": "467:6301:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ac86573c17e9dfe964dd12c44ce60777e5034c6b6ecd4d605a8898eb29a2c7a064736f6c63430008090033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAC DUP7 JUMPI EXTCODECOPY OR 0xE9 0xDF 0xE9 PUSH5 0xDD12C44CE6 SMOD PUSH24 0xE5034C6B6ECD4D605A8898EB29A2C7A064736F6C63430008 MULMOD STOP CALLER ",
							"sourceMap": "467:6301:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ac86573c17e9dfe964dd12c44ce60777e5034c6b6ecd4d605a8898eb29a2c7a064736f6c63430008090033",
									".code": [
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/IBEP20.sol": {
				"IBEP20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT:  Beware that changingan allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"getOwner()": {
								"details": "Returns the bep token owner."
							},
							"name()": {
								"details": "Returns the token name."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"getOwner()": "893d20e8",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT:  Beware that changingan allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"name()\":{\"details\":\"Returns the token name.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IBEP20.sol\":\"IBEP20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IBEP20.sol\":{\"keccak256\":\"0xe10557d770e08d0867c7d7f45f4ecc3aa71fab37aec10f03deac873774d83958\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29c5d9f242fe719f9c99293f895de2c62b11990dcb76b0c5fe29d4bb20debd36\",\"dweb:/ipfs/QmcxmgSN37RwVYQ6uVyyksA7q9rbs7ZfAGxLg9ZAqetzVc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/SafeBEP20.sol": {
				"SafeBEP20": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/SafeBEP20.sol\":198:3371  library SafeBEP20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/SafeBEP20.sol\":198:3371  library SafeBEP20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220095e643ac96b281fbd788b15b344ef7b13b62c3d26785f5881c8b550cb0a076064736f6c63430008090033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220095e643ac96b281fbd788b15b344ef7b13b62c3d26785f5881c8b550cb0a076064736f6c63430008090033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MULMOD 0x5E PUSH5 0x3AC96B281F 0xBD PUSH25 0x8B15B344EF7B13B62C3D26785F5881C8B550CB0A076064736F PUSH13 0x63430008090033000000000000 ",
							"sourceMap": "198:3173:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220095e643ac96b281fbd788b15b344ef7b13b62c3d26785f5881c8b550cb0a076064736f6c63430008090033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MULMOD 0x5E PUSH5 0x3AC96B281F 0xBD PUSH25 0x8B15B344EF7B13B62C3D26785F5881C8B550CB0A076064736F PUSH13 0x63430008090033000000000000 ",
							"sourceMap": "198:3173:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IBEP20,bytes memory)": "infinite",
								"safeApprove(contract IBEP20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IBEP20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IBEP20,address,uint256)": "infinite",
								"safeTransfer(contract IBEP20,address,uint256)": "infinite",
								"safeTransferFrom(contract IBEP20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220095e643ac96b281fbd788b15b344ef7b13b62c3d26785f5881c8b550cb0a076064736f6c63430008090033",
									".code": [
										{
											"begin": 198,
											"end": 3371,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 198,
											"end": 3371,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 198,
											"end": 3371,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 198,
											"end": 3371,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 198,
											"end": 3371,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 198,
											"end": 3371,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 198,
											"end": 3371,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 198,
											"end": 3371,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 198,
											"end": 3371,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SafeBEP20.sol\":\"SafeBEP20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]},\"contracts/IBEP20.sol\":{\"keccak256\":\"0xe10557d770e08d0867c7d7f45f4ecc3aa71fab37aec10f03deac873774d83958\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29c5d9f242fe719f9c99293f895de2c62b11990dcb76b0c5fe29d4bb20debd36\",\"dweb:/ipfs/QmcxmgSN37RwVYQ6uVyyksA7q9rbs7ZfAGxLg9ZAqetzVc\"]},\"contracts/SafeBEP20.sol\":{\"keccak256\":\"0x6ddb1e1687ec39379d8d51c1dd37f9fc5bdbcf76d13b12bb2ef97218f17af728\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c317daa7645bea9fb8926f04a64e9dda06454035d35dd618fb8865bead0b343\",\"dweb:/ipfs/QmcGbnJ9k7RVUBh5HyHxzV7u52hykYsHKqi7VRWSLvEjrG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Staking.sol": {
				"StakingPlatform": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "staker",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "rewardToClaim",
									"type": "uint256"
								}
							],
							"name": "Harvest",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "lockupDuration",
									"type": "uint256"
								}
							],
							"name": "SetEventPeriod",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "rewardRate",
									"type": "uint256"
								}
							],
							"name": "SetRewardRate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "unstakingFeeRate",
									"type": "uint256"
								}
							],
							"name": "SetUnstakingFeeRate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "staker",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Staked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "staker",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdraw",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_mode",
									"type": "uint256"
								}
							],
							"name": "getMinimumStakingAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getNumberofStakers",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getRewardRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "getStakerMode",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTotalStaked",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "harvest",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "isLocked",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "isStartStaking",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "rewardAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardToHarvest",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_minAmount",
									"type": "uint256"
								}
							],
							"name": "setCopperMinAmount",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "__eventPeriod",
									"type": "uint256"
								}
							],
							"name": "setEventPeriod",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_minAmount",
									"type": "uint256"
								}
							],
							"name": "setGoldMinAmount",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "lockupTime",
									"type": "uint256"
								}
							],
							"name": "setLockupTime",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "__rewardRate",
									"type": "uint256"
								}
							],
							"name": "setRewardRate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_minAmount",
									"type": "uint256"
								}
							],
							"name": "setSilverMinAmount",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_minAmount",
									"type": "uint256"
								}
							],
							"name": "setThreeMonthMinAmount",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "__unstakingFeeRate",
									"type": "uint256"
								}
							],
							"name": "setUnstakingFeeRate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "stakedAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_mode",
									"type": "uint256"
								}
							],
							"name": "startStaking",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "contract IBEP20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalStaked",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Staking.sol\":260:9762  contract StakingPlatform is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Staking.sol\":1673:1769  constructor(address _token) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  tag_7\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":940:952  _msgSender() */\n  tag_8\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":940:950  _msgSender */\n  shl(0x20, tag_9)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":940:952  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:939  _transferOwnership */\n  shl(0x20, tag_10)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_7:\n    /* \"contracts/Staking.sol\":1722:1728  Init() */\n  tag_12\n    /* \"contracts/Staking.sol\":1722:1726  Init */\n  shl(0x20, tag_13)\n    /* \"contracts/Staking.sol\":1722:1728  Init() */\n  0x20\n  shr\n  jump\t// in\ntag_12:\n    /* \"contracts/Staking.sol\":1754:1760  _token */\n  dup1\n    /* \"contracts/Staking.sol\":1739:1744  token */\n  0x0d\n  0x00\n    /* \"contracts/Staking.sol\":1739:1761  token = IBEP20(_token) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Staking.sol\":1673:1769  constructor(address _token) {... */\n  pop\n    /* \"contracts/Staking.sol\":260:9762  contract StakingPlatform is Ownable {... */\n  jump(tag_14)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_9:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2368  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2387:2395  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2384  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2441:2449  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2431:2439  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"contracts/Staking.sol\":1777:2142  function Init() internal {... */\ntag_13:\n    /* \"contracts/Staking.sol\":1837:1840  200 */\n  0xc8\n    /* \"contracts/Staking.sol\":1823:1834  _rewardRate */\n  0x03\n    /* \"contracts/Staking.sol\":1823:1840  _rewardRate = 200 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Staking.sol\":1882:1886  1500 */\n  0x05dc\n    /* \"contracts/Staking.sol\":1862:1879  _unstakingFeeRate */\n  0x01\n    /* \"contracts/Staking.sol\":1862:1886  _unstakingFeeRate = 1500 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Staking.sol\":1914:1917  100 */\n  0x64\n    /* \"contracts/Staking.sol\":1897:1911  _rewardFeeRate */\n  0x04\n    /* \"contracts/Staking.sol\":1897:1917  _rewardFeeRate = 100 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Staking.sol\":1943:1949  7 days */\n  0x093a80\n    /* \"contracts/Staking.sol\":1928:1940  _eventPeriod */\n  0x02\n    /* \"contracts/Staking.sol\":1928:1949  _eventPeriod = 7 days */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Staking.sol\":1976:1983  90 days */\n  0x76a700\n    /* \"contracts/Staking.sol\":1960:1973  _lockupPeriod */\n  0x05\n    /* \"contracts/Staking.sol\":1960:1983  _lockupPeriod = 90 days */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Staking.sol\":2014:2021  3* 1e24 */\n  0x027b46536c66c8e3000000\n    /* \"contracts/Staking.sol\":1994:2011  _minStakeAmount_m */\n  0x06\n    /* \"contracts/Staking.sol\":1994:2021  _minStakeAmount_m = 3* 1e24 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Staking.sol\":2052:2056  1e24 */\n  0xd3c21bcecceda1000000\n    /* \"contracts/Staking.sol\":2032:2049  _minStakeAmount_c */\n  0x09\n    /* \"contracts/Staking.sol\":2032:2056  _minStakeAmount_c = 1e24 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Staking.sol\":2087:2095  3 * 1e24 */\n  0x027b46536c66c8e3000000\n    /* \"contracts/Staking.sol\":2067:2084  _minStakeAmount_s */\n  0x08\n    /* \"contracts/Staking.sol\":2067:2095  _minStakeAmount_s = 3 * 1e24 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Staking.sol\":2126:2134  7 * 1e24 */\n  0x05ca4ec2a79a7f67000000\n    /* \"contracts/Staking.sol\":2106:2123  _minStakeAmount_g */\n  0x07\n    /* \"contracts/Staking.sol\":2106:2134  _minStakeAmount_g = 7 * 1e24 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Staking.sol\":1777:2142  function Init() internal {... */\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_19:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_21:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_22:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_31\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_21\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_23:\n    /* \"#utility.yul\":641:665   */\n  tag_33\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_22\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_34\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_34:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_24:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_36\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_23\n  jump\t// in\ntag_36:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_38\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_39\n  tag_19\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":932:1051   */\ntag_38:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_40\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_24\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/Staking.sol\":260:9762  contract StakingPlatform is Ownable {... */\ntag_14:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Staking.sol\":260:9762  contract StakingPlatform is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x817b1cd2\n      gt\n      tag_30\n      jumpi\n      dup1\n      0xaedf562b\n      gt\n      tag_31\n      jumpi\n      dup1\n      0xf2fde38b\n      gt\n      tag_32\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xf9931855\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xfc0c546a\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xfe600f84\n      eq\n      tag_29\n      jumpi\n      jump(tag_2)\n    tag_32:\n      dup1\n      0xaedf562b\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xc1704a14\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xc665d80e\n      eq\n      tag_25\n      jumpi\n      jump(tag_2)\n    tag_31:\n      dup1\n      0x91e07e7a\n      gt\n      tag_33\n      jumpi\n      dup1\n      0x91e07e7a\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x9e447fc6\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xa694fc3a\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xae544943\n      eq\n      tag_22\n      jumpi\n      jump(tag_2)\n    tag_33:\n      dup1\n      0x817b1cd2\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x909f093e\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_30:\n      dup1\n      0x4b77dd9e\n      gt\n      tag_34\n      jumpi\n      dup1\n      0x645a8a56\n      gt\n      tag_35\n      jumpi\n      dup1\n      0x645a8a56\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x692642e7\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x7e1a3786\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_35:\n      dup1\n      0x4b77dd9e\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x5715ec11\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x5d2ec65d\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_34:\n      dup1\n      0x0917e776\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x23b61117\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x4641257d\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x4a4fbeec\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x4b62b70b\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Staking.sol\":4398:4493  function getTotalStaked() public view returns (uint256) {... */\n    tag_3:\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":8127:8299  function setSilverMinAmount(uint256 _minAmount) external onlyOwner {... */\n    tag_4:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n    tag_40:\n      stop\n        /* \"contracts/Staking.sol\":5732:6792  function withdraw(uint256 amount) external{... */\n    tag_5:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_45:\n      tag_46\n      jump\t// in\n    tag_44:\n      stop\n        /* \"contracts/Staking.sol\":8738:9323  function harvest() public{... */\n    tag_6:\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      stop\n        /* \"contracts/Staking.sol\":4886:5288  function isLocked(address _address) public view returns (uint256) {... */\n    tag_7:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":7577:7747  function setLockupTime(uint256 lockupTime) external onlyOwner {... */\n    tag_8:\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n    tag_54:\n      stop\n        /* \"contracts/Staking.sol\":2828:3740  function startStaking(uint256 _amount, uint256 _mode) external {... */\n    tag_9:\n      tag_57\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_58\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      tag_60\n      jump\t// in\n    tag_57:\n      stop\n        /* \"contracts/Staking.sol\":4501:4604  function getNumberofStakers() public view returns (uint256) {... */\n    tag_10:\n      tag_61\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_63\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":8540:8693  function rewardToHarvest() public returns (uint256){... */\n    tag_11:\n      tag_64\n      tag_65\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      tag_66\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":5448:5583  function rewardAmount(address _address) public view returns (uint256) {... */\n    tag_12:\n      tag_67\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_68\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_68:\n      tag_69\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      tag_70\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":7039:7287  function setEventPeriod(uint256 __eventPeriod) external onlyOwner {... */\n    tag_13:\n      tag_71\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_72\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_72:\n      tag_73\n      jump\t// in\n    tag_71:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_14:\n      tag_74\n      tag_75\n      jump\t// in\n    tag_74:\n      stop\n        /* \"contracts/Staking.sol\":5591:5685  function getRewardRate() public view returns (uint256) {... */\n    tag_15:\n      tag_76\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      tag_78\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":1213:1239  uint256 public totalStaked */\n    tag_16:\n      tag_79\n      tag_80\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      tag_81\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_17:\n      tag_82\n      tag_83\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      tag_84\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":9331:9759  function getMinimumStakingAmount(uint256 _mode) public view returns (uint256) {... */\n    tag_18:\n      tag_86\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_87\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_87:\n      tag_88\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      tag_89\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":7295:7569  function setUnstakingFeeRate(uint256 __unstakingFeeRate) external onlyOwner {... */\n    tag_19:\n      tag_90\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_91\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_91:\n      tag_92\n      jump\t// in\n    tag_90:\n      stop\n        /* \"contracts/Staking.sol\":6804:7031  function setRewardRate(uint256 __rewardRate) external onlyOwner {... */\n    tag_20:\n      tag_93\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_94\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_94:\n      tag_95\n      jump\t// in\n    tag_93:\n      stop\n        /* \"contracts/Staking.sol\":3808:4390  function stake(uint256 _amount) public{... */\n    tag_21:\n      tag_96\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_97\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_97:\n      tag_98\n      jump\t// in\n    tag_96:\n      stop\n        /* \"contracts/Staking.sol\":8307:8477  function setGoldMinAmount(uint256 _minAmount) external onlyOwner {... */\n    tag_22:\n      tag_99\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_100\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_100:\n      tag_101\n      jump\t// in\n    tag_99:\n      stop\n        /* \"contracts/Staking.sol\":4612:4746  function getStakerMode(address _address) public view returns (uint256) {... */\n    tag_23:\n      tag_102\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_103\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_103:\n      tag_104\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      tag_105\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":7947:8119  function setCopperMinAmount(uint256 _minAmount) external onlyOwner {... */\n    tag_24:\n      tag_106\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_107\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_107:\n      tag_108\n      jump\t// in\n    tag_106:\n      stop\n        /* \"contracts/Staking.sol\":7755:7939  function setThreeMonthMinAmount(uint256 _minAmount) external onlyOwner {... */\n    tag_25:\n      tag_109\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_110\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_110:\n      tag_111\n      jump\t// in\n    tag_109:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_26:\n      tag_112\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_113\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_113:\n      tag_114\n      jump\t// in\n    tag_112:\n      stop\n        /* \"contracts/Staking.sol\":5300:5436  function stakedAmount(address _address) public view returns (uint256) {... */\n    tag_27:\n      tag_115\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_116\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_116:\n      tag_117\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      tag_118\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":1246:1265  IBEP20 public token */\n    tag_28:\n      tag_119\n      tag_120\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      tag_121\n      swap2\n      swap1\n      tag_122\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":4754:4878  function isStartStaking(address _address) public view returns (uint256) {... */\n    tag_29:\n      tag_123\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_124\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_124:\n      tag_125\n      jump\t// in\n    tag_123:\n      mload(0x40)\n      tag_126\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_126:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":4398:4493  function getTotalStaked() public view returns (uint256) {... */\n    tag_37:\n        /* \"contracts/Staking.sol\":4445:4452  uint256 */\n      0x00\n        /* \"contracts/Staking.sol\":4474:4485  totalStaked */\n      sload(0x0c)\n        /* \"contracts/Staking.sol\":4467:4485  return totalStaked */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":4398:4493  function getTotalStaked() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Staking.sol\":8127:8299  function setSilverMinAmount(uint256 _minAmount) external onlyOwner {... */\n    tag_43:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_129\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_130\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_129:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_131\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_83\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_131:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_132\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_133\n      swap1\n      tag_134\n      jump\t// in\n    tag_133:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_132:\n        /* \"contracts/Staking.sol\":8229:8230  0 */\n      0x00\n        /* \"contracts/Staking.sol\":8216:8226  _minAmount */\n      dup2\n        /* \"contracts/Staking.sol\":8216:8230  _minAmount > 0 */\n      gt\n        /* \"contracts/Staking.sol\":8207:8248  require (_minAmount > 0, \"Can't be zero\") */\n      tag_136\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_137\n      swap1\n      tag_138\n      jump\t// in\n    tag_137:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_136:\n        /* \"contracts/Staking.sol\":8281:8291  _minAmount */\n      dup1\n        /* \"contracts/Staking.sol\":8261:8278  _minStakeAmount_s */\n      0x08\n        /* \"contracts/Staking.sol\":8261:8291  _minStakeAmount_s = _minAmount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":8127:8299  function setSilverMinAmount(uint256 _minAmount) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Staking.sol\":5732:6792  function withdraw(uint256 amount) external{... */\n    tag_46:\n        /* \"contracts/Staking.sol\":5812:5813  0 */\n      0x00\n        /* \"contracts/Staking.sol\":5803:5809  amount */\n      dup2\n        /* \"contracts/Staking.sol\":5803:5813  amount > 0 */\n      gt\n        /* \"contracts/Staking.sol\":5795:5849  require(amount > 0, \"Amount should be greater than 0\") */\n      tag_140\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_141\n      swap1\n      tag_142\n      jump\t// in\n    tag_141:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_140:\n        /* \"contracts/Staking.sol\":5878:5885  _staker */\n      0x0b\n        /* \"contracts/Staking.sol\":5878:5897  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":5886:5896  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":5878:5897  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":5878:5910  _staker[msg.sender].stakedAmount */\n      0x01\n      add\n      sload\n        /* \"contracts/Staking.sol\":5868:5874  amount */\n      dup2\n        /* \"contracts/Staking.sol\":5868:5910  amount <= _staker[msg.sender].stakedAmount */\n      gt\n      iszero\n        /* \"contracts/Staking.sol\":5860:5929  require(amount <= _staker[msg.sender].stakedAmount, \"Invalid amount\") */\n      tag_143\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_144\n      swap1\n      tag_145\n      jump\t// in\n    tag_144:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_143:\n        /* \"contracts/Staking.sol\":5942:5956  updateReward() */\n      tag_146\n        /* \"contracts/Staking.sol\":5942:5954  updateReward */\n      tag_147\n        /* \"contracts/Staking.sol\":5942:5956  updateReward() */\n      jump\t// in\n    tag_146:\n        /* \"contracts/Staking.sol\":5967:5994  uint256 amountTobeWithdrawn */\n      0x00\n        /* \"contracts/Staking.sol\":5997:6003  amount */\n      dup2\n        /* \"contracts/Staking.sol\":5967:6003  uint256 amountTobeWithdrawn = amount */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":6014:6028  uint256 during */\n      0x00\n        /* \"contracts/Staking.sol\":6031:6098  block.timestamp.sub(_staker[msg.sender].stakeStartTime).div(1 days) */\n      tag_148\n        /* \"contracts/Staking.sol\":6091:6097  1 days */\n      0x015180\n        /* \"contracts/Staking.sol\":6031:6086  block.timestamp.sub(_staker[msg.sender].stakeStartTime) */\n      tag_149\n        /* \"contracts/Staking.sol\":6051:6058  _staker */\n      0x0b\n        /* \"contracts/Staking.sol\":6051:6070  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":6059:6069  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":6051:6070  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":6051:6085  _staker[msg.sender].stakeStartTime */\n      0x03\n      add\n      sload\n        /* \"contracts/Staking.sol\":6031:6046  block.timestamp */\n      timestamp\n        /* \"contracts/Staking.sol\":6031:6050  block.timestamp.sub */\n      tag_150\n      swap1\n        /* \"contracts/Staking.sol\":6031:6086  block.timestamp.sub(_staker[msg.sender].stakeStartTime) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_149:\n        /* \"contracts/Staking.sol\":6031:6090  block.timestamp.sub(_staker[msg.sender].stakeStartTime).div */\n      tag_151\n      swap1\n        /* \"contracts/Staking.sol\":6031:6098  block.timestamp.sub(_staker[msg.sender].stakeStartTime).div(1 days) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_148:\n        /* \"contracts/Staking.sol\":6014:6098  uint256 during = block.timestamp.sub(_staker[msg.sender].stakeStartTime).div(1 days) */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":6109:6120  uint256 fee */\n      0x00\n        /* \"contracts/Staking.sol\":6123:6126  100 */\n      0x64\n        /* \"contracts/Staking.sol\":6109:6126  uint256 fee = 100 */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":6137:6158  bool isLockupTimeOver */\n      0x00\n        /* \"contracts/Staking.sol\":6189:6190  0 */\n      dup1\n        /* \"contracts/Staking.sol\":6161:6168  _staker */\n      0x0b\n        /* \"contracts/Staking.sol\":6161:6180  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":6169:6179  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":6161:6180  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":6161:6185  _staker[msg.sender].mode */\n      0x02\n      add\n      sload\n        /* \"contracts/Staking.sol\":6161:6190  _staker[msg.sender].mode != 0 */\n      eq\n      iszero\n        /* \"contracts/Staking.sol\":6161:6321  _staker[msg.sender].mode != 0 ? during % _eventPeriod == 0 && during > 0 :... */\n      tag_152\n      jumpi\n        /* \"contracts/Staking.sol\":6268:6321  _staker[msg.sender].stakeStartTime.add(_lockupPeriod) */\n      tag_153\n        /* \"contracts/Staking.sol\":6307:6320  _lockupPeriod */\n      sload(0x05)\n        /* \"contracts/Staking.sol\":6268:6275  _staker */\n      0x0b\n        /* \"contracts/Staking.sol\":6268:6287  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":6276:6286  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":6268:6287  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":6268:6302  _staker[msg.sender].stakeStartTime */\n      0x03\n      add\n      sload\n        /* \"contracts/Staking.sol\":6268:6306  _staker[msg.sender].stakeStartTime.add */\n      tag_154\n      swap1\n        /* \"contracts/Staking.sol\":6268:6321  _staker[msg.sender].stakeStartTime.add(_lockupPeriod) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_153:\n        /* \"contracts/Staking.sol\":6249:6264  block.timestamp */\n      timestamp\n        /* \"contracts/Staking.sol\":6249:6321  block.timestamp >= _staker[msg.sender].stakeStartTime.add(_lockupPeriod) */\n      lt\n      iszero\n        /* \"contracts/Staking.sol\":6161:6321  _staker[msg.sender].mode != 0 ? during % _eventPeriod == 0 && during > 0 :... */\n      jump(tag_155)\n    tag_152:\n        /* \"contracts/Staking.sol\":6218:6219  0 */\n      0x00\n        /* \"contracts/Staking.sol\":6202:6214  _eventPeriod */\n      sload(0x02)\n        /* \"contracts/Staking.sol\":6193:6199  during */\n      dup5\n        /* \"contracts/Staking.sol\":6193:6214  during % _eventPeriod */\n      tag_156\n      swap2\n      swap1\n      tag_157\n      jump\t// in\n    tag_156:\n        /* \"contracts/Staking.sol\":6193:6219  during % _eventPeriod == 0 */\n      eq\n        /* \"contracts/Staking.sol\":6193:6233  during % _eventPeriod == 0 && during > 0 */\n      dup1\n      iszero\n      tag_158\n      jumpi\n      pop\n        /* \"contracts/Staking.sol\":6232:6233  0 */\n      0x00\n        /* \"contracts/Staking.sol\":6223:6229  during */\n      dup4\n        /* \"contracts/Staking.sol\":6223:6233  during > 0 */\n      gt\n        /* \"contracts/Staking.sol\":6193:6233  during % _eventPeriod == 0 && during > 0 */\n    tag_158:\n        /* \"contracts/Staking.sol\":6161:6321  _staker[msg.sender].mode != 0 ? during % _eventPeriod == 0 && during > 0 :... */\n    tag_155:\n        /* \"contracts/Staking.sol\":6137:6321  bool isLockupTimeOver = _staker[msg.sender].mode != 0 ? during % _eventPeriod == 0 && during > 0 :... */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":6337:6353  isLockupTimeOver */\n      dup1\n        /* \"contracts/Staking.sol\":6332:6405  if (!isLockupTimeOver) {... */\n      tag_159\n      jumpi\n        /* \"contracts/Staking.sol\":6376:6393  _unstakingFeeRate */\n      sload(0x01)\n        /* \"contracts/Staking.sol\":6370:6393  fee = _unstakingFeeRate */\n      swap2\n      pop\n        /* \"contracts/Staking.sol\":6332:6405  if (!isLockupTimeOver) {... */\n    tag_159:\n        /* \"contracts/Staking.sol\":6450:6507  _staker[msg.sender].stakedAmount.sub(amountTobeWithdrawn) */\n      tag_160\n        /* \"contracts/Staking.sol\":6487:6506  amountTobeWithdrawn */\n      dup5\n        /* \"contracts/Staking.sol\":6450:6457  _staker */\n      0x0b\n        /* \"contracts/Staking.sol\":6450:6469  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":6458:6468  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":6450:6469  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":6450:6482  _staker[msg.sender].stakedAmount */\n      0x01\n      add\n      sload\n        /* \"contracts/Staking.sol\":6450:6486  _staker[msg.sender].stakedAmount.sub */\n      tag_150\n      swap1\n        /* \"contracts/Staking.sol\":6450:6507  _staker[msg.sender].stakedAmount.sub(amountTobeWithdrawn) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_160:\n        /* \"contracts/Staking.sol\":6415:6422  _staker */\n      0x0b\n        /* \"contracts/Staking.sol\":6415:6434  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":6423:6433  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":6415:6434  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":6415:6447  _staker[msg.sender].stakedAmount */\n      0x01\n      add\n        /* \"contracts/Staking.sol\":6415:6507  _staker[msg.sender].stakedAmount = _staker[msg.sender].stakedAmount.sub(amountTobeWithdrawn) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":6532:6568  totalStaked.sub(amountTobeWithdrawn) */\n      tag_161\n        /* \"contracts/Staking.sol\":6548:6567  amountTobeWithdrawn */\n      dup5\n        /* \"contracts/Staking.sol\":6532:6543  totalStaked */\n      sload(0x0c)\n        /* \"contracts/Staking.sol\":6532:6547  totalStaked.sub */\n      tag_150\n      swap1\n        /* \"contracts/Staking.sol\":6532:6568  totalStaked.sub(amountTobeWithdrawn) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_161:\n        /* \"contracts/Staking.sol\":6518:6529  totalStaked */\n      0x0c\n        /* \"contracts/Staking.sol\":6518:6568  totalStaked = totalStaked.sub(amountTobeWithdrawn) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":6601:6663  amountTobeWithdrawn.sub(amountTobeWithdrawn.mul(fee).div(1e4)) */\n      tag_162\n        /* \"contracts/Staking.sol\":6625:6662  amountTobeWithdrawn.mul(fee).div(1e4) */\n      tag_163\n        /* \"contracts/Staking.sol\":6658:6661  1e4 */\n      0x2710\n        /* \"contracts/Staking.sol\":6625:6653  amountTobeWithdrawn.mul(fee) */\n      tag_164\n        /* \"contracts/Staking.sol\":6649:6652  fee */\n      dup6\n        /* \"contracts/Staking.sol\":6625:6644  amountTobeWithdrawn */\n      dup9\n        /* \"contracts/Staking.sol\":6625:6648  amountTobeWithdrawn.mul */\n      tag_165\n      swap1\n        /* \"contracts/Staking.sol\":6625:6653  amountTobeWithdrawn.mul(fee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_164:\n        /* \"contracts/Staking.sol\":6625:6657  amountTobeWithdrawn.mul(fee).div */\n      tag_151\n      swap1\n        /* \"contracts/Staking.sol\":6625:6662  amountTobeWithdrawn.mul(fee).div(1e4) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_163:\n        /* \"contracts/Staking.sol\":6601:6620  amountTobeWithdrawn */\n      dup6\n        /* \"contracts/Staking.sol\":6601:6624  amountTobeWithdrawn.sub */\n      tag_150\n      swap1\n        /* \"contracts/Staking.sol\":6601:6663  amountTobeWithdrawn.sub(amountTobeWithdrawn.mul(fee).div(1e4)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_162:\n        /* \"contracts/Staking.sol\":6579:6663  amountTobeWithdrawn = amountTobeWithdrawn.sub(amountTobeWithdrawn.mul(fee).div(1e4)) */\n      swap4\n      pop\n        /* \"contracts/Staking.sol\":6674:6725  token.safeTransfer(msg.sender, amountTobeWithdrawn) */\n      tag_166\n        /* \"contracts/Staking.sol\":6693:6703  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":6705:6724  amountTobeWithdrawn */\n      dup6\n        /* \"contracts/Staking.sol\":6674:6679  token */\n      0x0d\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Staking.sol\":6674:6692  token.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_167\n      swap1\n        /* \"contracts/Staking.sol\":6674:6725  token.safeTransfer(msg.sender, amountTobeWithdrawn) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_166:\n        /* \"contracts/Staking.sol\":6743:6784  Withdraw(msg.sender, amountTobeWithdrawn) */\n      0x884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364\n        /* \"contracts/Staking.sol\":6752:6762  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":6764:6783  amountTobeWithdrawn */\n      dup6\n        /* \"contracts/Staking.sol\":6743:6784  Withdraw(msg.sender, amountTobeWithdrawn) */\n      mload(0x40)\n      tag_168\n      swap3\n      swap2\n      swap1\n      tag_169\n      jump\t// in\n    tag_168:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Staking.sol\":5774:6792  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Staking.sol\":5732:6792  function withdraw(uint256 amount) external{... */\n      pop\n      jump\t// out\n        /* \"contracts/Staking.sol\":8738:9323  function harvest() public{... */\n    tag_48:\n        /* \"contracts/Staking.sol\":8784:8798  updateReward() */\n      tag_171\n        /* \"contracts/Staking.sol\":8784:8796  updateReward */\n      tag_147\n        /* \"contracts/Staking.sol\":8784:8798  updateReward() */\n      jump\t// in\n    tag_171:\n        /* \"contracts/Staking.sol\":8819:8840  uint256 rewardToClaim */\n      0x00\n        /* \"contracts/Staking.sol\":8843:8956  _staker[msg.sender].stakerCurrentReward.sub(_staker[msg.sender].stakerCurrentReward.mul(_rewardFeeRate).div(1e4)) */\n      tag_172\n        /* \"contracts/Staking.sol\":8887:8955  _staker[msg.sender].stakerCurrentReward.mul(_rewardFeeRate).div(1e4) */\n      tag_173\n        /* \"contracts/Staking.sol\":8951:8954  1e4 */\n      0x2710\n        /* \"contracts/Staking.sol\":8887:8946  _staker[msg.sender].stakerCurrentReward.mul(_rewardFeeRate) */\n      tag_174\n        /* \"contracts/Staking.sol\":8931:8945  _rewardFeeRate */\n      sload(0x04)\n        /* \"contracts/Staking.sol\":8887:8894  _staker */\n      0x0b\n        /* \"contracts/Staking.sol\":8887:8906  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":8895:8905  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":8887:8906  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":8887:8926  _staker[msg.sender].stakerCurrentReward */\n      0x00\n      add\n      sload\n        /* \"contracts/Staking.sol\":8887:8930  _staker[msg.sender].stakerCurrentReward.mul */\n      tag_165\n      swap1\n        /* \"contracts/Staking.sol\":8887:8946  _staker[msg.sender].stakerCurrentReward.mul(_rewardFeeRate) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_174:\n        /* \"contracts/Staking.sol\":8887:8950  _staker[msg.sender].stakerCurrentReward.mul(_rewardFeeRate).div */\n      tag_151\n      swap1\n        /* \"contracts/Staking.sol\":8887:8955  _staker[msg.sender].stakerCurrentReward.mul(_rewardFeeRate).div(1e4) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_173:\n        /* \"contracts/Staking.sol\":8843:8850  _staker */\n      0x0b\n        /* \"contracts/Staking.sol\":8843:8862  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":8851:8861  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":8843:8862  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":8843:8882  _staker[msg.sender].stakerCurrentReward */\n      0x00\n      add\n      sload\n        /* \"contracts/Staking.sol\":8843:8886  _staker[msg.sender].stakerCurrentReward.sub */\n      tag_150\n      swap1\n        /* \"contracts/Staking.sol\":8843:8956  _staker[msg.sender].stakerCurrentReward.sub(_staker[msg.sender].stakerCurrentReward.mul(_rewardFeeRate).div(1e4)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_172:\n        /* \"contracts/Staking.sol\":8819:8956  uint256 rewardToClaim = _staker[msg.sender].stakerCurrentReward.sub(_staker[msg.sender].stakerCurrentReward.mul(_rewardFeeRate).div(1e4)) */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":9001:9002  0 */\n      0x00\n        /* \"contracts/Staking.sol\":8985:8998  rewardToClaim */\n      dup2\n        /* \"contracts/Staking.sol\":8985:9002  rewardToClaim > 0 */\n      gt\n        /* \"contracts/Staking.sol\":8977:9023  require(rewardToClaim > 0, \"Nothing to claim\") */\n      tag_175\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_176\n      swap1\n      tag_177\n      jump\t// in\n    tag_176:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_175:\n        /* \"contracts/Staking.sol\":9054:9059  token */\n      0x0d\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Staking.sol\":9054:9069  token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/Staking.sol\":9078:9082  this */\n      address\n        /* \"contracts/Staking.sol\":9054:9084  token.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_178\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_178:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_179\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_179:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_181\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_181:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_182\n      swap2\n      swap1\n      tag_183\n      jump\t// in\n    tag_182:\n        /* \"contracts/Staking.sol\":9038:9051  rewardToClaim */\n      dup2\n        /* \"contracts/Staking.sol\":9038:9084  rewardToClaim > token.balanceOf(address(this)) */\n      gt\n        /* \"contracts/Staking.sol\":9034:9145  if (rewardToClaim > token.balanceOf(address(this)))... */\n      iszero\n      tag_184\n      jumpi\n        /* \"contracts/Staking.sol\":9115:9120  token */\n      0x0d\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Staking.sol\":9115:9130  token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/Staking.sol\":9139:9143  this */\n      address\n        /* \"contracts/Staking.sol\":9115:9145  token.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_185\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_185:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_186\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_186:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_188\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_188:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_189\n      swap2\n      swap1\n      tag_183\n      jump\t// in\n    tag_189:\n        /* \"contracts/Staking.sol\":9099:9145  rewardToClaim = token.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":9034:9145  if (rewardToClaim > token.balanceOf(address(this)))... */\n    tag_184:\n        /* \"contracts/Staking.sol\":9156:9201  token.safeTransfer(msg.sender, rewardToClaim) */\n      tag_190\n        /* \"contracts/Staking.sol\":9175:9185  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":9187:9200  rewardToClaim */\n      dup3\n        /* \"contracts/Staking.sol\":9156:9161  token */\n      0x0d\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Staking.sol\":9156:9174  token.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_167\n      swap1\n        /* \"contracts/Staking.sol\":9156:9201  token.safeTransfer(msg.sender, rewardToClaim) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_190:\n        /* \"contracts/Staking.sol\":9254:9255  0 */\n      0x00\n        /* \"contracts/Staking.sol\":9212:9219  _staker */\n      0x0b\n        /* \"contracts/Staking.sol\":9212:9231  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":9220:9230  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":9212:9231  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":9212:9251  _staker[msg.sender].stakerCurrentReward */\n      0x00\n      add\n        /* \"contracts/Staking.sol\":9212:9255  _staker[msg.sender].stakerCurrentReward = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":9281:9315  Harvest(msg.sender, rewardToClaim) */\n      0xc9695243a805adb74c91f28311176c65b417e842d5699893cef56d18bfa48cba\n        /* \"contracts/Staking.sol\":9289:9299  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":9301:9314  rewardToClaim */\n      dup3\n        /* \"contracts/Staking.sol\":9281:9315  Harvest(msg.sender, rewardToClaim) */\n      mload(0x40)\n      tag_191\n      swap3\n      swap2\n      swap1\n      tag_169\n      jump\t// in\n    tag_191:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Staking.sol\":8763:9323  {... */\n      pop\n        /* \"contracts/Staking.sol\":8738:9323  function harvest() public{... */\n      jump\t// out\n        /* \"contracts/Staking.sol\":4886:5288  function isLocked(address _address) public view returns (uint256) {... */\n    tag_52:\n        /* \"contracts/Staking.sol\":4943:4950  uint256 */\n      0x00\n        /* \"contracts/Staking.sol\":4997:5001  0x55 */\n      0x55\n        /* \"contracts/Staking.sol\":4969:4976  _staker */\n      0x0b\n        /* \"contracts/Staking.sol\":4969:4986  _staker[_address] */\n      0x00\n        /* \"contracts/Staking.sol\":4977:4985  _address */\n      dup5\n        /* \"contracts/Staking.sol\":4969:4986  _staker[_address] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":4969:4993  _staker[_address].staked */\n      0x05\n      add\n      sload\n        /* \"contracts/Staking.sol\":4969:5001  _staker[_address].staked != 0x55 */\n      eq\n        /* \"contracts/Staking.sol\":4965:5024  if (_staker[_address].staked != 0x55)... */\n      tag_193\n      jumpi\n        /* \"contracts/Staking.sol\":5023:5024  1 */\n      0x01\n        /* \"contracts/Staking.sol\":5016:5024  return 1 */\n      swap1\n      pop\n      jump(tag_192)\n        /* \"contracts/Staking.sol\":4965:5024  if (_staker[_address].staked != 0x55)... */\n    tag_193:\n        /* \"contracts/Staking.sol\":5065:5066  0 */\n      0x00\n        /* \"contracts/Staking.sol\":5039:5046  _staker */\n      0x0b\n        /* \"contracts/Staking.sol\":5039:5056  _staker[_address] */\n      0x00\n        /* \"contracts/Staking.sol\":5047:5055  _address */\n      dup5\n        /* \"contracts/Staking.sol\":5039:5056  _staker[_address] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":5039:5061  _staker[_address].mode */\n      0x02\n      add\n      sload\n        /* \"contracts/Staking.sol\":5039:5066  _staker[_address].mode != 0 */\n      eq\n        /* \"contracts/Staking.sol\":5035:5280  if (_staker[_address].mode != 0)... */\n      tag_194\n      jumpi\n        /* \"contracts/Staking.sol\":5156:5157  0 */\n      0x00\n        /* \"contracts/Staking.sol\":5145:5151  7 days */\n      0x093a80\n        /* \"contracts/Staking.sol\":5088:5141  block.timestamp.sub(_staker[_address].stakeStartTime) */\n      tag_195\n        /* \"contracts/Staking.sol\":5108:5115  _staker */\n      0x0b\n        /* \"contracts/Staking.sol\":5108:5125  _staker[_address] */\n      0x00\n        /* \"contracts/Staking.sol\":5116:5124  _address */\n      dup7\n        /* \"contracts/Staking.sol\":5108:5125  _staker[_address] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":5108:5140  _staker[_address].stakeStartTime */\n      0x03\n      add\n      sload\n        /* \"contracts/Staking.sol\":5088:5103  block.timestamp */\n      timestamp\n        /* \"contracts/Staking.sol\":5088:5107  block.timestamp.sub */\n      tag_150\n      swap1\n        /* \"contracts/Staking.sol\":5088:5141  block.timestamp.sub(_staker[_address].stakeStartTime) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_195:\n        /* \"contracts/Staking.sol\":5088:5152  block.timestamp.sub(_staker[_address].stakeStartTime) % (7 days) */\n      tag_196\n      swap2\n      swap1\n      tag_157\n      jump\t// in\n    tag_196:\n        /* \"contracts/Staking.sol\":5088:5157  block.timestamp.sub(_staker[_address].stakeStartTime) % (7 days) == 0 */\n      eq\n        /* \"contracts/Staking.sol\":5088:5165  block.timestamp.sub(_staker[_address].stakeStartTime) % (7 days) == 0 ? 0 : 1 */\n      tag_197\n      jumpi\n        /* \"contracts/Staking.sol\":5164:5165  1 */\n      0x01\n        /* \"contracts/Staking.sol\":5088:5165  block.timestamp.sub(_staker[_address].stakeStartTime) % (7 days) == 0 ? 0 : 1 */\n      jump(tag_198)\n    tag_197:\n        /* \"contracts/Staking.sol\":5160:5161  0 */\n      0x00\n        /* \"contracts/Staking.sol\":5088:5165  block.timestamp.sub(_staker[_address].stakeStartTime) % (7 days) == 0 ? 0 : 1 */\n    tag_198:\n        /* \"contracts/Staking.sol\":5081:5165  return block.timestamp.sub(_staker[_address].stakeStartTime) % (7 days) == 0 ? 0 : 1 */\n      0xff\n      and\n      swap1\n      pop\n      jump(tag_192)\n        /* \"contracts/Staking.sol\":5035:5280  if (_staker[_address].mode != 0)... */\n    tag_194:\n        /* \"contracts/Staking.sol\":5259:5272  _lockupPeriod */\n      sload(0x05)\n        /* \"contracts/Staking.sol\":5202:5255  block.timestamp.sub(_staker[_address].stakeStartTime) */\n      tag_200\n        /* \"contracts/Staking.sol\":5222:5229  _staker */\n      0x0b\n        /* \"contracts/Staking.sol\":5222:5239  _staker[_address] */\n      0x00\n        /* \"contracts/Staking.sol\":5230:5238  _address */\n      dup6\n        /* \"contracts/Staking.sol\":5222:5239  _staker[_address] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":5222:5254  _staker[_address].stakeStartTime */\n      0x03\n      add\n      sload\n        /* \"contracts/Staking.sol\":5202:5217  block.timestamp */\n      timestamp\n        /* \"contracts/Staking.sol\":5202:5221  block.timestamp.sub */\n      tag_150\n      swap1\n        /* \"contracts/Staking.sol\":5202:5255  block.timestamp.sub(_staker[_address].stakeStartTime) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_200:\n        /* \"contracts/Staking.sol\":5202:5272  block.timestamp.sub(_staker[_address].stakeStartTime) >= _lockupPeriod */\n      lt\n      iszero\n        /* \"contracts/Staking.sol\":5202:5280  block.timestamp.sub(_staker[_address].stakeStartTime) >= _lockupPeriod ? 0 : 1 */\n      tag_201\n      jumpi\n        /* \"contracts/Staking.sol\":5279:5280  1 */\n      0x01\n        /* \"contracts/Staking.sol\":5202:5280  block.timestamp.sub(_staker[_address].stakeStartTime) >= _lockupPeriod ? 0 : 1 */\n      jump(tag_202)\n    tag_201:\n        /* \"contracts/Staking.sol\":5275:5276  0 */\n      0x00\n        /* \"contracts/Staking.sol\":5202:5280  block.timestamp.sub(_staker[_address].stakeStartTime) >= _lockupPeriod ? 0 : 1 */\n    tag_202:\n        /* \"contracts/Staking.sol\":5195:5280  return block.timestamp.sub(_staker[_address].stakeStartTime) >= _lockupPeriod ? 0 : 1 */\n      0xff\n      and\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":4886:5288  function isLocked(address _address) public view returns (uint256) {... */\n    tag_192:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Staking.sol\":7577:7747  function setLockupTime(uint256 lockupTime) external onlyOwner {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_204\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_130\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_204:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_205\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_83\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_205:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_206\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_207\n      swap1\n      tag_134\n      jump\t// in\n    tag_207:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_206:\n        /* \"contracts/Staking.sol\":7673:7674  0 */\n      0x00\n        /* \"contracts/Staking.sol\":7660:7670  lockupTime */\n      dup2\n        /* \"contracts/Staking.sol\":7660:7674  lockupTime > 0 */\n      gt\n        /* \"contracts/Staking.sol\":7652:7692  require(lockupTime > 0, \"Can't be zero\") */\n      tag_209\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_210\n      swap1\n      tag_138\n      jump\t// in\n    tag_210:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_209:\n        /* \"contracts/Staking.sol\":7729:7739  lockupTime */\n      dup1\n        /* \"contracts/Staking.sol\":7713:7726  _lockupPeriod */\n      0x05\n        /* \"contracts/Staking.sol\":7713:7739  _lockupPeriod = lockupTime */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":7577:7747  function setLockupTime(uint256 lockupTime) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Staking.sol\":2828:3740  function startStaking(uint256 _amount, uint256 _mode) external {... */\n    tag_60:\n        /* \"contracts/Staking.sol\":2930:2931  0 */\n      0x00\n        /* \"contracts/Staking.sol\":2920:2927  _amount */\n      dup3\n        /* \"contracts/Staking.sol\":2920:2931  _amount > 0 */\n      gt\n        /* \"contracts/Staking.sol\":2912:2967  require(_amount > 0, \"Amount should be greater than 0\") */\n      tag_212\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_213\n      swap1\n      tag_142\n      jump\t// in\n    tag_213:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_212:\n        /* \"contracts/Staking.sol\":3016:3023  _amount */\n      dup2\n        /* \"contracts/Staking.sol\":2986:2991  token */\n      0x0d\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Staking.sol\":2986:3001  token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/Staking.sol\":3002:3012  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":2986:3013  token.balanceOf(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_214\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_214:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_215\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_215:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_217\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_217:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_218\n      swap2\n      swap1\n      tag_183\n      jump\t// in\n    tag_218:\n        /* \"contracts/Staking.sol\":2986:3023  token.balanceOf(msg.sender) > _amount */\n      gt\n        /* \"contracts/Staking.sol\":2978:3041  require(token.balanceOf(msg.sender) > _amount, \"Insufficient!\") */\n      tag_219\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_220\n      swap1\n      tag_221\n      jump\t// in\n    tag_220:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_219:\n        /* \"contracts/Staking.sol\":3090:3094  0x55 */\n      0x55\n        /* \"contracts/Staking.sol\":3060:3067  _staker */\n      0x0b\n        /* \"contracts/Staking.sol\":3060:3079  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":3068:3078  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":3060:3079  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":3060:3086  _staker[msg.sender].staked */\n      0x05\n      add\n      sload\n        /* \"contracts/Staking.sol\":3060:3094  _staker[msg.sender].staked != 0x55 */\n      eq\n      iszero\n        /* \"contracts/Staking.sol\":3052:3114  require(_staker[msg.sender].staked != 0x55, \"Already started\") */\n      tag_222\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_223\n      swap1\n      tag_224\n      jump\t// in\n    tag_223:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_222:\n        /* \"contracts/Staking.sol\":3148:3149  0 */\n      0x00\n        /* \"contracts/Staking.sol\":3139:3144  _mode */\n      dup2\n        /* \"contracts/Staking.sol\":3139:3149  _mode == 0 */\n      eq\n        /* \"contracts/Staking.sol\":3135:3511  if (_mode == 0) require(_amount >= _minStakeAmount_m, \"Insufficient\");... */\n      iszero\n      tag_225\n      jumpi\n        /* \"contracts/Staking.sol\":3170:3187  _minStakeAmount_m */\n      sload(0x06)\n        /* \"contracts/Staking.sol\":3159:3166  _amount */\n      dup3\n        /* \"contracts/Staking.sol\":3159:3187  _amount >= _minStakeAmount_m */\n      lt\n      iszero\n        /* \"contracts/Staking.sol\":3151:3204  require(_amount >= _minStakeAmount_m, \"Insufficient\") */\n      tag_226\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_227\n      swap1\n      tag_228\n      jump\t// in\n    tag_227:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_226:\n        /* \"contracts/Staking.sol\":3135:3511  if (_mode == 0) require(_amount >= _minStakeAmount_m, \"Insufficient\");... */\n      jump(tag_229)\n    tag_225:\n        /* \"contracts/Staking.sol\":3233:3234  1 */\n      0x01\n        /* \"contracts/Staking.sol\":3224:3229  _mode */\n      dup2\n        /* \"contracts/Staking.sol\":3224:3234  _mode == 1 */\n      eq\n        /* \"contracts/Staking.sol\":3220:3511  if (_mode == 1) require(_amount >= _minStakeAmount_c, \"Insufficient\");... */\n      iszero\n      tag_230\n      jumpi\n        /* \"contracts/Staking.sol\":3255:3272  _minStakeAmount_c */\n      sload(0x09)\n        /* \"contracts/Staking.sol\":3244:3251  _amount */\n      dup3\n        /* \"contracts/Staking.sol\":3244:3272  _amount >= _minStakeAmount_c */\n      lt\n      iszero\n        /* \"contracts/Staking.sol\":3236:3289  require(_amount >= _minStakeAmount_c, \"Insufficient\") */\n      tag_231\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_232\n      swap1\n      tag_228\n      jump\t// in\n    tag_232:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_231:\n        /* \"contracts/Staking.sol\":3220:3511  if (_mode == 1) require(_amount >= _minStakeAmount_c, \"Insufficient\");... */\n      jump(tag_233)\n    tag_230:\n        /* \"contracts/Staking.sol\":3318:3319  2 */\n      0x02\n        /* \"contracts/Staking.sol\":3309:3314  _mode */\n      dup2\n        /* \"contracts/Staking.sol\":3309:3319  _mode == 2 */\n      eq\n        /* \"contracts/Staking.sol\":3305:3511  if (_mode == 2) require(_amount >= _minStakeAmount_s, \"Insufficient\");... */\n      iszero\n      tag_234\n      jumpi\n        /* \"contracts/Staking.sol\":3340:3357  _minStakeAmount_s */\n      sload(0x08)\n        /* \"contracts/Staking.sol\":3329:3336  _amount */\n      dup3\n        /* \"contracts/Staking.sol\":3329:3357  _amount >= _minStakeAmount_s */\n      lt\n      iszero\n        /* \"contracts/Staking.sol\":3321:3374  require(_amount >= _minStakeAmount_s, \"Insufficient\") */\n      tag_235\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_236\n      swap1\n      tag_228\n      jump\t// in\n    tag_236:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_235:\n        /* \"contracts/Staking.sol\":3305:3511  if (_mode == 2) require(_amount >= _minStakeAmount_s, \"Insufficient\");... */\n      jump(tag_237)\n    tag_234:\n        /* \"contracts/Staking.sol\":3403:3404  3 */\n      0x03\n        /* \"contracts/Staking.sol\":3394:3399  _mode */\n      dup2\n        /* \"contracts/Staking.sol\":3394:3404  _mode == 3 */\n      eq\n        /* \"contracts/Staking.sol\":3390:3511  if (_mode == 3) require(_amount >= _minStakeAmount_g, \"Insufficient\");... */\n      iszero\n      tag_238\n      jumpi\n        /* \"contracts/Staking.sol\":3425:3442  _minStakeAmount_g */\n      sload(0x07)\n        /* \"contracts/Staking.sol\":3414:3421  _amount */\n      dup3\n        /* \"contracts/Staking.sol\":3414:3442  _amount >= _minStakeAmount_g */\n      lt\n      iszero\n        /* \"contracts/Staking.sol\":3406:3459  require(_amount >= _minStakeAmount_g, \"Insufficient\") */\n      tag_239\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_240\n      swap1\n      tag_228\n      jump\t// in\n    tag_240:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_239:\n        /* \"contracts/Staking.sol\":3390:3511  if (_mode == 3) require(_amount >= _minStakeAmount_g, \"Insufficient\");... */\n      jump(tag_241)\n    tag_238:\n        /* \"contracts/Staking.sol\":3493:3494  0 */\n      0x00\n        /* \"contracts/Staking.sol\":3483:3490  _amount */\n      dup3\n        /* \"contracts/Staking.sol\":3483:3494  _amount < 0 */\n      lt\n        /* \"contracts/Staking.sol\":3475:3511  require(_amount < 0, \"Invalid Mode\") */\n      tag_242\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_243\n      swap1\n      tag_244\n      jump\t// in\n    tag_243:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_242:\n        /* \"contracts/Staking.sol\":3390:3511  if (_mode == 3) require(_amount >= _minStakeAmount_g, \"Insufficient\");... */\n    tag_241:\n        /* \"contracts/Staking.sol\":3305:3511  if (_mode == 2) require(_amount >= _minStakeAmount_s, \"Insufficient\");... */\n    tag_237:\n        /* \"contracts/Staking.sol\":3220:3511  if (_mode == 1) require(_amount >= _minStakeAmount_c, \"Insufficient\");... */\n    tag_233:\n        /* \"contracts/Staking.sol\":3135:3511  if (_mode == 0) require(_amount >= _minStakeAmount_m, \"Insufficient\");... */\n    tag_229:\n        /* \"contracts/Staking.sol\":3559:3564  _mode */\n      dup1\n        /* \"contracts/Staking.sol\":3532:3539  _staker */\n      0x0b\n        /* \"contracts/Staking.sol\":3532:3551  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":3540:3550  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":3532:3551  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":3532:3556  _staker[msg.sender].mode */\n      0x02\n      add\n        /* \"contracts/Staking.sol\":3532:3564  _staker[msg.sender].mode = _mode */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":3612:3627  block.timestamp */\n      timestamp\n        /* \"contracts/Staking.sol\":3575:3582  _staker */\n      0x0b\n        /* \"contracts/Staking.sol\":3575:3594  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":3583:3593  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":3575:3594  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":3575:3609  _staker[msg.sender].stakeStartTime */\n      0x03\n      add\n        /* \"contracts/Staking.sol\":3575:3627  _staker[msg.sender].stakeStartTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":3667:3671  0x55 */\n      0x55\n        /* \"contracts/Staking.sol\":3638:3645  _staker */\n      0x0b\n        /* \"contracts/Staking.sol\":3638:3657  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":3646:3656  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":3638:3657  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":3638:3664  _staker[msg.sender].staked */\n      0x05\n      add\n        /* \"contracts/Staking.sol\":3638:3671  _staker[msg.sender].staked = 0x55 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":3682:3690  _stakers */\n      0x0a\n        /* \"contracts/Staking.sol\":3696:3706  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":3682:3707  _stakers.push(msg.sender) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":3718:3732  stake(_amount) */\n      tag_246\n        /* \"contracts/Staking.sol\":3724:3731  _amount */\n      dup3\n        /* \"contracts/Staking.sol\":3718:3723  stake */\n      tag_98\n        /* \"contracts/Staking.sol\":3718:3732  stake(_amount) */\n      jump\t// in\n    tag_246:\n        /* \"contracts/Staking.sol\":2828:3740  function startStaking(uint256 _amount, uint256 _mode) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Staking.sol\":4501:4604  function getNumberofStakers() public view returns (uint256) {... */\n    tag_62:\n        /* \"contracts/Staking.sol\":4552:4559  uint256 */\n      0x00\n        /* \"contracts/Staking.sol\":4581:4589  _stakers */\n      0x0a\n        /* \"contracts/Staking.sol\":4581:4596  _stakers.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":4574:4596  return _stakers.length */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":4501:4604  function getNumberofStakers() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Staking.sol\":8540:8693  function rewardToHarvest() public returns (uint256){... */\n    tag_65:\n        /* \"contracts/Staking.sol\":8583:8590  uint256 */\n      0x00\n        /* \"contracts/Staking.sol\":8612:8626  updateReward() */\n      tag_249\n        /* \"contracts/Staking.sol\":8612:8624  updateReward */\n      tag_147\n        /* \"contracts/Staking.sol\":8612:8626  updateReward() */\n      jump\t// in\n    tag_249:\n        /* \"contracts/Staking.sol\":8646:8653  _staker */\n      0x0b\n        /* \"contracts/Staking.sol\":8646:8665  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":8654:8664  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":8646:8665  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":8646:8685  _staker[msg.sender].stakerCurrentReward */\n      0x00\n      add\n      sload\n        /* \"contracts/Staking.sol\":8639:8685  return _staker[msg.sender].stakerCurrentReward */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":8540:8693  function rewardToHarvest() public returns (uint256){... */\n      swap1\n      jump\t// out\n        /* \"contracts/Staking.sol\":5448:5583  function rewardAmount(address _address) public view returns (uint256) {... */\n    tag_69:\n        /* \"contracts/Staking.sol\":5509:5516  uint256 */\n      0x00\n        /* \"contracts/Staking.sol\":5538:5545  _staker */\n      0x0b\n        /* \"contracts/Staking.sol\":5538:5555  _staker[_address] */\n      0x00\n        /* \"contracts/Staking.sol\":5546:5554  _address */\n      dup4\n        /* \"contracts/Staking.sol\":5538:5555  _staker[_address] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":5538:5575  _staker[_address].stakerCurrentReward */\n      0x00\n      add\n      sload\n        /* \"contracts/Staking.sol\":5531:5575  return _staker[_address].stakerCurrentReward */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":5448:5583  function rewardAmount(address _address) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Staking.sol\":7039:7287  function setEventPeriod(uint256 __eventPeriod) external onlyOwner {... */\n    tag_73:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_252\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_130\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_252:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_253\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_83\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_253:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_254\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_255\n      swap1\n      tag_134\n      jump\t// in\n    tag_255:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_254:\n        /* \"contracts/Staking.sol\":7150:7151  0 */\n      0x00\n        /* \"contracts/Staking.sol\":7134:7147  __eventPeriod */\n      dup2\n        /* \"contracts/Staking.sol\":7134:7151  __eventPeriod > 0 */\n      gt\n        /* \"contracts/Staking.sol\":7126:7179  require(__eventPeriod > 0, \"Invalid Lockup Duration\") */\n      tag_257\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_258\n      swap1\n      tag_259\n      jump\t// in\n    tag_258:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_257:\n        /* \"contracts/Staking.sol\":7207:7232  __eventPeriod.mul(1 days) */\n      tag_260\n        /* \"contracts/Staking.sol\":7225:7231  1 days */\n      0x015180\n        /* \"contracts/Staking.sol\":7207:7220  __eventPeriod */\n      dup3\n        /* \"contracts/Staking.sol\":7207:7224  __eventPeriod.mul */\n      tag_165\n      swap1\n        /* \"contracts/Staking.sol\":7207:7232  __eventPeriod.mul(1 days) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_260:\n        /* \"contracts/Staking.sol\":7192:7204  _eventPeriod */\n      0x02\n        /* \"contracts/Staking.sol\":7192:7232  _eventPeriod = __eventPeriod.mul(1 days) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":7250:7279  SetEventPeriod(__eventPeriod) */\n      0x189bda9782663c67a3f95c0aa5455924c711210b00281c60ead2f0dd8dbc924c\n        /* \"contracts/Staking.sol\":7265:7278  __eventPeriod */\n      dup2\n        /* \"contracts/Staking.sol\":7250:7279  SetEventPeriod(__eventPeriod) */\n      mload(0x40)\n      tag_261\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_261:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Staking.sol\":7039:7287  function setEventPeriod(uint256 __eventPeriod) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_75:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_263\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_130\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_263:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_264\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_83\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_264:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_265\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_266\n      swap1\n      tag_134\n      jump\t// in\n    tag_266:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_265:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      tag_268\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1759:1760  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1750  _transferOwnership */\n      tag_269\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_268:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/Staking.sol\":5591:5685  function getRewardRate() public view returns (uint256) {... */\n    tag_77:\n        /* \"contracts/Staking.sol\":5637:5644  uint256 */\n      0x00\n        /* \"contracts/Staking.sol\":5666:5677  _rewardRate */\n      sload(0x03)\n        /* \"contracts/Staking.sol\":5659:5677  return _rewardRate */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":5591:5685  function getRewardRate() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Staking.sol\":1213:1239  uint256 public totalStaked */\n    tag_80:\n      sload(0x0c)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_83:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1101:1114  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Staking.sol\":9331:9759  function getMinimumStakingAmount(uint256 _mode) public view returns (uint256) {... */\n    tag_88:\n        /* \"contracts/Staking.sol\":9400:9407  uint256 */\n      0x00\n        /* \"contracts/Staking.sol\":9430:9453  uint256 _minStakeAmount */\n      dup1\n        /* \"contracts/Staking.sol\":9456:9457  0 */\n      0x00\n        /* \"contracts/Staking.sol\":9430:9457  uint256 _minStakeAmount = 0 */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":9483:9484  0 */\n      0x00\n        /* \"contracts/Staking.sol\":9474:9479  _mode */\n      dup4\n        /* \"contracts/Staking.sol\":9474:9484  _mode == 0 */\n      eq\n        /* \"contracts/Staking.sol\":9474:9498  _mode == 0 || _mode == 2 */\n      dup1\n      tag_273\n      jumpi\n      pop\n        /* \"contracts/Staking.sol\":9497:9498  2 */\n      0x02\n        /* \"contracts/Staking.sol\":9488:9493  _mode */\n      dup4\n        /* \"contracts/Staking.sol\":9488:9498  _mode == 2 */\n      eq\n        /* \"contracts/Staking.sol\":9474:9498  _mode == 0 || _mode == 2 */\n    tag_273:\n        /* \"contracts/Staking.sol\":9470:9716  if (_mode == 0 || _mode == 2) _minStakeAmount = _minStakeAmount_m;... */\n      iszero\n      tag_274\n      jumpi\n        /* \"contracts/Staking.sol\":9518:9535  _minStakeAmount_m */\n      sload(0x06)\n        /* \"contracts/Staking.sol\":9500:9535  _minStakeAmount = _minStakeAmount_m */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":9470:9716  if (_mode == 0 || _mode == 2) _minStakeAmount = _minStakeAmount_m;... */\n      jump(tag_275)\n    tag_274:\n        /* \"contracts/Staking.sol\":9564:9565  1 */\n      0x01\n        /* \"contracts/Staking.sol\":9555:9560  _mode */\n      dup4\n        /* \"contracts/Staking.sol\":9555:9565  _mode == 1 */\n      eq\n        /* \"contracts/Staking.sol\":9551:9716  if (_mode == 1) _minStakeAmount = _minStakeAmount_c;... */\n      iszero\n      tag_276\n      jumpi\n        /* \"contracts/Staking.sol\":9585:9602  _minStakeAmount_c */\n      sload(0x09)\n        /* \"contracts/Staking.sol\":9567:9602  _minStakeAmount = _minStakeAmount_c */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":9551:9716  if (_mode == 1) _minStakeAmount = _minStakeAmount_c;... */\n      jump(tag_277)\n    tag_276:\n        /* \"contracts/Staking.sol\":9631:9632  3 */\n      0x03\n        /* \"contracts/Staking.sol\":9622:9627  _mode */\n      dup4\n        /* \"contracts/Staking.sol\":9622:9632  _mode == 3 */\n      eq\n        /* \"contracts/Staking.sol\":9618:9716  if (_mode == 3) _minStakeAmount = _minStakeAmount_g;... */\n      iszero\n      tag_278\n      jumpi\n        /* \"contracts/Staking.sol\":9652:9669  _minStakeAmount_g */\n      sload(0x07)\n        /* \"contracts/Staking.sol\":9634:9669  _minStakeAmount = _minStakeAmount_g */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":9618:9716  if (_mode == 3) _minStakeAmount = _minStakeAmount_g;... */\n      jump(tag_279)\n    tag_278:\n        /* \"contracts/Staking.sol\":9698:9699  1 */\n      0x01\n        /* \"contracts/Staking.sol\":9694:9695  0 */\n      0x00\n        /* \"contracts/Staking.sol\":9694:9699  0 > 1 */\n      gt\n        /* \"contracts/Staking.sol\":9685:9716  require (0 > 1, \"Invalid Mode\") */\n      tag_280\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_281\n      swap1\n      tag_244\n      jump\t// in\n    tag_281:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_280:\n        /* \"contracts/Staking.sol\":9618:9716  if (_mode == 3) _minStakeAmount = _minStakeAmount_g;... */\n    tag_279:\n        /* \"contracts/Staking.sol\":9551:9716  if (_mode == 1) _minStakeAmount = _minStakeAmount_c;... */\n    tag_277:\n        /* \"contracts/Staking.sol\":9470:9716  if (_mode == 0 || _mode == 2) _minStakeAmount = _minStakeAmount_m;... */\n    tag_275:\n        /* \"contracts/Staking.sol\":9736:9751  _minStakeAmount */\n      dup1\n        /* \"contracts/Staking.sol\":9729:9751  return _minStakeAmount */\n      swap2\n      pop\n      pop\n        /* \"contracts/Staking.sol\":9331:9759  function getMinimumStakingAmount(uint256 _mode) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Staking.sol\":7295:7569  function setUnstakingFeeRate(uint256 __unstakingFeeRate) external onlyOwner {... */\n    tag_92:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_283\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_130\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_283:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_284\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_83\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_284:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_285\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_286\n      swap1\n      tag_134\n      jump\t// in\n    tag_286:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_285:\n        /* \"contracts/Staking.sol\":7421:7422  0 */\n      0x00\n        /* \"contracts/Staking.sol\":7400:7418  __unstakingFeeRate */\n      dup2\n        /* \"contracts/Staking.sol\":7400:7422  __unstakingFeeRate > 0 */\n      gt\n        /* \"contracts/Staking.sol\":7392:7453  require(__unstakingFeeRate > 0, \"Invalid Unstaking Fee Rate\") */\n      tag_288\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_289\n      swap1\n      tag_290\n      jump\t// in\n    tag_289:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_288:\n        /* \"contracts/Staking.sol\":7486:7504  __unstakingFeeRate */\n      dup1\n        /* \"contracts/Staking.sol\":7466:7483  _unstakingFeeRate */\n      0x01\n        /* \"contracts/Staking.sol\":7466:7504  _unstakingFeeRate = __unstakingFeeRate */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":7522:7561  SetUnstakingFeeRate(__unstakingFeeRate) */\n      0x150c688dd7595bf7862b8ab1fe46756450eb7d731037942b3bbc46f3f0e21b81\n        /* \"contracts/Staking.sol\":7542:7560  __unstakingFeeRate */\n      dup2\n        /* \"contracts/Staking.sol\":7522:7561  SetUnstakingFeeRate(__unstakingFeeRate) */\n      mload(0x40)\n      tag_291\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_291:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Staking.sol\":7295:7569  function setUnstakingFeeRate(uint256 __unstakingFeeRate) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Staking.sol\":6804:7031  function setRewardRate(uint256 __rewardRate) external onlyOwner {... */\n    tag_95:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_293\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_130\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_293:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_294\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_83\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_294:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_295\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_296\n      swap1\n      tag_134\n      jump\t// in\n    tag_296:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_295:\n        /* \"contracts/Staking.sol\":6912:6913  0 */\n      0x00\n        /* \"contracts/Staking.sol\":6897:6909  __rewardRate */\n      dup2\n        /* \"contracts/Staking.sol\":6897:6913  __rewardRate > 0 */\n      gt\n        /* \"contracts/Staking.sol\":6889:6931  require(__rewardRate > 0, \"Invalid value\") */\n      tag_298\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_299\n      swap1\n      tag_300\n      jump\t// in\n    tag_299:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_298:\n        /* \"contracts/Staking.sol\":6966:6978  __rewardRate */\n      dup1\n        /* \"contracts/Staking.sol\":6952:6963  _rewardRate */\n      0x03\n        /* \"contracts/Staking.sol\":6952:6978  _rewardRate = __rewardRate */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":6996:7023  SetRewardRate(__rewardRate) */\n      0x1946fb78c7ca778b54d82cabaac5ba67cf446f58d0ff1f8ceaebb6150e54e44f\n        /* \"contracts/Staking.sol\":7010:7022  __rewardRate */\n      dup2\n        /* \"contracts/Staking.sol\":6996:7023  SetRewardRate(__rewardRate) */\n      mload(0x40)\n      tag_301\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_301:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Staking.sol\":6804:7031  function setRewardRate(uint256 __rewardRate) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Staking.sol\":3808:4390  function stake(uint256 _amount) public{... */\n    tag_98:\n        /* \"contracts/Staking.sol\":3885:3886  0 */\n      0x00\n        /* \"contracts/Staking.sol\":3875:3882  _amount */\n      dup2\n        /* \"contracts/Staking.sol\":3875:3886  _amount > 0 */\n      gt\n        /* \"contracts/Staking.sol\":3867:3922  require(_amount > 0, \"Amount should be greater than 0\") */\n      tag_303\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_304\n      swap1\n      tag_142\n      jump\t// in\n    tag_304:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_303:\n        /* \"contracts/Staking.sol\":3971:3978  _amount */\n      dup1\n        /* \"contracts/Staking.sol\":3941:3946  token */\n      0x0d\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Staking.sol\":3941:3956  token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/Staking.sol\":3957:3967  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":3941:3968  token.balanceOf(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_305\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_305:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_306\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_306:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_308\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_308:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_309\n      swap2\n      swap1\n      tag_183\n      jump\t// in\n    tag_309:\n        /* \"contracts/Staking.sol\":3941:3978  token.balanceOf(msg.sender) > _amount */\n      gt\n        /* \"contracts/Staking.sol\":3933:3996  require(token.balanceOf(msg.sender) > _amount, \"Insufficient!\") */\n      tag_310\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_311\n      swap1\n      tag_221\n      jump\t// in\n    tag_311:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_310:\n        /* \"contracts/Staking.sol\":4045:4049  0x55 */\n      0x55\n        /* \"contracts/Staking.sol\":4015:4022  _staker */\n      0x0b\n        /* \"contracts/Staking.sol\":4015:4034  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":4023:4033  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":4015:4034  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":4015:4041  _staker[msg.sender].staked */\n      0x05\n      add\n      sload\n        /* \"contracts/Staking.sol\":4015:4049  _staker[msg.sender].staked == 0x55 */\n      eq\n        /* \"contracts/Staking.sol\":4007:4075  require(_staker[msg.sender].staked == 0x55, \"Error: invalid staker\") */\n      tag_312\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_313\n      swap1\n      tag_314\n      jump\t// in\n    tag_313:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_312:\n        /* \"contracts/Staking.sol\":4096:4110  updateReward() */\n      tag_315\n        /* \"contracts/Staking.sol\":4096:4108  updateReward */\n      tag_147\n        /* \"contracts/Staking.sol\":4096:4110  updateReward() */\n      jump\t// in\n    tag_315:\n        /* \"contracts/Staking.sol\":4131:4189  token.safeTransferFrom(msg.sender, address(this), _amount) */\n      tag_316\n        /* \"contracts/Staking.sol\":4154:4164  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":4174:4178  this */\n      address\n        /* \"contracts/Staking.sol\":4181:4188  _amount */\n      dup4\n        /* \"contracts/Staking.sol\":4131:4136  token */\n      0x0d\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Staking.sol\":4131:4153  token.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_317\n      swap1\n        /* \"contracts/Staking.sol\":4131:4189  token.safeTransferFrom(msg.sender, address(this), _amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_316:\n        /* \"contracts/Staking.sol\":4235:4280  _staker[msg.sender].stakedAmount.add(_amount) */\n      tag_318\n        /* \"contracts/Staking.sol\":4272:4279  _amount */\n      dup2\n        /* \"contracts/Staking.sol\":4235:4242  _staker */\n      0x0b\n        /* \"contracts/Staking.sol\":4235:4254  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":4243:4253  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":4235:4254  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":4235:4267  _staker[msg.sender].stakedAmount */\n      0x01\n      add\n      sload\n        /* \"contracts/Staking.sol\":4235:4271  _staker[msg.sender].stakedAmount.add */\n      tag_154\n      swap1\n        /* \"contracts/Staking.sol\":4235:4280  _staker[msg.sender].stakedAmount.add(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_318:\n        /* \"contracts/Staking.sol\":4200:4207  _staker */\n      0x0b\n        /* \"contracts/Staking.sol\":4200:4219  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":4208:4218  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":4200:4219  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":4200:4232  _staker[msg.sender].stakedAmount */\n      0x01\n      add\n        /* \"contracts/Staking.sol\":4200:4280  _staker[msg.sender].stakedAmount = _staker[msg.sender].stakedAmount.add(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":4305:4329  totalStaked.add(_amount) */\n      tag_319\n        /* \"contracts/Staking.sol\":4321:4328  _amount */\n      dup2\n        /* \"contracts/Staking.sol\":4305:4316  totalStaked */\n      sload(0x0c)\n        /* \"contracts/Staking.sol\":4305:4320  totalStaked.add */\n      tag_154\n      swap1\n        /* \"contracts/Staking.sol\":4305:4329  totalStaked.add(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_319:\n        /* \"contracts/Staking.sol\":4291:4302  totalStaked */\n      0x0c\n        /* \"contracts/Staking.sol\":4291:4329  totalStaked = totalStaked.add(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":4355:4382  Staked(msg.sender, _amount) */\n      0x9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d\n        /* \"contracts/Staking.sol\":4362:4372  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":4374:4381  _amount */\n      dup3\n        /* \"contracts/Staking.sol\":4355:4382  Staked(msg.sender, _amount) */\n      mload(0x40)\n      tag_320\n      swap3\n      swap2\n      swap1\n      tag_169\n      jump\t// in\n    tag_320:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Staking.sol\":3808:4390  function stake(uint256 _amount) public{... */\n      pop\n      jump\t// out\n        /* \"contracts/Staking.sol\":8307:8477  function setGoldMinAmount(uint256 _minAmount) external onlyOwner {... */\n    tag_101:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_322\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_130\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_322:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_323\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_83\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_323:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_324\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_325\n      swap1\n      tag_134\n      jump\t// in\n    tag_325:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_324:\n        /* \"contracts/Staking.sol\":8407:8408  0 */\n      0x00\n        /* \"contracts/Staking.sol\":8394:8404  _minAmount */\n      dup2\n        /* \"contracts/Staking.sol\":8394:8408  _minAmount > 0 */\n      gt\n        /* \"contracts/Staking.sol\":8385:8426  require (_minAmount > 0, \"Can't be zero\") */\n      tag_327\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_328\n      swap1\n      tag_138\n      jump\t// in\n    tag_328:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_327:\n        /* \"contracts/Staking.sol\":8459:8469  _minAmount */\n      dup1\n        /* \"contracts/Staking.sol\":8439:8456  _minStakeAmount_g */\n      0x07\n        /* \"contracts/Staking.sol\":8439:8469  _minStakeAmount_g = _minAmount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":8307:8477  function setGoldMinAmount(uint256 _minAmount) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Staking.sol\":4612:4746  function getStakerMode(address _address) public view returns (uint256) {... */\n    tag_104:\n        /* \"contracts/Staking.sol\":4674:4681  uint256 */\n      0x00\n        /* \"contracts/Staking.sol\":4729:4730  0 */\n      dup1\n        /* \"contracts/Staking.sol\":4703:4710  _staker */\n      0x0b\n        /* \"contracts/Staking.sol\":4703:4720  _staker[_address] */\n      0x00\n        /* \"contracts/Staking.sol\":4711:4719  _address */\n      dup5\n        /* \"contracts/Staking.sol\":4703:4720  _staker[_address] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":4703:4725  _staker[_address].mode */\n      0x02\n      add\n      sload\n        /* \"contracts/Staking.sol\":4703:4730  _staker[_address].mode == 0 */\n      eq\n        /* \"contracts/Staking.sol\":4703:4738  _staker[_address].mode == 0 ? 0 : 1 */\n      tag_330\n      jumpi\n        /* \"contracts/Staking.sol\":4737:4738  1 */\n      0x01\n        /* \"contracts/Staking.sol\":4703:4738  _staker[_address].mode == 0 ? 0 : 1 */\n      jump(tag_331)\n    tag_330:\n        /* \"contracts/Staking.sol\":4733:4734  0 */\n      0x00\n        /* \"contracts/Staking.sol\":4703:4738  _staker[_address].mode == 0 ? 0 : 1 */\n    tag_331:\n        /* \"contracts/Staking.sol\":4696:4738  return _staker[_address].mode == 0 ? 0 : 1 */\n      0xff\n      and\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":4612:4746  function getStakerMode(address _address) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Staking.sol\":7947:8119  function setCopperMinAmount(uint256 _minAmount) external onlyOwner {... */\n    tag_108:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_333\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_130\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_333:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_334\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_83\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_334:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_335\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_336\n      swap1\n      tag_134\n      jump\t// in\n    tag_336:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_335:\n        /* \"contracts/Staking.sol\":8049:8050  0 */\n      0x00\n        /* \"contracts/Staking.sol\":8036:8046  _minAmount */\n      dup2\n        /* \"contracts/Staking.sol\":8036:8050  _minAmount > 0 */\n      gt\n        /* \"contracts/Staking.sol\":8027:8068  require (_minAmount > 0, \"Can't be zero\") */\n      tag_338\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_339\n      swap1\n      tag_138\n      jump\t// in\n    tag_339:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_338:\n        /* \"contracts/Staking.sol\":8101:8111  _minAmount */\n      dup1\n        /* \"contracts/Staking.sol\":8081:8098  _minStakeAmount_c */\n      0x09\n        /* \"contracts/Staking.sol\":8081:8111  _minStakeAmount_c = _minAmount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":7947:8119  function setCopperMinAmount(uint256 _minAmount) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Staking.sol\":7755:7939  function setThreeMonthMinAmount(uint256 _minAmount) external onlyOwner {... */\n    tag_111:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_341\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_130\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_341:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_342\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_83\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_342:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_343\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_344\n      swap1\n      tag_134\n      jump\t// in\n    tag_344:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_343:\n        /* \"contracts/Staking.sol\":7869:7870  0 */\n      0x00\n        /* \"contracts/Staking.sol\":7856:7866  _minAmount */\n      dup2\n        /* \"contracts/Staking.sol\":7856:7870  _minAmount > 0 */\n      gt\n        /* \"contracts/Staking.sol\":7847:7888  require (_minAmount > 0, \"Can't be zero\") */\n      tag_346\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_347\n      swap1\n      tag_138\n      jump\t// in\n    tag_347:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_346:\n        /* \"contracts/Staking.sol\":7921:7931  _minAmount */\n      dup1\n        /* \"contracts/Staking.sol\":7901:7918  _minStakeAmount_m */\n      0x06\n        /* \"contracts/Staking.sol\":7901:7931  _minStakeAmount_m = _minAmount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":7755:7939  function setThreeMonthMinAmount(uint256 _minAmount) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_114:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_349\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_130\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_349:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_350\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_83\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_350:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_351\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_352\n      swap1\n      tag_134\n      jump\t// in\n    tag_352:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_351:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2026:2027  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2028  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2014  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2028  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_354\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_355\n      swap1\n      tag_356\n      jump\t// in\n    tag_355:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_354:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      tag_357\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2100:2108  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2099  _transferOwnership */\n      tag_269\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_357:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Staking.sol\":5300:5436  function stakedAmount(address _address) public view returns (uint256) {... */\n    tag_117:\n        /* \"contracts/Staking.sol\":5361:5368  uint256 */\n      0x00\n        /* \"contracts/Staking.sol\":5398:5405  _staker */\n      0x0b\n        /* \"contracts/Staking.sol\":5398:5415  _staker[_address] */\n      0x00\n        /* \"contracts/Staking.sol\":5406:5414  _address */\n      dup4\n        /* \"contracts/Staking.sol\":5398:5415  _staker[_address] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":5398:5428  _staker[_address].stakedAmount */\n      0x01\n      add\n      sload\n        /* \"contracts/Staking.sol\":5391:5428  return _staker[_address].stakedAmount */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":5300:5436  function stakedAmount(address _address) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Staking.sol\":1246:1265  IBEP20 public token */\n    tag_120:\n      0x0d\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Staking.sol\":4754:4878  function isStartStaking(address _address) public view returns (uint256) {... */\n    tag_125:\n        /* \"contracts/Staking.sol\":4817:4824  uint256 */\n      0x00\n        /* \"contracts/Staking.sol\":4846:4853  _staker */\n      0x0b\n        /* \"contracts/Staking.sol\":4846:4863  _staker[_address] */\n      0x00\n        /* \"contracts/Staking.sol\":4854:4862  _address */\n      dup4\n        /* \"contracts/Staking.sol\":4846:4863  _staker[_address] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":4846:4870  _staker[_address].staked */\n      0x05\n      add\n      sload\n        /* \"contracts/Staking.sol\":4839:4870  return _staker[_address].staked */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":4754:4878  function isStartStaking(address _address) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_130:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Staking.sol\":2359:2816  function updateReward() private{... */\n    tag_147:\n        /* \"contracts/Staking.sol\":2411:2437  uint256 stakerStakedAmount */\n      0x00\n        /* \"contracts/Staking.sol\":2440:2447  _staker */\n      0x0b\n        /* \"contracts/Staking.sol\":2440:2459  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":2448:2458  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":2440:2459  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":2440:2472  _staker[msg.sender].stakedAmount */\n      0x01\n      add\n      sload\n        /* \"contracts/Staking.sol\":2411:2472  uint256 stakerStakedAmount = _staker[msg.sender].stakedAmount */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":2493:2510  uint256 newReward */\n      0x00\n        /* \"contracts/Staking.sol\":2513:2633  stakerStakedAmount.mul(block.number.sub(_staker[msg.sender].lastUpdatedBlockNumber).div(8640)).mul(_rewardRate).div(1e4) */\n      tag_362\n        /* \"contracts/Staking.sol\":2629:2632  1e4 */\n      0x2710\n        /* \"contracts/Staking.sol\":2513:2624  stakerStakedAmount.mul(block.number.sub(_staker[msg.sender].lastUpdatedBlockNumber).div(8640)).mul(_rewardRate) */\n      tag_363\n        /* \"contracts/Staking.sol\":2612:2623  _rewardRate */\n      sload(0x03)\n        /* \"contracts/Staking.sol\":2513:2607  stakerStakedAmount.mul(block.number.sub(_staker[msg.sender].lastUpdatedBlockNumber).div(8640)) */\n      tag_364\n        /* \"contracts/Staking.sol\":2536:2606  block.number.sub(_staker[msg.sender].lastUpdatedBlockNumber).div(8640) */\n      tag_365\n        /* \"contracts/Staking.sol\":2601:2605  8640 */\n      0x21c0\n        /* \"contracts/Staking.sol\":2536:2596  block.number.sub(_staker[msg.sender].lastUpdatedBlockNumber) */\n      tag_366\n        /* \"contracts/Staking.sol\":2553:2560  _staker */\n      0x0b\n        /* \"contracts/Staking.sol\":2553:2572  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":2561:2571  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":2553:2572  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":2553:2595  _staker[msg.sender].lastUpdatedBlockNumber */\n      0x04\n      add\n      sload\n        /* \"contracts/Staking.sol\":2536:2548  block.number */\n      number\n        /* \"contracts/Staking.sol\":2536:2552  block.number.sub */\n      tag_150\n      swap1\n        /* \"contracts/Staking.sol\":2536:2596  block.number.sub(_staker[msg.sender].lastUpdatedBlockNumber) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_366:\n        /* \"contracts/Staking.sol\":2536:2600  block.number.sub(_staker[msg.sender].lastUpdatedBlockNumber).div */\n      tag_151\n      swap1\n        /* \"contracts/Staking.sol\":2536:2606  block.number.sub(_staker[msg.sender].lastUpdatedBlockNumber).div(8640) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_365:\n        /* \"contracts/Staking.sol\":2513:2531  stakerStakedAmount */\n      dup8\n        /* \"contracts/Staking.sol\":2513:2535  stakerStakedAmount.mul */\n      tag_165\n      swap1\n        /* \"contracts/Staking.sol\":2513:2607  stakerStakedAmount.mul(block.number.sub(_staker[msg.sender].lastUpdatedBlockNumber).div(8640)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_364:\n        /* \"contracts/Staking.sol\":2513:2611  stakerStakedAmount.mul(block.number.sub(_staker[msg.sender].lastUpdatedBlockNumber).div(8640)).mul */\n      tag_165\n      swap1\n        /* \"contracts/Staking.sol\":2513:2624  stakerStakedAmount.mul(block.number.sub(_staker[msg.sender].lastUpdatedBlockNumber).div(8640)).mul(_rewardRate) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_363:\n        /* \"contracts/Staking.sol\":2513:2628  stakerStakedAmount.mul(block.number.sub(_staker[msg.sender].lastUpdatedBlockNumber).div(8640)).mul(_rewardRate).div */\n      tag_151\n      swap1\n        /* \"contracts/Staking.sol\":2513:2633  stakerStakedAmount.mul(block.number.sub(_staker[msg.sender].lastUpdatedBlockNumber).div(8640)).mul(_rewardRate).div(1e4) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_362:\n        /* \"contracts/Staking.sol\":2493:2633  uint256 newReward = stakerStakedAmount.mul(block.number.sub(_staker[msg.sender].lastUpdatedBlockNumber).div(8640)).mul(_rewardRate).div(1e4) */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":2686:2740  _staker[msg.sender].stakerCurrentReward.add(newReward) */\n      tag_367\n        /* \"contracts/Staking.sol\":2730:2739  newReward */\n      dup2\n        /* \"contracts/Staking.sol\":2686:2693  _staker */\n      0x0b\n        /* \"contracts/Staking.sol\":2686:2705  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":2694:2704  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":2686:2705  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":2686:2725  _staker[msg.sender].stakerCurrentReward */\n      0x00\n      add\n      sload\n        /* \"contracts/Staking.sol\":2686:2729  _staker[msg.sender].stakerCurrentReward.add */\n      tag_154\n      swap1\n        /* \"contracts/Staking.sol\":2686:2740  _staker[msg.sender].stakerCurrentReward.add(newReward) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_367:\n        /* \"contracts/Staking.sol\":2644:2651  _staker */\n      0x0b\n        /* \"contracts/Staking.sol\":2644:2663  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":2652:2662  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":2644:2663  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":2644:2683  _staker[msg.sender].stakerCurrentReward */\n      0x00\n      add\n        /* \"contracts/Staking.sol\":2644:2740  _staker[msg.sender].stakerCurrentReward = _staker[msg.sender].stakerCurrentReward.add(newReward) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":2796:2808  block.number */\n      number\n        /* \"contracts/Staking.sol\":2751:2758  _staker */\n      0x0b\n        /* \"contracts/Staking.sol\":2751:2770  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":2759:2769  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":2751:2770  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":2751:2793  _staker[msg.sender].lastUpdatedBlockNumber */\n      0x04\n      add\n        /* \"contracts/Staking.sol\":2751:2808  _staker[msg.sender].lastUpdatedBlockNumber = block.number */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":2390:2816  {... */\n      pop\n      pop\n        /* \"contracts/Staking.sol\":2359:2816  function updateReward() private{... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3108:3204  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_150:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3166:3173  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3196:3197  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3192:3193  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3192:3197  a - b */\n      tag_369\n      swap2\n      swap1\n      tag_370\n      jump\t// in\n    tag_369:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3185:3197  return a - b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3108:3204  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3836:3932  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_151:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3894:3901  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3924:3925  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3920:3921  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3920:3925  a / b */\n      tag_372\n      swap2\n      swap1\n      tag_373\n      jump\t// in\n    tag_372:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3913:3925  return a / b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3836:3932  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2741:2837  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_154:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2799:2806  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2829:2830  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2825:2826  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2825:2830  a + b */\n      tag_375\n      swap2\n      swap1\n      tag_376\n      jump\t// in\n    tag_375:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2818:2830  return a + b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2741:2837  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3451:3547  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_165:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3509:3516  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3539:3540  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3535:3536  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3535:3540  a * b */\n      tag_378\n      swap2\n      swap1\n      tag_379\n      jump\t// in\n    tag_378:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3528:3540  return a * b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3451:3547  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SafeBEP20.sol\":290:467  function safeTransfer(IBEP20 token, address to, uint256 value) internal {... */\n    tag_167:\n        /* \"contracts/SafeBEP20.sol\":373:459  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_381\n        /* \"contracts/SafeBEP20.sol\":393:398  token */\n      dup4\n        /* \"contracts/SafeBEP20.sol\":423:446  token.transfer.selector */\n      shl(0xe0, 0xa9059cbb)\n        /* \"contracts/SafeBEP20.sol\":448:450  to */\n      dup5\n        /* \"contracts/SafeBEP20.sol\":452:457  value */\n      dup5\n        /* \"contracts/SafeBEP20.sol\":400:458  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      add(0x24, mload(0x40))\n      tag_382\n      swap3\n      swap2\n      swap1\n      tag_169\n      jump\t// in\n    tag_382:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/SafeBEP20.sol\":373:392  _callOptionalReturn */\n      tag_383\n        /* \"contracts/SafeBEP20.sol\":373:459  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n    tag_381:\n        /* \"contracts/SafeBEP20.sol\":290:467  function safeTransfer(IBEP20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_269:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2368  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2387:2395  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2384  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2441:2449  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2431:2439  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/SafeBEP20.sol\":475:680  function safeTransferFrom(IBEP20 token, address from, address to, uint256 value) internal {... */\n    tag_317:\n        /* \"contracts/SafeBEP20.sol\":576:672  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      tag_386\n        /* \"contracts/SafeBEP20.sol\":596:601  token */\n      dup5\n        /* \"contracts/SafeBEP20.sol\":626:653  token.transferFrom.selector */\n      shl(0xe0, 0x23b872dd)\n        /* \"contracts/SafeBEP20.sol\":655:659  from */\n      dup6\n        /* \"contracts/SafeBEP20.sol\":661:663  to */\n      dup6\n        /* \"contracts/SafeBEP20.sol\":665:670  value */\n      dup6\n        /* \"contracts/SafeBEP20.sol\":603:671  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      add(0x24, mload(0x40))\n      tag_387\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_388\n      jump\t// in\n    tag_387:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/SafeBEP20.sol\":576:595  _callOptionalReturn */\n      tag_383\n        /* \"contracts/SafeBEP20.sol\":576:672  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      jump\t// in\n    tag_386:\n        /* \"contracts/SafeBEP20.sol\":475:680  function safeTransferFrom(IBEP20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SafeBEP20.sol\":2599:3368  function _callOptionalReturn(IBEP20 token, bytes memory data) private {... */\n    tag_383:\n        /* \"contracts/SafeBEP20.sol\":3031:3054  bytes memory returndata */\n      0x00\n        /* \"contracts/SafeBEP20.sol\":3057:3126  address(token).functionCall(data, \"SafeBEP20: low-level call failed\") */\n      tag_390\n        /* \"contracts/SafeBEP20.sol\":3085:3089  data */\n      dup3\n        /* \"contracts/SafeBEP20.sol\":3057:3126  address(token).functionCall(data, \"SafeBEP20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666542455032303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"contracts/SafeBEP20.sol\":3065:3070  token */\n      dup6\n        /* \"contracts/SafeBEP20.sol\":3057:3084  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_391\n      swap1\n        /* \"contracts/SafeBEP20.sol\":3057:3126  address(token).functionCall(data, \"SafeBEP20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_390:\n        /* \"contracts/SafeBEP20.sol\":3031:3126  bytes memory returndata = address(token).functionCall(data, \"SafeBEP20: low-level call failed\") */\n      swap1\n      pop\n        /* \"contracts/SafeBEP20.sol\":3161:3162  0 */\n      0x00\n        /* \"contracts/SafeBEP20.sol\":3141:3151  returndata */\n      dup2\n        /* \"contracts/SafeBEP20.sol\":3141:3158  returndata.length */\n      mload\n        /* \"contracts/SafeBEP20.sol\":3141:3162  returndata.length > 0 */\n      gt\n        /* \"contracts/SafeBEP20.sol\":3137:3361  if (returndata.length > 0) { // Return data is optional... */\n      iszero\n      tag_392\n      jumpi\n        /* \"contracts/SafeBEP20.sol\":3283:3293  returndata */\n      dup1\n        /* \"contracts/SafeBEP20.sol\":3272:3302  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_393\n      swap2\n      swap1\n      tag_394\n      jump\t// in\n    tag_393:\n        /* \"contracts/SafeBEP20.sol\":3264:3349  require(abi.decode(returndata, (bool)), \"SafeBEP20: BEP20 operation did not succeed\") */\n      tag_395\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_396\n      swap1\n      tag_397\n      jump\t// in\n    tag_396:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_395:\n        /* \"contracts/SafeBEP20.sol\":3137:3361  if (returndata.length > 0) { // Return data is optional... */\n    tag_392:\n        /* \"contracts/SafeBEP20.sol\":2669:3368  {... */\n      pop\n        /* \"contracts/SafeBEP20.sol\":2599:3368  function _callOptionalReturn(IBEP20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3861:4084  function functionCall(... */\n    tag_391:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3994:4006  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4025:4077  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_399\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4047:4053  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4055:4059  data */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4061:4062  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4064:4076  errorMessage */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4025:4046  functionCallWithValue */\n      tag_400\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4025:4077  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_399:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4018:4077  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3861:4084  function functionCall(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4948:5447  function functionCallWithValue(... */\n    tag_400:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5113:5125  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5170:5175  value */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5145:5166  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5145:5175  address(this).balance >= value */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5137:5218  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_402\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_403\n      swap1\n      tag_404\n      jump\t// in\n    tag_403:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_402:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5236:5254  isContract(target) */\n      tag_405\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5247:5253  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5236:5246  isContract */\n      tag_406\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5236:5254  isContract(target) */\n      jump\t// in\n    tag_405:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5228:5288  require(isContract(target), \"Address: call to non-contract\") */\n      tag_407\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_408\n      swap1\n      tag_409\n      jump\t// in\n    tag_408:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_407:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5300:5312  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5314:5337  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5341:5347  target */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5341:5352  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5360:5365  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5367:5371  data */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5341:5372  target.call{value: value}(data) */\n      mload(0x40)\n      tag_410\n      swap2\n      swap1\n      tag_411\n      jump\t// in\n    tag_410:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_414\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_413)\n    tag_414:\n      0x60\n      swap2\n      pop\n    tag_413:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5299:5372  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5389:5440  verifyCallResult(success, returndata, errorMessage) */\n      tag_415\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5406:5413  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5415:5425  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5427:5439  errorMessage */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5389:5405  verifyCallResult */\n      tag_416\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5389:5440  verifyCallResult(success, returndata, errorMessage) */\n      jump\t// in\n    tag_415:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5382:5440  return verifyCallResult(success, returndata, errorMessage) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4948:5447  function functionCallWithValue(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1175:1495  function isContract(address account) internal view returns (bool) {... */\n    tag_406:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1235:1239  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1487:1488  0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1472  account */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1484  account.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1488  account.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1458:1488  return account.code.length > 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1175:1495  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7561:8253  function verifyCallResult(... */\n    tag_416:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7707:7719  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7735:7742  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7731:8247  if (success) {... */\n      iszero\n      tag_419\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7765:7775  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7758:7775  return returndata */\n      swap1\n      pop\n      jump(tag_418)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7731:8247  if (success) {... */\n    tag_419:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7896:7897  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7876:7886  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7876:7893  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7876:7897  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7872:8237  if (returndata.length > 0) {... */\n      iszero\n      tag_421\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8070:8080  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8064:8081  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8130:8145  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8117:8127  returndata */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8113:8115  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8109:8128  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8102:8146  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7872:8237  if (returndata.length > 0) {... */\n    tag_421:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8209:8221  errorMessage */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8202:8222  revert(errorMessage) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_423\n      swap2\n      swap1\n      tag_424\n      jump\t// in\n    tag_423:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7561:8253  function verifyCallResult(... */\n    tag_418:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_425:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_426:\n        /* \"#utility.yul\":177:201   */\n      tag_493\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_425\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_39:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_495\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_426\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":523:640   */\n    tag_428:\n        /* \"#utility.yul\":632:633   */\n      0x00\n        /* \"#utility.yul\":629:630   */\n      dup1\n        /* \"#utility.yul\":622:634   */\n      revert\n        /* \"#utility.yul\":769:891   */\n    tag_430:\n        /* \"#utility.yul\":842:866   */\n      tag_500\n        /* \"#utility.yul\":860:865   */\n      dup2\n        /* \"#utility.yul\":842:866   */\n      tag_425\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":835:840   */\n      dup2\n        /* \"#utility.yul\":832:867   */\n      eq\n        /* \"#utility.yul\":822:885   */\n      tag_501\n      jumpi\n        /* \"#utility.yul\":881:882   */\n      0x00\n        /* \"#utility.yul\":878:879   */\n      dup1\n        /* \"#utility.yul\":871:883   */\n      revert\n        /* \"#utility.yul\":822:885   */\n    tag_501:\n        /* \"#utility.yul\":769:891   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":897:1036   */\n    tag_431:\n        /* \"#utility.yul\":943:948   */\n      0x00\n        /* \"#utility.yul\":981:987   */\n      dup2\n        /* \"#utility.yul\":968:988   */\n      calldataload\n        /* \"#utility.yul\":959:988   */\n      swap1\n      pop\n        /* \"#utility.yul\":997:1030   */\n      tag_503\n        /* \"#utility.yul\":1024:1029   */\n      dup2\n        /* \"#utility.yul\":997:1030   */\n      tag_430\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":897:1036   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1042:1371   */\n    tag_42:\n        /* \"#utility.yul\":1101:1107   */\n      0x00\n        /* \"#utility.yul\":1150:1152   */\n      0x20\n        /* \"#utility.yul\":1138:1147   */\n      dup3\n        /* \"#utility.yul\":1129:1136   */\n      dup5\n        /* \"#utility.yul\":1125:1148   */\n      sub\n        /* \"#utility.yul\":1121:1153   */\n      slt\n        /* \"#utility.yul\":1118:1237   */\n      iszero\n      tag_505\n      jumpi\n        /* \"#utility.yul\":1156:1235   */\n      tag_506\n      tag_428\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":1118:1237   */\n    tag_505:\n        /* \"#utility.yul\":1276:1277   */\n      0x00\n        /* \"#utility.yul\":1301:1354   */\n      tag_507\n        /* \"#utility.yul\":1346:1353   */\n      dup5\n        /* \"#utility.yul\":1337:1343   */\n      dup3\n        /* \"#utility.yul\":1326:1335   */\n      dup6\n        /* \"#utility.yul\":1322:1344   */\n      add\n        /* \"#utility.yul\":1301:1354   */\n      tag_431\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":1291:1354   */\n      swap2\n      pop\n        /* \"#utility.yul\":1247:1364   */\n      pop\n        /* \"#utility.yul\":1042:1371   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1377:1503   */\n    tag_432:\n        /* \"#utility.yul\":1414:1421   */\n      0x00\n        /* \"#utility.yul\":1454:1496   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1447:1452   */\n      dup3\n        /* \"#utility.yul\":1443:1497   */\n      and\n        /* \"#utility.yul\":1432:1497   */\n      swap1\n      pop\n        /* \"#utility.yul\":1377:1503   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1509:1605   */\n    tag_433:\n        /* \"#utility.yul\":1546:1553   */\n      0x00\n        /* \"#utility.yul\":1575:1599   */\n      tag_510\n        /* \"#utility.yul\":1593:1598   */\n      dup3\n        /* \"#utility.yul\":1575:1599   */\n      tag_432\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":1564:1599   */\n      swap1\n      pop\n        /* \"#utility.yul\":1509:1605   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1733   */\n    tag_434:\n        /* \"#utility.yul\":1684:1708   */\n      tag_512\n        /* \"#utility.yul\":1702:1707   */\n      dup2\n        /* \"#utility.yul\":1684:1708   */\n      tag_433\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":1677:1682   */\n      dup2\n        /* \"#utility.yul\":1674:1709   */\n      eq\n        /* \"#utility.yul\":1664:1727   */\n      tag_513\n      jumpi\n        /* \"#utility.yul\":1723:1724   */\n      0x00\n        /* \"#utility.yul\":1720:1721   */\n      dup1\n        /* \"#utility.yul\":1713:1725   */\n      revert\n        /* \"#utility.yul\":1664:1727   */\n    tag_513:\n        /* \"#utility.yul\":1611:1733   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1739:1878   */\n    tag_435:\n        /* \"#utility.yul\":1785:1790   */\n      0x00\n        /* \"#utility.yul\":1823:1829   */\n      dup2\n        /* \"#utility.yul\":1810:1830   */\n      calldataload\n        /* \"#utility.yul\":1801:1830   */\n      swap1\n      pop\n        /* \"#utility.yul\":1839:1872   */\n      tag_515\n        /* \"#utility.yul\":1866:1871   */\n      dup2\n        /* \"#utility.yul\":1839:1872   */\n      tag_434\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":1739:1878   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1884:2213   */\n    tag_51:\n        /* \"#utility.yul\":1943:1949   */\n      0x00\n        /* \"#utility.yul\":1992:1994   */\n      0x20\n        /* \"#utility.yul\":1980:1989   */\n      dup3\n        /* \"#utility.yul\":1971:1978   */\n      dup5\n        /* \"#utility.yul\":1967:1990   */\n      sub\n        /* \"#utility.yul\":1963:1995   */\n      slt\n        /* \"#utility.yul\":1960:2079   */\n      iszero\n      tag_517\n      jumpi\n        /* \"#utility.yul\":1998:2077   */\n      tag_518\n      tag_428\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":1960:2079   */\n    tag_517:\n        /* \"#utility.yul\":2118:2119   */\n      0x00\n        /* \"#utility.yul\":2143:2196   */\n      tag_519\n        /* \"#utility.yul\":2188:2195   */\n      dup5\n        /* \"#utility.yul\":2179:2185   */\n      dup3\n        /* \"#utility.yul\":2168:2177   */\n      dup6\n        /* \"#utility.yul\":2164:2186   */\n      add\n        /* \"#utility.yul\":2143:2196   */\n      tag_435\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":2133:2196   */\n      swap2\n      pop\n        /* \"#utility.yul\":2089:2206   */\n      pop\n        /* \"#utility.yul\":1884:2213   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2219:2693   */\n    tag_59:\n        /* \"#utility.yul\":2287:2293   */\n      0x00\n        /* \"#utility.yul\":2295:2301   */\n      dup1\n        /* \"#utility.yul\":2344:2346   */\n      0x40\n        /* \"#utility.yul\":2332:2341   */\n      dup4\n        /* \"#utility.yul\":2323:2330   */\n      dup6\n        /* \"#utility.yul\":2319:2342   */\n      sub\n        /* \"#utility.yul\":2315:2347   */\n      slt\n        /* \"#utility.yul\":2312:2431   */\n      iszero\n      tag_521\n      jumpi\n        /* \"#utility.yul\":2350:2429   */\n      tag_522\n      tag_428\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":2312:2431   */\n    tag_521:\n        /* \"#utility.yul\":2470:2471   */\n      0x00\n        /* \"#utility.yul\":2495:2548   */\n      tag_523\n        /* \"#utility.yul\":2540:2547   */\n      dup6\n        /* \"#utility.yul\":2531:2537   */\n      dup3\n        /* \"#utility.yul\":2520:2529   */\n      dup7\n        /* \"#utility.yul\":2516:2538   */\n      add\n        /* \"#utility.yul\":2495:2548   */\n      tag_431\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":2485:2548   */\n      swap3\n      pop\n        /* \"#utility.yul\":2441:2558   */\n      pop\n        /* \"#utility.yul\":2597:2599   */\n      0x20\n        /* \"#utility.yul\":2623:2676   */\n      tag_524\n        /* \"#utility.yul\":2668:2675   */\n      dup6\n        /* \"#utility.yul\":2659:2665   */\n      dup3\n        /* \"#utility.yul\":2648:2657   */\n      dup7\n        /* \"#utility.yul\":2644:2666   */\n      add\n        /* \"#utility.yul\":2623:2676   */\n      tag_431\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":2613:2676   */\n      swap2\n      pop\n        /* \"#utility.yul\":2568:2686   */\n      pop\n        /* \"#utility.yul\":2219:2693   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2699:2817   */\n    tag_436:\n        /* \"#utility.yul\":2786:2810   */\n      tag_526\n        /* \"#utility.yul\":2804:2809   */\n      dup2\n        /* \"#utility.yul\":2786:2810   */\n      tag_433\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":2781:2784   */\n      dup3\n        /* \"#utility.yul\":2774:2811   */\n      mstore\n        /* \"#utility.yul\":2699:2817   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2823:3045   */\n    tag_85:\n        /* \"#utility.yul\":2916:2920   */\n      0x00\n        /* \"#utility.yul\":2954:2956   */\n      0x20\n        /* \"#utility.yul\":2943:2952   */\n      dup3\n        /* \"#utility.yul\":2939:2957   */\n      add\n        /* \"#utility.yul\":2931:2957   */\n      swap1\n      pop\n        /* \"#utility.yul\":2967:3038   */\n      tag_528\n        /* \"#utility.yul\":3035:3036   */\n      0x00\n        /* \"#utility.yul\":3024:3033   */\n      dup4\n        /* \"#utility.yul\":3020:3037   */\n      add\n        /* \"#utility.yul\":3011:3017   */\n      dup5\n        /* \"#utility.yul\":2967:3038   */\n      tag_436\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":2823:3045   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3051:3111   */\n    tag_437:\n        /* \"#utility.yul\":3079:3082   */\n      0x00\n        /* \"#utility.yul\":3100:3105   */\n      dup2\n        /* \"#utility.yul\":3093:3105   */\n      swap1\n      pop\n        /* \"#utility.yul\":3051:3111   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3117:3259   */\n    tag_438:\n        /* \"#utility.yul\":3167:3176   */\n      0x00\n        /* \"#utility.yul\":3200:3253   */\n      tag_531\n        /* \"#utility.yul\":3218:3252   */\n      tag_532\n        /* \"#utility.yul\":3227:3251   */\n      tag_533\n        /* \"#utility.yul\":3245:3250   */\n      dup5\n        /* \"#utility.yul\":3227:3251   */\n      tag_432\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":3218:3252   */\n      tag_437\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":3200:3253   */\n      tag_432\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":3187:3253   */\n      swap1\n      pop\n        /* \"#utility.yul\":3117:3259   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3265:3391   */\n    tag_439:\n        /* \"#utility.yul\":3315:3324   */\n      0x00\n        /* \"#utility.yul\":3348:3385   */\n      tag_535\n        /* \"#utility.yul\":3379:3384   */\n      dup3\n        /* \"#utility.yul\":3348:3385   */\n      tag_438\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":3335:3385   */\n      swap1\n      pop\n        /* \"#utility.yul\":3265:3391   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3397:3537   */\n    tag_440:\n        /* \"#utility.yul\":3461:3470   */\n      0x00\n        /* \"#utility.yul\":3494:3531   */\n      tag_537\n        /* \"#utility.yul\":3525:3530   */\n      dup3\n        /* \"#utility.yul\":3494:3531   */\n      tag_439\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":3481:3531   */\n      swap1\n      pop\n        /* \"#utility.yul\":3397:3537   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3543:3702   */\n    tag_441:\n        /* \"#utility.yul\":3644:3695   */\n      tag_539\n        /* \"#utility.yul\":3689:3694   */\n      dup2\n        /* \"#utility.yul\":3644:3695   */\n      tag_440\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":3639:3642   */\n      dup3\n        /* \"#utility.yul\":3632:3696   */\n      mstore\n        /* \"#utility.yul\":3543:3702   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3708:3958   */\n    tag_122:\n        /* \"#utility.yul\":3815:3819   */\n      0x00\n        /* \"#utility.yul\":3853:3855   */\n      0x20\n        /* \"#utility.yul\":3842:3851   */\n      dup3\n        /* \"#utility.yul\":3838:3856   */\n      add\n        /* \"#utility.yul\":3830:3856   */\n      swap1\n      pop\n        /* \"#utility.yul\":3866:3951   */\n      tag_541\n        /* \"#utility.yul\":3948:3949   */\n      0x00\n        /* \"#utility.yul\":3937:3946   */\n      dup4\n        /* \"#utility.yul\":3933:3950   */\n      add\n        /* \"#utility.yul\":3924:3930   */\n      dup5\n        /* \"#utility.yul\":3866:3951   */\n      tag_441\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":3708:3958   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3964:4133   */\n    tag_442:\n        /* \"#utility.yul\":4048:4059   */\n      0x00\n        /* \"#utility.yul\":4082:4088   */\n      dup3\n        /* \"#utility.yul\":4077:4080   */\n      dup3\n        /* \"#utility.yul\":4070:4089   */\n      mstore\n        /* \"#utility.yul\":4122:4126   */\n      0x20\n        /* \"#utility.yul\":4117:4120   */\n      dup3\n        /* \"#utility.yul\":4113:4127   */\n      add\n        /* \"#utility.yul\":4098:4127   */\n      swap1\n      pop\n        /* \"#utility.yul\":3964:4133   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4139:4321   */\n    tag_443:\n        /* \"#utility.yul\":4279:4313   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":4275:4276   */\n      0x00\n        /* \"#utility.yul\":4267:4273   */\n      dup3\n        /* \"#utility.yul\":4263:4277   */\n      add\n        /* \"#utility.yul\":4256:4314   */\n      mstore\n        /* \"#utility.yul\":4139:4321   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4327:4693   */\n    tag_444:\n        /* \"#utility.yul\":4469:4472   */\n      0x00\n        /* \"#utility.yul\":4490:4557   */\n      tag_545\n        /* \"#utility.yul\":4554:4556   */\n      0x20\n        /* \"#utility.yul\":4549:4552   */\n      dup4\n        /* \"#utility.yul\":4490:4557   */\n      tag_442\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":4483:4557   */\n      swap2\n      pop\n        /* \"#utility.yul\":4566:4659   */\n      tag_546\n        /* \"#utility.yul\":4655:4658   */\n      dup3\n        /* \"#utility.yul\":4566:4659   */\n      tag_443\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":4684:4686   */\n      0x20\n        /* \"#utility.yul\":4679:4682   */\n      dup3\n        /* \"#utility.yul\":4675:4687   */\n      add\n        /* \"#utility.yul\":4668:4687   */\n      swap1\n      pop\n        /* \"#utility.yul\":4327:4693   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4699:5118   */\n    tag_134:\n        /* \"#utility.yul\":4865:4869   */\n      0x00\n        /* \"#utility.yul\":4903:4905   */\n      0x20\n        /* \"#utility.yul\":4892:4901   */\n      dup3\n        /* \"#utility.yul\":4888:4906   */\n      add\n        /* \"#utility.yul\":4880:4906   */\n      swap1\n      pop\n        /* \"#utility.yul\":4952:4961   */\n      dup2\n        /* \"#utility.yul\":4946:4950   */\n      dup2\n        /* \"#utility.yul\":4942:4962   */\n      sub\n        /* \"#utility.yul\":4938:4939   */\n      0x00\n        /* \"#utility.yul\":4927:4936   */\n      dup4\n        /* \"#utility.yul\":4923:4940   */\n      add\n        /* \"#utility.yul\":4916:4963   */\n      mstore\n        /* \"#utility.yul\":4980:5111   */\n      tag_548\n        /* \"#utility.yul\":5106:5110   */\n      dup2\n        /* \"#utility.yul\":4980:5111   */\n      tag_444\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":4972:5111   */\n      swap1\n      pop\n        /* \"#utility.yul\":4699:5118   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5124:5287   */\n    tag_445:\n        /* \"#utility.yul\":5264:5279   */\n      0x43616e2774206265207a65726f00000000000000000000000000000000000000\n        /* \"#utility.yul\":5260:5261   */\n      0x00\n        /* \"#utility.yul\":5252:5258   */\n      dup3\n        /* \"#utility.yul\":5248:5262   */\n      add\n        /* \"#utility.yul\":5241:5280   */\n      mstore\n        /* \"#utility.yul\":5124:5287   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5293:5659   */\n    tag_446:\n        /* \"#utility.yul\":5435:5438   */\n      0x00\n        /* \"#utility.yul\":5456:5523   */\n      tag_551\n        /* \"#utility.yul\":5520:5522   */\n      0x0d\n        /* \"#utility.yul\":5515:5518   */\n      dup4\n        /* \"#utility.yul\":5456:5523   */\n      tag_442\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":5449:5523   */\n      swap2\n      pop\n        /* \"#utility.yul\":5532:5625   */\n      tag_552\n        /* \"#utility.yul\":5621:5624   */\n      dup3\n        /* \"#utility.yul\":5532:5625   */\n      tag_445\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":5650:5652   */\n      0x20\n        /* \"#utility.yul\":5645:5648   */\n      dup3\n        /* \"#utility.yul\":5641:5653   */\n      add\n        /* \"#utility.yul\":5634:5653   */\n      swap1\n      pop\n        /* \"#utility.yul\":5293:5659   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5665:6084   */\n    tag_138:\n        /* \"#utility.yul\":5831:5835   */\n      0x00\n        /* \"#utility.yul\":5869:5871   */\n      0x20\n        /* \"#utility.yul\":5858:5867   */\n      dup3\n        /* \"#utility.yul\":5854:5872   */\n      add\n        /* \"#utility.yul\":5846:5872   */\n      swap1\n      pop\n        /* \"#utility.yul\":5918:5927   */\n      dup2\n        /* \"#utility.yul\":5912:5916   */\n      dup2\n        /* \"#utility.yul\":5908:5928   */\n      sub\n        /* \"#utility.yul\":5904:5905   */\n      0x00\n        /* \"#utility.yul\":5893:5902   */\n      dup4\n        /* \"#utility.yul\":5889:5906   */\n      add\n        /* \"#utility.yul\":5882:5929   */\n      mstore\n        /* \"#utility.yul\":5946:6077   */\n      tag_554\n        /* \"#utility.yul\":6072:6076   */\n      dup2\n        /* \"#utility.yul\":5946:6077   */\n      tag_446\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":5938:6077   */\n      swap1\n      pop\n        /* \"#utility.yul\":5665:6084   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6090:6271   */\n    tag_447:\n        /* \"#utility.yul\":6230:6263   */\n      0x416d6f756e742073686f756c642062652067726561746572207468616e203000\n        /* \"#utility.yul\":6226:6227   */\n      0x00\n        /* \"#utility.yul\":6218:6224   */\n      dup3\n        /* \"#utility.yul\":6214:6228   */\n      add\n        /* \"#utility.yul\":6207:6264   */\n      mstore\n        /* \"#utility.yul\":6090:6271   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6277:6643   */\n    tag_448:\n        /* \"#utility.yul\":6419:6422   */\n      0x00\n        /* \"#utility.yul\":6440:6507   */\n      tag_557\n        /* \"#utility.yul\":6504:6506   */\n      0x1f\n        /* \"#utility.yul\":6499:6502   */\n      dup4\n        /* \"#utility.yul\":6440:6507   */\n      tag_442\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":6433:6507   */\n      swap2\n      pop\n        /* \"#utility.yul\":6516:6609   */\n      tag_558\n        /* \"#utility.yul\":6605:6608   */\n      dup3\n        /* \"#utility.yul\":6516:6609   */\n      tag_447\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":6634:6636   */\n      0x20\n        /* \"#utility.yul\":6629:6632   */\n      dup3\n        /* \"#utility.yul\":6625:6637   */\n      add\n        /* \"#utility.yul\":6618:6637   */\n      swap1\n      pop\n        /* \"#utility.yul\":6277:6643   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6649:7068   */\n    tag_142:\n        /* \"#utility.yul\":6815:6819   */\n      0x00\n        /* \"#utility.yul\":6853:6855   */\n      0x20\n        /* \"#utility.yul\":6842:6851   */\n      dup3\n        /* \"#utility.yul\":6838:6856   */\n      add\n        /* \"#utility.yul\":6830:6856   */\n      swap1\n      pop\n        /* \"#utility.yul\":6902:6911   */\n      dup2\n        /* \"#utility.yul\":6896:6900   */\n      dup2\n        /* \"#utility.yul\":6892:6912   */\n      sub\n        /* \"#utility.yul\":6888:6889   */\n      0x00\n        /* \"#utility.yul\":6877:6886   */\n      dup4\n        /* \"#utility.yul\":6873:6890   */\n      add\n        /* \"#utility.yul\":6866:6913   */\n      mstore\n        /* \"#utility.yul\":6930:7061   */\n      tag_560\n        /* \"#utility.yul\":7056:7060   */\n      dup2\n        /* \"#utility.yul\":6930:7061   */\n      tag_448\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":6922:7061   */\n      swap1\n      pop\n        /* \"#utility.yul\":6649:7068   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7074:7238   */\n    tag_449:\n        /* \"#utility.yul\":7214:7230   */\n      0x496e76616c696420616d6f756e74000000000000000000000000000000000000\n        /* \"#utility.yul\":7210:7211   */\n      0x00\n        /* \"#utility.yul\":7202:7208   */\n      dup3\n        /* \"#utility.yul\":7198:7212   */\n      add\n        /* \"#utility.yul\":7191:7231   */\n      mstore\n        /* \"#utility.yul\":7074:7238   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7244:7610   */\n    tag_450:\n        /* \"#utility.yul\":7386:7389   */\n      0x00\n        /* \"#utility.yul\":7407:7474   */\n      tag_563\n        /* \"#utility.yul\":7471:7473   */\n      0x0e\n        /* \"#utility.yul\":7466:7469   */\n      dup4\n        /* \"#utility.yul\":7407:7474   */\n      tag_442\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":7400:7474   */\n      swap2\n      pop\n        /* \"#utility.yul\":7483:7576   */\n      tag_564\n        /* \"#utility.yul\":7572:7575   */\n      dup3\n        /* \"#utility.yul\":7483:7576   */\n      tag_449\n      jump\t// in\n    tag_564:\n        /* \"#utility.yul\":7601:7603   */\n      0x20\n        /* \"#utility.yul\":7596:7599   */\n      dup3\n        /* \"#utility.yul\":7592:7604   */\n      add\n        /* \"#utility.yul\":7585:7604   */\n      swap1\n      pop\n        /* \"#utility.yul\":7244:7610   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7616:8035   */\n    tag_145:\n        /* \"#utility.yul\":7782:7786   */\n      0x00\n        /* \"#utility.yul\":7820:7822   */\n      0x20\n        /* \"#utility.yul\":7809:7818   */\n      dup3\n        /* \"#utility.yul\":7805:7823   */\n      add\n        /* \"#utility.yul\":7797:7823   */\n      swap1\n      pop\n        /* \"#utility.yul\":7869:7878   */\n      dup2\n        /* \"#utility.yul\":7863:7867   */\n      dup2\n        /* \"#utility.yul\":7859:7879   */\n      sub\n        /* \"#utility.yul\":7855:7856   */\n      0x00\n        /* \"#utility.yul\":7844:7853   */\n      dup4\n        /* \"#utility.yul\":7840:7857   */\n      add\n        /* \"#utility.yul\":7833:7880   */\n      mstore\n        /* \"#utility.yul\":7897:8028   */\n      tag_566\n        /* \"#utility.yul\":8023:8027   */\n      dup2\n        /* \"#utility.yul\":7897:8028   */\n      tag_450\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":7889:8028   */\n      swap1\n      pop\n        /* \"#utility.yul\":7616:8035   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8041:8221   */\n    tag_451:\n        /* \"#utility.yul\":8089:8166   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8086:8087   */\n      0x00\n        /* \"#utility.yul\":8079:8167   */\n      mstore\n        /* \"#utility.yul\":8186:8190   */\n      0x12\n        /* \"#utility.yul\":8183:8184   */\n      0x04\n        /* \"#utility.yul\":8176:8191   */\n      mstore\n        /* \"#utility.yul\":8210:8214   */\n      0x24\n        /* \"#utility.yul\":8207:8208   */\n      0x00\n        /* \"#utility.yul\":8200:8215   */\n      revert\n        /* \"#utility.yul\":8227:8403   */\n    tag_157:\n        /* \"#utility.yul\":8259:8260   */\n      0x00\n        /* \"#utility.yul\":8276:8296   */\n      tag_569\n        /* \"#utility.yul\":8294:8295   */\n      dup3\n        /* \"#utility.yul\":8276:8296   */\n      tag_425\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":8271:8296   */\n      swap2\n      pop\n        /* \"#utility.yul\":8310:8330   */\n      tag_570\n        /* \"#utility.yul\":8328:8329   */\n      dup4\n        /* \"#utility.yul\":8310:8330   */\n      tag_425\n      jump\t// in\n    tag_570:\n        /* \"#utility.yul\":8305:8330   */\n      swap3\n      pop\n        /* \"#utility.yul\":8349:8350   */\n      dup3\n        /* \"#utility.yul\":8339:8374   */\n      tag_571\n      jumpi\n        /* \"#utility.yul\":8354:8372   */\n      tag_572\n      tag_451\n      jump\t// in\n    tag_572:\n        /* \"#utility.yul\":8339:8374   */\n    tag_571:\n        /* \"#utility.yul\":8395:8396   */\n      dup3\n        /* \"#utility.yul\":8392:8393   */\n      dup3\n        /* \"#utility.yul\":8388:8397   */\n      mod\n        /* \"#utility.yul\":8383:8397   */\n      swap1\n      pop\n        /* \"#utility.yul\":8227:8403   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8409:8741   */\n    tag_169:\n        /* \"#utility.yul\":8530:8534   */\n      0x00\n        /* \"#utility.yul\":8568:8570   */\n      0x40\n        /* \"#utility.yul\":8557:8566   */\n      dup3\n        /* \"#utility.yul\":8553:8571   */\n      add\n        /* \"#utility.yul\":8545:8571   */\n      swap1\n      pop\n        /* \"#utility.yul\":8581:8652   */\n      tag_574\n        /* \"#utility.yul\":8649:8650   */\n      0x00\n        /* \"#utility.yul\":8638:8647   */\n      dup4\n        /* \"#utility.yul\":8634:8651   */\n      add\n        /* \"#utility.yul\":8625:8631   */\n      dup6\n        /* \"#utility.yul\":8581:8652   */\n      tag_436\n      jump\t// in\n    tag_574:\n        /* \"#utility.yul\":8662:8734   */\n      tag_575\n        /* \"#utility.yul\":8730:8732   */\n      0x20\n        /* \"#utility.yul\":8719:8728   */\n      dup4\n        /* \"#utility.yul\":8715:8733   */\n      add\n        /* \"#utility.yul\":8706:8712   */\n      dup5\n        /* \"#utility.yul\":8662:8734   */\n      tag_426\n      jump\t// in\n    tag_575:\n        /* \"#utility.yul\":8409:8741   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8747:8913   */\n    tag_452:\n        /* \"#utility.yul\":8887:8905   */\n      0x4e6f7468696e6720746f20636c61696d00000000000000000000000000000000\n        /* \"#utility.yul\":8883:8884   */\n      0x00\n        /* \"#utility.yul\":8875:8881   */\n      dup3\n        /* \"#utility.yul\":8871:8885   */\n      add\n        /* \"#utility.yul\":8864:8906   */\n      mstore\n        /* \"#utility.yul\":8747:8913   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8919:9285   */\n    tag_453:\n        /* \"#utility.yul\":9061:9064   */\n      0x00\n        /* \"#utility.yul\":9082:9149   */\n      tag_578\n        /* \"#utility.yul\":9146:9148   */\n      0x10\n        /* \"#utility.yul\":9141:9144   */\n      dup4\n        /* \"#utility.yul\":9082:9149   */\n      tag_442\n      jump\t// in\n    tag_578:\n        /* \"#utility.yul\":9075:9149   */\n      swap2\n      pop\n        /* \"#utility.yul\":9158:9251   */\n      tag_579\n        /* \"#utility.yul\":9247:9250   */\n      dup3\n        /* \"#utility.yul\":9158:9251   */\n      tag_452\n      jump\t// in\n    tag_579:\n        /* \"#utility.yul\":9276:9278   */\n      0x20\n        /* \"#utility.yul\":9271:9274   */\n      dup3\n        /* \"#utility.yul\":9267:9279   */\n      add\n        /* \"#utility.yul\":9260:9279   */\n      swap1\n      pop\n        /* \"#utility.yul\":8919:9285   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9291:9710   */\n    tag_177:\n        /* \"#utility.yul\":9457:9461   */\n      0x00\n        /* \"#utility.yul\":9495:9497   */\n      0x20\n        /* \"#utility.yul\":9484:9493   */\n      dup3\n        /* \"#utility.yul\":9480:9498   */\n      add\n        /* \"#utility.yul\":9472:9498   */\n      swap1\n      pop\n        /* \"#utility.yul\":9544:9553   */\n      dup2\n        /* \"#utility.yul\":9538:9542   */\n      dup2\n        /* \"#utility.yul\":9534:9554   */\n      sub\n        /* \"#utility.yul\":9530:9531   */\n      0x00\n        /* \"#utility.yul\":9519:9528   */\n      dup4\n        /* \"#utility.yul\":9515:9532   */\n      add\n        /* \"#utility.yul\":9508:9555   */\n      mstore\n        /* \"#utility.yul\":9572:9703   */\n      tag_581\n        /* \"#utility.yul\":9698:9702   */\n      dup2\n        /* \"#utility.yul\":9572:9703   */\n      tag_453\n      jump\t// in\n    tag_581:\n        /* \"#utility.yul\":9564:9703   */\n      swap1\n      pop\n        /* \"#utility.yul\":9291:9710   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9716:9859   */\n    tag_454:\n        /* \"#utility.yul\":9773:9778   */\n      0x00\n        /* \"#utility.yul\":9804:9810   */\n      dup2\n        /* \"#utility.yul\":9798:9811   */\n      mload\n        /* \"#utility.yul\":9789:9811   */\n      swap1\n      pop\n        /* \"#utility.yul\":9820:9853   */\n      tag_583\n        /* \"#utility.yul\":9847:9852   */\n      dup2\n        /* \"#utility.yul\":9820:9853   */\n      tag_430\n      jump\t// in\n    tag_583:\n        /* \"#utility.yul\":9716:9859   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9865:10216   */\n    tag_183:\n        /* \"#utility.yul\":9935:9941   */\n      0x00\n        /* \"#utility.yul\":9984:9986   */\n      0x20\n        /* \"#utility.yul\":9972:9981   */\n      dup3\n        /* \"#utility.yul\":9963:9970   */\n      dup5\n        /* \"#utility.yul\":9959:9982   */\n      sub\n        /* \"#utility.yul\":9955:9987   */\n      slt\n        /* \"#utility.yul\":9952:10071   */\n      iszero\n      tag_585\n      jumpi\n        /* \"#utility.yul\":9990:10069   */\n      tag_586\n      tag_428\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":9952:10071   */\n    tag_585:\n        /* \"#utility.yul\":10110:10111   */\n      0x00\n        /* \"#utility.yul\":10135:10199   */\n      tag_587\n        /* \"#utility.yul\":10191:10198   */\n      dup5\n        /* \"#utility.yul\":10182:10188   */\n      dup3\n        /* \"#utility.yul\":10171:10180   */\n      dup6\n        /* \"#utility.yul\":10167:10189   */\n      add\n        /* \"#utility.yul\":10135:10199   */\n      tag_454\n      jump\t// in\n    tag_587:\n        /* \"#utility.yul\":10125:10199   */\n      swap2\n      pop\n        /* \"#utility.yul\":10081:10209   */\n      pop\n        /* \"#utility.yul\":9865:10216   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10222:10385   */\n    tag_455:\n        /* \"#utility.yul\":10362:10377   */\n      0x496e73756666696369656e742100000000000000000000000000000000000000\n        /* \"#utility.yul\":10358:10359   */\n      0x00\n        /* \"#utility.yul\":10350:10356   */\n      dup3\n        /* \"#utility.yul\":10346:10360   */\n      add\n        /* \"#utility.yul\":10339:10378   */\n      mstore\n        /* \"#utility.yul\":10222:10385   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10391:10757   */\n    tag_456:\n        /* \"#utility.yul\":10533:10536   */\n      0x00\n        /* \"#utility.yul\":10554:10621   */\n      tag_590\n        /* \"#utility.yul\":10618:10620   */\n      0x0d\n        /* \"#utility.yul\":10613:10616   */\n      dup4\n        /* \"#utility.yul\":10554:10621   */\n      tag_442\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":10547:10621   */\n      swap2\n      pop\n        /* \"#utility.yul\":10630:10723   */\n      tag_591\n        /* \"#utility.yul\":10719:10722   */\n      dup3\n        /* \"#utility.yul\":10630:10723   */\n      tag_455\n      jump\t// in\n    tag_591:\n        /* \"#utility.yul\":10748:10750   */\n      0x20\n        /* \"#utility.yul\":10743:10746   */\n      dup3\n        /* \"#utility.yul\":10739:10751   */\n      add\n        /* \"#utility.yul\":10732:10751   */\n      swap1\n      pop\n        /* \"#utility.yul\":10391:10757   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10763:11182   */\n    tag_221:\n        /* \"#utility.yul\":10929:10933   */\n      0x00\n        /* \"#utility.yul\":10967:10969   */\n      0x20\n        /* \"#utility.yul\":10956:10965   */\n      dup3\n        /* \"#utility.yul\":10952:10970   */\n      add\n        /* \"#utility.yul\":10944:10970   */\n      swap1\n      pop\n        /* \"#utility.yul\":11016:11025   */\n      dup2\n        /* \"#utility.yul\":11010:11014   */\n      dup2\n        /* \"#utility.yul\":11006:11026   */\n      sub\n        /* \"#utility.yul\":11002:11003   */\n      0x00\n        /* \"#utility.yul\":10991:11000   */\n      dup4\n        /* \"#utility.yul\":10987:11004   */\n      add\n        /* \"#utility.yul\":10980:11027   */\n      mstore\n        /* \"#utility.yul\":11044:11175   */\n      tag_593\n        /* \"#utility.yul\":11170:11174   */\n      dup2\n        /* \"#utility.yul\":11044:11175   */\n      tag_456\n      jump\t// in\n    tag_593:\n        /* \"#utility.yul\":11036:11175   */\n      swap1\n      pop\n        /* \"#utility.yul\":10763:11182   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11188:11353   */\n    tag_457:\n        /* \"#utility.yul\":11328:11345   */\n      0x416c726561647920737461727465640000000000000000000000000000000000\n        /* \"#utility.yul\":11324:11325   */\n      0x00\n        /* \"#utility.yul\":11316:11322   */\n      dup3\n        /* \"#utility.yul\":11312:11326   */\n      add\n        /* \"#utility.yul\":11305:11346   */\n      mstore\n        /* \"#utility.yul\":11188:11353   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11359:11725   */\n    tag_458:\n        /* \"#utility.yul\":11501:11504   */\n      0x00\n        /* \"#utility.yul\":11522:11589   */\n      tag_596\n        /* \"#utility.yul\":11586:11588   */\n      0x0f\n        /* \"#utility.yul\":11581:11584   */\n      dup4\n        /* \"#utility.yul\":11522:11589   */\n      tag_442\n      jump\t// in\n    tag_596:\n        /* \"#utility.yul\":11515:11589   */\n      swap2\n      pop\n        /* \"#utility.yul\":11598:11691   */\n      tag_597\n        /* \"#utility.yul\":11687:11690   */\n      dup3\n        /* \"#utility.yul\":11598:11691   */\n      tag_457\n      jump\t// in\n    tag_597:\n        /* \"#utility.yul\":11716:11718   */\n      0x20\n        /* \"#utility.yul\":11711:11714   */\n      dup3\n        /* \"#utility.yul\":11707:11719   */\n      add\n        /* \"#utility.yul\":11700:11719   */\n      swap1\n      pop\n        /* \"#utility.yul\":11359:11725   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11731:12150   */\n    tag_224:\n        /* \"#utility.yul\":11897:11901   */\n      0x00\n        /* \"#utility.yul\":11935:11937   */\n      0x20\n        /* \"#utility.yul\":11924:11933   */\n      dup3\n        /* \"#utility.yul\":11920:11938   */\n      add\n        /* \"#utility.yul\":11912:11938   */\n      swap1\n      pop\n        /* \"#utility.yul\":11984:11993   */\n      dup2\n        /* \"#utility.yul\":11978:11982   */\n      dup2\n        /* \"#utility.yul\":11974:11994   */\n      sub\n        /* \"#utility.yul\":11970:11971   */\n      0x00\n        /* \"#utility.yul\":11959:11968   */\n      dup4\n        /* \"#utility.yul\":11955:11972   */\n      add\n        /* \"#utility.yul\":11948:11995   */\n      mstore\n        /* \"#utility.yul\":12012:12143   */\n      tag_599\n        /* \"#utility.yul\":12138:12142   */\n      dup2\n        /* \"#utility.yul\":12012:12143   */\n      tag_458\n      jump\t// in\n    tag_599:\n        /* \"#utility.yul\":12004:12143   */\n      swap1\n      pop\n        /* \"#utility.yul\":11731:12150   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12156:12318   */\n    tag_459:\n        /* \"#utility.yul\":12296:12310   */\n      0x496e73756666696369656e740000000000000000000000000000000000000000\n        /* \"#utility.yul\":12292:12293   */\n      0x00\n        /* \"#utility.yul\":12284:12290   */\n      dup3\n        /* \"#utility.yul\":12280:12294   */\n      add\n        /* \"#utility.yul\":12273:12311   */\n      mstore\n        /* \"#utility.yul\":12156:12318   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12324:12690   */\n    tag_460:\n        /* \"#utility.yul\":12466:12469   */\n      0x00\n        /* \"#utility.yul\":12487:12554   */\n      tag_602\n        /* \"#utility.yul\":12551:12553   */\n      0x0c\n        /* \"#utility.yul\":12546:12549   */\n      dup4\n        /* \"#utility.yul\":12487:12554   */\n      tag_442\n      jump\t// in\n    tag_602:\n        /* \"#utility.yul\":12480:12554   */\n      swap2\n      pop\n        /* \"#utility.yul\":12563:12656   */\n      tag_603\n        /* \"#utility.yul\":12652:12655   */\n      dup3\n        /* \"#utility.yul\":12563:12656   */\n      tag_459\n      jump\t// in\n    tag_603:\n        /* \"#utility.yul\":12681:12683   */\n      0x20\n        /* \"#utility.yul\":12676:12679   */\n      dup3\n        /* \"#utility.yul\":12672:12684   */\n      add\n        /* \"#utility.yul\":12665:12684   */\n      swap1\n      pop\n        /* \"#utility.yul\":12324:12690   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12696:13115   */\n    tag_228:\n        /* \"#utility.yul\":12862:12866   */\n      0x00\n        /* \"#utility.yul\":12900:12902   */\n      0x20\n        /* \"#utility.yul\":12889:12898   */\n      dup3\n        /* \"#utility.yul\":12885:12903   */\n      add\n        /* \"#utility.yul\":12877:12903   */\n      swap1\n      pop\n        /* \"#utility.yul\":12949:12958   */\n      dup2\n        /* \"#utility.yul\":12943:12947   */\n      dup2\n        /* \"#utility.yul\":12939:12959   */\n      sub\n        /* \"#utility.yul\":12935:12936   */\n      0x00\n        /* \"#utility.yul\":12924:12933   */\n      dup4\n        /* \"#utility.yul\":12920:12937   */\n      add\n        /* \"#utility.yul\":12913:12960   */\n      mstore\n        /* \"#utility.yul\":12977:13108   */\n      tag_605\n        /* \"#utility.yul\":13103:13107   */\n      dup2\n        /* \"#utility.yul\":12977:13108   */\n      tag_460\n      jump\t// in\n    tag_605:\n        /* \"#utility.yul\":12969:13108   */\n      swap1\n      pop\n        /* \"#utility.yul\":12696:13115   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13121:13283   */\n    tag_461:\n        /* \"#utility.yul\":13261:13275   */\n      0x496e76616c6964204d6f64650000000000000000000000000000000000000000\n        /* \"#utility.yul\":13257:13258   */\n      0x00\n        /* \"#utility.yul\":13249:13255   */\n      dup3\n        /* \"#utility.yul\":13245:13259   */\n      add\n        /* \"#utility.yul\":13238:13276   */\n      mstore\n        /* \"#utility.yul\":13121:13283   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13289:13655   */\n    tag_462:\n        /* \"#utility.yul\":13431:13434   */\n      0x00\n        /* \"#utility.yul\":13452:13519   */\n      tag_608\n        /* \"#utility.yul\":13516:13518   */\n      0x0c\n        /* \"#utility.yul\":13511:13514   */\n      dup4\n        /* \"#utility.yul\":13452:13519   */\n      tag_442\n      jump\t// in\n    tag_608:\n        /* \"#utility.yul\":13445:13519   */\n      swap2\n      pop\n        /* \"#utility.yul\":13528:13621   */\n      tag_609\n        /* \"#utility.yul\":13617:13620   */\n      dup3\n        /* \"#utility.yul\":13528:13621   */\n      tag_461\n      jump\t// in\n    tag_609:\n        /* \"#utility.yul\":13646:13648   */\n      0x20\n        /* \"#utility.yul\":13641:13644   */\n      dup3\n        /* \"#utility.yul\":13637:13649   */\n      add\n        /* \"#utility.yul\":13630:13649   */\n      swap1\n      pop\n        /* \"#utility.yul\":13289:13655   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13661:14080   */\n    tag_244:\n        /* \"#utility.yul\":13827:13831   */\n      0x00\n        /* \"#utility.yul\":13865:13867   */\n      0x20\n        /* \"#utility.yul\":13854:13863   */\n      dup3\n        /* \"#utility.yul\":13850:13868   */\n      add\n        /* \"#utility.yul\":13842:13868   */\n      swap1\n      pop\n        /* \"#utility.yul\":13914:13923   */\n      dup2\n        /* \"#utility.yul\":13908:13912   */\n      dup2\n        /* \"#utility.yul\":13904:13924   */\n      sub\n        /* \"#utility.yul\":13900:13901   */\n      0x00\n        /* \"#utility.yul\":13889:13898   */\n      dup4\n        /* \"#utility.yul\":13885:13902   */\n      add\n        /* \"#utility.yul\":13878:13925   */\n      mstore\n        /* \"#utility.yul\":13942:14073   */\n      tag_611\n        /* \"#utility.yul\":14068:14072   */\n      dup2\n        /* \"#utility.yul\":13942:14073   */\n      tag_462\n      jump\t// in\n    tag_611:\n        /* \"#utility.yul\":13934:14073   */\n      swap1\n      pop\n        /* \"#utility.yul\":13661:14080   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14086:14259   */\n    tag_463:\n        /* \"#utility.yul\":14226:14251   */\n      0x496e76616c6964204c6f636b7570204475726174696f6e000000000000000000\n        /* \"#utility.yul\":14222:14223   */\n      0x00\n        /* \"#utility.yul\":14214:14220   */\n      dup3\n        /* \"#utility.yul\":14210:14224   */\n      add\n        /* \"#utility.yul\":14203:14252   */\n      mstore\n        /* \"#utility.yul\":14086:14259   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14265:14631   */\n    tag_464:\n        /* \"#utility.yul\":14407:14410   */\n      0x00\n        /* \"#utility.yul\":14428:14495   */\n      tag_614\n        /* \"#utility.yul\":14492:14494   */\n      0x17\n        /* \"#utility.yul\":14487:14490   */\n      dup4\n        /* \"#utility.yul\":14428:14495   */\n      tag_442\n      jump\t// in\n    tag_614:\n        /* \"#utility.yul\":14421:14495   */\n      swap2\n      pop\n        /* \"#utility.yul\":14504:14597   */\n      tag_615\n        /* \"#utility.yul\":14593:14596   */\n      dup3\n        /* \"#utility.yul\":14504:14597   */\n      tag_463\n      jump\t// in\n    tag_615:\n        /* \"#utility.yul\":14622:14624   */\n      0x20\n        /* \"#utility.yul\":14617:14620   */\n      dup3\n        /* \"#utility.yul\":14613:14625   */\n      add\n        /* \"#utility.yul\":14606:14625   */\n      swap1\n      pop\n        /* \"#utility.yul\":14265:14631   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14637:15056   */\n    tag_259:\n        /* \"#utility.yul\":14803:14807   */\n      0x00\n        /* \"#utility.yul\":14841:14843   */\n      0x20\n        /* \"#utility.yul\":14830:14839   */\n      dup3\n        /* \"#utility.yul\":14826:14844   */\n      add\n        /* \"#utility.yul\":14818:14844   */\n      swap1\n      pop\n        /* \"#utility.yul\":14890:14899   */\n      dup2\n        /* \"#utility.yul\":14884:14888   */\n      dup2\n        /* \"#utility.yul\":14880:14900   */\n      sub\n        /* \"#utility.yul\":14876:14877   */\n      0x00\n        /* \"#utility.yul\":14865:14874   */\n      dup4\n        /* \"#utility.yul\":14861:14878   */\n      add\n        /* \"#utility.yul\":14854:14901   */\n      mstore\n        /* \"#utility.yul\":14918:15049   */\n      tag_617\n        /* \"#utility.yul\":15044:15048   */\n      dup2\n        /* \"#utility.yul\":14918:15049   */\n      tag_464\n      jump\t// in\n    tag_617:\n        /* \"#utility.yul\":14910:15049   */\n      swap1\n      pop\n        /* \"#utility.yul\":14637:15056   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15062:15238   */\n    tag_465:\n        /* \"#utility.yul\":15202:15230   */\n      0x496e76616c696420556e7374616b696e67204665652052617465000000000000\n        /* \"#utility.yul\":15198:15199   */\n      0x00\n        /* \"#utility.yul\":15190:15196   */\n      dup3\n        /* \"#utility.yul\":15186:15200   */\n      add\n        /* \"#utility.yul\":15179:15231   */\n      mstore\n        /* \"#utility.yul\":15062:15238   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15244:15610   */\n    tag_466:\n        /* \"#utility.yul\":15386:15389   */\n      0x00\n        /* \"#utility.yul\":15407:15474   */\n      tag_620\n        /* \"#utility.yul\":15471:15473   */\n      0x1a\n        /* \"#utility.yul\":15466:15469   */\n      dup4\n        /* \"#utility.yul\":15407:15474   */\n      tag_442\n      jump\t// in\n    tag_620:\n        /* \"#utility.yul\":15400:15474   */\n      swap2\n      pop\n        /* \"#utility.yul\":15483:15576   */\n      tag_621\n        /* \"#utility.yul\":15572:15575   */\n      dup3\n        /* \"#utility.yul\":15483:15576   */\n      tag_465\n      jump\t// in\n    tag_621:\n        /* \"#utility.yul\":15601:15603   */\n      0x20\n        /* \"#utility.yul\":15596:15599   */\n      dup3\n        /* \"#utility.yul\":15592:15604   */\n      add\n        /* \"#utility.yul\":15585:15604   */\n      swap1\n      pop\n        /* \"#utility.yul\":15244:15610   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15616:16035   */\n    tag_290:\n        /* \"#utility.yul\":15782:15786   */\n      0x00\n        /* \"#utility.yul\":15820:15822   */\n      0x20\n        /* \"#utility.yul\":15809:15818   */\n      dup3\n        /* \"#utility.yul\":15805:15823   */\n      add\n        /* \"#utility.yul\":15797:15823   */\n      swap1\n      pop\n        /* \"#utility.yul\":15869:15878   */\n      dup2\n        /* \"#utility.yul\":15863:15867   */\n      dup2\n        /* \"#utility.yul\":15859:15879   */\n      sub\n        /* \"#utility.yul\":15855:15856   */\n      0x00\n        /* \"#utility.yul\":15844:15853   */\n      dup4\n        /* \"#utility.yul\":15840:15857   */\n      add\n        /* \"#utility.yul\":15833:15880   */\n      mstore\n        /* \"#utility.yul\":15897:16028   */\n      tag_623\n        /* \"#utility.yul\":16023:16027   */\n      dup2\n        /* \"#utility.yul\":15897:16028   */\n      tag_466\n      jump\t// in\n    tag_623:\n        /* \"#utility.yul\":15889:16028   */\n      swap1\n      pop\n        /* \"#utility.yul\":15616:16035   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16041:16204   */\n    tag_467:\n        /* \"#utility.yul\":16181:16196   */\n      0x496e76616c69642076616c756500000000000000000000000000000000000000\n        /* \"#utility.yul\":16177:16178   */\n      0x00\n        /* \"#utility.yul\":16169:16175   */\n      dup3\n        /* \"#utility.yul\":16165:16179   */\n      add\n        /* \"#utility.yul\":16158:16197   */\n      mstore\n        /* \"#utility.yul\":16041:16204   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16210:16576   */\n    tag_468:\n        /* \"#utility.yul\":16352:16355   */\n      0x00\n        /* \"#utility.yul\":16373:16440   */\n      tag_626\n        /* \"#utility.yul\":16437:16439   */\n      0x0d\n        /* \"#utility.yul\":16432:16435   */\n      dup4\n        /* \"#utility.yul\":16373:16440   */\n      tag_442\n      jump\t// in\n    tag_626:\n        /* \"#utility.yul\":16366:16440   */\n      swap2\n      pop\n        /* \"#utility.yul\":16449:16542   */\n      tag_627\n        /* \"#utility.yul\":16538:16541   */\n      dup3\n        /* \"#utility.yul\":16449:16542   */\n      tag_467\n      jump\t// in\n    tag_627:\n        /* \"#utility.yul\":16567:16569   */\n      0x20\n        /* \"#utility.yul\":16562:16565   */\n      dup3\n        /* \"#utility.yul\":16558:16570   */\n      add\n        /* \"#utility.yul\":16551:16570   */\n      swap1\n      pop\n        /* \"#utility.yul\":16210:16576   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16582:17001   */\n    tag_300:\n        /* \"#utility.yul\":16748:16752   */\n      0x00\n        /* \"#utility.yul\":16786:16788   */\n      0x20\n        /* \"#utility.yul\":16775:16784   */\n      dup3\n        /* \"#utility.yul\":16771:16789   */\n      add\n        /* \"#utility.yul\":16763:16789   */\n      swap1\n      pop\n        /* \"#utility.yul\":16835:16844   */\n      dup2\n        /* \"#utility.yul\":16829:16833   */\n      dup2\n        /* \"#utility.yul\":16825:16845   */\n      sub\n        /* \"#utility.yul\":16821:16822   */\n      0x00\n        /* \"#utility.yul\":16810:16819   */\n      dup4\n        /* \"#utility.yul\":16806:16823   */\n      add\n        /* \"#utility.yul\":16799:16846   */\n      mstore\n        /* \"#utility.yul\":16863:16994   */\n      tag_629\n        /* \"#utility.yul\":16989:16993   */\n      dup2\n        /* \"#utility.yul\":16863:16994   */\n      tag_468\n      jump\t// in\n    tag_629:\n        /* \"#utility.yul\":16855:16994   */\n      swap1\n      pop\n        /* \"#utility.yul\":16582:17001   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17007:17178   */\n    tag_469:\n        /* \"#utility.yul\":17147:17170   */\n      0x4572726f723a20696e76616c6964207374616b65720000000000000000000000\n        /* \"#utility.yul\":17143:17144   */\n      0x00\n        /* \"#utility.yul\":17135:17141   */\n      dup3\n        /* \"#utility.yul\":17131:17145   */\n      add\n        /* \"#utility.yul\":17124:17171   */\n      mstore\n        /* \"#utility.yul\":17007:17178   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17184:17550   */\n    tag_470:\n        /* \"#utility.yul\":17326:17329   */\n      0x00\n        /* \"#utility.yul\":17347:17414   */\n      tag_632\n        /* \"#utility.yul\":17411:17413   */\n      0x15\n        /* \"#utility.yul\":17406:17409   */\n      dup4\n        /* \"#utility.yul\":17347:17414   */\n      tag_442\n      jump\t// in\n    tag_632:\n        /* \"#utility.yul\":17340:17414   */\n      swap2\n      pop\n        /* \"#utility.yul\":17423:17516   */\n      tag_633\n        /* \"#utility.yul\":17512:17515   */\n      dup3\n        /* \"#utility.yul\":17423:17516   */\n      tag_469\n      jump\t// in\n    tag_633:\n        /* \"#utility.yul\":17541:17543   */\n      0x20\n        /* \"#utility.yul\":17536:17539   */\n      dup3\n        /* \"#utility.yul\":17532:17544   */\n      add\n        /* \"#utility.yul\":17525:17544   */\n      swap1\n      pop\n        /* \"#utility.yul\":17184:17550   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17556:17975   */\n    tag_314:\n        /* \"#utility.yul\":17722:17726   */\n      0x00\n        /* \"#utility.yul\":17760:17762   */\n      0x20\n        /* \"#utility.yul\":17749:17758   */\n      dup3\n        /* \"#utility.yul\":17745:17763   */\n      add\n        /* \"#utility.yul\":17737:17763   */\n      swap1\n      pop\n        /* \"#utility.yul\":17809:17818   */\n      dup2\n        /* \"#utility.yul\":17803:17807   */\n      dup2\n        /* \"#utility.yul\":17799:17819   */\n      sub\n        /* \"#utility.yul\":17795:17796   */\n      0x00\n        /* \"#utility.yul\":17784:17793   */\n      dup4\n        /* \"#utility.yul\":17780:17797   */\n      add\n        /* \"#utility.yul\":17773:17820   */\n      mstore\n        /* \"#utility.yul\":17837:17968   */\n      tag_635\n        /* \"#utility.yul\":17963:17967   */\n      dup2\n        /* \"#utility.yul\":17837:17968   */\n      tag_470\n      jump\t// in\n    tag_635:\n        /* \"#utility.yul\":17829:17968   */\n      swap1\n      pop\n        /* \"#utility.yul\":17556:17975   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17981:18206   */\n    tag_471:\n        /* \"#utility.yul\":18121:18155   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":18117:18118   */\n      0x00\n        /* \"#utility.yul\":18109:18115   */\n      dup3\n        /* \"#utility.yul\":18105:18119   */\n      add\n        /* \"#utility.yul\":18098:18156   */\n      mstore\n        /* \"#utility.yul\":18190:18198   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":18185:18187   */\n      0x20\n        /* \"#utility.yul\":18177:18183   */\n      dup3\n        /* \"#utility.yul\":18173:18188   */\n      add\n        /* \"#utility.yul\":18166:18199   */\n      mstore\n        /* \"#utility.yul\":17981:18206   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18212:18578   */\n    tag_472:\n        /* \"#utility.yul\":18354:18357   */\n      0x00\n        /* \"#utility.yul\":18375:18442   */\n      tag_638\n        /* \"#utility.yul\":18439:18441   */\n      0x26\n        /* \"#utility.yul\":18434:18437   */\n      dup4\n        /* \"#utility.yul\":18375:18442   */\n      tag_442\n      jump\t// in\n    tag_638:\n        /* \"#utility.yul\":18368:18442   */\n      swap2\n      pop\n        /* \"#utility.yul\":18451:18544   */\n      tag_639\n        /* \"#utility.yul\":18540:18543   */\n      dup3\n        /* \"#utility.yul\":18451:18544   */\n      tag_471\n      jump\t// in\n    tag_639:\n        /* \"#utility.yul\":18569:18571   */\n      0x40\n        /* \"#utility.yul\":18564:18567   */\n      dup3\n        /* \"#utility.yul\":18560:18572   */\n      add\n        /* \"#utility.yul\":18553:18572   */\n      swap1\n      pop\n        /* \"#utility.yul\":18212:18578   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18584:19003   */\n    tag_356:\n        /* \"#utility.yul\":18750:18754   */\n      0x00\n        /* \"#utility.yul\":18788:18790   */\n      0x20\n        /* \"#utility.yul\":18777:18786   */\n      dup3\n        /* \"#utility.yul\":18773:18791   */\n      add\n        /* \"#utility.yul\":18765:18791   */\n      swap1\n      pop\n        /* \"#utility.yul\":18837:18846   */\n      dup2\n        /* \"#utility.yul\":18831:18835   */\n      dup2\n        /* \"#utility.yul\":18827:18847   */\n      sub\n        /* \"#utility.yul\":18823:18824   */\n      0x00\n        /* \"#utility.yul\":18812:18821   */\n      dup4\n        /* \"#utility.yul\":18808:18825   */\n      add\n        /* \"#utility.yul\":18801:18848   */\n      mstore\n        /* \"#utility.yul\":18865:18996   */\n      tag_641\n        /* \"#utility.yul\":18991:18995   */\n      dup2\n        /* \"#utility.yul\":18865:18996   */\n      tag_472\n      jump\t// in\n    tag_641:\n        /* \"#utility.yul\":18857:18996   */\n      swap1\n      pop\n        /* \"#utility.yul\":18584:19003   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19009:19189   */\n    tag_473:\n        /* \"#utility.yul\":19057:19134   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":19054:19055   */\n      0x00\n        /* \"#utility.yul\":19047:19135   */\n      mstore\n        /* \"#utility.yul\":19154:19158   */\n      0x11\n        /* \"#utility.yul\":19151:19152   */\n      0x04\n        /* \"#utility.yul\":19144:19159   */\n      mstore\n        /* \"#utility.yul\":19178:19182   */\n      0x24\n        /* \"#utility.yul\":19175:19176   */\n      0x00\n        /* \"#utility.yul\":19168:19183   */\n      revert\n        /* \"#utility.yul\":19195:19386   */\n    tag_370:\n        /* \"#utility.yul\":19235:19239   */\n      0x00\n        /* \"#utility.yul\":19255:19275   */\n      tag_644\n        /* \"#utility.yul\":19273:19274   */\n      dup3\n        /* \"#utility.yul\":19255:19275   */\n      tag_425\n      jump\t// in\n    tag_644:\n        /* \"#utility.yul\":19250:19275   */\n      swap2\n      pop\n        /* \"#utility.yul\":19289:19309   */\n      tag_645\n        /* \"#utility.yul\":19307:19308   */\n      dup4\n        /* \"#utility.yul\":19289:19309   */\n      tag_425\n      jump\t// in\n    tag_645:\n        /* \"#utility.yul\":19284:19309   */\n      swap3\n      pop\n        /* \"#utility.yul\":19328:19329   */\n      dup3\n        /* \"#utility.yul\":19325:19326   */\n      dup3\n        /* \"#utility.yul\":19322:19330   */\n      lt\n        /* \"#utility.yul\":19319:19353   */\n      iszero\n      tag_646\n      jumpi\n        /* \"#utility.yul\":19333:19351   */\n      tag_647\n      tag_473\n      jump\t// in\n    tag_647:\n        /* \"#utility.yul\":19319:19353   */\n    tag_646:\n        /* \"#utility.yul\":19378:19379   */\n      dup3\n        /* \"#utility.yul\":19375:19376   */\n      dup3\n        /* \"#utility.yul\":19371:19380   */\n      sub\n        /* \"#utility.yul\":19363:19380   */\n      swap1\n      pop\n        /* \"#utility.yul\":19195:19386   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19392:19577   */\n    tag_373:\n        /* \"#utility.yul\":19432:19433   */\n      0x00\n        /* \"#utility.yul\":19449:19469   */\n      tag_649\n        /* \"#utility.yul\":19467:19468   */\n      dup3\n        /* \"#utility.yul\":19449:19469   */\n      tag_425\n      jump\t// in\n    tag_649:\n        /* \"#utility.yul\":19444:19469   */\n      swap2\n      pop\n        /* \"#utility.yul\":19483:19503   */\n      tag_650\n        /* \"#utility.yul\":19501:19502   */\n      dup4\n        /* \"#utility.yul\":19483:19503   */\n      tag_425\n      jump\t// in\n    tag_650:\n        /* \"#utility.yul\":19478:19503   */\n      swap3\n      pop\n        /* \"#utility.yul\":19522:19523   */\n      dup3\n        /* \"#utility.yul\":19512:19547   */\n      tag_651\n      jumpi\n        /* \"#utility.yul\":19527:19545   */\n      tag_652\n      tag_451\n      jump\t// in\n    tag_652:\n        /* \"#utility.yul\":19512:19547   */\n    tag_651:\n        /* \"#utility.yul\":19569:19570   */\n      dup3\n        /* \"#utility.yul\":19566:19567   */\n      dup3\n        /* \"#utility.yul\":19562:19571   */\n      div\n        /* \"#utility.yul\":19557:19571   */\n      swap1\n      pop\n        /* \"#utility.yul\":19392:19577   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19583:19888   */\n    tag_376:\n        /* \"#utility.yul\":19623:19626   */\n      0x00\n        /* \"#utility.yul\":19642:19662   */\n      tag_654\n        /* \"#utility.yul\":19660:19661   */\n      dup3\n        /* \"#utility.yul\":19642:19662   */\n      tag_425\n      jump\t// in\n    tag_654:\n        /* \"#utility.yul\":19637:19662   */\n      swap2\n      pop\n        /* \"#utility.yul\":19676:19696   */\n      tag_655\n        /* \"#utility.yul\":19694:19695   */\n      dup4\n        /* \"#utility.yul\":19676:19696   */\n      tag_425\n      jump\t// in\n    tag_655:\n        /* \"#utility.yul\":19671:19696   */\n      swap3\n      pop\n        /* \"#utility.yul\":19830:19831   */\n      dup3\n        /* \"#utility.yul\":19762:19828   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":19758:19832   */\n      sub\n        /* \"#utility.yul\":19755:19756   */\n      dup3\n        /* \"#utility.yul\":19752:19833   */\n      gt\n        /* \"#utility.yul\":19749:19856   */\n      iszero\n      tag_656\n      jumpi\n        /* \"#utility.yul\":19836:19854   */\n      tag_657\n      tag_473\n      jump\t// in\n    tag_657:\n        /* \"#utility.yul\":19749:19856   */\n    tag_656:\n        /* \"#utility.yul\":19880:19881   */\n      dup3\n        /* \"#utility.yul\":19877:19878   */\n      dup3\n        /* \"#utility.yul\":19873:19882   */\n      add\n        /* \"#utility.yul\":19866:19882   */\n      swap1\n      pop\n        /* \"#utility.yul\":19583:19888   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19894:20242   */\n    tag_379:\n        /* \"#utility.yul\":19934:19941   */\n      0x00\n        /* \"#utility.yul\":19957:19977   */\n      tag_659\n        /* \"#utility.yul\":19975:19976   */\n      dup3\n        /* \"#utility.yul\":19957:19977   */\n      tag_425\n      jump\t// in\n    tag_659:\n        /* \"#utility.yul\":19952:19977   */\n      swap2\n      pop\n        /* \"#utility.yul\":19991:20011   */\n      tag_660\n        /* \"#utility.yul\":20009:20010   */\n      dup4\n        /* \"#utility.yul\":19991:20011   */\n      tag_425\n      jump\t// in\n    tag_660:\n        /* \"#utility.yul\":19986:20011   */\n      swap3\n      pop\n        /* \"#utility.yul\":20179:20180   */\n      dup2\n        /* \"#utility.yul\":20111:20177   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":20107:20181   */\n      div\n        /* \"#utility.yul\":20104:20105   */\n      dup4\n        /* \"#utility.yul\":20101:20182   */\n      gt\n        /* \"#utility.yul\":20096:20097   */\n      dup3\n        /* \"#utility.yul\":20089:20098   */\n      iszero\n        /* \"#utility.yul\":20082:20099   */\n      iszero\n        /* \"#utility.yul\":20078:20183   */\n      and\n        /* \"#utility.yul\":20075:20206   */\n      iszero\n      tag_661\n      jumpi\n        /* \"#utility.yul\":20186:20204   */\n      tag_662\n      tag_473\n      jump\t// in\n    tag_662:\n        /* \"#utility.yul\":20075:20206   */\n    tag_661:\n        /* \"#utility.yul\":20234:20235   */\n      dup3\n        /* \"#utility.yul\":20231:20232   */\n      dup3\n        /* \"#utility.yul\":20227:20236   */\n      mul\n        /* \"#utility.yul\":20216:20236   */\n      swap1\n      pop\n        /* \"#utility.yul\":19894:20242   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20248:20690   */\n    tag_388:\n        /* \"#utility.yul\":20397:20401   */\n      0x00\n        /* \"#utility.yul\":20435:20437   */\n      0x60\n        /* \"#utility.yul\":20424:20433   */\n      dup3\n        /* \"#utility.yul\":20420:20438   */\n      add\n        /* \"#utility.yul\":20412:20438   */\n      swap1\n      pop\n        /* \"#utility.yul\":20448:20519   */\n      tag_664\n        /* \"#utility.yul\":20516:20517   */\n      0x00\n        /* \"#utility.yul\":20505:20514   */\n      dup4\n        /* \"#utility.yul\":20501:20518   */\n      add\n        /* \"#utility.yul\":20492:20498   */\n      dup7\n        /* \"#utility.yul\":20448:20519   */\n      tag_436\n      jump\t// in\n    tag_664:\n        /* \"#utility.yul\":20529:20601   */\n      tag_665\n        /* \"#utility.yul\":20597:20599   */\n      0x20\n        /* \"#utility.yul\":20586:20595   */\n      dup4\n        /* \"#utility.yul\":20582:20600   */\n      add\n        /* \"#utility.yul\":20573:20579   */\n      dup6\n        /* \"#utility.yul\":20529:20601   */\n      tag_436\n      jump\t// in\n    tag_665:\n        /* \"#utility.yul\":20611:20683   */\n      tag_666\n        /* \"#utility.yul\":20679:20681   */\n      0x40\n        /* \"#utility.yul\":20668:20677   */\n      dup4\n        /* \"#utility.yul\":20664:20682   */\n      add\n        /* \"#utility.yul\":20655:20661   */\n      dup5\n        /* \"#utility.yul\":20611:20683   */\n      tag_426\n      jump\t// in\n    tag_666:\n        /* \"#utility.yul\":20248:20690   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20696:20786   */\n    tag_474:\n        /* \"#utility.yul\":20730:20737   */\n      0x00\n        /* \"#utility.yul\":20773:20778   */\n      dup2\n        /* \"#utility.yul\":20766:20779   */\n      iszero\n        /* \"#utility.yul\":20759:20780   */\n      iszero\n        /* \"#utility.yul\":20748:20780   */\n      swap1\n      pop\n        /* \"#utility.yul\":20696:20786   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20792:20908   */\n    tag_475:\n        /* \"#utility.yul\":20862:20883   */\n      tag_669\n        /* \"#utility.yul\":20877:20882   */\n      dup2\n        /* \"#utility.yul\":20862:20883   */\n      tag_474\n      jump\t// in\n    tag_669:\n        /* \"#utility.yul\":20855:20860   */\n      dup2\n        /* \"#utility.yul\":20852:20884   */\n      eq\n        /* \"#utility.yul\":20842:20902   */\n      tag_670\n      jumpi\n        /* \"#utility.yul\":20898:20899   */\n      0x00\n        /* \"#utility.yul\":20895:20896   */\n      dup1\n        /* \"#utility.yul\":20888:20900   */\n      revert\n        /* \"#utility.yul\":20842:20902   */\n    tag_670:\n        /* \"#utility.yul\":20792:20908   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20914:21051   */\n    tag_476:\n        /* \"#utility.yul\":20968:20973   */\n      0x00\n        /* \"#utility.yul\":20999:21005   */\n      dup2\n        /* \"#utility.yul\":20993:21006   */\n      mload\n        /* \"#utility.yul\":20984:21006   */\n      swap1\n      pop\n        /* \"#utility.yul\":21015:21045   */\n      tag_672\n        /* \"#utility.yul\":21039:21044   */\n      dup2\n        /* \"#utility.yul\":21015:21045   */\n      tag_475\n      jump\t// in\n    tag_672:\n        /* \"#utility.yul\":20914:21051   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21057:21402   */\n    tag_394:\n        /* \"#utility.yul\":21124:21130   */\n      0x00\n        /* \"#utility.yul\":21173:21175   */\n      0x20\n        /* \"#utility.yul\":21161:21170   */\n      dup3\n        /* \"#utility.yul\":21152:21159   */\n      dup5\n        /* \"#utility.yul\":21148:21171   */\n      sub\n        /* \"#utility.yul\":21144:21176   */\n      slt\n        /* \"#utility.yul\":21141:21260   */\n      iszero\n      tag_674\n      jumpi\n        /* \"#utility.yul\":21179:21258   */\n      tag_675\n      tag_428\n      jump\t// in\n    tag_675:\n        /* \"#utility.yul\":21141:21260   */\n    tag_674:\n        /* \"#utility.yul\":21299:21300   */\n      0x00\n        /* \"#utility.yul\":21324:21385   */\n      tag_676\n        /* \"#utility.yul\":21377:21384   */\n      dup5\n        /* \"#utility.yul\":21368:21374   */\n      dup3\n        /* \"#utility.yul\":21357:21366   */\n      dup6\n        /* \"#utility.yul\":21353:21375   */\n      add\n        /* \"#utility.yul\":21324:21385   */\n      tag_476\n      jump\t// in\n    tag_676:\n        /* \"#utility.yul\":21314:21385   */\n      swap2\n      pop\n        /* \"#utility.yul\":21270:21395   */\n      pop\n        /* \"#utility.yul\":21057:21402   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21408:21637   */\n    tag_477:\n        /* \"#utility.yul\":21548:21582   */\n      0x5361666542455032303a204245503230206f7065726174696f6e20646964206e\n        /* \"#utility.yul\":21544:21545   */\n      0x00\n        /* \"#utility.yul\":21536:21542   */\n      dup3\n        /* \"#utility.yul\":21532:21546   */\n      add\n        /* \"#utility.yul\":21525:21583   */\n      mstore\n        /* \"#utility.yul\":21617:21629   */\n      0x6f74207375636365656400000000000000000000000000000000000000000000\n        /* \"#utility.yul\":21612:21614   */\n      0x20\n        /* \"#utility.yul\":21604:21610   */\n      dup3\n        /* \"#utility.yul\":21600:21615   */\n      add\n        /* \"#utility.yul\":21593:21630   */\n      mstore\n        /* \"#utility.yul\":21408:21637   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21643:22009   */\n    tag_478:\n        /* \"#utility.yul\":21785:21788   */\n      0x00\n        /* \"#utility.yul\":21806:21873   */\n      tag_679\n        /* \"#utility.yul\":21870:21872   */\n      0x2a\n        /* \"#utility.yul\":21865:21868   */\n      dup4\n        /* \"#utility.yul\":21806:21873   */\n      tag_442\n      jump\t// in\n    tag_679:\n        /* \"#utility.yul\":21799:21873   */\n      swap2\n      pop\n        /* \"#utility.yul\":21882:21975   */\n      tag_680\n        /* \"#utility.yul\":21971:21974   */\n      dup3\n        /* \"#utility.yul\":21882:21975   */\n      tag_477\n      jump\t// in\n    tag_680:\n        /* \"#utility.yul\":22000:22002   */\n      0x40\n        /* \"#utility.yul\":21995:21998   */\n      dup3\n        /* \"#utility.yul\":21991:22003   */\n      add\n        /* \"#utility.yul\":21984:22003   */\n      swap1\n      pop\n        /* \"#utility.yul\":21643:22009   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22015:22434   */\n    tag_397:\n        /* \"#utility.yul\":22181:22185   */\n      0x00\n        /* \"#utility.yul\":22219:22221   */\n      0x20\n        /* \"#utility.yul\":22208:22217   */\n      dup3\n        /* \"#utility.yul\":22204:22222   */\n      add\n        /* \"#utility.yul\":22196:22222   */\n      swap1\n      pop\n        /* \"#utility.yul\":22268:22277   */\n      dup2\n        /* \"#utility.yul\":22262:22266   */\n      dup2\n        /* \"#utility.yul\":22258:22278   */\n      sub\n        /* \"#utility.yul\":22254:22255   */\n      0x00\n        /* \"#utility.yul\":22243:22252   */\n      dup4\n        /* \"#utility.yul\":22239:22256   */\n      add\n        /* \"#utility.yul\":22232:22279   */\n      mstore\n        /* \"#utility.yul\":22296:22427   */\n      tag_682\n        /* \"#utility.yul\":22422:22426   */\n      dup2\n        /* \"#utility.yul\":22296:22427   */\n      tag_478\n      jump\t// in\n    tag_682:\n        /* \"#utility.yul\":22288:22427   */\n      swap1\n      pop\n        /* \"#utility.yul\":22015:22434   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22440:22665   */\n    tag_479:\n        /* \"#utility.yul\":22580:22614   */\n      0x416464726573733a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":22576:22577   */\n      0x00\n        /* \"#utility.yul\":22568:22574   */\n      dup3\n        /* \"#utility.yul\":22564:22578   */\n      add\n        /* \"#utility.yul\":22557:22615   */\n      mstore\n        /* \"#utility.yul\":22649:22657   */\n      0x722063616c6c0000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":22644:22646   */\n      0x20\n        /* \"#utility.yul\":22636:22642   */\n      dup3\n        /* \"#utility.yul\":22632:22647   */\n      add\n        /* \"#utility.yul\":22625:22658   */\n      mstore\n        /* \"#utility.yul\":22440:22665   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22671:23037   */\n    tag_480:\n        /* \"#utility.yul\":22813:22816   */\n      0x00\n        /* \"#utility.yul\":22834:22901   */\n      tag_685\n        /* \"#utility.yul\":22898:22900   */\n      0x26\n        /* \"#utility.yul\":22893:22896   */\n      dup4\n        /* \"#utility.yul\":22834:22901   */\n      tag_442\n      jump\t// in\n    tag_685:\n        /* \"#utility.yul\":22827:22901   */\n      swap2\n      pop\n        /* \"#utility.yul\":22910:23003   */\n      tag_686\n        /* \"#utility.yul\":22999:23002   */\n      dup3\n        /* \"#utility.yul\":22910:23003   */\n      tag_479\n      jump\t// in\n    tag_686:\n        /* \"#utility.yul\":23028:23030   */\n      0x40\n        /* \"#utility.yul\":23023:23026   */\n      dup3\n        /* \"#utility.yul\":23019:23031   */\n      add\n        /* \"#utility.yul\":23012:23031   */\n      swap1\n      pop\n        /* \"#utility.yul\":22671:23037   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23043:23462   */\n    tag_404:\n        /* \"#utility.yul\":23209:23213   */\n      0x00\n        /* \"#utility.yul\":23247:23249   */\n      0x20\n        /* \"#utility.yul\":23236:23245   */\n      dup3\n        /* \"#utility.yul\":23232:23250   */\n      add\n        /* \"#utility.yul\":23224:23250   */\n      swap1\n      pop\n        /* \"#utility.yul\":23296:23305   */\n      dup2\n        /* \"#utility.yul\":23290:23294   */\n      dup2\n        /* \"#utility.yul\":23286:23306   */\n      sub\n        /* \"#utility.yul\":23282:23283   */\n      0x00\n        /* \"#utility.yul\":23271:23280   */\n      dup4\n        /* \"#utility.yul\":23267:23284   */\n      add\n        /* \"#utility.yul\":23260:23307   */\n      mstore\n        /* \"#utility.yul\":23324:23455   */\n      tag_688\n        /* \"#utility.yul\":23450:23454   */\n      dup2\n        /* \"#utility.yul\":23324:23455   */\n      tag_480\n      jump\t// in\n    tag_688:\n        /* \"#utility.yul\":23316:23455   */\n      swap1\n      pop\n        /* \"#utility.yul\":23043:23462   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23468:23647   */\n    tag_481:\n        /* \"#utility.yul\":23608:23639   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":23604:23605   */\n      0x00\n        /* \"#utility.yul\":23596:23602   */\n      dup3\n        /* \"#utility.yul\":23592:23606   */\n      add\n        /* \"#utility.yul\":23585:23640   */\n      mstore\n        /* \"#utility.yul\":23468:23647   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23653:24019   */\n    tag_482:\n        /* \"#utility.yul\":23795:23798   */\n      0x00\n        /* \"#utility.yul\":23816:23883   */\n      tag_691\n        /* \"#utility.yul\":23880:23882   */\n      0x1d\n        /* \"#utility.yul\":23875:23878   */\n      dup4\n        /* \"#utility.yul\":23816:23883   */\n      tag_442\n      jump\t// in\n    tag_691:\n        /* \"#utility.yul\":23809:23883   */\n      swap2\n      pop\n        /* \"#utility.yul\":23892:23985   */\n      tag_692\n        /* \"#utility.yul\":23981:23984   */\n      dup3\n        /* \"#utility.yul\":23892:23985   */\n      tag_481\n      jump\t// in\n    tag_692:\n        /* \"#utility.yul\":24010:24012   */\n      0x20\n        /* \"#utility.yul\":24005:24008   */\n      dup3\n        /* \"#utility.yul\":24001:24013   */\n      add\n        /* \"#utility.yul\":23994:24013   */\n      swap1\n      pop\n        /* \"#utility.yul\":23653:24019   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24025:24444   */\n    tag_409:\n        /* \"#utility.yul\":24191:24195   */\n      0x00\n        /* \"#utility.yul\":24229:24231   */\n      0x20\n        /* \"#utility.yul\":24218:24227   */\n      dup3\n        /* \"#utility.yul\":24214:24232   */\n      add\n        /* \"#utility.yul\":24206:24232   */\n      swap1\n      pop\n        /* \"#utility.yul\":24278:24287   */\n      dup2\n        /* \"#utility.yul\":24272:24276   */\n      dup2\n        /* \"#utility.yul\":24268:24288   */\n      sub\n        /* \"#utility.yul\":24264:24265   */\n      0x00\n        /* \"#utility.yul\":24253:24262   */\n      dup4\n        /* \"#utility.yul\":24249:24266   */\n      add\n        /* \"#utility.yul\":24242:24289   */\n      mstore\n        /* \"#utility.yul\":24306:24437   */\n      tag_694\n        /* \"#utility.yul\":24432:24436   */\n      dup2\n        /* \"#utility.yul\":24306:24437   */\n      tag_482\n      jump\t// in\n    tag_694:\n        /* \"#utility.yul\":24298:24437   */\n      swap1\n      pop\n        /* \"#utility.yul\":24025:24444   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24450:24548   */\n    tag_483:\n        /* \"#utility.yul\":24501:24507   */\n      0x00\n        /* \"#utility.yul\":24535:24540   */\n      dup2\n        /* \"#utility.yul\":24529:24541   */\n      mload\n        /* \"#utility.yul\":24519:24541   */\n      swap1\n      pop\n        /* \"#utility.yul\":24450:24548   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24554:24701   */\n    tag_484:\n        /* \"#utility.yul\":24655:24666   */\n      0x00\n        /* \"#utility.yul\":24692:24695   */\n      dup2\n        /* \"#utility.yul\":24677:24695   */\n      swap1\n      pop\n        /* \"#utility.yul\":24554:24701   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24707:25014   */\n    tag_485:\n        /* \"#utility.yul\":24775:24776   */\n      0x00\n        /* \"#utility.yul\":24785:24898   */\n    tag_698:\n        /* \"#utility.yul\":24799:24805   */\n      dup4\n        /* \"#utility.yul\":24796:24797   */\n      dup2\n        /* \"#utility.yul\":24793:24806   */\n      lt\n        /* \"#utility.yul\":24785:24898   */\n      iszero\n      tag_700\n      jumpi\n        /* \"#utility.yul\":24884:24885   */\n      dup1\n        /* \"#utility.yul\":24879:24882   */\n      dup3\n        /* \"#utility.yul\":24875:24886   */\n      add\n        /* \"#utility.yul\":24869:24887   */\n      mload\n        /* \"#utility.yul\":24865:24866   */\n      dup2\n        /* \"#utility.yul\":24860:24863   */\n      dup5\n        /* \"#utility.yul\":24856:24867   */\n      add\n        /* \"#utility.yul\":24849:24888   */\n      mstore\n        /* \"#utility.yul\":24821:24823   */\n      0x20\n        /* \"#utility.yul\":24818:24819   */\n      dup2\n        /* \"#utility.yul\":24814:24824   */\n      add\n        /* \"#utility.yul\":24809:24824   */\n      swap1\n      pop\n        /* \"#utility.yul\":24785:24898   */\n      jump(tag_698)\n    tag_700:\n        /* \"#utility.yul\":24916:24922   */\n      dup4\n        /* \"#utility.yul\":24913:24914   */\n      dup2\n        /* \"#utility.yul\":24910:24923   */\n      gt\n        /* \"#utility.yul\":24907:25008   */\n      iszero\n      tag_701\n      jumpi\n        /* \"#utility.yul\":24996:24997   */\n      0x00\n        /* \"#utility.yul\":24987:24993   */\n      dup5\n        /* \"#utility.yul\":24982:24985   */\n      dup5\n        /* \"#utility.yul\":24978:24994   */\n      add\n        /* \"#utility.yul\":24971:24998   */\n      mstore\n        /* \"#utility.yul\":24907:25008   */\n    tag_701:\n        /* \"#utility.yul\":24756:25014   */\n      pop\n        /* \"#utility.yul\":24707:25014   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25020:25393   */\n    tag_486:\n        /* \"#utility.yul\":25124:25127   */\n      0x00\n        /* \"#utility.yul\":25152:25190   */\n      tag_703\n        /* \"#utility.yul\":25184:25189   */\n      dup3\n        /* \"#utility.yul\":25152:25190   */\n      tag_483\n      jump\t// in\n    tag_703:\n        /* \"#utility.yul\":25206:25294   */\n      tag_704\n        /* \"#utility.yul\":25287:25293   */\n      dup2\n        /* \"#utility.yul\":25282:25285   */\n      dup6\n        /* \"#utility.yul\":25206:25294   */\n      tag_484\n      jump\t// in\n    tag_704:\n        /* \"#utility.yul\":25199:25294   */\n      swap4\n      pop\n        /* \"#utility.yul\":25303:25355   */\n      tag_705\n        /* \"#utility.yul\":25348:25354   */\n      dup2\n        /* \"#utility.yul\":25343:25346   */\n      dup6\n        /* \"#utility.yul\":25336:25340   */\n      0x20\n        /* \"#utility.yul\":25329:25334   */\n      dup7\n        /* \"#utility.yul\":25325:25341   */\n      add\n        /* \"#utility.yul\":25303:25355   */\n      tag_485\n      jump\t// in\n    tag_705:\n        /* \"#utility.yul\":25380:25386   */\n      dup1\n        /* \"#utility.yul\":25375:25378   */\n      dup5\n        /* \"#utility.yul\":25371:25387   */\n      add\n        /* \"#utility.yul\":25364:25387   */\n      swap2\n      pop\n        /* \"#utility.yul\":25128:25393   */\n      pop\n        /* \"#utility.yul\":25020:25393   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25399:25670   */\n    tag_411:\n        /* \"#utility.yul\":25529:25532   */\n      0x00\n        /* \"#utility.yul\":25551:25644   */\n      tag_707\n        /* \"#utility.yul\":25640:25643   */\n      dup3\n        /* \"#utility.yul\":25631:25637   */\n      dup5\n        /* \"#utility.yul\":25551:25644   */\n      tag_486\n      jump\t// in\n    tag_707:\n        /* \"#utility.yul\":25544:25644   */\n      swap2\n      pop\n        /* \"#utility.yul\":25661:25664   */\n      dup2\n        /* \"#utility.yul\":25654:25664   */\n      swap1\n      pop\n        /* \"#utility.yul\":25399:25670   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25676:25775   */\n    tag_487:\n        /* \"#utility.yul\":25728:25734   */\n      0x00\n        /* \"#utility.yul\":25762:25767   */\n      dup2\n        /* \"#utility.yul\":25756:25768   */\n      mload\n        /* \"#utility.yul\":25746:25768   */\n      swap1\n      pop\n        /* \"#utility.yul\":25676:25775   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25781:25883   */\n    tag_488:\n        /* \"#utility.yul\":25822:25828   */\n      0x00\n        /* \"#utility.yul\":25873:25875   */\n      0x1f\n        /* \"#utility.yul\":25869:25876   */\n      not\n        /* \"#utility.yul\":25864:25866   */\n      0x1f\n        /* \"#utility.yul\":25857:25862   */\n      dup4\n        /* \"#utility.yul\":25853:25867   */\n      add\n        /* \"#utility.yul\":25849:25877   */\n      and\n        /* \"#utility.yul\":25839:25877   */\n      swap1\n      pop\n        /* \"#utility.yul\":25781:25883   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25889:26253   */\n    tag_489:\n        /* \"#utility.yul\":25977:25980   */\n      0x00\n        /* \"#utility.yul\":26005:26044   */\n      tag_711\n        /* \"#utility.yul\":26038:26043   */\n      dup3\n        /* \"#utility.yul\":26005:26044   */\n      tag_487\n      jump\t// in\n    tag_711:\n        /* \"#utility.yul\":26060:26131   */\n      tag_712\n        /* \"#utility.yul\":26124:26130   */\n      dup2\n        /* \"#utility.yul\":26119:26122   */\n      dup6\n        /* \"#utility.yul\":26060:26131   */\n      tag_442\n      jump\t// in\n    tag_712:\n        /* \"#utility.yul\":26053:26131   */\n      swap4\n      pop\n        /* \"#utility.yul\":26140:26192   */\n      tag_713\n        /* \"#utility.yul\":26185:26191   */\n      dup2\n        /* \"#utility.yul\":26180:26183   */\n      dup6\n        /* \"#utility.yul\":26173:26177   */\n      0x20\n        /* \"#utility.yul\":26166:26171   */\n      dup7\n        /* \"#utility.yul\":26162:26178   */\n      add\n        /* \"#utility.yul\":26140:26192   */\n      tag_485\n      jump\t// in\n    tag_713:\n        /* \"#utility.yul\":26217:26246   */\n      tag_714\n        /* \"#utility.yul\":26239:26245   */\n      dup2\n        /* \"#utility.yul\":26217:26246   */\n      tag_488\n      jump\t// in\n    tag_714:\n        /* \"#utility.yul\":26212:26215   */\n      dup5\n        /* \"#utility.yul\":26208:26247   */\n      add\n        /* \"#utility.yul\":26201:26247   */\n      swap2\n      pop\n        /* \"#utility.yul\":25981:26253   */\n      pop\n        /* \"#utility.yul\":25889:26253   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26259:26572   */\n    tag_424:\n        /* \"#utility.yul\":26372:26376   */\n      0x00\n        /* \"#utility.yul\":26410:26412   */\n      0x20\n        /* \"#utility.yul\":26399:26408   */\n      dup3\n        /* \"#utility.yul\":26395:26413   */\n      add\n        /* \"#utility.yul\":26387:26413   */\n      swap1\n      pop\n        /* \"#utility.yul\":26459:26468   */\n      dup2\n        /* \"#utility.yul\":26453:26457   */\n      dup2\n        /* \"#utility.yul\":26449:26469   */\n      sub\n        /* \"#utility.yul\":26445:26446   */\n      0x00\n        /* \"#utility.yul\":26434:26443   */\n      dup4\n        /* \"#utility.yul\":26430:26447   */\n      add\n        /* \"#utility.yul\":26423:26470   */\n      mstore\n        /* \"#utility.yul\":26487:26565   */\n      tag_716\n        /* \"#utility.yul\":26560:26564   */\n      dup2\n        /* \"#utility.yul\":26551:26557   */\n      dup5\n        /* \"#utility.yul\":26487:26565   */\n      tag_489\n      jump\t// in\n    tag_716:\n        /* \"#utility.yul\":26479:26565   */\n      swap1\n      pop\n        /* \"#utility.yul\":26259:26572   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220cdea9b3ef1c60a0b095439f624d2aa1d64d8fa8e48a702d9133a1bddc93a5bdd64736f6c63430008090033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@Init_1280": {
									"entryPoint": 379,
									"id": 1280,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_1234": {
									"entryPoint": null,
									"id": 1234,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_489": {
									"entryPoint": 175,
									"id": 489,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_103": {
									"entryPoint": 183,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 580,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 603,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 534,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 502,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 497,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 554,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1199:8",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:8",
														"type": ""
													}
												],
												"src": "7:75:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:8",
														"type": ""
													}
												],
												"src": "334:126:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:8",
														"type": ""
													}
												],
												"src": "466:96:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:8"
															},
															"nodeType": "YulIf",
															"src": "621:63:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:8",
														"type": ""
													}
												],
												"src": "568:122:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:8"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:8",
														"type": ""
													}
												],
												"src": "696:143:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "922:274:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "968:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "964:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "935:32:8"
															},
															"nodeType": "YulIf",
															"src": "932:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "1061:128:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1105:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "892:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "903:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "915:6:8",
														"type": ""
													}
												],
												"src": "845:351:8"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b50604051620036dd380380620036dd83398181016040528101906200003791906200025b565b620000576200004b620000af60201b60201c565b620000b760201b60201c565b620000676200017b60201b60201c565b80600d60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200028d565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60c86003819055506105dc600181905550606460048190555062093a806002819055506276a7006005819055506a027b46536c66c8e300000060068190555069d3c21bcecceda10000006009819055506a027b46536c66c8e30000006008819055506a05ca4ec2a79a7f67000000600781905550565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200022382620001f6565b9050919050565b620002358162000216565b81146200024157600080fd5b50565b60008151905062000255816200022a565b92915050565b600060208284031215620002745762000273620001f1565b5b6000620002848482850162000244565b91505092915050565b613440806200029d6000396000f3fe608060405234801561001057600080fd5b50600436106101a95760003560e01c8063817b1cd2116100f9578063aedf562b11610097578063f2fde38b11610071578063f2fde38b1461046a578063f993185514610486578063fc0c546a146104b6578063fe600f84146104d4576101a9565b8063aedf562b14610402578063c1704a1414610432578063c665d80e1461044e576101a9565b806391e07e7a116100d357806391e07e7a146103925780639e447fc6146103ae578063a694fc3a146103ca578063ae544943146103e6576101a9565b8063817b1cd2146103265780638da5cb5b14610344578063909f093e14610362576101a9565b80634b77dd9e11610166578063645a8a5611610140578063645a8a56146102b2578063692642e7146102e2578063715018a6146102fe5780637e1a378614610308576101a9565b80634b77dd9e1461025a5780635715ec11146102765780635d2ec65d14610294576101a9565b80630917e776146101ae57806323b61117146101cc5780632e1a7d4d146101e85780634641257d146102045780634a4fbeec1461020e5780634b62b70b1461023e575b600080fd5b6101b6610504565b6040516101c391906126c0565b60405180910390f35b6101e660048036038101906101e1919061270c565b61050e565b005b61020260048036038101906101fd919061270c565b6105d7565b005b61020c610974565b005b61022860048036038101906102239190612797565b610cb3565b60405161023591906126c0565b60405180910390f35b6102586004803603810190610253919061270c565b610e43565b005b610274600480360381019061026f91906127c4565b610f0c565b005b61027e61139a565b60405161028b91906126c0565b60405180910390f35b61029c6113a7565b6040516102a991906126c0565b60405180910390f35b6102cc60048036038101906102c79190612797565b6113f9565b6040516102d991906126c0565b60405180910390f35b6102fc60048036038101906102f7919061270c565b611445565b005b61030661155a565b005b6103106115e2565b60405161031d91906126c0565b60405180910390f35b61032e6115ec565b60405161033b91906126c0565b60405180910390f35b61034c6115f2565b6040516103599190612813565b60405180910390f35b61037c6004803603810190610377919061270c565b61161b565b60405161038991906126c0565b60405180910390f35b6103ac60048036038101906103a7919061270c565b6116b6565b005b6103c860048036038101906103c3919061270c565b6117b6565b005b6103e460048036038101906103df919061270c565b6118b6565b005b61040060048036038101906103fb919061270c565b611bb3565b005b61041c60048036038101906104179190612797565b611c7c565b60405161042991906126c0565b60405180910390f35b61044c6004803603810190610447919061270c565b611cdb565b005b6104686004803603810190610463919061270c565b611da4565b005b610484600480360381019061047f9190612797565b611e6d565b005b6104a0600480360381019061049b9190612797565b611f65565b6040516104ad91906126c0565b60405180910390f35b6104be611fb1565b6040516104cb919061288d565b60405180910390f35b6104ee60048036038101906104e99190612797565b611fd7565b6040516104fb91906126c0565b60405180910390f35b6000600c54905090565b610516612023565b73ffffffffffffffffffffffffffffffffffffffff166105346115f2565b73ffffffffffffffffffffffffffffffffffffffff161461058a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058190612905565b60405180910390fd5b600081116105cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c490612971565b60405180910390fd5b8060088190555050565b6000811161061a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610611906129dd565b60405180910390fd5b600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015481111561069f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069690612a49565b60405180910390fd5b6106a761202b565b600081905060006107186201518061070a600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030154426121ff90919063ffffffff16565b61221590919063ffffffff16565b9050600060649050600080600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002015414156107cb576107c3600554600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003015461222b90919063ffffffff16565b4210156107e9565b6000600254846107db9190612a98565b1480156107e85750600083115b5b9050806107f65760015491505b61084b84600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101546121ff90919063ffffffff16565b600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055506108a684600c546121ff90919063ffffffff16565b600c819055506108e56108d66127106108c8858861224190919063ffffffff16565b61221590919063ffffffff16565b856121ff90919063ffffffff16565b93506109343385600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166122579092919063ffffffff16565b7f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a94243643385604051610965929190612ac9565b60405180910390a15050505050565b61097c61202b565b6000610a3d6109ec6127106109de600454600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015461224190919063ffffffff16565b61221590919063ffffffff16565b600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001546121ff90919063ffffffff16565b905060008111610a82576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a7990612b3e565b60405180910390fd5b600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610add9190612813565b60206040518083038186803b158015610af557600080fd5b505afa158015610b09573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b2d9190612b73565b811115610be257600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610b8f9190612813565b60206040518083038186803b158015610ba757600080fd5b505afa158015610bbb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bdf9190612b73565b90505b610c2f3382600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166122579092919063ffffffff16565b6000600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055507fc9695243a805adb74c91f28311176c65b417e842d5699893cef56d18bfa48cba3382604051610ca8929190612ac9565b60405180910390a150565b60006055600b60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206005015414610d085760019050610e3e565b6000600b60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002015414610dd057600062093a80610dad600b60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030154426121ff90919063ffffffff16565b610db79190612a98565b14610dc3576001610dc6565b60005b60ff169050610e3e565b600554610e28600b60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030154426121ff90919063ffffffff16565b1015610e35576001610e38565b60005b60ff1690505b919050565b610e4b612023565b73ffffffffffffffffffffffffffffffffffffffff16610e696115f2565b73ffffffffffffffffffffffffffffffffffffffff1614610ebf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eb690612905565b60405180910390fd5b60008111610f02576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ef990612971565b60405180910390fd5b8060058190555050565b60008211610f4f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f46906129dd565b60405180910390fd5b81600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401610fab9190612813565b60206040518083038186803b158015610fc357600080fd5b505afa158015610fd7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ffb9190612b73565b1161103b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161103290612bec565b60405180910390fd5b6055600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206005015414156110c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110b890612c58565b60405180910390fd5b60008114156111145760065482101561110f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161110690612cc4565b60405180910390fd5b611254565b600181141561116757600954821015611162576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161115990612cc4565b60405180910390fd5b611253565b60028114156111ba576008548210156111b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111ac90612cc4565b60405180910390fd5b611252565b600381141561120d57600754821015611208576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111ff90612cc4565b60405180910390fd5b611251565b60008210611250576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161124790612d30565b60405180910390fd5b5b5b5b5b80600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018190555042600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301819055506055600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060050181905550600a339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611396826118b6565b5050565b6000600a80549050905090565b60006113b161202b565b600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154905090565b6000600b60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001549050919050565b61144d612023565b73ffffffffffffffffffffffffffffffffffffffff1661146b6115f2565b73ffffffffffffffffffffffffffffffffffffffff16146114c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114b890612905565b60405180910390fd5b60008111611504576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114fb90612d9c565b60405180910390fd5b61151a620151808261224190919063ffffffff16565b6002819055507f189bda9782663c67a3f95c0aa5455924c711210b00281c60ead2f0dd8dbc924c8160405161154f91906126c0565b60405180910390a150565b611562612023565b73ffffffffffffffffffffffffffffffffffffffff166115806115f2565b73ffffffffffffffffffffffffffffffffffffffff16146115d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115cd90612905565b60405180910390fd5b6115e060006122dd565b565b6000600354905090565b600c5481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000806000905060008314806116315750600283145b156116405760065490506116ad565b60018314156116535760095490506116ac565b60038314156116665760075490506116ab565b60016000116116aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116a190612d30565b60405180910390fd5b5b5b5b80915050919050565b6116be612023565b73ffffffffffffffffffffffffffffffffffffffff166116dc6115f2565b73ffffffffffffffffffffffffffffffffffffffff1614611732576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161172990612905565b60405180910390fd5b60008111611775576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161176c90612e08565b60405180910390fd5b806001819055507f150c688dd7595bf7862b8ab1fe46756450eb7d731037942b3bbc46f3f0e21b81816040516117ab91906126c0565b60405180910390a150565b6117be612023565b73ffffffffffffffffffffffffffffffffffffffff166117dc6115f2565b73ffffffffffffffffffffffffffffffffffffffff1614611832576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161182990612905565b60405180910390fd5b60008111611875576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161186c90612e74565b60405180910390fd5b806003819055507f1946fb78c7ca778b54d82cabaac5ba67cf446f58d0ff1f8ceaebb6150e54e44f816040516118ab91906126c0565b60405180910390a150565b600081116118f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118f0906129dd565b60405180910390fd5b80600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016119559190612813565b60206040518083038186803b15801561196d57600080fd5b505afa158015611981573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119a59190612b73565b116119e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119dc90612bec565b60405180910390fd5b6055600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206005015414611a6a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a6190612ee0565b60405180910390fd5b611a7261202b565b611ac1333083600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166123a1909392919063ffffffff16565b611b1681600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015461222b90919063ffffffff16565b600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010181905550611b7181600c5461222b90919063ffffffff16565b600c819055507f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d3382604051611ba8929190612ac9565b60405180910390a150565b611bbb612023565b73ffffffffffffffffffffffffffffffffffffffff16611bd96115f2565b73ffffffffffffffffffffffffffffffffffffffff1614611c2f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c2690612905565b60405180910390fd5b60008111611c72576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c6990612971565b60405180910390fd5b8060078190555050565b600080600b60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002015414611cce576001611cd1565b60005b60ff169050919050565b611ce3612023565b73ffffffffffffffffffffffffffffffffffffffff16611d016115f2565b73ffffffffffffffffffffffffffffffffffffffff1614611d57576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d4e90612905565b60405180910390fd5b60008111611d9a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d9190612971565b60405180910390fd5b8060098190555050565b611dac612023565b73ffffffffffffffffffffffffffffffffffffffff16611dca6115f2565b73ffffffffffffffffffffffffffffffffffffffff1614611e20576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e1790612905565b60405180910390fd5b60008111611e63576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e5a90612971565b60405180910390fd5b8060068190555050565b611e75612023565b73ffffffffffffffffffffffffffffffffffffffff16611e936115f2565b73ffffffffffffffffffffffffffffffffffffffff1614611ee9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ee090612905565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611f59576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f5090612f72565b60405180910390fd5b611f62816122dd565b50565b6000600b60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101549050919050565b600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600b60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600501549050919050565b600033905090565b6000600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154905060006121176127106121096003546120fb6120ec6121c06120de600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040154436121ff90919063ffffffff16565b61221590919063ffffffff16565b8761224190919063ffffffff16565b61224190919063ffffffff16565b61221590919063ffffffff16565b905061216e81600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015461222b90919063ffffffff16565b600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190555043600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600401819055505050565b6000818361220d9190612fc1565b905092915050565b600081836122239190612ff5565b905092915050565b600081836122399190613026565b905092915050565b6000818361224f919061307c565b905092915050565b6122d88363a9059cbb60e01b8484604051602401612276929190612ac9565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061242a565b505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b612424846323b872dd60e01b8585856040516024016123c2939291906130d6565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061242a565b50505050565b600061248c826040518060400160405280602081526020017f5361666542455032303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166124f19092919063ffffffff16565b90506000815111156124ec57808060200190518101906124ac9190613145565b6124eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016124e2906131e4565b60405180910390fd5b5b505050565b60606125008484600085612509565b90509392505050565b60608247101561254e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161254590613276565b60405180910390fd5b6125578561261d565b612596576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161258d906132e2565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516125bf919061337c565b60006040518083038185875af1925050503d80600081146125fc576040519150601f19603f3d011682016040523d82523d6000602084013e612601565b606091505b5091509150612611828286612640565b92505050949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60608315612650578290506126a0565b6000835111156126635782518084602001fd5b816040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161269791906133e8565b60405180910390fd5b9392505050565b6000819050919050565b6126ba816126a7565b82525050565b60006020820190506126d560008301846126b1565b92915050565b600080fd5b6126e9816126a7565b81146126f457600080fd5b50565b600081359050612706816126e0565b92915050565b600060208284031215612722576127216126db565b5b6000612730848285016126f7565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061276482612739565b9050919050565b61277481612759565b811461277f57600080fd5b50565b6000813590506127918161276b565b92915050565b6000602082840312156127ad576127ac6126db565b5b60006127bb84828501612782565b91505092915050565b600080604083850312156127db576127da6126db565b5b60006127e9858286016126f7565b92505060206127fa858286016126f7565b9150509250929050565b61280d81612759565b82525050565b60006020820190506128286000830184612804565b92915050565b6000819050919050565b600061285361284e61284984612739565b61282e565b612739565b9050919050565b600061286582612838565b9050919050565b60006128778261285a565b9050919050565b6128878161286c565b82525050565b60006020820190506128a2600083018461287e565b92915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006128ef6020836128a8565b91506128fa826128b9565b602082019050919050565b6000602082019050818103600083015261291e816128e2565b9050919050565b7f43616e2774206265207a65726f00000000000000000000000000000000000000600082015250565b600061295b600d836128a8565b915061296682612925565b602082019050919050565b6000602082019050818103600083015261298a8161294e565b9050919050565b7f416d6f756e742073686f756c642062652067726561746572207468616e203000600082015250565b60006129c7601f836128a8565b91506129d282612991565b602082019050919050565b600060208201905081810360008301526129f6816129ba565b9050919050565b7f496e76616c696420616d6f756e74000000000000000000000000000000000000600082015250565b6000612a33600e836128a8565b9150612a3e826129fd565b602082019050919050565b60006020820190508181036000830152612a6281612a26565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000612aa3826126a7565b9150612aae836126a7565b925082612abe57612abd612a69565b5b828206905092915050565b6000604082019050612ade6000830185612804565b612aeb60208301846126b1565b9392505050565b7f4e6f7468696e6720746f20636c61696d00000000000000000000000000000000600082015250565b6000612b286010836128a8565b9150612b3382612af2565b602082019050919050565b60006020820190508181036000830152612b5781612b1b565b9050919050565b600081519050612b6d816126e0565b92915050565b600060208284031215612b8957612b886126db565b5b6000612b9784828501612b5e565b91505092915050565b7f496e73756666696369656e742100000000000000000000000000000000000000600082015250565b6000612bd6600d836128a8565b9150612be182612ba0565b602082019050919050565b60006020820190508181036000830152612c0581612bc9565b9050919050565b7f416c726561647920737461727465640000000000000000000000000000000000600082015250565b6000612c42600f836128a8565b9150612c4d82612c0c565b602082019050919050565b60006020820190508181036000830152612c7181612c35565b9050919050565b7f496e73756666696369656e740000000000000000000000000000000000000000600082015250565b6000612cae600c836128a8565b9150612cb982612c78565b602082019050919050565b60006020820190508181036000830152612cdd81612ca1565b9050919050565b7f496e76616c6964204d6f64650000000000000000000000000000000000000000600082015250565b6000612d1a600c836128a8565b9150612d2582612ce4565b602082019050919050565b60006020820190508181036000830152612d4981612d0d565b9050919050565b7f496e76616c6964204c6f636b7570204475726174696f6e000000000000000000600082015250565b6000612d866017836128a8565b9150612d9182612d50565b602082019050919050565b60006020820190508181036000830152612db581612d79565b9050919050565b7f496e76616c696420556e7374616b696e67204665652052617465000000000000600082015250565b6000612df2601a836128a8565b9150612dfd82612dbc565b602082019050919050565b60006020820190508181036000830152612e2181612de5565b9050919050565b7f496e76616c69642076616c756500000000000000000000000000000000000000600082015250565b6000612e5e600d836128a8565b9150612e6982612e28565b602082019050919050565b60006020820190508181036000830152612e8d81612e51565b9050919050565b7f4572726f723a20696e76616c6964207374616b65720000000000000000000000600082015250565b6000612eca6015836128a8565b9150612ed582612e94565b602082019050919050565b60006020820190508181036000830152612ef981612ebd565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000612f5c6026836128a8565b9150612f6782612f00565b604082019050919050565b60006020820190508181036000830152612f8b81612f4f565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612fcc826126a7565b9150612fd7836126a7565b925082821015612fea57612fe9612f92565b5b828203905092915050565b6000613000826126a7565b915061300b836126a7565b92508261301b5761301a612a69565b5b828204905092915050565b6000613031826126a7565b915061303c836126a7565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561307157613070612f92565b5b828201905092915050565b6000613087826126a7565b9150613092836126a7565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156130cb576130ca612f92565b5b828202905092915050565b60006060820190506130eb6000830186612804565b6130f86020830185612804565b61310560408301846126b1565b949350505050565b60008115159050919050565b6131228161310d565b811461312d57600080fd5b50565b60008151905061313f81613119565b92915050565b60006020828403121561315b5761315a6126db565b5b600061316984828501613130565b91505092915050565b7f5361666542455032303a204245503230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b60006131ce602a836128a8565b91506131d982613172565b604082019050919050565b600060208201905081810360008301526131fd816131c1565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b60006132606026836128a8565b915061326b82613204565b604082019050919050565b6000602082019050818103600083015261328f81613253565b9050919050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b60006132cc601d836128a8565b91506132d782613296565b602082019050919050565b600060208201905081810360008301526132fb816132bf565b9050919050565b600081519050919050565b600081905092915050565b60005b8381101561333657808201518184015260208101905061331b565b83811115613345576000848401525b50505050565b600061335682613302565b613360818561330d565b9350613370818560208601613318565b80840191505092915050565b6000613388828461334b565b915081905092915050565b600081519050919050565b6000601f19601f8301169050919050565b60006133ba82613393565b6133c481856128a8565b93506133d4818560208601613318565b6133dd8161339e565b840191505092915050565b6000602082019050818103600083015261340281846133af565b90509291505056fea2646970667358221220cdea9b3ef1c60a0b095439f624d2aa1d64d8fa8e48a702d9133a1bddc93a5bdd64736f6c63430008090033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x36DD CODESIZE SUB DUP1 PUSH3 0x36DD DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x25B JUMP JUMPDEST PUSH3 0x57 PUSH3 0x4B PUSH3 0xAF PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xB7 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x67 PUSH3 0x17B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP1 PUSH1 0xD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH3 0x28D JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0xC8 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x5DC PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x64 PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH3 0x93A80 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH3 0x76A700 PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH11 0x27B46536C66C8E3000000 PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH10 0xD3C21BCECCEDA1000000 PUSH1 0x9 DUP2 SWAP1 SSTORE POP PUSH11 0x27B46536C66C8E3000000 PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH11 0x5CA4EC2A79A7F67000000 PUSH1 0x7 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x223 DUP3 PUSH3 0x1F6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x235 DUP2 PUSH3 0x216 JUMP JUMPDEST DUP2 EQ PUSH3 0x241 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x255 DUP2 PUSH3 0x22A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x274 JUMPI PUSH3 0x273 PUSH3 0x1F1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x284 DUP5 DUP3 DUP6 ADD PUSH3 0x244 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3440 DUP1 PUSH3 0x29D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1A9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x817B1CD2 GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0xAEDF562B GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xF2FDE38B GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x46A JUMPI DUP1 PUSH4 0xF9931855 EQ PUSH2 0x486 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x4B6 JUMPI DUP1 PUSH4 0xFE600F84 EQ PUSH2 0x4D4 JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0xAEDF562B EQ PUSH2 0x402 JUMPI DUP1 PUSH4 0xC1704A14 EQ PUSH2 0x432 JUMPI DUP1 PUSH4 0xC665D80E EQ PUSH2 0x44E JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x91E07E7A GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x91E07E7A EQ PUSH2 0x392 JUMPI DUP1 PUSH4 0x9E447FC6 EQ PUSH2 0x3AE JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x3CA JUMPI DUP1 PUSH4 0xAE544943 EQ PUSH2 0x3E6 JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x817B1CD2 EQ PUSH2 0x326 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x344 JUMPI DUP1 PUSH4 0x909F093E EQ PUSH2 0x362 JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x4B77DD9E GT PUSH2 0x166 JUMPI DUP1 PUSH4 0x645A8A56 GT PUSH2 0x140 JUMPI DUP1 PUSH4 0x645A8A56 EQ PUSH2 0x2B2 JUMPI DUP1 PUSH4 0x692642E7 EQ PUSH2 0x2E2 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2FE JUMPI DUP1 PUSH4 0x7E1A3786 EQ PUSH2 0x308 JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x4B77DD9E EQ PUSH2 0x25A JUMPI DUP1 PUSH4 0x5715EC11 EQ PUSH2 0x276 JUMPI DUP1 PUSH4 0x5D2EC65D EQ PUSH2 0x294 JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x917E776 EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0x23B61117 EQ PUSH2 0x1CC JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x1E8 JUMPI DUP1 PUSH4 0x4641257D EQ PUSH2 0x204 JUMPI DUP1 PUSH4 0x4A4FBEEC EQ PUSH2 0x20E JUMPI DUP1 PUSH4 0x4B62B70B EQ PUSH2 0x23E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B6 PUSH2 0x504 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C3 SWAP2 SWAP1 PUSH2 0x26C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E1 SWAP2 SWAP1 PUSH2 0x270C JUMP JUMPDEST PUSH2 0x50E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x202 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x270C JUMP JUMPDEST PUSH2 0x5D7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x20C PUSH2 0x974 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x228 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x223 SWAP2 SWAP1 PUSH2 0x2797 JUMP JUMPDEST PUSH2 0xCB3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x235 SWAP2 SWAP1 PUSH2 0x26C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x258 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x253 SWAP2 SWAP1 PUSH2 0x270C JUMP JUMPDEST PUSH2 0xE43 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x274 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26F SWAP2 SWAP1 PUSH2 0x27C4 JUMP JUMPDEST PUSH2 0xF0C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x27E PUSH2 0x139A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28B SWAP2 SWAP1 PUSH2 0x26C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29C PUSH2 0x13A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A9 SWAP2 SWAP1 PUSH2 0x26C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C7 SWAP2 SWAP1 PUSH2 0x2797 JUMP JUMPDEST PUSH2 0x13F9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D9 SWAP2 SWAP1 PUSH2 0x26C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F7 SWAP2 SWAP1 PUSH2 0x270C JUMP JUMPDEST PUSH2 0x1445 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x306 PUSH2 0x155A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x310 PUSH2 0x15E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31D SWAP2 SWAP1 PUSH2 0x26C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x32E PUSH2 0x15EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33B SWAP2 SWAP1 PUSH2 0x26C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34C PUSH2 0x15F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x359 SWAP2 SWAP1 PUSH2 0x2813 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x37C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x377 SWAP2 SWAP1 PUSH2 0x270C JUMP JUMPDEST PUSH2 0x161B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x389 SWAP2 SWAP1 PUSH2 0x26C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3AC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A7 SWAP2 SWAP1 PUSH2 0x270C JUMP JUMPDEST PUSH2 0x16B6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3C8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C3 SWAP2 SWAP1 PUSH2 0x270C JUMP JUMPDEST PUSH2 0x17B6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3E4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3DF SWAP2 SWAP1 PUSH2 0x270C JUMP JUMPDEST PUSH2 0x18B6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x400 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3FB SWAP2 SWAP1 PUSH2 0x270C JUMP JUMPDEST PUSH2 0x1BB3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x41C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x417 SWAP2 SWAP1 PUSH2 0x2797 JUMP JUMPDEST PUSH2 0x1C7C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x429 SWAP2 SWAP1 PUSH2 0x26C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x44C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x447 SWAP2 SWAP1 PUSH2 0x270C JUMP JUMPDEST PUSH2 0x1CDB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x468 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x463 SWAP2 SWAP1 PUSH2 0x270C JUMP JUMPDEST PUSH2 0x1DA4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x484 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x47F SWAP2 SWAP1 PUSH2 0x2797 JUMP JUMPDEST PUSH2 0x1E6D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x49B SWAP2 SWAP1 PUSH2 0x2797 JUMP JUMPDEST PUSH2 0x1F65 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4AD SWAP2 SWAP1 PUSH2 0x26C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4BE PUSH2 0x1FB1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4CB SWAP2 SWAP1 PUSH2 0x288D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4EE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4E9 SWAP2 SWAP1 PUSH2 0x2797 JUMP JUMPDEST PUSH2 0x1FD7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4FB SWAP2 SWAP1 PUSH2 0x26C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0xC SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x516 PUSH2 0x2023 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x534 PUSH2 0x15F2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x58A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x581 SWAP1 PUSH2 0x2905 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x5CD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C4 SWAP1 PUSH2 0x2971 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x8 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x61A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x611 SWAP1 PUSH2 0x29DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD DUP2 GT ISZERO PUSH2 0x69F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x696 SWAP1 PUSH2 0x2A49 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6A7 PUSH2 0x202B JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x0 PUSH2 0x718 PUSH3 0x15180 PUSH2 0x70A PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD TIMESTAMP PUSH2 0x21FF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2215 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x64 SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD EQ ISZERO PUSH2 0x7CB JUMPI PUSH2 0x7C3 PUSH1 0x5 SLOAD PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x222B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x7E9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD DUP5 PUSH2 0x7DB SWAP2 SWAP1 PUSH2 0x2A98 JUMP JUMPDEST EQ DUP1 ISZERO PUSH2 0x7E8 JUMPI POP PUSH1 0x0 DUP4 GT JUMPDEST JUMPDEST SWAP1 POP DUP1 PUSH2 0x7F6 JUMPI PUSH1 0x1 SLOAD SWAP2 POP JUMPDEST PUSH2 0x84B DUP5 PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x21FF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x8A6 DUP5 PUSH1 0xC SLOAD PUSH2 0x21FF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xC DUP2 SWAP1 SSTORE POP PUSH2 0x8E5 PUSH2 0x8D6 PUSH2 0x2710 PUSH2 0x8C8 DUP6 DUP9 PUSH2 0x2241 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2215 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 PUSH2 0x21FF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP4 POP PUSH2 0x934 CALLER DUP6 PUSH1 0xD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2257 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH32 0x884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364 CALLER DUP6 PUSH1 0x40 MLOAD PUSH2 0x965 SWAP3 SWAP2 SWAP1 PUSH2 0x2AC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x97C PUSH2 0x202B JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA3D PUSH2 0x9EC PUSH2 0x2710 PUSH2 0x9DE PUSH1 0x4 SLOAD PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH2 0x2241 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2215 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH2 0x21FF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0xA82 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA79 SWAP1 PUSH2 0x2B3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xADD SWAP2 SWAP1 PUSH2 0x2813 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAF5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB09 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB2D SWAP2 SWAP1 PUSH2 0x2B73 JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0xBE2 JUMPI PUSH1 0xD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB8F SWAP2 SWAP1 PUSH2 0x2813 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBBB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBDF SWAP2 SWAP1 PUSH2 0x2B73 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0xC2F CALLER DUP3 PUSH1 0xD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2257 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH32 0xC9695243A805ADB74C91F28311176C65B417E842D5699893CEF56D18BFA48CBA CALLER DUP3 PUSH1 0x40 MLOAD PUSH2 0xCA8 SWAP3 SWAP2 SWAP1 PUSH2 0x2AC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x55 PUSH1 0xB PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD EQ PUSH2 0xD08 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0xE3E JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD EQ PUSH2 0xDD0 JUMPI PUSH1 0x0 PUSH3 0x93A80 PUSH2 0xDAD PUSH1 0xB PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD TIMESTAMP PUSH2 0x21FF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xDB7 SWAP2 SWAP1 PUSH2 0x2A98 JUMP JUMPDEST EQ PUSH2 0xDC3 JUMPI PUSH1 0x1 PUSH2 0xDC6 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH2 0xE3E JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0xE28 PUSH1 0xB PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD TIMESTAMP PUSH2 0x21FF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST LT ISZERO PUSH2 0xE35 JUMPI PUSH1 0x1 PUSH2 0xE38 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0xFF AND SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE4B PUSH2 0x2023 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xE69 PUSH2 0x15F2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xEBF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEB6 SWAP1 PUSH2 0x2905 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xF02 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEF9 SWAP1 PUSH2 0x2971 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0xF4F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF46 SWAP1 PUSH2 0x29DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0xD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFAB SWAP2 SWAP1 PUSH2 0x2813 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xFD7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFFB SWAP2 SWAP1 PUSH2 0x2B73 JUMP JUMPDEST GT PUSH2 0x103B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1032 SWAP1 PUSH2 0x2BEC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x55 PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD EQ ISZERO PUSH2 0x10C1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10B8 SWAP1 PUSH2 0x2C58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0x1114 JUMPI PUSH1 0x6 SLOAD DUP3 LT ISZERO PUSH2 0x110F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1106 SWAP1 PUSH2 0x2CC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1254 JUMP JUMPDEST PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x1167 JUMPI PUSH1 0x9 SLOAD DUP3 LT ISZERO PUSH2 0x1162 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1159 SWAP1 PUSH2 0x2CC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1253 JUMP JUMPDEST PUSH1 0x2 DUP2 EQ ISZERO PUSH2 0x11BA JUMPI PUSH1 0x8 SLOAD DUP3 LT ISZERO PUSH2 0x11B5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11AC SWAP1 PUSH2 0x2CC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1252 JUMP JUMPDEST PUSH1 0x3 DUP2 EQ ISZERO PUSH2 0x120D JUMPI PUSH1 0x7 SLOAD DUP3 LT ISZERO PUSH2 0x1208 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11FF SWAP1 PUSH2 0x2CC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1251 JUMP JUMPDEST PUSH1 0x0 DUP3 LT PUSH2 0x1250 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1247 SWAP1 PUSH2 0x2D30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST JUMPDEST JUMPDEST JUMPDEST DUP1 PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x55 PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD DUP2 SWAP1 SSTORE POP PUSH1 0xA CALLER SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x1396 DUP3 PUSH2 0x18B6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13B1 PUSH2 0x202B JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x144D PUSH2 0x2023 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x146B PUSH2 0x15F2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x14C1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14B8 SWAP1 PUSH2 0x2905 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x1504 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14FB SWAP1 PUSH2 0x2D9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x151A PUSH3 0x15180 DUP3 PUSH2 0x2241 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH32 0x189BDA9782663C67A3F95C0AA5455924C711210B00281C60EAD2F0DD8DBC924C DUP2 PUSH1 0x40 MLOAD PUSH2 0x154F SWAP2 SWAP1 PUSH2 0x26C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x1562 PUSH2 0x2023 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1580 PUSH2 0x15F2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x15D6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15CD SWAP1 PUSH2 0x2905 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x15E0 PUSH1 0x0 PUSH2 0x22DD JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 DUP4 EQ DUP1 PUSH2 0x1631 JUMPI POP PUSH1 0x2 DUP4 EQ JUMPDEST ISZERO PUSH2 0x1640 JUMPI PUSH1 0x6 SLOAD SWAP1 POP PUSH2 0x16AD JUMP JUMPDEST PUSH1 0x1 DUP4 EQ ISZERO PUSH2 0x1653 JUMPI PUSH1 0x9 SLOAD SWAP1 POP PUSH2 0x16AC JUMP JUMPDEST PUSH1 0x3 DUP4 EQ ISZERO PUSH2 0x1666 JUMPI PUSH1 0x7 SLOAD SWAP1 POP PUSH2 0x16AB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 GT PUSH2 0x16AA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16A1 SWAP1 PUSH2 0x2D30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST JUMPDEST JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16BE PUSH2 0x2023 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x16DC PUSH2 0x15F2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1732 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1729 SWAP1 PUSH2 0x2905 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x1775 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x176C SWAP1 PUSH2 0x2E08 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH32 0x150C688DD7595BF7862B8AB1FE46756450EB7D731037942B3BBC46F3F0E21B81 DUP2 PUSH1 0x40 MLOAD PUSH2 0x17AB SWAP2 SWAP1 PUSH2 0x26C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x17BE PUSH2 0x2023 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x17DC PUSH2 0x15F2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1832 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1829 SWAP1 PUSH2 0x2905 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x1875 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x186C SWAP1 PUSH2 0x2E74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH32 0x1946FB78C7CA778B54D82CABAAC5BA67CF446F58D0FF1F8CEAEBB6150E54E44F DUP2 PUSH1 0x40 MLOAD PUSH2 0x18AB SWAP2 SWAP1 PUSH2 0x26C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x18F9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18F0 SWAP1 PUSH2 0x29DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1955 SWAP2 SWAP1 PUSH2 0x2813 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x196D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1981 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x19A5 SWAP2 SWAP1 PUSH2 0x2B73 JUMP JUMPDEST GT PUSH2 0x19E5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19DC SWAP1 PUSH2 0x2BEC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x55 PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD EQ PUSH2 0x1A6A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A61 SWAP1 PUSH2 0x2EE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A72 PUSH2 0x202B JUMP JUMPDEST PUSH2 0x1AC1 CALLER ADDRESS DUP4 PUSH1 0xD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x23A1 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1B16 DUP2 PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x222B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x1B71 DUP2 PUSH1 0xC SLOAD PUSH2 0x222B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xC DUP2 SWAP1 SSTORE POP PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D CALLER DUP3 PUSH1 0x40 MLOAD PUSH2 0x1BA8 SWAP3 SWAP2 SWAP1 PUSH2 0x2AC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x1BBB PUSH2 0x2023 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1BD9 PUSH2 0x15F2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1C2F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C26 SWAP1 PUSH2 0x2905 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x1C72 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C69 SWAP1 PUSH2 0x2971 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xB PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD EQ PUSH2 0x1CCE JUMPI PUSH1 0x1 PUSH2 0x1CD1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CE3 PUSH2 0x2023 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1D01 PUSH2 0x15F2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1D57 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D4E SWAP1 PUSH2 0x2905 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x1D9A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D91 SWAP1 PUSH2 0x2971 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x9 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x1DAC PUSH2 0x2023 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1DCA PUSH2 0x15F2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1E20 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E17 SWAP1 PUSH2 0x2905 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x1E63 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E5A SWAP1 PUSH2 0x2971 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x1E75 PUSH2 0x2023 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1E93 PUSH2 0x15F2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1EE9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1EE0 SWAP1 PUSH2 0x2905 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1F59 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F50 SWAP1 PUSH2 0x2F72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1F62 DUP2 PUSH2 0x22DD JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP PUSH1 0x0 PUSH2 0x2117 PUSH2 0x2710 PUSH2 0x2109 PUSH1 0x3 SLOAD PUSH2 0x20FB PUSH2 0x20EC PUSH2 0x21C0 PUSH2 0x20DE PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD SLOAD NUMBER PUSH2 0x21FF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2215 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP8 PUSH2 0x2241 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2241 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2215 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x216E DUP2 PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH2 0x222B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP NUMBER PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x220D SWAP2 SWAP1 PUSH2 0x2FC1 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x2223 SWAP2 SWAP1 PUSH2 0x2FF5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x2239 SWAP2 SWAP1 PUSH2 0x3026 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x224F SWAP2 SWAP1 PUSH2 0x307C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x22D8 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x2276 SWAP3 SWAP2 SWAP1 PUSH2 0x2AC9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x242A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x2424 DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x23C2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x30D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x242A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x248C DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666542455032303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x24F1 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x24EC JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x24AC SWAP2 SWAP1 PUSH2 0x3145 JUMP JUMPDEST PUSH2 0x24EB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x24E2 SWAP1 PUSH2 0x31E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2500 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x2509 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x254E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2545 SWAP1 PUSH2 0x3276 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2557 DUP6 PUSH2 0x261D JUMP JUMPDEST PUSH2 0x2596 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x258D SWAP1 PUSH2 0x32E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x25BF SWAP2 SWAP1 PUSH2 0x337C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x25FC JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2601 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x2611 DUP3 DUP3 DUP7 PUSH2 0x2640 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x2650 JUMPI DUP3 SWAP1 POP PUSH2 0x26A0 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0x2663 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2697 SWAP2 SWAP1 PUSH2 0x33E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x26BA DUP2 PUSH2 0x26A7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x26D5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x26B1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x26E9 DUP2 PUSH2 0x26A7 JUMP JUMPDEST DUP2 EQ PUSH2 0x26F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2706 DUP2 PUSH2 0x26E0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2722 JUMPI PUSH2 0x2721 PUSH2 0x26DB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2730 DUP5 DUP3 DUP6 ADD PUSH2 0x26F7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2764 DUP3 PUSH2 0x2739 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2774 DUP2 PUSH2 0x2759 JUMP JUMPDEST DUP2 EQ PUSH2 0x277F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2791 DUP2 PUSH2 0x276B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x27AD JUMPI PUSH2 0x27AC PUSH2 0x26DB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x27BB DUP5 DUP3 DUP6 ADD PUSH2 0x2782 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x27DB JUMPI PUSH2 0x27DA PUSH2 0x26DB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x27E9 DUP6 DUP3 DUP7 ADD PUSH2 0x26F7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x27FA DUP6 DUP3 DUP7 ADD PUSH2 0x26F7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x280D DUP2 PUSH2 0x2759 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2828 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2804 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2853 PUSH2 0x284E PUSH2 0x2849 DUP5 PUSH2 0x2739 JUMP JUMPDEST PUSH2 0x282E JUMP JUMPDEST PUSH2 0x2739 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2865 DUP3 PUSH2 0x2838 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2877 DUP3 PUSH2 0x285A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2887 DUP2 PUSH2 0x286C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x28A2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x287E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28EF PUSH1 0x20 DUP4 PUSH2 0x28A8 JUMP JUMPDEST SWAP2 POP PUSH2 0x28FA DUP3 PUSH2 0x28B9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x291E DUP2 PUSH2 0x28E2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E2774206265207A65726F00000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x295B PUSH1 0xD DUP4 PUSH2 0x28A8 JUMP JUMPDEST SWAP2 POP PUSH2 0x2966 DUP3 PUSH2 0x2925 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x298A DUP2 PUSH2 0x294E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416D6F756E742073686F756C642062652067726561746572207468616E203000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29C7 PUSH1 0x1F DUP4 PUSH2 0x28A8 JUMP JUMPDEST SWAP2 POP PUSH2 0x29D2 DUP3 PUSH2 0x2991 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x29F6 DUP2 PUSH2 0x29BA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420616D6F756E74000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A33 PUSH1 0xE DUP4 PUSH2 0x28A8 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A3E DUP3 PUSH2 0x29FD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2A62 DUP2 PUSH2 0x2A26 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2AA3 DUP3 PUSH2 0x26A7 JUMP JUMPDEST SWAP2 POP PUSH2 0x2AAE DUP4 PUSH2 0x26A7 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2ABE JUMPI PUSH2 0x2ABD PUSH2 0x2A69 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2ADE PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2804 JUMP JUMPDEST PUSH2 0x2AEB PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x26B1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E6F7468696E6720746F20636C61696D00000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B28 PUSH1 0x10 DUP4 PUSH2 0x28A8 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B33 DUP3 PUSH2 0x2AF2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2B57 DUP2 PUSH2 0x2B1B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2B6D DUP2 PUSH2 0x26E0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2B89 JUMPI PUSH2 0x2B88 PUSH2 0x26DB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2B97 DUP5 DUP3 DUP6 ADD PUSH2 0x2B5E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742100000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BD6 PUSH1 0xD DUP4 PUSH2 0x28A8 JUMP JUMPDEST SWAP2 POP PUSH2 0x2BE1 DUP3 PUSH2 0x2BA0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2C05 DUP2 PUSH2 0x2BC9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416C726561647920737461727465640000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C42 PUSH1 0xF DUP4 PUSH2 0x28A8 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C4D DUP3 PUSH2 0x2C0C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2C71 DUP2 PUSH2 0x2C35 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E740000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CAE PUSH1 0xC DUP4 PUSH2 0x28A8 JUMP JUMPDEST SWAP2 POP PUSH2 0x2CB9 DUP3 PUSH2 0x2C78 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2CDD DUP2 PUSH2 0x2CA1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C6964204D6F64650000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D1A PUSH1 0xC DUP4 PUSH2 0x28A8 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D25 DUP3 PUSH2 0x2CE4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2D49 DUP2 PUSH2 0x2D0D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C6964204C6F636B7570204475726174696F6E000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D86 PUSH1 0x17 DUP4 PUSH2 0x28A8 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D91 DUP3 PUSH2 0x2D50 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2DB5 DUP2 PUSH2 0x2D79 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420556E7374616B696E67204665652052617465000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DF2 PUSH1 0x1A DUP4 PUSH2 0x28A8 JUMP JUMPDEST SWAP2 POP PUSH2 0x2DFD DUP3 PUSH2 0x2DBC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2E21 DUP2 PUSH2 0x2DE5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C69642076616C756500000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E5E PUSH1 0xD DUP4 PUSH2 0x28A8 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E69 DUP3 PUSH2 0x2E28 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2E8D DUP2 PUSH2 0x2E51 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4572726F723A20696E76616C6964207374616B65720000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2ECA PUSH1 0x15 DUP4 PUSH2 0x28A8 JUMP JUMPDEST SWAP2 POP PUSH2 0x2ED5 DUP3 PUSH2 0x2E94 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2EF9 DUP2 PUSH2 0x2EBD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F5C PUSH1 0x26 DUP4 PUSH2 0x28A8 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F67 DUP3 PUSH2 0x2F00 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2F8B DUP2 PUSH2 0x2F4F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2FCC DUP3 PUSH2 0x26A7 JUMP JUMPDEST SWAP2 POP PUSH2 0x2FD7 DUP4 PUSH2 0x26A7 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x2FEA JUMPI PUSH2 0x2FE9 PUSH2 0x2F92 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3000 DUP3 PUSH2 0x26A7 JUMP JUMPDEST SWAP2 POP PUSH2 0x300B DUP4 PUSH2 0x26A7 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x301B JUMPI PUSH2 0x301A PUSH2 0x2A69 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3031 DUP3 PUSH2 0x26A7 JUMP JUMPDEST SWAP2 POP PUSH2 0x303C DUP4 PUSH2 0x26A7 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x3071 JUMPI PUSH2 0x3070 PUSH2 0x2F92 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3087 DUP3 PUSH2 0x26A7 JUMP JUMPDEST SWAP2 POP PUSH2 0x3092 DUP4 PUSH2 0x26A7 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x30CB JUMPI PUSH2 0x30CA PUSH2 0x2F92 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x30EB PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2804 JUMP JUMPDEST PUSH2 0x30F8 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2804 JUMP JUMPDEST PUSH2 0x3105 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x26B1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3122 DUP2 PUSH2 0x310D JUMP JUMPDEST DUP2 EQ PUSH2 0x312D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x313F DUP2 PUSH2 0x3119 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x315B JUMPI PUSH2 0x315A PUSH2 0x26DB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3169 DUP5 DUP3 DUP6 ADD PUSH2 0x3130 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5361666542455032303A204245503230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x31CE PUSH1 0x2A DUP4 PUSH2 0x28A8 JUMP JUMPDEST SWAP2 POP PUSH2 0x31D9 DUP3 PUSH2 0x3172 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x31FD DUP2 PUSH2 0x31C1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3260 PUSH1 0x26 DUP4 PUSH2 0x28A8 JUMP JUMPDEST SWAP2 POP PUSH2 0x326B DUP3 PUSH2 0x3204 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x328F DUP2 PUSH2 0x3253 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32CC PUSH1 0x1D DUP4 PUSH2 0x28A8 JUMP JUMPDEST SWAP2 POP PUSH2 0x32D7 DUP3 PUSH2 0x3296 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x32FB DUP2 PUSH2 0x32BF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3336 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x331B JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x3345 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3356 DUP3 PUSH2 0x3302 JUMP JUMPDEST PUSH2 0x3360 DUP2 DUP6 PUSH2 0x330D JUMP JUMPDEST SWAP4 POP PUSH2 0x3370 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3318 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3388 DUP3 DUP5 PUSH2 0x334B JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33BA DUP3 PUSH2 0x3393 JUMP JUMPDEST PUSH2 0x33C4 DUP2 DUP6 PUSH2 0x28A8 JUMP JUMPDEST SWAP4 POP PUSH2 0x33D4 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3318 JUMP JUMPDEST PUSH2 0x33DD DUP2 PUSH2 0x339E JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3402 DUP2 DUP5 PUSH2 0x33AF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCD 0xEA SWAP12 RETURNDATACOPY CALL 0xC6 EXP SIGNEXTEND MULMOD SLOAD CODECOPY 0xF6 0x24 0xD2 0xAA SAR PUSH5 0xD8FA8E48A7 MUL 0xD9 SGT GASPRICE SHL 0xDD 0xC9 GASPRICE JUMPDEST 0xDD PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ",
							"sourceMap": "260:9502:7:-:0;;;1673:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;921:32:0;940:12;:10;;;:12;;:::i;:::-;921:18;;;:32;;:::i;:::-;1722:6:7;:4;;;:6;;:::i;:::-;1754;1739:5;;:22;;;;;;;;;;;;;;;;;;1673:96;260:9502;;640:96:3;693:7;719:10;712:17;;640:96;:::o;2270:187:0:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;1777:365:7:-;1837:3;1823:11;:17;;;;1882:4;1862:17;:24;;;;1914:3;1897:14;:20;;;;1943:6;1928:12;:21;;;;1976:7;1960:13;:23;;;;2014:7;1994:17;:27;;;;2052:4;2032:17;:24;;;;2087:8;2067:17;:28;;;;2126:8;2106:17;:28;;;;1777:365::o;88:117:8:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;260:9502:7:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_callOptionalReturn_1129": {
									"entryPoint": 9258,
									"id": 1129,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_489": {
									"entryPoint": 8227,
									"id": 489,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_103": {
									"entryPoint": 8925,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@add_675": {
									"entryPoint": 8747,
									"id": 675,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@div_720": {
									"entryPoint": 8725,
									"id": 720,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@functionCallWithValue_341": {
									"entryPoint": 9481,
									"id": 341,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@functionCall_271": {
									"entryPoint": 9457,
									"id": 271,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getMinimumStakingAmount_2138": {
									"entryPoint": 5659,
									"id": 2138,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getNumberofStakers_1572": {
									"entryPoint": 5018,
									"id": 1572,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getRewardRate_1692": {
									"entryPoint": 5602,
									"id": 1692,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getStakerMode_1590": {
									"entryPoint": 7292,
									"id": 1590,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getTotalStaked_1563": {
									"entryPoint": 1284,
									"id": 1563,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@harvest_2089": {
									"entryPoint": 2420,
									"id": 2089,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isContract_200": {
									"entryPoint": 9757,
									"id": 200,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isLocked_1658": {
									"entryPoint": 3251,
									"id": 1658,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isStartStaking_1603": {
									"entryPoint": 8151,
									"id": 1603,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mul_705": {
									"entryPoint": 8769,
									"id": 705,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@owner_32": {
									"entryPoint": 5618,
									"id": 32,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_60": {
									"entryPoint": 5466,
									"id": 60,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardAmount_1684": {
									"entryPoint": 5113,
									"id": 1684,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@rewardToHarvest_2012": {
									"entryPoint": 5031,
									"id": 2012,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@safeTransferFrom_972": {
									"entryPoint": 9121,
									"id": 972,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_946": {
									"entryPoint": 8791,
									"id": 946,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@setCopperMinAmount_1959": {
									"entryPoint": 7387,
									"id": 1959,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setEventPeriod_1879": {
									"entryPoint": 5189,
									"id": 1879,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setGoldMinAmount_1997": {
									"entryPoint": 7091,
									"id": 1997,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setLockupTime_1921": {
									"entryPoint": 3651,
									"id": 1921,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setRewardRate_1853": {
									"entryPoint": 6070,
									"id": 1853,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setSilverMinAmount_1978": {
									"entryPoint": 1294,
									"id": 1978,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setThreeMonthMinAmount_1940": {
									"entryPoint": 7588,
									"id": 1940,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setUnstakingFeeRate_1902": {
									"entryPoint": 5814,
									"id": 1902,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stake_1555": {
									"entryPoint": 6326,
									"id": 1555,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stakedAmount_1671": {
									"entryPoint": 8037,
									"id": 1671,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@startStaking_1477": {
									"entryPoint": 3852,
									"id": 1477,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@sub_690": {
									"entryPoint": 8703,
									"id": 690,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@token_1189": {
									"entryPoint": 8113,
									"id": 1189,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalStaked_1186": {
									"entryPoint": 5612,
									"id": 1186,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_83": {
									"entryPoint": 7789,
									"id": 83,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateReward_1353": {
									"entryPoint": 8235,
									"id": 1353,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@verifyCallResult_476": {
									"entryPoint": 9792,
									"id": 476,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@withdraw_1830": {
									"entryPoint": 1495,
									"id": 1830,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 10114,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 12592,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 9975,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 11102,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 10135,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 12613,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 9996,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 11123,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 10180,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 10244,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 13131,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_contract$_IBEP20_$912_to_t_address_fromStack": {
									"entryPoint": 10366,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 13231,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0d617be88096c346284999e0c326580edf46a27365999d8d83893f396c546e11_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11425,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11035,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11965,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12737,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12111,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10790,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11317,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12883,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10682,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10466,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11857,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12991,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11749,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11641,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10574,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_deac108a7d54cf66b12f6e883ab8551f52667d7b9815f115365cc11ce5c44062_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11533,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11209,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 9905,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 13180,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 10259,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 12502,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 10953,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IBEP20_$912__to_t_address__fromStack_reversed": {
									"entryPoint": 10381,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 13288,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0d617be88096c346284999e0c326580edf46a27365999d8d83893f396c546e11__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11460,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11070,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12000,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12772,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12146,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10825,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11352,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12918,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10717,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10501,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11892,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 13026,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11784,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11676,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10609,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_deac108a7d54cf66b12f6e883ab8551f52667d7b9815f115365cc11ce5c44062__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11568,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11244,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 9920,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 13058,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 13203,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 13069,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 10408,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 12326,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 12277,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 12412,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 12225,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 10073,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 12557,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 10041,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 9895,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IBEP20_$912_to_t_address": {
									"entryPoint": 10348,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 10330,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 10296,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 13080,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 10286,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mod_t_uint256": {
									"entryPoint": 10904,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 12178,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 10857,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 9947,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 13214,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_0d617be88096c346284999e0c326580edf46a27365999d8d83893f396c546e11": {
									"entryPoint": 11384,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3": {
									"entryPoint": 10994,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684": {
									"entryPoint": 11924,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082": {
									"entryPoint": 12658,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 12032,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1": {
									"entryPoint": 10749,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6": {
									"entryPoint": 11276,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c": {
									"entryPoint": 12804,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580": {
									"entryPoint": 10641,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 10425,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6": {
									"entryPoint": 11816,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad": {
									"entryPoint": 12950,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3": {
									"entryPoint": 11708,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561": {
									"entryPoint": 11600,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2": {
									"entryPoint": 10533,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_deac108a7d54cf66b12f6e883ab8551f52667d7b9815f115365cc11ce5c44062": {
									"entryPoint": 11492,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811": {
									"entryPoint": 11168,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 10091,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 12569,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 9952,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:26575:8",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:32:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:16:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "73:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:8",
														"type": ""
													}
												],
												"src": "7:77:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "155:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "165:37:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "165:37:8"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "143:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "150:3:8",
														"type": ""
													}
												],
												"src": "90:118:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "312:124:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "322:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "345:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "330:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "426:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "358:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "358:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "284:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "296:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "307:4:8",
														"type": ""
													}
												],
												"src": "214:222:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "482:35:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "492:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "508:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "502:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "502:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "492:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "475:6:8",
														"type": ""
													}
												],
												"src": "442:75:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "612:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "629:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "632:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "622:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "622:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "622:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "523:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "735:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "752:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "755:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "745:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "745:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "745:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "646:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "812:79:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "869:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "878:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "881:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "871:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "871:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "871:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "835:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "860:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "842:17:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "842:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "832:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "832:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "825:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "825:43:8"
															},
															"nodeType": "YulIf",
															"src": "822:63:8"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "805:5:8",
														"type": ""
													}
												],
												"src": "769:122:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "949:87:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "959:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "981:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "968:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "968:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "959:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1024:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "997:26:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "997:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "997:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "927:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "935:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "943:5:8",
														"type": ""
													}
												],
												"src": "897:139:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1108:263:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1154:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1156:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1156:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1156:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1129:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1138:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1125:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1125:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1150:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1121:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1121:32:8"
															},
															"nodeType": "YulIf",
															"src": "1118:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "1247:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1262:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1276:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1266:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1291:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1326:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1337:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1322:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1322:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1346:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1301:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1301:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1291:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1078:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1089:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1101:6:8",
														"type": ""
													}
												],
												"src": "1042:329:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1422:81:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1432:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1447:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1454:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1443:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1443:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1432:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1404:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1414:7:8",
														"type": ""
													}
												],
												"src": "1377:126:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1554:51:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1564:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1593:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1575:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1575:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1564:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1536:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1546:7:8",
														"type": ""
													}
												],
												"src": "1509:96:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1654:79:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1711:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1720:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1723:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1713:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1713:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1713:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1677:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1702:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1684:17:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1684:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1674:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1674:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1667:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1667:43:8"
															},
															"nodeType": "YulIf",
															"src": "1664:63:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1647:5:8",
														"type": ""
													}
												],
												"src": "1611:122:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1791:87:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1801:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1823:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1810:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1810:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1801:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1866:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1839:26:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1839:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1839:33:8"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1769:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1777:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1785:5:8",
														"type": ""
													}
												],
												"src": "1739:139:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1950:263:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1996:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1998:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1998:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1998:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1971:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1980:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1967:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1967:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1992:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1963:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1963:32:8"
															},
															"nodeType": "YulIf",
															"src": "1960:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "2089:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2104:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2118:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2108:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2133:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2168:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2179:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2164:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2164:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2188:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2143:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2143:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2133:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1920:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1931:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1943:6:8",
														"type": ""
													}
												],
												"src": "1884:329:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2302:391:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2348:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2350:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2350:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2350:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2323:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2332:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2319:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2319:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2344:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2315:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2315:32:8"
															},
															"nodeType": "YulIf",
															"src": "2312:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "2441:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2456:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2470:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2460:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2485:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2520:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2531:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2516:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2516:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2540:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2495:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2495:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2485:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2568:118:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2583:16:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2597:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2587:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2613:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2648:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2659:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2644:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2644:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2668:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2623:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2623:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2613:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2264:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2275:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2287:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2295:6:8",
														"type": ""
													}
												],
												"src": "2219:474:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2764:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2781:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2804:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2786:17:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2786:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2774:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2774:37:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2774:37:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2752:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2759:3:8",
														"type": ""
													}
												],
												"src": "2699:118:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2921:124:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2931:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2943:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2954:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2939:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2939:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2931:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3011:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3024:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3035:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3020:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3020:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2967:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2967:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2967:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2893:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2905:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2916:4:8",
														"type": ""
													}
												],
												"src": "2823:222:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3083:28:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3093:12:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3100:5:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "3093:3:8"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3069:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "3079:3:8",
														"type": ""
													}
												],
												"src": "3051:60:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3177:82:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3187:66:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3245:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nodeType": "YulIdentifier",
																					"src": "3227:17:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3227:24:8"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "3218:8:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3218:34:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "3200:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3200:53:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "3187:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3157:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "3167:9:8",
														"type": ""
													}
												],
												"src": "3117:142:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3325:66:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3335:50:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3379:5:8"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "3348:30:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3348:37:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "3335:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3305:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "3315:9:8",
														"type": ""
													}
												],
												"src": "3265:126:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3471:66:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3481:50:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3525:5:8"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "3494:30:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3494:37:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "3481:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IBEP20_$912_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3451:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "3461:9:8",
														"type": ""
													}
												],
												"src": "3397:140:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3622:80:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3639:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3689:5:8"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IBEP20_$912_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3644:44:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3644:51:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3632:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3632:64:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3632:64:8"
														}
													]
												},
												"name": "abi_encode_t_contract$_IBEP20_$912_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3610:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3617:3:8",
														"type": ""
													}
												],
												"src": "3543:159:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3820:138:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3830:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3842:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3853:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3838:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3838:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3830:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3924:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3937:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3948:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3933:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3933:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IBEP20_$912_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3866:57:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3866:85:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3866:85:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IBEP20_$912__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3792:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3804:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3815:4:8",
														"type": ""
													}
												],
												"src": "3708:250:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4060:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4077:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4082:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4070:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4070:19:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4070:19:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4098:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4117:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4122:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4113:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4113:14:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "4098:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4032:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4037:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "4048:11:8",
														"type": ""
													}
												],
												"src": "3964:169:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4245:76:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4267:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4275:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4263:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4263:14:8"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4279:34:8",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4256:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4256:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4256:58:8"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "4237:6:8",
														"type": ""
													}
												],
												"src": "4139:182:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4473:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4483:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4549:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4554:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4490:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4490:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4483:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4655:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "4566:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4566:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4566:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4668:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4679:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4684:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4675:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4675:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4668:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4461:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4469:3:8",
														"type": ""
													}
												],
												"src": "4327:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4870:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4880:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4892:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4903:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4888:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4888:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4880:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4927:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4938:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4923:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4923:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4946:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4952:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4942:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4942:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4916:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4916:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4916:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4972:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "5106:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4980:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4980:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4972:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4850:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4865:4:8",
														"type": ""
													}
												],
												"src": "4699:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5230:57:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5252:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5260:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5248:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5248:14:8"
																	},
																	{
																		"hexValue": "43616e2774206265207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5264:15:8",
																		"type": "",
																		"value": "Can't be zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5241:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5241:39:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5241:39:8"
														}
													]
												},
												"name": "store_literal_in_memory_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5222:6:8",
														"type": ""
													}
												],
												"src": "5124:163:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5439:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5449:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5515:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5520:2:8",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5456:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5456:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5449:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5621:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2",
																	"nodeType": "YulIdentifier",
																	"src": "5532:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5532:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5532:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5634:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5645:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5650:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5641:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5641:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5634:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5427:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5435:3:8",
														"type": ""
													}
												],
												"src": "5293:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5836:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5846:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5858:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5869:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5854:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5854:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5846:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5893:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5904:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5889:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5889:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "5912:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5918:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5908:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5908:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5882:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5882:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5882:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5938:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6072:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5946:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5946:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5938:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5816:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5831:4:8",
														"type": ""
													}
												],
												"src": "5665:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6196:75:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6218:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6226:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6214:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6214:14:8"
																	},
																	{
																		"hexValue": "416d6f756e742073686f756c642062652067726561746572207468616e2030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6230:33:8",
																		"type": "",
																		"value": "Amount should be greater than 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6207:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6207:57:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6207:57:8"
														}
													]
												},
												"name": "store_literal_in_memory_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6188:6:8",
														"type": ""
													}
												],
												"src": "6090:181:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6423:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6433:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6499:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6504:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6440:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6440:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6433:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6605:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580",
																	"nodeType": "YulIdentifier",
																	"src": "6516:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6516:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6516:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6618:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6629:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6634:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6625:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6625:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6618:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6411:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6419:3:8",
														"type": ""
													}
												],
												"src": "6277:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6820:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6830:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6842:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6853:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6838:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6838:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6830:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6877:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6888:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6873:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6873:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6896:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6902:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6892:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6892:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6866:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6866:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6866:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6922:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7056:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6930:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6930:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6922:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6800:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6815:4:8",
														"type": ""
													}
												],
												"src": "6649:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7180:58:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7202:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7210:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7198:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7198:14:8"
																	},
																	{
																		"hexValue": "496e76616c696420616d6f756e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7214:16:8",
																		"type": "",
																		"value": "Invalid amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7191:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7191:40:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7191:40:8"
														}
													]
												},
												"name": "store_literal_in_memory_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7172:6:8",
														"type": ""
													}
												],
												"src": "7074:164:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7390:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7400:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7466:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7471:2:8",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7407:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7407:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7400:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7572:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1",
																	"nodeType": "YulIdentifier",
																	"src": "7483:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7483:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7483:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7585:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7596:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7601:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7592:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7592:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7585:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7378:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7386:3:8",
														"type": ""
													}
												],
												"src": "7244:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7787:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7797:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7809:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7820:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7805:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7805:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7797:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7844:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7855:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7840:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7840:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7863:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7869:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7859:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7859:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7833:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7833:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7833:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7889:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8023:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7897:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7897:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7889:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7767:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7782:4:8",
														"type": ""
													}
												],
												"src": "7616:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8069:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8086:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8089:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8079:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8079:88:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8079:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8183:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8186:4:8",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8176:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8176:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8176:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8207:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8210:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8200:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8200:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8200:15:8"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "8041:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8261:142:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8271:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8294:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8276:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8276:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "8271:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8305:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8328:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8310:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8310:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "8305:1:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8352:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "8354:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8354:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8354:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8349:1:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8342:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8342:9:8"
															},
															"nodeType": "YulIf",
															"src": "8339:35:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8383:14:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8392:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8395:1:8"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nodeType": "YulIdentifier",
																	"src": "8388:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8388:9:8"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "8383:1:8"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8250:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8253:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "8259:1:8",
														"type": ""
													}
												],
												"src": "8227:176:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8535:206:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8545:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8557:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8568:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8553:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8553:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8545:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8625:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8638:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8649:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8634:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8634:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8581:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8581:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8581:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "8706:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8719:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8730:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8715:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8715:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8662:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8662:72:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8662:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8499:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8511:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8519:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8530:4:8",
														"type": ""
													}
												],
												"src": "8409:332:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8853:60:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8875:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8883:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8871:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8871:14:8"
																	},
																	{
																		"hexValue": "4e6f7468696e6720746f20636c61696d",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8887:18:8",
																		"type": "",
																		"value": "Nothing to claim"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8864:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8864:42:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8864:42:8"
														}
													]
												},
												"name": "store_literal_in_memory_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8845:6:8",
														"type": ""
													}
												],
												"src": "8747:166:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9065:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9075:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9141:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9146:2:8",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9082:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9082:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9075:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9247:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3",
																	"nodeType": "YulIdentifier",
																	"src": "9158:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9158:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9158:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9260:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9271:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9276:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9267:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9267:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9260:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9053:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9061:3:8",
														"type": ""
													}
												],
												"src": "8919:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9462:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9472:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9484:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9495:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9480:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9480:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9472:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9519:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9530:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9515:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9515:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9538:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9544:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9534:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9534:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9508:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9508:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9508:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9564:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9698:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9572:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9572:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9564:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9442:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9457:4:8",
														"type": ""
													}
												],
												"src": "9291:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9779:80:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9789:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "9804:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9798:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9798:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "9789:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9847:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9820:26:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9820:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9820:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "9757:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9765:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9773:5:8",
														"type": ""
													}
												],
												"src": "9716:143:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9942:274:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9988:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "9990:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9990:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9990:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9963:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9972:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9959:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9959:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9984:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9955:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9955:32:8"
															},
															"nodeType": "YulIf",
															"src": "9952:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "10081:128:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10096:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10110:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10100:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10125:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10171:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10182:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10167:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10167:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10191:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "10135:31:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10135:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "10125:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9912:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9923:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9935:6:8",
														"type": ""
													}
												],
												"src": "9865:351:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10328:57:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10350:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10358:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10346:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10346:14:8"
																	},
																	{
																		"hexValue": "496e73756666696369656e7421",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10362:15:8",
																		"type": "",
																		"value": "Insufficient!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10339:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10339:39:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10339:39:8"
														}
													]
												},
												"name": "store_literal_in_memory_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10320:6:8",
														"type": ""
													}
												],
												"src": "10222:163:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10537:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10547:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10613:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10618:2:8",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10554:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10554:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10547:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10719:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811",
																	"nodeType": "YulIdentifier",
																	"src": "10630:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10630:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10630:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10732:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10743:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10748:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10739:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10739:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10732:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10525:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10533:3:8",
														"type": ""
													}
												],
												"src": "10391:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10934:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10944:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10956:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10967:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10952:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10952:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10944:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10991:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11002:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10987:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10987:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11010:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11016:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11006:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11006:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10980:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10980:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10980:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11036:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11170:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11044:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11044:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11036:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10914:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10929:4:8",
														"type": ""
													}
												],
												"src": "10763:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11294:59:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11316:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11324:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11312:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11312:14:8"
																	},
																	{
																		"hexValue": "416c72656164792073746172746564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11328:17:8",
																		"type": "",
																		"value": "Already started"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11305:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11305:41:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11305:41:8"
														}
													]
												},
												"name": "store_literal_in_memory_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11286:6:8",
														"type": ""
													}
												],
												"src": "11188:165:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11505:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11515:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11581:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11586:2:8",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11522:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11522:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11515:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11687:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6",
																	"nodeType": "YulIdentifier",
																	"src": "11598:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11598:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11598:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11700:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11711:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11716:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11707:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11707:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11700:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11493:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11501:3:8",
														"type": ""
													}
												],
												"src": "11359:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11902:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11912:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11924:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11935:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11920:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11920:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11912:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11959:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11970:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11955:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11955:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11978:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11984:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11974:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11974:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11948:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11948:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11948:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12004:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12138:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12012:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12012:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12004:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11882:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11897:4:8",
														"type": ""
													}
												],
												"src": "11731:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12262:56:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12284:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12292:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12280:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12280:14:8"
																	},
																	{
																		"hexValue": "496e73756666696369656e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12296:14:8",
																		"type": "",
																		"value": "Insufficient"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12273:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12273:38:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12273:38:8"
														}
													]
												},
												"name": "store_literal_in_memory_0d617be88096c346284999e0c326580edf46a27365999d8d83893f396c546e11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12254:6:8",
														"type": ""
													}
												],
												"src": "12156:162:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12470:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12480:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12546:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12551:2:8",
																		"type": "",
																		"value": "12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12487:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12487:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12480:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12652:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0d617be88096c346284999e0c326580edf46a27365999d8d83893f396c546e11",
																	"nodeType": "YulIdentifier",
																	"src": "12563:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12563:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12563:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12665:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12676:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12681:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12672:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12672:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12665:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0d617be88096c346284999e0c326580edf46a27365999d8d83893f396c546e11_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12458:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12466:3:8",
														"type": ""
													}
												],
												"src": "12324:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12867:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12877:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12889:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12900:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12885:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12885:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12877:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12924:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12935:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12920:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12920:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12943:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12949:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12939:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12939:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12913:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12913:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12913:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12969:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13103:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0d617be88096c346284999e0c326580edf46a27365999d8d83893f396c546e11_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12977:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12977:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12969:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0d617be88096c346284999e0c326580edf46a27365999d8d83893f396c546e11__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12847:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12862:4:8",
														"type": ""
													}
												],
												"src": "12696:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13227:56:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13249:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13257:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13245:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13245:14:8"
																	},
																	{
																		"hexValue": "496e76616c6964204d6f6465",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13261:14:8",
																		"type": "",
																		"value": "Invalid Mode"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13238:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13238:38:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13238:38:8"
														}
													]
												},
												"name": "store_literal_in_memory_deac108a7d54cf66b12f6e883ab8551f52667d7b9815f115365cc11ce5c44062",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13219:6:8",
														"type": ""
													}
												],
												"src": "13121:162:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13435:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13445:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13511:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13516:2:8",
																		"type": "",
																		"value": "12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13452:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13452:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13445:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13617:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_deac108a7d54cf66b12f6e883ab8551f52667d7b9815f115365cc11ce5c44062",
																	"nodeType": "YulIdentifier",
																	"src": "13528:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13528:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13528:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13630:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13641:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13646:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13637:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13637:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13630:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_deac108a7d54cf66b12f6e883ab8551f52667d7b9815f115365cc11ce5c44062_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13423:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13431:3:8",
														"type": ""
													}
												],
												"src": "13289:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13832:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13842:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13854:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13865:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13850:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13850:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13842:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13889:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13900:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13885:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13885:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13908:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13914:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13904:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13904:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13878:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13878:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13878:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13934:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14068:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_deac108a7d54cf66b12f6e883ab8551f52667d7b9815f115365cc11ce5c44062_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13942:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13942:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13934:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_deac108a7d54cf66b12f6e883ab8551f52667d7b9815f115365cc11ce5c44062__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13812:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13827:4:8",
														"type": ""
													}
												],
												"src": "13661:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14192:67:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14214:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14222:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14210:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14210:14:8"
																	},
																	{
																		"hexValue": "496e76616c6964204c6f636b7570204475726174696f6e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14226:25:8",
																		"type": "",
																		"value": "Invalid Lockup Duration"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14203:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14203:49:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14203:49:8"
														}
													]
												},
												"name": "store_literal_in_memory_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14184:6:8",
														"type": ""
													}
												],
												"src": "14086:173:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14411:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14421:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14487:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14492:2:8",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14428:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14428:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14421:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14593:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561",
																	"nodeType": "YulIdentifier",
																	"src": "14504:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14504:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14504:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14606:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14617:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14622:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14613:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14613:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14606:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14399:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14407:3:8",
														"type": ""
													}
												],
												"src": "14265:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14808:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14818:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14830:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14841:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14826:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14826:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14818:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14865:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14876:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14861:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14861:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14884:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14890:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14880:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14880:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14854:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14854:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14854:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14910:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15044:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14918:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14918:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14910:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14788:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14803:4:8",
														"type": ""
													}
												],
												"src": "14637:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15168:70:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15190:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15198:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15186:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15186:14:8"
																	},
																	{
																		"hexValue": "496e76616c696420556e7374616b696e67204665652052617465",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15202:28:8",
																		"type": "",
																		"value": "Invalid Unstaking Fee Rate"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15179:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15179:52:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15179:52:8"
														}
													]
												},
												"name": "store_literal_in_memory_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "15160:6:8",
														"type": ""
													}
												],
												"src": "15062:176:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15390:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15400:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15466:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15471:2:8",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15407:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15407:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "15400:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15572:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3",
																	"nodeType": "YulIdentifier",
																	"src": "15483:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15483:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15483:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15585:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15596:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15601:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15592:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15592:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "15585:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15378:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "15386:3:8",
														"type": ""
													}
												],
												"src": "15244:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15787:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15797:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15809:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15820:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15805:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15805:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15797:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15844:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15855:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15840:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15840:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15863:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15869:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15859:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15859:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15833:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15833:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15833:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15889:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16023:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15897:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15897:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15889:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15767:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15782:4:8",
														"type": ""
													}
												],
												"src": "15616:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16147:57:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16169:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16177:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16165:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16165:14:8"
																	},
																	{
																		"hexValue": "496e76616c69642076616c7565",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16181:15:8",
																		"type": "",
																		"value": "Invalid value"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16158:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16158:39:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16158:39:8"
														}
													]
												},
												"name": "store_literal_in_memory_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "16139:6:8",
														"type": ""
													}
												],
												"src": "16041:163:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16356:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16366:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16432:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16437:2:8",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16373:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16373:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16366:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16538:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6",
																	"nodeType": "YulIdentifier",
																	"src": "16449:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16449:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16449:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16551:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16562:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16567:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16558:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16558:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "16551:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16344:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16352:3:8",
														"type": ""
													}
												],
												"src": "16210:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16753:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16763:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16775:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16786:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16771:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16771:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16763:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16810:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16821:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16806:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16806:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "16829:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16835:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16825:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16825:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16799:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16799:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16799:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16855:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16989:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16863:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16863:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16855:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16733:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16748:4:8",
														"type": ""
													}
												],
												"src": "16582:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17113:65:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17135:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17143:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17131:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17131:14:8"
																	},
																	{
																		"hexValue": "4572726f723a20696e76616c6964207374616b6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17147:23:8",
																		"type": "",
																		"value": "Error: invalid staker"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17124:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17124:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17124:47:8"
														}
													]
												},
												"name": "store_literal_in_memory_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "17105:6:8",
														"type": ""
													}
												],
												"src": "17007:171:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17330:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17340:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17406:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17411:2:8",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17347:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17347:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "17340:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17512:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684",
																	"nodeType": "YulIdentifier",
																	"src": "17423:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17423:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17423:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17525:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17536:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17541:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17532:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17532:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "17525:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "17318:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "17326:3:8",
														"type": ""
													}
												],
												"src": "17184:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17727:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17737:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17749:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17760:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17745:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17745:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17737:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17784:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17795:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17780:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17780:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "17803:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17809:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17799:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17799:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17773:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17773:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17773:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17829:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "17963:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17837:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17837:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17829:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17707:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17722:4:8",
														"type": ""
													}
												],
												"src": "17556:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18087:119:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "18109:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18117:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18105:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18105:14:8"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18121:34:8",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18098:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18098:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18098:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "18177:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18185:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18173:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18173:15:8"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18190:8:8",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18166:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18166:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18166:33:8"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "18079:6:8",
														"type": ""
													}
												],
												"src": "17981:225:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18358:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18368:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18434:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18439:2:8",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18375:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18375:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "18368:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18540:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "18451:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18451:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18451:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18553:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18564:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18569:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18560:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18560:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "18553:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "18346:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "18354:3:8",
														"type": ""
													}
												],
												"src": "18212:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18755:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18765:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18777:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18788:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18773:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18773:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18765:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18812:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18823:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18808:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18808:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "18831:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18837:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18827:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18827:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18801:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18801:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18801:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18857:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "18991:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18865:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18865:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18857:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18735:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18750:4:8",
														"type": ""
													}
												],
												"src": "18584:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19037:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19054:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19057:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19047:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19047:88:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19047:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19151:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19154:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19144:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19144:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19144:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19175:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19178:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "19168:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19168:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19168:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "19009:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19240:146:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19250:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19273:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "19255:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19255:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "19250:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "19284:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19307:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "19289:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19289:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "19284:1:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19331:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "19333:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19333:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19333:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19325:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19328:1:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "19322:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19322:8:8"
															},
															"nodeType": "YulIf",
															"src": "19319:34:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19363:17:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19375:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19378:1:8"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "19371:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19371:9:8"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "19363:4:8"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "19226:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "19229:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "19235:4:8",
														"type": ""
													}
												],
												"src": "19195:191:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19434:143:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19444:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19467:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "19449:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19449:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "19444:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "19478:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19501:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "19483:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19483:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "19478:1:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19525:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "19527:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19527:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19527:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19522:1:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "19515:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19515:9:8"
															},
															"nodeType": "YulIf",
															"src": "19512:35:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19557:14:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19566:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19569:1:8"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "19562:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19562:9:8"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "19557:1:8"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "19423:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "19426:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "19432:1:8",
														"type": ""
													}
												],
												"src": "19392:185:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19627:261:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19637:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19660:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "19642:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19642:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "19637:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "19671:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19694:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "19676:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19676:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "19671:1:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19834:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "19836:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19836:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19836:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19755:1:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19762:66:8",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "19830:1:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19758:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19758:74:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "19752:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19752:81:8"
															},
															"nodeType": "YulIf",
															"src": "19749:107:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19866:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19877:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19880:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19873:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19873:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "19866:3:8"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "19614:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "19617:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "19623:3:8",
														"type": ""
													}
												],
												"src": "19583:305:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19942:300:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19952:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19975:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "19957:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19957:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "19952:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "19986:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "20009:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "19991:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19991:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "19986:1:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20184:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "20186:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20186:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20186:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "20096:1:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "20089:6:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20089:9:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "20082:6:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20082:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "20104:1:8"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "20111:66:8",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "20179:1:8"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "20107:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20107:74:8"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "20101:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20101:81:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "20078:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20078:105:8"
															},
															"nodeType": "YulIf",
															"src": "20075:131:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20216:20:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "20231:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "20234:1:8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "20227:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20227:9:8"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "20216:7:8"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "19925:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "19928:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "19934:7:8",
														"type": ""
													}
												],
												"src": "19894:348:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20402:288:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20412:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20424:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20435:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20420:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20420:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20412:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "20492:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20505:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20516:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20501:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20501:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20448:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20448:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20448:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "20573:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20586:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20597:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20582:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20582:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20529:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20529:72:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20529:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "20655:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20668:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20679:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20664:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20664:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20611:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20611:72:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20611:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20358:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "20370:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "20378:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "20386:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20397:4:8",
														"type": ""
													}
												],
												"src": "20248:442:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20738:48:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20748:32:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "20773:5:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "20766:6:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20766:13:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "20759:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20759:21:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "20748:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20720:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "20730:7:8",
														"type": ""
													}
												],
												"src": "20696:90:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20832:76:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20886:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "20895:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "20898:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "20888:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20888:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20888:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "20855:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "20877:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "20862:14:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20862:21:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "20852:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20852:32:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "20845:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20845:40:8"
															},
															"nodeType": "YulIf",
															"src": "20842:60:8"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20825:5:8",
														"type": ""
													}
												],
												"src": "20792:116:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20974:77:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20984:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "20999:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "20993:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20993:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "20984:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "21039:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "21015:23:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21015:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21015:30:8"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "20952:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "20960:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20968:5:8",
														"type": ""
													}
												],
												"src": "20914:137:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21131:271:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "21177:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "21179:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21179:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "21179:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "21152:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21161:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "21148:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21148:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21173:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "21144:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21144:32:8"
															},
															"nodeType": "YulIf",
															"src": "21141:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "21270:125:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "21285:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21299:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "21289:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "21314:71:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "21357:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "21368:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "21353:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "21353:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "21377:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "21324:28:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21324:61:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "21314:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21101:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "21112:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "21124:6:8",
														"type": ""
													}
												],
												"src": "21057:345:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21514:123:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "21536:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21544:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21532:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21532:14:8"
																	},
																	{
																		"hexValue": "5361666542455032303a204245503230206f7065726174696f6e20646964206e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21548:34:8",
																		"type": "",
																		"value": "SafeBEP20: BEP20 operation did n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21525:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21525:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21525:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "21604:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21612:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21600:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21600:15:8"
																	},
																	{
																		"hexValue": "6f742073756363656564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21617:12:8",
																		"type": "",
																		"value": "ot succeed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21593:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21593:37:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21593:37:8"
														}
													]
												},
												"name": "store_literal_in_memory_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "21506:6:8",
														"type": ""
													}
												],
												"src": "21408:229:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21789:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21799:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21865:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21870:2:8",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21806:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21806:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "21799:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21971:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082",
																	"nodeType": "YulIdentifier",
																	"src": "21882:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21882:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21882:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21984:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21995:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22000:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21991:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21991:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "21984:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "21777:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "21785:3:8",
														"type": ""
													}
												],
												"src": "21643:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22186:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22196:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22208:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22219:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22204:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22204:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22196:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22243:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22254:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22239:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22239:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "22262:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22268:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "22258:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22258:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22232:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22232:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22232:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22288:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "22422:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22296:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22296:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22288:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "22166:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "22181:4:8",
														"type": ""
													}
												],
												"src": "22015:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22546:119:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "22568:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22576:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22564:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22564:14:8"
																	},
																	{
																		"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22580:34:8",
																		"type": "",
																		"value": "Address: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22557:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22557:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22557:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "22636:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22644:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22632:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22632:15:8"
																	},
																	{
																		"hexValue": "722063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22649:8:8",
																		"type": "",
																		"value": "r call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22625:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22625:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22625:33:8"
														}
													]
												},
												"name": "store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "22538:6:8",
														"type": ""
													}
												],
												"src": "22440:225:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22817:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22827:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22893:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22898:2:8",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22834:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22834:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "22827:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22999:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																	"nodeType": "YulIdentifier",
																	"src": "22910:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22910:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22910:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23012:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23023:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23028:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23019:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "23019:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "23012:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "22805:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "22813:3:8",
														"type": ""
													}
												],
												"src": "22671:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23214:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23224:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "23236:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23247:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23232:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "23232:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23224:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23271:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23282:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23267:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23267:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "23290:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23296:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "23286:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23286:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23260:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "23260:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23260:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23316:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "23450:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23324:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "23324:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23316:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "23194:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "23209:4:8",
														"type": ""
													}
												],
												"src": "23043:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23574:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "23596:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23604:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23592:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23592:14:8"
																	},
																	{
																		"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "23608:31:8",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23585:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "23585:55:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23585:55:8"
														}
													]
												},
												"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "23566:6:8",
														"type": ""
													}
												],
												"src": "23468:179:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23799:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23809:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23875:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23880:2:8",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23816:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "23816:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "23809:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23981:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																	"nodeType": "YulIdentifier",
																	"src": "23892:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "23892:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23892:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23994:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24005:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24010:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24001:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "24001:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "23994:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "23787:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "23795:3:8",
														"type": ""
													}
												],
												"src": "23653:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24196:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24206:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "24218:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24229:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24214:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "24214:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24206:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24253:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24264:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24249:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24249:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "24272:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24278:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "24268:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24268:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24242:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "24242:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24242:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24298:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "24432:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24306:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "24306:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24298:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "24176:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "24191:4:8",
														"type": ""
													}
												],
												"src": "24025:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24508:40:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24519:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "24535:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "24529:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "24529:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "24519:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "24491:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "24501:6:8",
														"type": ""
													}
												],
												"src": "24450:98:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24667:34:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24677:18:8",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "24692:3:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "24677:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "24639:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "24644:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "24655:11:8",
														"type": ""
													}
												],
												"src": "24554:147:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24756:258:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "24766:10:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "24775:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "24770:1:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "24835:63:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "24860:3:8"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "24865:1:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "24856:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "24856:11:8"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "24879:3:8"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "24884:1:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "24875:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "24875:11:8"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "24869:5:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "24869:18:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "24849:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "24849:39:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "24849:39:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "24796:1:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "24799:6:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "24793:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "24793:13:8"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "24807:19:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "24809:15:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "24818:1:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "24821:2:8",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "24814:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "24814:10:8"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "24809:1:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "24789:3:8",
																"statements": []
															},
															"src": "24785:113:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "24932:76:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "24982:3:8"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "24987:6:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "24978:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "24978:16:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "24996:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "24971:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "24971:27:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "24971:27:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "24913:1:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "24916:6:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "24910:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "24910:13:8"
															},
															"nodeType": "YulIf",
															"src": "24907:101:8"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "24738:3:8",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "24743:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "24748:6:8",
														"type": ""
													}
												],
												"src": "24707:307:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25128:265:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "25138:52:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "25184:5:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "25152:31:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "25152:38:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "25142:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "25199:95:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25282:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "25287:6:8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "25206:75:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "25206:88:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "25199:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "25329:5:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25336:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25325:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25325:16:8"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25343:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "25348:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "25303:21:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "25303:52:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25303:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25364:23:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25375:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "25380:6:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25371:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "25371:16:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "25364:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "25109:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "25116:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "25124:3:8",
														"type": ""
													}
												],
												"src": "25020:373:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25533:137:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25544:100:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "25631:6:8"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25640:3:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "25551:79:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "25551:93:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "25544:3:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "25654:10:8",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "25661:3:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "25654:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "25512:3:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "25518:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "25529:3:8",
														"type": ""
													}
												],
												"src": "25399:271:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25735:40:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25746:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "25762:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "25756:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "25756:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "25746:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "25718:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "25728:6:8",
														"type": ""
													}
												],
												"src": "25676:99:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25829:54:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25839:38:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "25857:5:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25864:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25853:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25853:14:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25873:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "25869:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25869:7:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "25849:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "25849:28:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "25839:6:8"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "25812:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "25822:6:8",
														"type": ""
													}
												],
												"src": "25781:102:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25981:272:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "25991:53:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "26038:5:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "26005:32:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "26005:39:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "25995:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "26053:78:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26119:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "26124:6:8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "26060:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "26060:71:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "26053:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "26166:5:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26173:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26162:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26162:16:8"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26180:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "26185:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "26140:21:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "26140:52:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26140:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "26201:46:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26212:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "26239:6:8"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "26217:21:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26217:29:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "26208:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "26208:39:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "26201:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "25962:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "25969:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "25977:3:8",
														"type": ""
													}
												],
												"src": "25889:364:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26377:195:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26387:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "26399:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26410:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "26395:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "26395:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "26387:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "26434:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26445:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26430:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26430:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "26453:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "26459:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "26449:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26449:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26423:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "26423:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26423:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "26479:86:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "26551:6:8"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "26560:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "26487:63:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "26487:78:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "26479:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "26349:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "26361:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "26372:4:8",
														"type": ""
													}
												],
												"src": "26259:313:8"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IBEP20_$912_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IBEP20_$912_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IBEP20_$912_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IBEP20_$912__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IBEP20_$912_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Can't be zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580(memPtr) {\n\n        mstore(add(memPtr, 0), \"Amount should be greater than 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid amount\")\n\n    }\n\n    function abi_encode_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Nothing to claim\")\n\n    }\n\n    function abi_encode_t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient!\")\n\n    }\n\n    function abi_encode_t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6(memPtr) {\n\n        mstore(add(memPtr, 0), \"Already started\")\n\n    }\n\n    function abi_encode_t_stringliteral_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0d617be88096c346284999e0c326580edf46a27365999d8d83893f396c546e11(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient\")\n\n    }\n\n    function abi_encode_t_stringliteral_0d617be88096c346284999e0c326580edf46a27365999d8d83893f396c546e11_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 12)\n        store_literal_in_memory_0d617be88096c346284999e0c326580edf46a27365999d8d83893f396c546e11(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0d617be88096c346284999e0c326580edf46a27365999d8d83893f396c546e11__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0d617be88096c346284999e0c326580edf46a27365999d8d83893f396c546e11_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_deac108a7d54cf66b12f6e883ab8551f52667d7b9815f115365cc11ce5c44062(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid Mode\")\n\n    }\n\n    function abi_encode_t_stringliteral_deac108a7d54cf66b12f6e883ab8551f52667d7b9815f115365cc11ce5c44062_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 12)\n        store_literal_in_memory_deac108a7d54cf66b12f6e883ab8551f52667d7b9815f115365cc11ce5c44062(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_deac108a7d54cf66b12f6e883ab8551f52667d7b9815f115365cc11ce5c44062__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_deac108a7d54cf66b12f6e883ab8551f52667d7b9815f115365cc11ce5c44062_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid Lockup Duration\")\n\n    }\n\n    function abi_encode_t_stringliteral_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid Unstaking Fee Rate\")\n\n    }\n\n    function abi_encode_t_stringliteral_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid value\")\n\n    }\n\n    function abi_encode_t_stringliteral_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684(memPtr) {\n\n        mstore(add(memPtr, 0), \"Error: invalid staker\")\n\n    }\n\n    function abi_encode_t_stringliteral_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeBEP20: BEP20 operation did n\")\n\n        mstore(add(memPtr, 32), \"ot succeed\")\n\n    }\n\n    function abi_encode_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: insufficient balance fo\")\n\n        mstore(add(memPtr, 32), \"r call\")\n\n    }\n\n    function abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: call to non-contract\")\n\n    }\n\n    function abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101a95760003560e01c8063817b1cd2116100f9578063aedf562b11610097578063f2fde38b11610071578063f2fde38b1461046a578063f993185514610486578063fc0c546a146104b6578063fe600f84146104d4576101a9565b8063aedf562b14610402578063c1704a1414610432578063c665d80e1461044e576101a9565b806391e07e7a116100d357806391e07e7a146103925780639e447fc6146103ae578063a694fc3a146103ca578063ae544943146103e6576101a9565b8063817b1cd2146103265780638da5cb5b14610344578063909f093e14610362576101a9565b80634b77dd9e11610166578063645a8a5611610140578063645a8a56146102b2578063692642e7146102e2578063715018a6146102fe5780637e1a378614610308576101a9565b80634b77dd9e1461025a5780635715ec11146102765780635d2ec65d14610294576101a9565b80630917e776146101ae57806323b61117146101cc5780632e1a7d4d146101e85780634641257d146102045780634a4fbeec1461020e5780634b62b70b1461023e575b600080fd5b6101b6610504565b6040516101c391906126c0565b60405180910390f35b6101e660048036038101906101e1919061270c565b61050e565b005b61020260048036038101906101fd919061270c565b6105d7565b005b61020c610974565b005b61022860048036038101906102239190612797565b610cb3565b60405161023591906126c0565b60405180910390f35b6102586004803603810190610253919061270c565b610e43565b005b610274600480360381019061026f91906127c4565b610f0c565b005b61027e61139a565b60405161028b91906126c0565b60405180910390f35b61029c6113a7565b6040516102a991906126c0565b60405180910390f35b6102cc60048036038101906102c79190612797565b6113f9565b6040516102d991906126c0565b60405180910390f35b6102fc60048036038101906102f7919061270c565b611445565b005b61030661155a565b005b6103106115e2565b60405161031d91906126c0565b60405180910390f35b61032e6115ec565b60405161033b91906126c0565b60405180910390f35b61034c6115f2565b6040516103599190612813565b60405180910390f35b61037c6004803603810190610377919061270c565b61161b565b60405161038991906126c0565b60405180910390f35b6103ac60048036038101906103a7919061270c565b6116b6565b005b6103c860048036038101906103c3919061270c565b6117b6565b005b6103e460048036038101906103df919061270c565b6118b6565b005b61040060048036038101906103fb919061270c565b611bb3565b005b61041c60048036038101906104179190612797565b611c7c565b60405161042991906126c0565b60405180910390f35b61044c6004803603810190610447919061270c565b611cdb565b005b6104686004803603810190610463919061270c565b611da4565b005b610484600480360381019061047f9190612797565b611e6d565b005b6104a0600480360381019061049b9190612797565b611f65565b6040516104ad91906126c0565b60405180910390f35b6104be611fb1565b6040516104cb919061288d565b60405180910390f35b6104ee60048036038101906104e99190612797565b611fd7565b6040516104fb91906126c0565b60405180910390f35b6000600c54905090565b610516612023565b73ffffffffffffffffffffffffffffffffffffffff166105346115f2565b73ffffffffffffffffffffffffffffffffffffffff161461058a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058190612905565b60405180910390fd5b600081116105cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c490612971565b60405180910390fd5b8060088190555050565b6000811161061a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610611906129dd565b60405180910390fd5b600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015481111561069f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069690612a49565b60405180910390fd5b6106a761202b565b600081905060006107186201518061070a600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030154426121ff90919063ffffffff16565b61221590919063ffffffff16565b9050600060649050600080600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002015414156107cb576107c3600554600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003015461222b90919063ffffffff16565b4210156107e9565b6000600254846107db9190612a98565b1480156107e85750600083115b5b9050806107f65760015491505b61084b84600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101546121ff90919063ffffffff16565b600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055506108a684600c546121ff90919063ffffffff16565b600c819055506108e56108d66127106108c8858861224190919063ffffffff16565b61221590919063ffffffff16565b856121ff90919063ffffffff16565b93506109343385600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166122579092919063ffffffff16565b7f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a94243643385604051610965929190612ac9565b60405180910390a15050505050565b61097c61202b565b6000610a3d6109ec6127106109de600454600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015461224190919063ffffffff16565b61221590919063ffffffff16565b600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001546121ff90919063ffffffff16565b905060008111610a82576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a7990612b3e565b60405180910390fd5b600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610add9190612813565b60206040518083038186803b158015610af557600080fd5b505afa158015610b09573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b2d9190612b73565b811115610be257600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610b8f9190612813565b60206040518083038186803b158015610ba757600080fd5b505afa158015610bbb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bdf9190612b73565b90505b610c2f3382600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166122579092919063ffffffff16565b6000600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055507fc9695243a805adb74c91f28311176c65b417e842d5699893cef56d18bfa48cba3382604051610ca8929190612ac9565b60405180910390a150565b60006055600b60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206005015414610d085760019050610e3e565b6000600b60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002015414610dd057600062093a80610dad600b60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030154426121ff90919063ffffffff16565b610db79190612a98565b14610dc3576001610dc6565b60005b60ff169050610e3e565b600554610e28600b60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030154426121ff90919063ffffffff16565b1015610e35576001610e38565b60005b60ff1690505b919050565b610e4b612023565b73ffffffffffffffffffffffffffffffffffffffff16610e696115f2565b73ffffffffffffffffffffffffffffffffffffffff1614610ebf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eb690612905565b60405180910390fd5b60008111610f02576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ef990612971565b60405180910390fd5b8060058190555050565b60008211610f4f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f46906129dd565b60405180910390fd5b81600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401610fab9190612813565b60206040518083038186803b158015610fc357600080fd5b505afa158015610fd7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ffb9190612b73565b1161103b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161103290612bec565b60405180910390fd5b6055600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206005015414156110c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110b890612c58565b60405180910390fd5b60008114156111145760065482101561110f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161110690612cc4565b60405180910390fd5b611254565b600181141561116757600954821015611162576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161115990612cc4565b60405180910390fd5b611253565b60028114156111ba576008548210156111b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111ac90612cc4565b60405180910390fd5b611252565b600381141561120d57600754821015611208576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111ff90612cc4565b60405180910390fd5b611251565b60008210611250576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161124790612d30565b60405180910390fd5b5b5b5b5b80600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018190555042600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301819055506055600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060050181905550600a339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611396826118b6565b5050565b6000600a80549050905090565b60006113b161202b565b600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154905090565b6000600b60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001549050919050565b61144d612023565b73ffffffffffffffffffffffffffffffffffffffff1661146b6115f2565b73ffffffffffffffffffffffffffffffffffffffff16146114c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114b890612905565b60405180910390fd5b60008111611504576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114fb90612d9c565b60405180910390fd5b61151a620151808261224190919063ffffffff16565b6002819055507f189bda9782663c67a3f95c0aa5455924c711210b00281c60ead2f0dd8dbc924c8160405161154f91906126c0565b60405180910390a150565b611562612023565b73ffffffffffffffffffffffffffffffffffffffff166115806115f2565b73ffffffffffffffffffffffffffffffffffffffff16146115d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115cd90612905565b60405180910390fd5b6115e060006122dd565b565b6000600354905090565b600c5481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000806000905060008314806116315750600283145b156116405760065490506116ad565b60018314156116535760095490506116ac565b60038314156116665760075490506116ab565b60016000116116aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116a190612d30565b60405180910390fd5b5b5b5b80915050919050565b6116be612023565b73ffffffffffffffffffffffffffffffffffffffff166116dc6115f2565b73ffffffffffffffffffffffffffffffffffffffff1614611732576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161172990612905565b60405180910390fd5b60008111611775576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161176c90612e08565b60405180910390fd5b806001819055507f150c688dd7595bf7862b8ab1fe46756450eb7d731037942b3bbc46f3f0e21b81816040516117ab91906126c0565b60405180910390a150565b6117be612023565b73ffffffffffffffffffffffffffffffffffffffff166117dc6115f2565b73ffffffffffffffffffffffffffffffffffffffff1614611832576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161182990612905565b60405180910390fd5b60008111611875576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161186c90612e74565b60405180910390fd5b806003819055507f1946fb78c7ca778b54d82cabaac5ba67cf446f58d0ff1f8ceaebb6150e54e44f816040516118ab91906126c0565b60405180910390a150565b600081116118f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118f0906129dd565b60405180910390fd5b80600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016119559190612813565b60206040518083038186803b15801561196d57600080fd5b505afa158015611981573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119a59190612b73565b116119e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119dc90612bec565b60405180910390fd5b6055600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206005015414611a6a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a6190612ee0565b60405180910390fd5b611a7261202b565b611ac1333083600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166123a1909392919063ffffffff16565b611b1681600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015461222b90919063ffffffff16565b600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010181905550611b7181600c5461222b90919063ffffffff16565b600c819055507f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d3382604051611ba8929190612ac9565b60405180910390a150565b611bbb612023565b73ffffffffffffffffffffffffffffffffffffffff16611bd96115f2565b73ffffffffffffffffffffffffffffffffffffffff1614611c2f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c2690612905565b60405180910390fd5b60008111611c72576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c6990612971565b60405180910390fd5b8060078190555050565b600080600b60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002015414611cce576001611cd1565b60005b60ff169050919050565b611ce3612023565b73ffffffffffffffffffffffffffffffffffffffff16611d016115f2565b73ffffffffffffffffffffffffffffffffffffffff1614611d57576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d4e90612905565b60405180910390fd5b60008111611d9a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d9190612971565b60405180910390fd5b8060098190555050565b611dac612023565b73ffffffffffffffffffffffffffffffffffffffff16611dca6115f2565b73ffffffffffffffffffffffffffffffffffffffff1614611e20576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e1790612905565b60405180910390fd5b60008111611e63576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e5a90612971565b60405180910390fd5b8060068190555050565b611e75612023565b73ffffffffffffffffffffffffffffffffffffffff16611e936115f2565b73ffffffffffffffffffffffffffffffffffffffff1614611ee9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ee090612905565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611f59576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f5090612f72565b60405180910390fd5b611f62816122dd565b50565b6000600b60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101549050919050565b600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600b60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600501549050919050565b600033905090565b6000600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154905060006121176127106121096003546120fb6120ec6121c06120de600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040154436121ff90919063ffffffff16565b61221590919063ffffffff16565b8761224190919063ffffffff16565b61224190919063ffffffff16565b61221590919063ffffffff16565b905061216e81600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015461222b90919063ffffffff16565b600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190555043600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600401819055505050565b6000818361220d9190612fc1565b905092915050565b600081836122239190612ff5565b905092915050565b600081836122399190613026565b905092915050565b6000818361224f919061307c565b905092915050565b6122d88363a9059cbb60e01b8484604051602401612276929190612ac9565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061242a565b505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b612424846323b872dd60e01b8585856040516024016123c2939291906130d6565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061242a565b50505050565b600061248c826040518060400160405280602081526020017f5361666542455032303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166124f19092919063ffffffff16565b90506000815111156124ec57808060200190518101906124ac9190613145565b6124eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016124e2906131e4565b60405180910390fd5b5b505050565b60606125008484600085612509565b90509392505050565b60608247101561254e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161254590613276565b60405180910390fd5b6125578561261d565b612596576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161258d906132e2565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516125bf919061337c565b60006040518083038185875af1925050503d80600081146125fc576040519150601f19603f3d011682016040523d82523d6000602084013e612601565b606091505b5091509150612611828286612640565b92505050949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60608315612650578290506126a0565b6000835111156126635782518084602001fd5b816040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161269791906133e8565b60405180910390fd5b9392505050565b6000819050919050565b6126ba816126a7565b82525050565b60006020820190506126d560008301846126b1565b92915050565b600080fd5b6126e9816126a7565b81146126f457600080fd5b50565b600081359050612706816126e0565b92915050565b600060208284031215612722576127216126db565b5b6000612730848285016126f7565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061276482612739565b9050919050565b61277481612759565b811461277f57600080fd5b50565b6000813590506127918161276b565b92915050565b6000602082840312156127ad576127ac6126db565b5b60006127bb84828501612782565b91505092915050565b600080604083850312156127db576127da6126db565b5b60006127e9858286016126f7565b92505060206127fa858286016126f7565b9150509250929050565b61280d81612759565b82525050565b60006020820190506128286000830184612804565b92915050565b6000819050919050565b600061285361284e61284984612739565b61282e565b612739565b9050919050565b600061286582612838565b9050919050565b60006128778261285a565b9050919050565b6128878161286c565b82525050565b60006020820190506128a2600083018461287e565b92915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006128ef6020836128a8565b91506128fa826128b9565b602082019050919050565b6000602082019050818103600083015261291e816128e2565b9050919050565b7f43616e2774206265207a65726f00000000000000000000000000000000000000600082015250565b600061295b600d836128a8565b915061296682612925565b602082019050919050565b6000602082019050818103600083015261298a8161294e565b9050919050565b7f416d6f756e742073686f756c642062652067726561746572207468616e203000600082015250565b60006129c7601f836128a8565b91506129d282612991565b602082019050919050565b600060208201905081810360008301526129f6816129ba565b9050919050565b7f496e76616c696420616d6f756e74000000000000000000000000000000000000600082015250565b6000612a33600e836128a8565b9150612a3e826129fd565b602082019050919050565b60006020820190508181036000830152612a6281612a26565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000612aa3826126a7565b9150612aae836126a7565b925082612abe57612abd612a69565b5b828206905092915050565b6000604082019050612ade6000830185612804565b612aeb60208301846126b1565b9392505050565b7f4e6f7468696e6720746f20636c61696d00000000000000000000000000000000600082015250565b6000612b286010836128a8565b9150612b3382612af2565b602082019050919050565b60006020820190508181036000830152612b5781612b1b565b9050919050565b600081519050612b6d816126e0565b92915050565b600060208284031215612b8957612b886126db565b5b6000612b9784828501612b5e565b91505092915050565b7f496e73756666696369656e742100000000000000000000000000000000000000600082015250565b6000612bd6600d836128a8565b9150612be182612ba0565b602082019050919050565b60006020820190508181036000830152612c0581612bc9565b9050919050565b7f416c726561647920737461727465640000000000000000000000000000000000600082015250565b6000612c42600f836128a8565b9150612c4d82612c0c565b602082019050919050565b60006020820190508181036000830152612c7181612c35565b9050919050565b7f496e73756666696369656e740000000000000000000000000000000000000000600082015250565b6000612cae600c836128a8565b9150612cb982612c78565b602082019050919050565b60006020820190508181036000830152612cdd81612ca1565b9050919050565b7f496e76616c6964204d6f64650000000000000000000000000000000000000000600082015250565b6000612d1a600c836128a8565b9150612d2582612ce4565b602082019050919050565b60006020820190508181036000830152612d4981612d0d565b9050919050565b7f496e76616c6964204c6f636b7570204475726174696f6e000000000000000000600082015250565b6000612d866017836128a8565b9150612d9182612d50565b602082019050919050565b60006020820190508181036000830152612db581612d79565b9050919050565b7f496e76616c696420556e7374616b696e67204665652052617465000000000000600082015250565b6000612df2601a836128a8565b9150612dfd82612dbc565b602082019050919050565b60006020820190508181036000830152612e2181612de5565b9050919050565b7f496e76616c69642076616c756500000000000000000000000000000000000000600082015250565b6000612e5e600d836128a8565b9150612e6982612e28565b602082019050919050565b60006020820190508181036000830152612e8d81612e51565b9050919050565b7f4572726f723a20696e76616c6964207374616b65720000000000000000000000600082015250565b6000612eca6015836128a8565b9150612ed582612e94565b602082019050919050565b60006020820190508181036000830152612ef981612ebd565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000612f5c6026836128a8565b9150612f6782612f00565b604082019050919050565b60006020820190508181036000830152612f8b81612f4f565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612fcc826126a7565b9150612fd7836126a7565b925082821015612fea57612fe9612f92565b5b828203905092915050565b6000613000826126a7565b915061300b836126a7565b92508261301b5761301a612a69565b5b828204905092915050565b6000613031826126a7565b915061303c836126a7565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561307157613070612f92565b5b828201905092915050565b6000613087826126a7565b9150613092836126a7565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156130cb576130ca612f92565b5b828202905092915050565b60006060820190506130eb6000830186612804565b6130f86020830185612804565b61310560408301846126b1565b949350505050565b60008115159050919050565b6131228161310d565b811461312d57600080fd5b50565b60008151905061313f81613119565b92915050565b60006020828403121561315b5761315a6126db565b5b600061316984828501613130565b91505092915050565b7f5361666542455032303a204245503230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b60006131ce602a836128a8565b91506131d982613172565b604082019050919050565b600060208201905081810360008301526131fd816131c1565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b60006132606026836128a8565b915061326b82613204565b604082019050919050565b6000602082019050818103600083015261328f81613253565b9050919050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b60006132cc601d836128a8565b91506132d782613296565b602082019050919050565b600060208201905081810360008301526132fb816132bf565b9050919050565b600081519050919050565b600081905092915050565b60005b8381101561333657808201518184015260208101905061331b565b83811115613345576000848401525b50505050565b600061335682613302565b613360818561330d565b9350613370818560208601613318565b80840191505092915050565b6000613388828461334b565b915081905092915050565b600081519050919050565b6000601f19601f8301169050919050565b60006133ba82613393565b6133c481856128a8565b93506133d4818560208601613318565b6133dd8161339e565b840191505092915050565b6000602082019050818103600083015261340281846133af565b90509291505056fea2646970667358221220cdea9b3ef1c60a0b095439f624d2aa1d64d8fa8e48a702d9133a1bddc93a5bdd64736f6c63430008090033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1A9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x817B1CD2 GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0xAEDF562B GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xF2FDE38B GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x46A JUMPI DUP1 PUSH4 0xF9931855 EQ PUSH2 0x486 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x4B6 JUMPI DUP1 PUSH4 0xFE600F84 EQ PUSH2 0x4D4 JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0xAEDF562B EQ PUSH2 0x402 JUMPI DUP1 PUSH4 0xC1704A14 EQ PUSH2 0x432 JUMPI DUP1 PUSH4 0xC665D80E EQ PUSH2 0x44E JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x91E07E7A GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x91E07E7A EQ PUSH2 0x392 JUMPI DUP1 PUSH4 0x9E447FC6 EQ PUSH2 0x3AE JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x3CA JUMPI DUP1 PUSH4 0xAE544943 EQ PUSH2 0x3E6 JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x817B1CD2 EQ PUSH2 0x326 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x344 JUMPI DUP1 PUSH4 0x909F093E EQ PUSH2 0x362 JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x4B77DD9E GT PUSH2 0x166 JUMPI DUP1 PUSH4 0x645A8A56 GT PUSH2 0x140 JUMPI DUP1 PUSH4 0x645A8A56 EQ PUSH2 0x2B2 JUMPI DUP1 PUSH4 0x692642E7 EQ PUSH2 0x2E2 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2FE JUMPI DUP1 PUSH4 0x7E1A3786 EQ PUSH2 0x308 JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x4B77DD9E EQ PUSH2 0x25A JUMPI DUP1 PUSH4 0x5715EC11 EQ PUSH2 0x276 JUMPI DUP1 PUSH4 0x5D2EC65D EQ PUSH2 0x294 JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x917E776 EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0x23B61117 EQ PUSH2 0x1CC JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x1E8 JUMPI DUP1 PUSH4 0x4641257D EQ PUSH2 0x204 JUMPI DUP1 PUSH4 0x4A4FBEEC EQ PUSH2 0x20E JUMPI DUP1 PUSH4 0x4B62B70B EQ PUSH2 0x23E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B6 PUSH2 0x504 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C3 SWAP2 SWAP1 PUSH2 0x26C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E1 SWAP2 SWAP1 PUSH2 0x270C JUMP JUMPDEST PUSH2 0x50E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x202 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x270C JUMP JUMPDEST PUSH2 0x5D7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x20C PUSH2 0x974 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x228 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x223 SWAP2 SWAP1 PUSH2 0x2797 JUMP JUMPDEST PUSH2 0xCB3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x235 SWAP2 SWAP1 PUSH2 0x26C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x258 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x253 SWAP2 SWAP1 PUSH2 0x270C JUMP JUMPDEST PUSH2 0xE43 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x274 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26F SWAP2 SWAP1 PUSH2 0x27C4 JUMP JUMPDEST PUSH2 0xF0C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x27E PUSH2 0x139A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28B SWAP2 SWAP1 PUSH2 0x26C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29C PUSH2 0x13A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A9 SWAP2 SWAP1 PUSH2 0x26C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C7 SWAP2 SWAP1 PUSH2 0x2797 JUMP JUMPDEST PUSH2 0x13F9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D9 SWAP2 SWAP1 PUSH2 0x26C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F7 SWAP2 SWAP1 PUSH2 0x270C JUMP JUMPDEST PUSH2 0x1445 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x306 PUSH2 0x155A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x310 PUSH2 0x15E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31D SWAP2 SWAP1 PUSH2 0x26C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x32E PUSH2 0x15EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33B SWAP2 SWAP1 PUSH2 0x26C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34C PUSH2 0x15F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x359 SWAP2 SWAP1 PUSH2 0x2813 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x37C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x377 SWAP2 SWAP1 PUSH2 0x270C JUMP JUMPDEST PUSH2 0x161B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x389 SWAP2 SWAP1 PUSH2 0x26C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3AC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A7 SWAP2 SWAP1 PUSH2 0x270C JUMP JUMPDEST PUSH2 0x16B6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3C8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C3 SWAP2 SWAP1 PUSH2 0x270C JUMP JUMPDEST PUSH2 0x17B6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3E4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3DF SWAP2 SWAP1 PUSH2 0x270C JUMP JUMPDEST PUSH2 0x18B6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x400 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3FB SWAP2 SWAP1 PUSH2 0x270C JUMP JUMPDEST PUSH2 0x1BB3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x41C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x417 SWAP2 SWAP1 PUSH2 0x2797 JUMP JUMPDEST PUSH2 0x1C7C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x429 SWAP2 SWAP1 PUSH2 0x26C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x44C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x447 SWAP2 SWAP1 PUSH2 0x270C JUMP JUMPDEST PUSH2 0x1CDB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x468 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x463 SWAP2 SWAP1 PUSH2 0x270C JUMP JUMPDEST PUSH2 0x1DA4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x484 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x47F SWAP2 SWAP1 PUSH2 0x2797 JUMP JUMPDEST PUSH2 0x1E6D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x49B SWAP2 SWAP1 PUSH2 0x2797 JUMP JUMPDEST PUSH2 0x1F65 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4AD SWAP2 SWAP1 PUSH2 0x26C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4BE PUSH2 0x1FB1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4CB SWAP2 SWAP1 PUSH2 0x288D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4EE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4E9 SWAP2 SWAP1 PUSH2 0x2797 JUMP JUMPDEST PUSH2 0x1FD7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4FB SWAP2 SWAP1 PUSH2 0x26C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0xC SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x516 PUSH2 0x2023 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x534 PUSH2 0x15F2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x58A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x581 SWAP1 PUSH2 0x2905 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x5CD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C4 SWAP1 PUSH2 0x2971 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x8 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x61A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x611 SWAP1 PUSH2 0x29DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD DUP2 GT ISZERO PUSH2 0x69F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x696 SWAP1 PUSH2 0x2A49 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6A7 PUSH2 0x202B JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x0 PUSH2 0x718 PUSH3 0x15180 PUSH2 0x70A PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD TIMESTAMP PUSH2 0x21FF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2215 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x64 SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD EQ ISZERO PUSH2 0x7CB JUMPI PUSH2 0x7C3 PUSH1 0x5 SLOAD PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x222B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x7E9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD DUP5 PUSH2 0x7DB SWAP2 SWAP1 PUSH2 0x2A98 JUMP JUMPDEST EQ DUP1 ISZERO PUSH2 0x7E8 JUMPI POP PUSH1 0x0 DUP4 GT JUMPDEST JUMPDEST SWAP1 POP DUP1 PUSH2 0x7F6 JUMPI PUSH1 0x1 SLOAD SWAP2 POP JUMPDEST PUSH2 0x84B DUP5 PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x21FF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x8A6 DUP5 PUSH1 0xC SLOAD PUSH2 0x21FF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xC DUP2 SWAP1 SSTORE POP PUSH2 0x8E5 PUSH2 0x8D6 PUSH2 0x2710 PUSH2 0x8C8 DUP6 DUP9 PUSH2 0x2241 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2215 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 PUSH2 0x21FF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP4 POP PUSH2 0x934 CALLER DUP6 PUSH1 0xD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2257 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH32 0x884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364 CALLER DUP6 PUSH1 0x40 MLOAD PUSH2 0x965 SWAP3 SWAP2 SWAP1 PUSH2 0x2AC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x97C PUSH2 0x202B JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA3D PUSH2 0x9EC PUSH2 0x2710 PUSH2 0x9DE PUSH1 0x4 SLOAD PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH2 0x2241 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2215 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH2 0x21FF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0xA82 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA79 SWAP1 PUSH2 0x2B3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xADD SWAP2 SWAP1 PUSH2 0x2813 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAF5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB09 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB2D SWAP2 SWAP1 PUSH2 0x2B73 JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0xBE2 JUMPI PUSH1 0xD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB8F SWAP2 SWAP1 PUSH2 0x2813 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBBB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBDF SWAP2 SWAP1 PUSH2 0x2B73 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0xC2F CALLER DUP3 PUSH1 0xD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2257 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH32 0xC9695243A805ADB74C91F28311176C65B417E842D5699893CEF56D18BFA48CBA CALLER DUP3 PUSH1 0x40 MLOAD PUSH2 0xCA8 SWAP3 SWAP2 SWAP1 PUSH2 0x2AC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x55 PUSH1 0xB PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD EQ PUSH2 0xD08 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0xE3E JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD EQ PUSH2 0xDD0 JUMPI PUSH1 0x0 PUSH3 0x93A80 PUSH2 0xDAD PUSH1 0xB PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD TIMESTAMP PUSH2 0x21FF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xDB7 SWAP2 SWAP1 PUSH2 0x2A98 JUMP JUMPDEST EQ PUSH2 0xDC3 JUMPI PUSH1 0x1 PUSH2 0xDC6 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH2 0xE3E JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0xE28 PUSH1 0xB PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD TIMESTAMP PUSH2 0x21FF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST LT ISZERO PUSH2 0xE35 JUMPI PUSH1 0x1 PUSH2 0xE38 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0xFF AND SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE4B PUSH2 0x2023 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xE69 PUSH2 0x15F2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xEBF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEB6 SWAP1 PUSH2 0x2905 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xF02 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEF9 SWAP1 PUSH2 0x2971 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0xF4F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF46 SWAP1 PUSH2 0x29DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0xD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFAB SWAP2 SWAP1 PUSH2 0x2813 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xFD7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFFB SWAP2 SWAP1 PUSH2 0x2B73 JUMP JUMPDEST GT PUSH2 0x103B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1032 SWAP1 PUSH2 0x2BEC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x55 PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD EQ ISZERO PUSH2 0x10C1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10B8 SWAP1 PUSH2 0x2C58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0x1114 JUMPI PUSH1 0x6 SLOAD DUP3 LT ISZERO PUSH2 0x110F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1106 SWAP1 PUSH2 0x2CC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1254 JUMP JUMPDEST PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x1167 JUMPI PUSH1 0x9 SLOAD DUP3 LT ISZERO PUSH2 0x1162 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1159 SWAP1 PUSH2 0x2CC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1253 JUMP JUMPDEST PUSH1 0x2 DUP2 EQ ISZERO PUSH2 0x11BA JUMPI PUSH1 0x8 SLOAD DUP3 LT ISZERO PUSH2 0x11B5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11AC SWAP1 PUSH2 0x2CC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1252 JUMP JUMPDEST PUSH1 0x3 DUP2 EQ ISZERO PUSH2 0x120D JUMPI PUSH1 0x7 SLOAD DUP3 LT ISZERO PUSH2 0x1208 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11FF SWAP1 PUSH2 0x2CC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1251 JUMP JUMPDEST PUSH1 0x0 DUP3 LT PUSH2 0x1250 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1247 SWAP1 PUSH2 0x2D30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST JUMPDEST JUMPDEST JUMPDEST DUP1 PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x55 PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD DUP2 SWAP1 SSTORE POP PUSH1 0xA CALLER SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x1396 DUP3 PUSH2 0x18B6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13B1 PUSH2 0x202B JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x144D PUSH2 0x2023 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x146B PUSH2 0x15F2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x14C1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14B8 SWAP1 PUSH2 0x2905 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x1504 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14FB SWAP1 PUSH2 0x2D9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x151A PUSH3 0x15180 DUP3 PUSH2 0x2241 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH32 0x189BDA9782663C67A3F95C0AA5455924C711210B00281C60EAD2F0DD8DBC924C DUP2 PUSH1 0x40 MLOAD PUSH2 0x154F SWAP2 SWAP1 PUSH2 0x26C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x1562 PUSH2 0x2023 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1580 PUSH2 0x15F2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x15D6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15CD SWAP1 PUSH2 0x2905 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x15E0 PUSH1 0x0 PUSH2 0x22DD JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 DUP4 EQ DUP1 PUSH2 0x1631 JUMPI POP PUSH1 0x2 DUP4 EQ JUMPDEST ISZERO PUSH2 0x1640 JUMPI PUSH1 0x6 SLOAD SWAP1 POP PUSH2 0x16AD JUMP JUMPDEST PUSH1 0x1 DUP4 EQ ISZERO PUSH2 0x1653 JUMPI PUSH1 0x9 SLOAD SWAP1 POP PUSH2 0x16AC JUMP JUMPDEST PUSH1 0x3 DUP4 EQ ISZERO PUSH2 0x1666 JUMPI PUSH1 0x7 SLOAD SWAP1 POP PUSH2 0x16AB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 GT PUSH2 0x16AA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16A1 SWAP1 PUSH2 0x2D30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST JUMPDEST JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16BE PUSH2 0x2023 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x16DC PUSH2 0x15F2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1732 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1729 SWAP1 PUSH2 0x2905 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x1775 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x176C SWAP1 PUSH2 0x2E08 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH32 0x150C688DD7595BF7862B8AB1FE46756450EB7D731037942B3BBC46F3F0E21B81 DUP2 PUSH1 0x40 MLOAD PUSH2 0x17AB SWAP2 SWAP1 PUSH2 0x26C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x17BE PUSH2 0x2023 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x17DC PUSH2 0x15F2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1832 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1829 SWAP1 PUSH2 0x2905 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x1875 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x186C SWAP1 PUSH2 0x2E74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH32 0x1946FB78C7CA778B54D82CABAAC5BA67CF446F58D0FF1F8CEAEBB6150E54E44F DUP2 PUSH1 0x40 MLOAD PUSH2 0x18AB SWAP2 SWAP1 PUSH2 0x26C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x18F9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18F0 SWAP1 PUSH2 0x29DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1955 SWAP2 SWAP1 PUSH2 0x2813 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x196D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1981 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x19A5 SWAP2 SWAP1 PUSH2 0x2B73 JUMP JUMPDEST GT PUSH2 0x19E5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19DC SWAP1 PUSH2 0x2BEC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x55 PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD EQ PUSH2 0x1A6A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A61 SWAP1 PUSH2 0x2EE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A72 PUSH2 0x202B JUMP JUMPDEST PUSH2 0x1AC1 CALLER ADDRESS DUP4 PUSH1 0xD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x23A1 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1B16 DUP2 PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x222B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x1B71 DUP2 PUSH1 0xC SLOAD PUSH2 0x222B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xC DUP2 SWAP1 SSTORE POP PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D CALLER DUP3 PUSH1 0x40 MLOAD PUSH2 0x1BA8 SWAP3 SWAP2 SWAP1 PUSH2 0x2AC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x1BBB PUSH2 0x2023 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1BD9 PUSH2 0x15F2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1C2F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C26 SWAP1 PUSH2 0x2905 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x1C72 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C69 SWAP1 PUSH2 0x2971 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xB PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD EQ PUSH2 0x1CCE JUMPI PUSH1 0x1 PUSH2 0x1CD1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CE3 PUSH2 0x2023 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1D01 PUSH2 0x15F2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1D57 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D4E SWAP1 PUSH2 0x2905 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x1D9A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D91 SWAP1 PUSH2 0x2971 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x9 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x1DAC PUSH2 0x2023 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1DCA PUSH2 0x15F2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1E20 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E17 SWAP1 PUSH2 0x2905 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x1E63 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E5A SWAP1 PUSH2 0x2971 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x1E75 PUSH2 0x2023 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1E93 PUSH2 0x15F2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1EE9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1EE0 SWAP1 PUSH2 0x2905 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1F59 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F50 SWAP1 PUSH2 0x2F72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1F62 DUP2 PUSH2 0x22DD JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP PUSH1 0x0 PUSH2 0x2117 PUSH2 0x2710 PUSH2 0x2109 PUSH1 0x3 SLOAD PUSH2 0x20FB PUSH2 0x20EC PUSH2 0x21C0 PUSH2 0x20DE PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD SLOAD NUMBER PUSH2 0x21FF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2215 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP8 PUSH2 0x2241 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2241 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2215 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x216E DUP2 PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH2 0x222B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP NUMBER PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x220D SWAP2 SWAP1 PUSH2 0x2FC1 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x2223 SWAP2 SWAP1 PUSH2 0x2FF5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x2239 SWAP2 SWAP1 PUSH2 0x3026 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x224F SWAP2 SWAP1 PUSH2 0x307C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x22D8 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x2276 SWAP3 SWAP2 SWAP1 PUSH2 0x2AC9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x242A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x2424 DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x23C2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x30D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x242A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x248C DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666542455032303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x24F1 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x24EC JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x24AC SWAP2 SWAP1 PUSH2 0x3145 JUMP JUMPDEST PUSH2 0x24EB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x24E2 SWAP1 PUSH2 0x31E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2500 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x2509 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x254E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2545 SWAP1 PUSH2 0x3276 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2557 DUP6 PUSH2 0x261D JUMP JUMPDEST PUSH2 0x2596 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x258D SWAP1 PUSH2 0x32E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x25BF SWAP2 SWAP1 PUSH2 0x337C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x25FC JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2601 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x2611 DUP3 DUP3 DUP7 PUSH2 0x2640 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x2650 JUMPI DUP3 SWAP1 POP PUSH2 0x26A0 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0x2663 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2697 SWAP2 SWAP1 PUSH2 0x33E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x26BA DUP2 PUSH2 0x26A7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x26D5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x26B1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x26E9 DUP2 PUSH2 0x26A7 JUMP JUMPDEST DUP2 EQ PUSH2 0x26F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2706 DUP2 PUSH2 0x26E0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2722 JUMPI PUSH2 0x2721 PUSH2 0x26DB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2730 DUP5 DUP3 DUP6 ADD PUSH2 0x26F7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2764 DUP3 PUSH2 0x2739 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2774 DUP2 PUSH2 0x2759 JUMP JUMPDEST DUP2 EQ PUSH2 0x277F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2791 DUP2 PUSH2 0x276B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x27AD JUMPI PUSH2 0x27AC PUSH2 0x26DB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x27BB DUP5 DUP3 DUP6 ADD PUSH2 0x2782 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x27DB JUMPI PUSH2 0x27DA PUSH2 0x26DB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x27E9 DUP6 DUP3 DUP7 ADD PUSH2 0x26F7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x27FA DUP6 DUP3 DUP7 ADD PUSH2 0x26F7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x280D DUP2 PUSH2 0x2759 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2828 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2804 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2853 PUSH2 0x284E PUSH2 0x2849 DUP5 PUSH2 0x2739 JUMP JUMPDEST PUSH2 0x282E JUMP JUMPDEST PUSH2 0x2739 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2865 DUP3 PUSH2 0x2838 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2877 DUP3 PUSH2 0x285A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2887 DUP2 PUSH2 0x286C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x28A2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x287E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28EF PUSH1 0x20 DUP4 PUSH2 0x28A8 JUMP JUMPDEST SWAP2 POP PUSH2 0x28FA DUP3 PUSH2 0x28B9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x291E DUP2 PUSH2 0x28E2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E2774206265207A65726F00000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x295B PUSH1 0xD DUP4 PUSH2 0x28A8 JUMP JUMPDEST SWAP2 POP PUSH2 0x2966 DUP3 PUSH2 0x2925 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x298A DUP2 PUSH2 0x294E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416D6F756E742073686F756C642062652067726561746572207468616E203000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29C7 PUSH1 0x1F DUP4 PUSH2 0x28A8 JUMP JUMPDEST SWAP2 POP PUSH2 0x29D2 DUP3 PUSH2 0x2991 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x29F6 DUP2 PUSH2 0x29BA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420616D6F756E74000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A33 PUSH1 0xE DUP4 PUSH2 0x28A8 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A3E DUP3 PUSH2 0x29FD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2A62 DUP2 PUSH2 0x2A26 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2AA3 DUP3 PUSH2 0x26A7 JUMP JUMPDEST SWAP2 POP PUSH2 0x2AAE DUP4 PUSH2 0x26A7 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2ABE JUMPI PUSH2 0x2ABD PUSH2 0x2A69 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2ADE PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2804 JUMP JUMPDEST PUSH2 0x2AEB PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x26B1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E6F7468696E6720746F20636C61696D00000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B28 PUSH1 0x10 DUP4 PUSH2 0x28A8 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B33 DUP3 PUSH2 0x2AF2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2B57 DUP2 PUSH2 0x2B1B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2B6D DUP2 PUSH2 0x26E0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2B89 JUMPI PUSH2 0x2B88 PUSH2 0x26DB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2B97 DUP5 DUP3 DUP6 ADD PUSH2 0x2B5E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742100000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BD6 PUSH1 0xD DUP4 PUSH2 0x28A8 JUMP JUMPDEST SWAP2 POP PUSH2 0x2BE1 DUP3 PUSH2 0x2BA0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2C05 DUP2 PUSH2 0x2BC9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416C726561647920737461727465640000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C42 PUSH1 0xF DUP4 PUSH2 0x28A8 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C4D DUP3 PUSH2 0x2C0C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2C71 DUP2 PUSH2 0x2C35 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E740000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CAE PUSH1 0xC DUP4 PUSH2 0x28A8 JUMP JUMPDEST SWAP2 POP PUSH2 0x2CB9 DUP3 PUSH2 0x2C78 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2CDD DUP2 PUSH2 0x2CA1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C6964204D6F64650000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D1A PUSH1 0xC DUP4 PUSH2 0x28A8 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D25 DUP3 PUSH2 0x2CE4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2D49 DUP2 PUSH2 0x2D0D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C6964204C6F636B7570204475726174696F6E000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D86 PUSH1 0x17 DUP4 PUSH2 0x28A8 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D91 DUP3 PUSH2 0x2D50 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2DB5 DUP2 PUSH2 0x2D79 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420556E7374616B696E67204665652052617465000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DF2 PUSH1 0x1A DUP4 PUSH2 0x28A8 JUMP JUMPDEST SWAP2 POP PUSH2 0x2DFD DUP3 PUSH2 0x2DBC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2E21 DUP2 PUSH2 0x2DE5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C69642076616C756500000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E5E PUSH1 0xD DUP4 PUSH2 0x28A8 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E69 DUP3 PUSH2 0x2E28 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2E8D DUP2 PUSH2 0x2E51 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4572726F723A20696E76616C6964207374616B65720000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2ECA PUSH1 0x15 DUP4 PUSH2 0x28A8 JUMP JUMPDEST SWAP2 POP PUSH2 0x2ED5 DUP3 PUSH2 0x2E94 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2EF9 DUP2 PUSH2 0x2EBD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F5C PUSH1 0x26 DUP4 PUSH2 0x28A8 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F67 DUP3 PUSH2 0x2F00 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2F8B DUP2 PUSH2 0x2F4F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2FCC DUP3 PUSH2 0x26A7 JUMP JUMPDEST SWAP2 POP PUSH2 0x2FD7 DUP4 PUSH2 0x26A7 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x2FEA JUMPI PUSH2 0x2FE9 PUSH2 0x2F92 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3000 DUP3 PUSH2 0x26A7 JUMP JUMPDEST SWAP2 POP PUSH2 0x300B DUP4 PUSH2 0x26A7 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x301B JUMPI PUSH2 0x301A PUSH2 0x2A69 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3031 DUP3 PUSH2 0x26A7 JUMP JUMPDEST SWAP2 POP PUSH2 0x303C DUP4 PUSH2 0x26A7 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x3071 JUMPI PUSH2 0x3070 PUSH2 0x2F92 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3087 DUP3 PUSH2 0x26A7 JUMP JUMPDEST SWAP2 POP PUSH2 0x3092 DUP4 PUSH2 0x26A7 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x30CB JUMPI PUSH2 0x30CA PUSH2 0x2F92 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x30EB PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2804 JUMP JUMPDEST PUSH2 0x30F8 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2804 JUMP JUMPDEST PUSH2 0x3105 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x26B1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3122 DUP2 PUSH2 0x310D JUMP JUMPDEST DUP2 EQ PUSH2 0x312D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x313F DUP2 PUSH2 0x3119 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x315B JUMPI PUSH2 0x315A PUSH2 0x26DB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3169 DUP5 DUP3 DUP6 ADD PUSH2 0x3130 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5361666542455032303A204245503230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x31CE PUSH1 0x2A DUP4 PUSH2 0x28A8 JUMP JUMPDEST SWAP2 POP PUSH2 0x31D9 DUP3 PUSH2 0x3172 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x31FD DUP2 PUSH2 0x31C1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3260 PUSH1 0x26 DUP4 PUSH2 0x28A8 JUMP JUMPDEST SWAP2 POP PUSH2 0x326B DUP3 PUSH2 0x3204 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x328F DUP2 PUSH2 0x3253 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32CC PUSH1 0x1D DUP4 PUSH2 0x28A8 JUMP JUMPDEST SWAP2 POP PUSH2 0x32D7 DUP3 PUSH2 0x3296 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x32FB DUP2 PUSH2 0x32BF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3336 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x331B JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x3345 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3356 DUP3 PUSH2 0x3302 JUMP JUMPDEST PUSH2 0x3360 DUP2 DUP6 PUSH2 0x330D JUMP JUMPDEST SWAP4 POP PUSH2 0x3370 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3318 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3388 DUP3 DUP5 PUSH2 0x334B JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33BA DUP3 PUSH2 0x3393 JUMP JUMPDEST PUSH2 0x33C4 DUP2 DUP6 PUSH2 0x28A8 JUMP JUMPDEST SWAP4 POP PUSH2 0x33D4 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3318 JUMP JUMPDEST PUSH2 0x33DD DUP2 PUSH2 0x339E JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3402 DUP2 DUP5 PUSH2 0x33AF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCD 0xEA SWAP12 RETURNDATACOPY CALL 0xC6 EXP SIGNEXTEND MULMOD SLOAD CODECOPY 0xF6 0x24 0xD2 0xAA SAR PUSH5 0xD8FA8E48A7 MUL 0xD9 SGT GASPRICE SHL 0xDD 0xC9 GASPRICE JUMPDEST 0xDD PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ",
							"sourceMap": "260:9502:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4398:95;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8127:172;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5732:1060;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;8738:585;;;:::i;:::-;;4886:402;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7577:170;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2828:912;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4501:103;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8540:153;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5448:135;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7039:248;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1668:101:0;;;:::i;:::-;;5591:94:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1213:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1036:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9331:428:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7295:274;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6804:227;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3808:582;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;8307:170;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4612:134;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7947:172;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7755:184;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1918:198:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5300:136:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1246:19;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4754:124;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4398:95;4445:7;4474:11;;4467:18;;4398:95;:::o;8127:172::-;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;8229:1:7::1;8216:10;:14;8207:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;8281:10;8261:17;:30;;;;8127:172:::0;:::o;5732:1060::-;5812:1;5803:6;:10;5795:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;5878:7;:19;5886:10;5878:19;;;;;;;;;;;;;;;:32;;;5868:6;:42;;5860:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;5942:14;:12;:14::i;:::-;5967:27;5997:6;5967:36;;6014:14;6031:67;6091:6;6031:55;6051:7;:19;6059:10;6051:19;;;;;;;;;;;;;;;:34;;;6031:15;:19;;:55;;;;:::i;:::-;:59;;:67;;;;:::i;:::-;6014:84;;6109:11;6123:3;6109:17;;6137:21;6189:1;6161:7;:19;6169:10;6161:19;;;;;;;;;;;;;;;:24;;;:29;;:160;;6268:53;6307:13;;6268:7;:19;6276:10;6268:19;;;;;;;;;;;;;;;:34;;;:38;;:53;;;;:::i;:::-;6249:15;:72;;6161:160;;;6218:1;6202:12;;6193:6;:21;;;;:::i;:::-;:26;:40;;;;;6232:1;6223:6;:10;6193:40;6161:160;6137:184;;6337:16;6332:73;;6376:17;;6370:23;;6332:73;6450:57;6487:19;6450:7;:19;6458:10;6450:19;;;;;;;;;;;;;;;:32;;;:36;;:57;;;;:::i;:::-;6415:7;:19;6423:10;6415:19;;;;;;;;;;;;;;;:32;;:92;;;;6532:36;6548:19;6532:11;;:15;;:36;;;;:::i;:::-;6518:11;:50;;;;6601:62;6625:37;6658:3;6625:28;6649:3;6625:19;:23;;:28;;;;:::i;:::-;:32;;:37;;;;:::i;:::-;6601:19;:23;;:62;;;;:::i;:::-;6579:84;;6674:51;6693:10;6705:19;6674:5;;;;;;;;;;;:18;;;;:51;;;;;:::i;:::-;6743:41;6752:10;6764:19;6743:41;;;;;;;:::i;:::-;;;;;;;;5774:1018;;;;5732:1060;:::o;8738:585::-;8784:14;:12;:14::i;:::-;8819:21;8843:113;8887:68;8951:3;8887:59;8931:14;;8887:7;:19;8895:10;8887:19;;;;;;;;;;;;;;;:39;;;:43;;:59;;;;:::i;:::-;:63;;:68;;;;:::i;:::-;8843:7;:19;8851:10;8843:19;;;;;;;;;;;;;;;:39;;;:43;;:113;;;;:::i;:::-;8819:137;;9001:1;8985:13;:17;8977:46;;;;;;;;;;;;:::i;:::-;;;;;;;;;9054:5;;;;;;;;;;;:15;;;9078:4;9054:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9038:13;:46;9034:111;;;9115:5;;;;;;;;;;;:15;;;9139:4;9115:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9099:46;;9034:111;9156:45;9175:10;9187:13;9156:5;;;;;;;;;;;:18;;;;:45;;;;;:::i;:::-;9254:1;9212:7;:19;9220:10;9212:19;;;;;;;;;;;;;;;:39;;:43;;;;9281:34;9289:10;9301:13;9281:34;;;;;;;:::i;:::-;;;;;;;;8763:560;8738:585::o;4886:402::-;4943:7;4997:4;4969:7;:17;4977:8;4969:17;;;;;;;;;;;;;;;:24;;;:32;4965:59;;5023:1;5016:8;;;;4965:59;5065:1;5039:7;:17;5047:8;5039:17;;;;;;;;;;;;;;;:22;;;:27;5035:245;;5156:1;5145:6;5088:53;5108:7;:17;5116:8;5108:17;;;;;;;;;;;;;;;:32;;;5088:15;:19;;:53;;;;:::i;:::-;:64;;;;:::i;:::-;:69;:77;;5164:1;5088:77;;;5160:1;5088:77;5081:84;;;;;;5035:245;5259:13;;5202:53;5222:7;:17;5230:8;5222:17;;;;;;;;;;;;;;;:32;;;5202:15;:19;;:53;;;;:::i;:::-;:70;;:78;;5279:1;5202:78;;;5275:1;5202:78;5195:85;;;;4886:402;;;;:::o;7577:170::-;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;7673:1:7::1;7660:10;:14;7652:40;;;;;;;;;;;;:::i;:::-;;;;;;;;;7729:10;7713:13;:26;;;;7577:170:::0;:::o;2828:912::-;2930:1;2920:7;:11;2912:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;3016:7;2986:5;;;;;;;;;;;:15;;;3002:10;2986:27;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:37;2978:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;3090:4;3060:7;:19;3068:10;3060:19;;;;;;;;;;;;;;;:26;;;:34;;3052:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;3148:1;3139:5;:10;3135:376;;;3170:17;;3159:7;:28;;3151:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;3135:376;;;3233:1;3224:5;:10;3220:291;;;3255:17;;3244:7;:28;;3236:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;3220:291;;;3318:1;3309:5;:10;3305:206;;;3340:17;;3329:7;:28;;3321:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;3305:206;;;3403:1;3394:5;:10;3390:121;;;3425:17;;3414:7;:28;;3406:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;3390:121;;;3493:1;3483:7;:11;3475:36;;;;;;;;;;;;:::i;:::-;;;;;;;;;3390:121;3305:206;3220:291;3135:376;3559:5;3532:7;:19;3540:10;3532:19;;;;;;;;;;;;;;;:24;;:32;;;;3612:15;3575:7;:19;3583:10;3575:19;;;;;;;;;;;;;;;:34;;:52;;;;3667:4;3638:7;:19;3646:10;3638:19;;;;;;;;;;;;;;;:26;;:33;;;;3682:8;3696:10;3682:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3718:14;3724:7;3718:5;:14::i;:::-;2828:912;;:::o;4501:103::-;4552:7;4581:8;:15;;;;4574:22;;4501:103;:::o;8540:153::-;8583:7;8612:14;:12;:14::i;:::-;8646:7;:19;8654:10;8646:19;;;;;;;;;;;;;;;:39;;;8639:46;;8540:153;:::o;5448:135::-;5509:7;5538;:17;5546:8;5538:17;;;;;;;;;;;;;;;:37;;;5531:44;;5448:135;;;:::o;7039:248::-;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;7150:1:7::1;7134:13;:17;7126:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;7207:25;7225:6;7207:13;:17;;:25;;;;:::i;:::-;7192:12;:40;;;;7250:29;7265:13;7250:29;;;;;;:::i;:::-;;;;;;;;7039:248:::0;:::o;1668:101:0:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;5591:94:7:-;5637:7;5666:11;;5659:18;;5591:94;:::o;1213:26::-;;;;:::o;1036:85:0:-;1082:7;1108:6;;;;;;;;;;;1101:13;;1036:85;:::o;9331:428:7:-;9400:7;9430:23;9456:1;9430:27;;9483:1;9474:5;:10;:24;;;;9497:1;9488:5;:10;9474:24;9470:246;;;9518:17;;9500:35;;9470:246;;;9564:1;9555:5;:10;9551:165;;;9585:17;;9567:35;;9551:165;;;9631:1;9622:5;:10;9618:98;;;9652:17;;9634:35;;9618:98;;;9698:1;9694;:5;9685:31;;;;;;;;;;;;:::i;:::-;;;;;;;;;9618:98;9551:165;9470:246;9736:15;9729:22;;;9331:428;;;:::o;7295:274::-;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;7421:1:7::1;7400:18;:22;7392:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;7486:18;7466:17;:38;;;;7522:39;7542:18;7522:39;;;;;;:::i;:::-;;;;;;;;7295:274:::0;:::o;6804:227::-;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;6912:1:7::1;6897:12;:16;6889:42;;;;;;;;;;;;:::i;:::-;;;;;;;;;6966:12;6952:11;:26;;;;6996:27;7010:12;6996:27;;;;;;:::i;:::-;;;;;;;;6804:227:::0;:::o;3808:582::-;3885:1;3875:7;:11;3867:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;3971:7;3941:5;;;;;;;;;;;:15;;;3957:10;3941:27;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:37;3933:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;4045:4;4015:7;:19;4023:10;4015:19;;;;;;;;;;;;;;;:26;;;:34;4007:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;4096:14;:12;:14::i;:::-;4131:58;4154:10;4174:4;4181:7;4131:5;;;;;;;;;;;:22;;;;:58;;;;;;:::i;:::-;4235:45;4272:7;4235;:19;4243:10;4235:19;;;;;;;;;;;;;;;:32;;;:36;;:45;;;;:::i;:::-;4200:7;:19;4208:10;4200:19;;;;;;;;;;;;;;;:32;;:80;;;;4305:24;4321:7;4305:11;;:15;;:24;;;;:::i;:::-;4291:11;:38;;;;4355:27;4362:10;4374:7;4355:27;;;;;;;:::i;:::-;;;;;;;;3808:582;:::o;8307:170::-;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;8407:1:7::1;8394:10;:14;8385:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;8459:10;8439:17;:30;;;;8307:170:::0;:::o;4612:134::-;4674:7;4729:1;4703:7;:17;4711:8;4703:17;;;;;;;;;;;;;;;:22;;;:27;:35;;4737:1;4703:35;;;4733:1;4703:35;4696:42;;;;4612:134;;;:::o;7947:172::-;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;8049:1:7::1;8036:10;:14;8027:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;8101:10;8081:17;:30;;;;7947:172:::0;:::o;7755:184::-;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;7869:1:7::1;7856:10;:14;7847:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;7921:10;7901:17;:30;;;;7755:184:::0;:::o;1918:198:0:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2026:1:::1;2006:22;;:8;:22;;;;1998:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;5300:136:7:-;5361:7;5398;:17;5406:8;5398:17;;;;;;;;;;;;;;;:30;;;5391:37;;5300:136;;;:::o;1246:19::-;;;;;;;;;;;;;:::o;4754:124::-;4817:7;4846;:17;4854:8;4846:17;;;;;;;;;;;;;;;:24;;;4839:31;;4754:124;;;:::o;640:96:3:-;693:7;719:10;712:17;;640:96;:::o;2359:457:7:-;2411:26;2440:7;:19;2448:10;2440:19;;;;;;;;;;;;;;;:32;;;2411:61;;2493:17;2513:120;2629:3;2513:111;2612:11;;2513:94;2536:70;2601:4;2536:60;2553:7;:19;2561:10;2553:19;;;;;;;;;;;;;;;:42;;;2536:12;:16;;:60;;;;:::i;:::-;:64;;:70;;;;:::i;:::-;2513:18;:22;;:94;;;;:::i;:::-;:98;;:111;;;;:::i;:::-;:115;;:120;;;;:::i;:::-;2493:140;;2686:54;2730:9;2686:7;:19;2694:10;2686:19;;;;;;;;;;;;;;;:39;;;:43;;:54;;;;:::i;:::-;2644:7;:19;2652:10;2644:19;;;;;;;;;;;;;;;:39;;:96;;;;2796:12;2751:7;:19;2759:10;2751:19;;;;;;;;;;;;;;;:42;;:57;;;;2390:426;;2359:457::o;3108:96:4:-;3166:7;3196:1;3192;:5;;;;:::i;:::-;3185:12;;3108:96;;;;:::o;3836:::-;3894:7;3924:1;3920;:5;;;;:::i;:::-;3913:12;;3836:96;;;;:::o;2741:::-;2799:7;2829:1;2825;:5;;;;:::i;:::-;2818:12;;2741:96;;;;:::o;3451:::-;3509:7;3539:1;3535;:5;;;;:::i;:::-;3528:12;;3451:96;;;;:::o;290:177:6:-;373:86;393:5;423:23;;;448:2;452:5;400:58;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;373:19;:86::i;:::-;290:177;;;:::o;2270:187:0:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;475:205:6:-;576:96;596:5;626:27;;;655:4;661:2;665:5;603:68;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;576:19;:96::i;:::-;475:205;;;;:::o;2599:769::-;3031:23;3057:69;3085:4;3057:69;;;;;;;;;;;;;;;;;3065:5;3057:27;;;;:69;;;;;:::i;:::-;3031:95;;3161:1;3141:10;:17;:21;3137:224;;;3283:10;3272:30;;;;;;;;;;;;:::i;:::-;3264:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;3137:224;2669:699;2599:769;;:::o;3861:223:2:-;3994:12;4025:52;4047:6;4055:4;4061:1;4064:12;4025:21;:52::i;:::-;4018:59;;3861:223;;;;;:::o;4948:499::-;5113:12;5170:5;5145:21;:30;;5137:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;5236:18;5247:6;5236:10;:18::i;:::-;5228:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;5300:12;5314:23;5341:6;:11;;5360:5;5367:4;5341:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5299:73;;;;5389:51;5406:7;5415:10;5427:12;5389:16;:51::i;:::-;5382:58;;;;4948:499;;;;;;:::o;1175:320::-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;7561:692::-;7707:12;7735:7;7731:516;;;7765:10;7758:17;;;;7731:516;7896:1;7876:10;:17;:21;7872:365;;;8070:10;8064:17;8130:15;8117:10;8113:2;8109:19;8102:44;7872:365;8209:12;8202:20;;;;;;;;;;;:::i;:::-;;;;;;;;7561:692;;;;;;:::o;7:77:8:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;523:117::-;632:1;629;622:12;769:122;842:24;860:5;842:24;:::i;:::-;835:5;832:35;822:63;;881:1;878;871:12;822:63;769:122;:::o;897:139::-;943:5;981:6;968:20;959:29;;997:33;1024:5;997:33;:::i;:::-;897:139;;;;:::o;1042:329::-;1101:6;1150:2;1138:9;1129:7;1125:23;1121:32;1118:119;;;1156:79;;:::i;:::-;1118:119;1276:1;1301:53;1346:7;1337:6;1326:9;1322:22;1301:53;:::i;:::-;1291:63;;1247:117;1042:329;;;;:::o;1377:126::-;1414:7;1454:42;1447:5;1443:54;1432:65;;1377:126;;;:::o;1509:96::-;1546:7;1575:24;1593:5;1575:24;:::i;:::-;1564:35;;1509:96;;;:::o;1611:122::-;1684:24;1702:5;1684:24;:::i;:::-;1677:5;1674:35;1664:63;;1723:1;1720;1713:12;1664:63;1611:122;:::o;1739:139::-;1785:5;1823:6;1810:20;1801:29;;1839:33;1866:5;1839:33;:::i;:::-;1739:139;;;;:::o;1884:329::-;1943:6;1992:2;1980:9;1971:7;1967:23;1963:32;1960:119;;;1998:79;;:::i;:::-;1960:119;2118:1;2143:53;2188:7;2179:6;2168:9;2164:22;2143:53;:::i;:::-;2133:63;;2089:117;1884:329;;;;:::o;2219:474::-;2287:6;2295;2344:2;2332:9;2323:7;2319:23;2315:32;2312:119;;;2350:79;;:::i;:::-;2312:119;2470:1;2495:53;2540:7;2531:6;2520:9;2516:22;2495:53;:::i;:::-;2485:63;;2441:117;2597:2;2623:53;2668:7;2659:6;2648:9;2644:22;2623:53;:::i;:::-;2613:63;;2568:118;2219:474;;;;;:::o;2699:118::-;2786:24;2804:5;2786:24;:::i;:::-;2781:3;2774:37;2699:118;;:::o;2823:222::-;2916:4;2954:2;2943:9;2939:18;2931:26;;2967:71;3035:1;3024:9;3020:17;3011:6;2967:71;:::i;:::-;2823:222;;;;:::o;3051:60::-;3079:3;3100:5;3093:12;;3051:60;;;:::o;3117:142::-;3167:9;3200:53;3218:34;3227:24;3245:5;3227:24;:::i;:::-;3218:34;:::i;:::-;3200:53;:::i;:::-;3187:66;;3117:142;;;:::o;3265:126::-;3315:9;3348:37;3379:5;3348:37;:::i;:::-;3335:50;;3265:126;;;:::o;3397:140::-;3461:9;3494:37;3525:5;3494:37;:::i;:::-;3481:50;;3397:140;;;:::o;3543:159::-;3644:51;3689:5;3644:51;:::i;:::-;3639:3;3632:64;3543:159;;:::o;3708:250::-;3815:4;3853:2;3842:9;3838:18;3830:26;;3866:85;3948:1;3937:9;3933:17;3924:6;3866:85;:::i;:::-;3708:250;;;;:::o;3964:169::-;4048:11;4082:6;4077:3;4070:19;4122:4;4117:3;4113:14;4098:29;;3964:169;;;;:::o;4139:182::-;4279:34;4275:1;4267:6;4263:14;4256:58;4139:182;:::o;4327:366::-;4469:3;4490:67;4554:2;4549:3;4490:67;:::i;:::-;4483:74;;4566:93;4655:3;4566:93;:::i;:::-;4684:2;4679:3;4675:12;4668:19;;4327:366;;;:::o;4699:419::-;4865:4;4903:2;4892:9;4888:18;4880:26;;4952:9;4946:4;4942:20;4938:1;4927:9;4923:17;4916:47;4980:131;5106:4;4980:131;:::i;:::-;4972:139;;4699:419;;;:::o;5124:163::-;5264:15;5260:1;5252:6;5248:14;5241:39;5124:163;:::o;5293:366::-;5435:3;5456:67;5520:2;5515:3;5456:67;:::i;:::-;5449:74;;5532:93;5621:3;5532:93;:::i;:::-;5650:2;5645:3;5641:12;5634:19;;5293:366;;;:::o;5665:419::-;5831:4;5869:2;5858:9;5854:18;5846:26;;5918:9;5912:4;5908:20;5904:1;5893:9;5889:17;5882:47;5946:131;6072:4;5946:131;:::i;:::-;5938:139;;5665:419;;;:::o;6090:181::-;6230:33;6226:1;6218:6;6214:14;6207:57;6090:181;:::o;6277:366::-;6419:3;6440:67;6504:2;6499:3;6440:67;:::i;:::-;6433:74;;6516:93;6605:3;6516:93;:::i;:::-;6634:2;6629:3;6625:12;6618:19;;6277:366;;;:::o;6649:419::-;6815:4;6853:2;6842:9;6838:18;6830:26;;6902:9;6896:4;6892:20;6888:1;6877:9;6873:17;6866:47;6930:131;7056:4;6930:131;:::i;:::-;6922:139;;6649:419;;;:::o;7074:164::-;7214:16;7210:1;7202:6;7198:14;7191:40;7074:164;:::o;7244:366::-;7386:3;7407:67;7471:2;7466:3;7407:67;:::i;:::-;7400:74;;7483:93;7572:3;7483:93;:::i;:::-;7601:2;7596:3;7592:12;7585:19;;7244:366;;;:::o;7616:419::-;7782:4;7820:2;7809:9;7805:18;7797:26;;7869:9;7863:4;7859:20;7855:1;7844:9;7840:17;7833:47;7897:131;8023:4;7897:131;:::i;:::-;7889:139;;7616:419;;;:::o;8041:180::-;8089:77;8086:1;8079:88;8186:4;8183:1;8176:15;8210:4;8207:1;8200:15;8227:176;8259:1;8276:20;8294:1;8276:20;:::i;:::-;8271:25;;8310:20;8328:1;8310:20;:::i;:::-;8305:25;;8349:1;8339:35;;8354:18;;:::i;:::-;8339:35;8395:1;8392;8388:9;8383:14;;8227:176;;;;:::o;8409:332::-;8530:4;8568:2;8557:9;8553:18;8545:26;;8581:71;8649:1;8638:9;8634:17;8625:6;8581:71;:::i;:::-;8662:72;8730:2;8719:9;8715:18;8706:6;8662:72;:::i;:::-;8409:332;;;;;:::o;8747:166::-;8887:18;8883:1;8875:6;8871:14;8864:42;8747:166;:::o;8919:366::-;9061:3;9082:67;9146:2;9141:3;9082:67;:::i;:::-;9075:74;;9158:93;9247:3;9158:93;:::i;:::-;9276:2;9271:3;9267:12;9260:19;;8919:366;;;:::o;9291:419::-;9457:4;9495:2;9484:9;9480:18;9472:26;;9544:9;9538:4;9534:20;9530:1;9519:9;9515:17;9508:47;9572:131;9698:4;9572:131;:::i;:::-;9564:139;;9291:419;;;:::o;9716:143::-;9773:5;9804:6;9798:13;9789:22;;9820:33;9847:5;9820:33;:::i;:::-;9716:143;;;;:::o;9865:351::-;9935:6;9984:2;9972:9;9963:7;9959:23;9955:32;9952:119;;;9990:79;;:::i;:::-;9952:119;10110:1;10135:64;10191:7;10182:6;10171:9;10167:22;10135:64;:::i;:::-;10125:74;;10081:128;9865:351;;;;:::o;10222:163::-;10362:15;10358:1;10350:6;10346:14;10339:39;10222:163;:::o;10391:366::-;10533:3;10554:67;10618:2;10613:3;10554:67;:::i;:::-;10547:74;;10630:93;10719:3;10630:93;:::i;:::-;10748:2;10743:3;10739:12;10732:19;;10391:366;;;:::o;10763:419::-;10929:4;10967:2;10956:9;10952:18;10944:26;;11016:9;11010:4;11006:20;11002:1;10991:9;10987:17;10980:47;11044:131;11170:4;11044:131;:::i;:::-;11036:139;;10763:419;;;:::o;11188:165::-;11328:17;11324:1;11316:6;11312:14;11305:41;11188:165;:::o;11359:366::-;11501:3;11522:67;11586:2;11581:3;11522:67;:::i;:::-;11515:74;;11598:93;11687:3;11598:93;:::i;:::-;11716:2;11711:3;11707:12;11700:19;;11359:366;;;:::o;11731:419::-;11897:4;11935:2;11924:9;11920:18;11912:26;;11984:9;11978:4;11974:20;11970:1;11959:9;11955:17;11948:47;12012:131;12138:4;12012:131;:::i;:::-;12004:139;;11731:419;;;:::o;12156:162::-;12296:14;12292:1;12284:6;12280:14;12273:38;12156:162;:::o;12324:366::-;12466:3;12487:67;12551:2;12546:3;12487:67;:::i;:::-;12480:74;;12563:93;12652:3;12563:93;:::i;:::-;12681:2;12676:3;12672:12;12665:19;;12324:366;;;:::o;12696:419::-;12862:4;12900:2;12889:9;12885:18;12877:26;;12949:9;12943:4;12939:20;12935:1;12924:9;12920:17;12913:47;12977:131;13103:4;12977:131;:::i;:::-;12969:139;;12696:419;;;:::o;13121:162::-;13261:14;13257:1;13249:6;13245:14;13238:38;13121:162;:::o;13289:366::-;13431:3;13452:67;13516:2;13511:3;13452:67;:::i;:::-;13445:74;;13528:93;13617:3;13528:93;:::i;:::-;13646:2;13641:3;13637:12;13630:19;;13289:366;;;:::o;13661:419::-;13827:4;13865:2;13854:9;13850:18;13842:26;;13914:9;13908:4;13904:20;13900:1;13889:9;13885:17;13878:47;13942:131;14068:4;13942:131;:::i;:::-;13934:139;;13661:419;;;:::o;14086:173::-;14226:25;14222:1;14214:6;14210:14;14203:49;14086:173;:::o;14265:366::-;14407:3;14428:67;14492:2;14487:3;14428:67;:::i;:::-;14421:74;;14504:93;14593:3;14504:93;:::i;:::-;14622:2;14617:3;14613:12;14606:19;;14265:366;;;:::o;14637:419::-;14803:4;14841:2;14830:9;14826:18;14818:26;;14890:9;14884:4;14880:20;14876:1;14865:9;14861:17;14854:47;14918:131;15044:4;14918:131;:::i;:::-;14910:139;;14637:419;;;:::o;15062:176::-;15202:28;15198:1;15190:6;15186:14;15179:52;15062:176;:::o;15244:366::-;15386:3;15407:67;15471:2;15466:3;15407:67;:::i;:::-;15400:74;;15483:93;15572:3;15483:93;:::i;:::-;15601:2;15596:3;15592:12;15585:19;;15244:366;;;:::o;15616:419::-;15782:4;15820:2;15809:9;15805:18;15797:26;;15869:9;15863:4;15859:20;15855:1;15844:9;15840:17;15833:47;15897:131;16023:4;15897:131;:::i;:::-;15889:139;;15616:419;;;:::o;16041:163::-;16181:15;16177:1;16169:6;16165:14;16158:39;16041:163;:::o;16210:366::-;16352:3;16373:67;16437:2;16432:3;16373:67;:::i;:::-;16366:74;;16449:93;16538:3;16449:93;:::i;:::-;16567:2;16562:3;16558:12;16551:19;;16210:366;;;:::o;16582:419::-;16748:4;16786:2;16775:9;16771:18;16763:26;;16835:9;16829:4;16825:20;16821:1;16810:9;16806:17;16799:47;16863:131;16989:4;16863:131;:::i;:::-;16855:139;;16582:419;;;:::o;17007:171::-;17147:23;17143:1;17135:6;17131:14;17124:47;17007:171;:::o;17184:366::-;17326:3;17347:67;17411:2;17406:3;17347:67;:::i;:::-;17340:74;;17423:93;17512:3;17423:93;:::i;:::-;17541:2;17536:3;17532:12;17525:19;;17184:366;;;:::o;17556:419::-;17722:4;17760:2;17749:9;17745:18;17737:26;;17809:9;17803:4;17799:20;17795:1;17784:9;17780:17;17773:47;17837:131;17963:4;17837:131;:::i;:::-;17829:139;;17556:419;;;:::o;17981:225::-;18121:34;18117:1;18109:6;18105:14;18098:58;18190:8;18185:2;18177:6;18173:15;18166:33;17981:225;:::o;18212:366::-;18354:3;18375:67;18439:2;18434:3;18375:67;:::i;:::-;18368:74;;18451:93;18540:3;18451:93;:::i;:::-;18569:2;18564:3;18560:12;18553:19;;18212:366;;;:::o;18584:419::-;18750:4;18788:2;18777:9;18773:18;18765:26;;18837:9;18831:4;18827:20;18823:1;18812:9;18808:17;18801:47;18865:131;18991:4;18865:131;:::i;:::-;18857:139;;18584:419;;;:::o;19009:180::-;19057:77;19054:1;19047:88;19154:4;19151:1;19144:15;19178:4;19175:1;19168:15;19195:191;19235:4;19255:20;19273:1;19255:20;:::i;:::-;19250:25;;19289:20;19307:1;19289:20;:::i;:::-;19284:25;;19328:1;19325;19322:8;19319:34;;;19333:18;;:::i;:::-;19319:34;19378:1;19375;19371:9;19363:17;;19195:191;;;;:::o;19392:185::-;19432:1;19449:20;19467:1;19449:20;:::i;:::-;19444:25;;19483:20;19501:1;19483:20;:::i;:::-;19478:25;;19522:1;19512:35;;19527:18;;:::i;:::-;19512:35;19569:1;19566;19562:9;19557:14;;19392:185;;;;:::o;19583:305::-;19623:3;19642:20;19660:1;19642:20;:::i;:::-;19637:25;;19676:20;19694:1;19676:20;:::i;:::-;19671:25;;19830:1;19762:66;19758:74;19755:1;19752:81;19749:107;;;19836:18;;:::i;:::-;19749:107;19880:1;19877;19873:9;19866:16;;19583:305;;;;:::o;19894:348::-;19934:7;19957:20;19975:1;19957:20;:::i;:::-;19952:25;;19991:20;20009:1;19991:20;:::i;:::-;19986:25;;20179:1;20111:66;20107:74;20104:1;20101:81;20096:1;20089:9;20082:17;20078:105;20075:131;;;20186:18;;:::i;:::-;20075:131;20234:1;20231;20227:9;20216:20;;19894:348;;;;:::o;20248:442::-;20397:4;20435:2;20424:9;20420:18;20412:26;;20448:71;20516:1;20505:9;20501:17;20492:6;20448:71;:::i;:::-;20529:72;20597:2;20586:9;20582:18;20573:6;20529:72;:::i;:::-;20611;20679:2;20668:9;20664:18;20655:6;20611:72;:::i;:::-;20248:442;;;;;;:::o;20696:90::-;20730:7;20773:5;20766:13;20759:21;20748:32;;20696:90;;;:::o;20792:116::-;20862:21;20877:5;20862:21;:::i;:::-;20855:5;20852:32;20842:60;;20898:1;20895;20888:12;20842:60;20792:116;:::o;20914:137::-;20968:5;20999:6;20993:13;20984:22;;21015:30;21039:5;21015:30;:::i;:::-;20914:137;;;;:::o;21057:345::-;21124:6;21173:2;21161:9;21152:7;21148:23;21144:32;21141:119;;;21179:79;;:::i;:::-;21141:119;21299:1;21324:61;21377:7;21368:6;21357:9;21353:22;21324:61;:::i;:::-;21314:71;;21270:125;21057:345;;;;:::o;21408:229::-;21548:34;21544:1;21536:6;21532:14;21525:58;21617:12;21612:2;21604:6;21600:15;21593:37;21408:229;:::o;21643:366::-;21785:3;21806:67;21870:2;21865:3;21806:67;:::i;:::-;21799:74;;21882:93;21971:3;21882:93;:::i;:::-;22000:2;21995:3;21991:12;21984:19;;21643:366;;;:::o;22015:419::-;22181:4;22219:2;22208:9;22204:18;22196:26;;22268:9;22262:4;22258:20;22254:1;22243:9;22239:17;22232:47;22296:131;22422:4;22296:131;:::i;:::-;22288:139;;22015:419;;;:::o;22440:225::-;22580:34;22576:1;22568:6;22564:14;22557:58;22649:8;22644:2;22636:6;22632:15;22625:33;22440:225;:::o;22671:366::-;22813:3;22834:67;22898:2;22893:3;22834:67;:::i;:::-;22827:74;;22910:93;22999:3;22910:93;:::i;:::-;23028:2;23023:3;23019:12;23012:19;;22671:366;;;:::o;23043:419::-;23209:4;23247:2;23236:9;23232:18;23224:26;;23296:9;23290:4;23286:20;23282:1;23271:9;23267:17;23260:47;23324:131;23450:4;23324:131;:::i;:::-;23316:139;;23043:419;;;:::o;23468:179::-;23608:31;23604:1;23596:6;23592:14;23585:55;23468:179;:::o;23653:366::-;23795:3;23816:67;23880:2;23875:3;23816:67;:::i;:::-;23809:74;;23892:93;23981:3;23892:93;:::i;:::-;24010:2;24005:3;24001:12;23994:19;;23653:366;;;:::o;24025:419::-;24191:4;24229:2;24218:9;24214:18;24206:26;;24278:9;24272:4;24268:20;24264:1;24253:9;24249:17;24242:47;24306:131;24432:4;24306:131;:::i;:::-;24298:139;;24025:419;;;:::o;24450:98::-;24501:6;24535:5;24529:12;24519:22;;24450:98;;;:::o;24554:147::-;24655:11;24692:3;24677:18;;24554:147;;;;:::o;24707:307::-;24775:1;24785:113;24799:6;24796:1;24793:13;24785:113;;;24884:1;24879:3;24875:11;24869:18;24865:1;24860:3;24856:11;24849:39;24821:2;24818:1;24814:10;24809:15;;24785:113;;;24916:6;24913:1;24910:13;24907:101;;;24996:1;24987:6;24982:3;24978:16;24971:27;24907:101;24756:258;24707:307;;;:::o;25020:373::-;25124:3;25152:38;25184:5;25152:38;:::i;:::-;25206:88;25287:6;25282:3;25206:88;:::i;:::-;25199:95;;25303:52;25348:6;25343:3;25336:4;25329:5;25325:16;25303:52;:::i;:::-;25380:6;25375:3;25371:16;25364:23;;25128:265;25020:373;;;;:::o;25399:271::-;25529:3;25551:93;25640:3;25631:6;25551:93;:::i;:::-;25544:100;;25661:3;25654:10;;25399:271;;;;:::o;25676:99::-;25728:6;25762:5;25756:12;25746:22;;25676:99;;;:::o;25781:102::-;25822:6;25873:2;25869:7;25864:2;25857:5;25853:14;25849:28;25839:38;;25781:102;;;:::o;25889:364::-;25977:3;26005:39;26038:5;26005:39;:::i;:::-;26060:71;26124:6;26119:3;26060:71;:::i;:::-;26053:78;;26140:52;26185:6;26180:3;26173:4;26166:5;26162:16;26140:52;:::i;:::-;26217:29;26239:6;26217:29;:::i;:::-;26212:3;26208:39;26201:46;;25981:272;25889:364;;;;:::o;26259:313::-;26372:4;26410:2;26399:9;26395:18;26387:26;;26459:9;26453:4;26449:20;26445:1;26434:9;26430:17;26423:47;26487:78;26560:4;26551:6;26487:78;:::i;:::-;26479:86;;26259:313;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2675200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"getMinimumStakingAmount(uint256)": "infinite",
								"getNumberofStakers()": "2513",
								"getRewardRate()": "2548",
								"getStakerMode(address)": "2932",
								"getTotalStaked()": "2461",
								"harvest()": "infinite",
								"isLocked(address)": "infinite",
								"isStartStaking(address)": "2957",
								"owner()": "2590",
								"renounceOwnership()": "30463",
								"rewardAmount(address)": "2892",
								"rewardToHarvest()": "infinite",
								"setCopperMinAmount(uint256)": "24850",
								"setEventPeriod(uint256)": "infinite",
								"setGoldMinAmount(uint256)": "24894",
								"setLockupTime(uint256)": "24917",
								"setRewardRate(uint256)": "infinite",
								"setSilverMinAmount(uint256)": "24829",
								"setThreeMonthMinAmount(uint256)": "24872",
								"setUnstakingFeeRate(uint256)": "infinite",
								"stake(uint256)": "infinite",
								"stakedAmount(address)": "2913",
								"startStaking(uint256,uint256)": "infinite",
								"token()": "infinite",
								"totalStaked()": "2475",
								"transferOwnership(address)": "30767",
								"withdraw(uint256)": "infinite"
							},
							"internal": {
								"Init()": "infinite",
								"calDaysFromTimestamp(uint256)": "infinite",
								"updateReward()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 260,
									"end": 9762,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 260,
									"end": 9762,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 260,
									"end": 9762,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1673,
									"end": 1769,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 1673,
									"end": 1769,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1673,
									"end": 1769,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1673,
									"end": 1769,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1673,
									"end": 1769,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1673,
									"end": 1769,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1673,
									"end": 1769,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1673,
									"end": 1769,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1673,
									"end": 1769,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1673,
									"end": 1769,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1673,
									"end": 1769,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1673,
									"end": 1769,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1673,
									"end": 1769,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1673,
									"end": 1769,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 1673,
									"end": 1769,
									"name": "CODESIZE",
									"source": 7
								},
								{
									"begin": 1673,
									"end": 1769,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 1673,
									"end": 1769,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1673,
									"end": 1769,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 1673,
									"end": 1769,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1673,
									"end": 1769,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 1673,
									"end": 1769,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1673,
									"end": 1769,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1673,
									"end": 1769,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1673,
									"end": 1769,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1673,
									"end": 1769,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1673,
									"end": 1769,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1673,
									"end": 1769,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1673,
									"end": 1769,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1673,
									"end": 1769,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 1673,
									"end": 1769,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1673,
									"end": 1769,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1673,
									"end": 1769,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 1673,
									"end": 1769,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 1673,
									"end": 1769,
									"name": "tag",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 1673,
									"end": 1769,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 921,
									"end": 953,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 940,
									"end": 952,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 940,
									"end": 952,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 921,
									"end": 939,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 921,
									"end": 953,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1722,
									"end": 1728,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 1722,
									"end": 1726,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 1722,
									"end": 1726,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1722,
									"end": 1726,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 1722,
									"end": 1728,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1722,
									"end": 1728,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 1722,
									"end": 1728,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 1722,
									"end": 1728,
									"name": "tag",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 1722,
									"end": 1728,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1754,
									"end": 1760,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1739,
									"end": 1744,
									"name": "PUSH",
									"source": 7,
									"value": "D"
								},
								{
									"begin": 1739,
									"end": 1744,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1739,
									"end": 1761,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 1739,
									"end": 1761,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 1739,
									"end": 1761,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1739,
									"end": 1761,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 1739,
									"end": 1761,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1739,
									"end": 1761,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1739,
									"end": 1761,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1739,
									"end": 1761,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 1739,
									"end": 1761,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1739,
									"end": 1761,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1739,
									"end": 1761,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1739,
									"end": 1761,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1739,
									"end": 1761,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1739,
									"end": 1761,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1739,
									"end": 1761,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1739,
									"end": 1761,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1739,
									"end": 1761,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1739,
									"end": 1761,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1673,
									"end": 1769,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 260,
									"end": 9762,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 260,
									"end": 9762,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2368,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2387,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2384,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2378,
									"end": 2384,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2441,
									"end": 2449,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2431,
									"end": 2439,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2333,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 1777,
									"end": 2142,
									"name": "tag",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 1777,
									"end": 2142,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1837,
									"end": 1840,
									"name": "PUSH",
									"source": 7,
									"value": "C8"
								},
								{
									"begin": 1823,
									"end": 1834,
									"name": "PUSH",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 1823,
									"end": 1840,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1823,
									"end": 1840,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1823,
									"end": 1840,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1823,
									"end": 1840,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1882,
									"end": 1886,
									"name": "PUSH",
									"source": 7,
									"value": "5DC"
								},
								{
									"begin": 1862,
									"end": 1879,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1862,
									"end": 1886,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1862,
									"end": 1886,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1862,
									"end": 1886,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1862,
									"end": 1886,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1914,
									"end": 1917,
									"name": "PUSH",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 1897,
									"end": 1911,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1897,
									"end": 1917,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1897,
									"end": 1917,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1897,
									"end": 1917,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1897,
									"end": 1917,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1943,
									"end": 1949,
									"name": "PUSH",
									"source": 7,
									"value": "93A80"
								},
								{
									"begin": 1928,
									"end": 1940,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 1928,
									"end": 1949,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1928,
									"end": 1949,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1928,
									"end": 1949,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1928,
									"end": 1949,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1976,
									"end": 1983,
									"name": "PUSH",
									"source": 7,
									"value": "76A700"
								},
								{
									"begin": 1960,
									"end": 1973,
									"name": "PUSH",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 1960,
									"end": 1983,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1960,
									"end": 1983,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1960,
									"end": 1983,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1960,
									"end": 1983,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2014,
									"end": 2021,
									"name": "PUSH",
									"source": 7,
									"value": "27B46536C66C8E3000000"
								},
								{
									"begin": 1994,
									"end": 2011,
									"name": "PUSH",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 1994,
									"end": 2021,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1994,
									"end": 2021,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1994,
									"end": 2021,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1994,
									"end": 2021,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2052,
									"end": 2056,
									"name": "PUSH",
									"source": 7,
									"value": "D3C21BCECCEDA1000000"
								},
								{
									"begin": 2032,
									"end": 2049,
									"name": "PUSH",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 2032,
									"end": 2056,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2032,
									"end": 2056,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2032,
									"end": 2056,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2032,
									"end": 2056,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2087,
									"end": 2095,
									"name": "PUSH",
									"source": 7,
									"value": "27B46536C66C8E3000000"
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 2067,
									"end": 2095,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2067,
									"end": 2095,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2067,
									"end": 2095,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2067,
									"end": 2095,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2126,
									"end": 2134,
									"name": "PUSH",
									"source": 7,
									"value": "5CA4EC2A79A7F67000000"
								},
								{
									"begin": 2106,
									"end": 2123,
									"name": "PUSH",
									"source": 7,
									"value": "7"
								},
								{
									"begin": 2106,
									"end": 2134,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2106,
									"end": 2134,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2106,
									"end": 2134,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2106,
									"end": 2134,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1777,
									"end": 2142,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 8,
									"value": "19"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "31"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 8,
									"value": "31"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 8,
									"value": "23"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "33"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 8,
									"value": "33"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "34"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 8,
									"value": "34"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "36"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "23"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 8,
									"value": "36"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "19"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 260,
									"end": 9762,
									"name": "tag",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 260,
									"end": 9762,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 260,
									"end": 9762,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 260,
									"end": 9762,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 260,
									"end": 9762,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 260,
									"end": 9762,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 260,
									"end": 9762,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 260,
									"end": 9762,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 260,
									"end": 9762,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220cdea9b3ef1c60a0b095439f624d2aa1d64d8fa8e48a702d9133a1bddc93a5bdd64736f6c63430008090033",
									".code": [
										{
											"begin": 260,
											"end": 9762,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "PUSH",
											"source": 7,
											"value": "817B1CD2"
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "PUSH",
											"source": 7,
											"value": "AEDF562B"
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "PUSH",
											"source": 7,
											"value": "F2FDE38B"
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "PUSH",
											"source": 7,
											"value": "F2FDE38B"
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "PUSH",
											"source": 7,
											"value": "F9931855"
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "PUSH",
											"source": 7,
											"value": "FC0C546A"
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "PUSH",
											"source": 7,
											"value": "FE600F84"
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "tag",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "PUSH",
											"source": 7,
											"value": "AEDF562B"
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "PUSH",
											"source": 7,
											"value": "C1704A14"
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "PUSH",
											"source": 7,
											"value": "C665D80E"
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "tag",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "PUSH",
											"source": 7,
											"value": "91E07E7A"
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "PUSH",
											"source": 7,
											"value": "91E07E7A"
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "PUSH",
											"source": 7,
											"value": "9E447FC6"
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "PUSH",
											"source": 7,
											"value": "A694FC3A"
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "PUSH",
											"source": 7,
											"value": "AE544943"
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "tag",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "PUSH",
											"source": 7,
											"value": "817B1CD2"
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "PUSH",
											"source": 7,
											"value": "8DA5CB5B"
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "PUSH",
											"source": 7,
											"value": "909F093E"
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "tag",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "PUSH",
											"source": 7,
											"value": "4B77DD9E"
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "PUSH",
											"source": 7,
											"value": "645A8A56"
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "PUSH",
											"source": 7,
											"value": "645A8A56"
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "PUSH",
											"source": 7,
											"value": "692642E7"
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "PUSH",
											"source": 7,
											"value": "715018A6"
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "PUSH",
											"source": 7,
											"value": "7E1A3786"
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "tag",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "PUSH",
											"source": 7,
											"value": "4B77DD9E"
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "PUSH",
											"source": 7,
											"value": "5715EC11"
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "PUSH",
											"source": 7,
											"value": "5D2EC65D"
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "tag",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "PUSH",
											"source": 7,
											"value": "917E776"
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "PUSH",
											"source": 7,
											"value": "23B61117"
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "PUSH",
											"source": 7,
											"value": "2E1A7D4D"
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "PUSH",
											"source": 7,
											"value": "4641257D"
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "PUSH",
											"source": 7,
											"value": "4A4FBEEC"
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "PUSH",
											"source": 7,
											"value": "4B62B70B"
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "tag",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 9762,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4398,
											"end": 4493,
											"name": "tag",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 4398,
											"end": 4493,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4398,
											"end": 4493,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 4398,
											"end": 4493,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 4398,
											"end": 4493,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4398,
											"end": 4493,
											"name": "tag",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 4398,
											"end": 4493,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4398,
											"end": 4493,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4398,
											"end": 4493,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4398,
											"end": 4493,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 4398,
											"end": 4493,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4398,
											"end": 4493,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4398,
											"end": 4493,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 4398,
											"end": 4493,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4398,
											"end": 4493,
											"name": "tag",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 4398,
											"end": 4493,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4398,
											"end": 4493,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4398,
											"end": 4493,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4398,
											"end": 4493,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4398,
											"end": 4493,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4398,
											"end": 4493,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4398,
											"end": 4493,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4398,
											"end": 4493,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 8127,
											"end": 8299,
											"name": "tag",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8127,
											"end": 8299,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8127,
											"end": 8299,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8127,
											"end": 8299,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8127,
											"end": 8299,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8127,
											"end": 8299,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 8127,
											"end": 8299,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8127,
											"end": 8299,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8127,
											"end": 8299,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8127,
											"end": 8299,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8127,
											"end": 8299,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 8127,
											"end": 8299,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8127,
											"end": 8299,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8127,
											"end": 8299,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 8127,
											"end": 8299,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8127,
											"end": 8299,
											"name": "tag",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 8127,
											"end": 8299,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8127,
											"end": 8299,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 8127,
											"end": 8299,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8127,
											"end": 8299,
											"name": "tag",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8127,
											"end": 8299,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8127,
											"end": 8299,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 5732,
											"end": 6792,
											"name": "tag",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 5732,
											"end": 6792,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5732,
											"end": 6792,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 5732,
											"end": 6792,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5732,
											"end": 6792,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5732,
											"end": 6792,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 5732,
											"end": 6792,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5732,
											"end": 6792,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5732,
											"end": 6792,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5732,
											"end": 6792,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5732,
											"end": 6792,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 5732,
											"end": 6792,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5732,
											"end": 6792,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5732,
											"end": 6792,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 5732,
											"end": 6792,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5732,
											"end": 6792,
											"name": "tag",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 5732,
											"end": 6792,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5732,
											"end": 6792,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 5732,
											"end": 6792,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5732,
											"end": 6792,
											"name": "tag",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 5732,
											"end": 6792,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5732,
											"end": 6792,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 8738,
											"end": 9323,
											"name": "tag",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 8738,
											"end": 9323,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8738,
											"end": 9323,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 8738,
											"end": 9323,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 8738,
											"end": 9323,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8738,
											"end": 9323,
											"name": "tag",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 8738,
											"end": 9323,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8738,
											"end": 9323,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 4886,
											"end": 5288,
											"name": "tag",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 4886,
											"end": 5288,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4886,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 4886,
											"end": 5288,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4886,
											"end": 5288,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4886,
											"end": 5288,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 4886,
											"end": 5288,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4886,
											"end": 5288,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4886,
											"end": 5288,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4886,
											"end": 5288,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4886,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 4886,
											"end": 5288,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4886,
											"end": 5288,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4886,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 4886,
											"end": 5288,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4886,
											"end": 5288,
											"name": "tag",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 4886,
											"end": 5288,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4886,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 4886,
											"end": 5288,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4886,
											"end": 5288,
											"name": "tag",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 4886,
											"end": 5288,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4886,
											"end": 5288,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4886,
											"end": 5288,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4886,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 4886,
											"end": 5288,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4886,
											"end": 5288,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4886,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 4886,
											"end": 5288,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4886,
											"end": 5288,
											"name": "tag",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 4886,
											"end": 5288,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4886,
											"end": 5288,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4886,
											"end": 5288,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4886,
											"end": 5288,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4886,
											"end": 5288,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4886,
											"end": 5288,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4886,
											"end": 5288,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4886,
											"end": 5288,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 7577,
											"end": 7747,
											"name": "tag",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 7577,
											"end": 7747,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7577,
											"end": 7747,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 7577,
											"end": 7747,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7577,
											"end": 7747,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7577,
											"end": 7747,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 7577,
											"end": 7747,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7577,
											"end": 7747,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7577,
											"end": 7747,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7577,
											"end": 7747,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7577,
											"end": 7747,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 7577,
											"end": 7747,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7577,
											"end": 7747,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7577,
											"end": 7747,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 7577,
											"end": 7747,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7577,
											"end": 7747,
											"name": "tag",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 7577,
											"end": 7747,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7577,
											"end": 7747,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 7577,
											"end": 7747,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7577,
											"end": 7747,
											"name": "tag",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 7577,
											"end": 7747,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7577,
											"end": 7747,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 2828,
											"end": 3740,
											"name": "tag",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 2828,
											"end": 3740,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2828,
											"end": 3740,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 2828,
											"end": 3740,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2828,
											"end": 3740,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2828,
											"end": 3740,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2828,
											"end": 3740,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2828,
											"end": 3740,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2828,
											"end": 3740,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2828,
											"end": 3740,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2828,
											"end": 3740,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 2828,
											"end": 3740,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2828,
											"end": 3740,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2828,
											"end": 3740,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 2828,
											"end": 3740,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2828,
											"end": 3740,
											"name": "tag",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 2828,
											"end": 3740,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2828,
											"end": 3740,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 2828,
											"end": 3740,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2828,
											"end": 3740,
											"name": "tag",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 2828,
											"end": 3740,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2828,
											"end": 3740,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 4501,
											"end": 4604,
											"name": "tag",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 4501,
											"end": 4604,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4501,
											"end": 4604,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 4501,
											"end": 4604,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 4501,
											"end": 4604,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4501,
											"end": 4604,
											"name": "tag",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 4501,
											"end": 4604,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4501,
											"end": 4604,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4501,
											"end": 4604,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4501,
											"end": 4604,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 4501,
											"end": 4604,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4501,
											"end": 4604,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4501,
											"end": 4604,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 4501,
											"end": 4604,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4501,
											"end": 4604,
											"name": "tag",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 4501,
											"end": 4604,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4501,
											"end": 4604,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4501,
											"end": 4604,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4501,
											"end": 4604,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4501,
											"end": 4604,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4501,
											"end": 4604,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4501,
											"end": 4604,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4501,
											"end": 4604,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 8540,
											"end": 8693,
											"name": "tag",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 8540,
											"end": 8693,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8540,
											"end": 8693,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 8540,
											"end": 8693,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 8540,
											"end": 8693,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8540,
											"end": 8693,
											"name": "tag",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 8540,
											"end": 8693,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8540,
											"end": 8693,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8540,
											"end": 8693,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8540,
											"end": 8693,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 8540,
											"end": 8693,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8540,
											"end": 8693,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8540,
											"end": 8693,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 8540,
											"end": 8693,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8540,
											"end": 8693,
											"name": "tag",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 8540,
											"end": 8693,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8540,
											"end": 8693,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8540,
											"end": 8693,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8540,
											"end": 8693,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8540,
											"end": 8693,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8540,
											"end": 8693,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8540,
											"end": 8693,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8540,
											"end": 8693,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 5448,
											"end": 5583,
											"name": "tag",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 5448,
											"end": 5583,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5448,
											"end": 5583,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 5448,
											"end": 5583,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5448,
											"end": 5583,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5448,
											"end": 5583,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 5448,
											"end": 5583,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5448,
											"end": 5583,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5448,
											"end": 5583,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5448,
											"end": 5583,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5448,
											"end": 5583,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 5448,
											"end": 5583,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5448,
											"end": 5583,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5448,
											"end": 5583,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 5448,
											"end": 5583,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5448,
											"end": 5583,
											"name": "tag",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 5448,
											"end": 5583,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5448,
											"end": 5583,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 5448,
											"end": 5583,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5448,
											"end": 5583,
											"name": "tag",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 5448,
											"end": 5583,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5448,
											"end": 5583,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5448,
											"end": 5583,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5448,
											"end": 5583,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 5448,
											"end": 5583,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5448,
											"end": 5583,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5448,
											"end": 5583,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 5448,
											"end": 5583,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5448,
											"end": 5583,
											"name": "tag",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 5448,
											"end": 5583,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5448,
											"end": 5583,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5448,
											"end": 5583,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5448,
											"end": 5583,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5448,
											"end": 5583,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5448,
											"end": 5583,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5448,
											"end": 5583,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5448,
											"end": 5583,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 7039,
											"end": 7287,
											"name": "tag",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 7039,
											"end": 7287,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7039,
											"end": 7287,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 7039,
											"end": 7287,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7039,
											"end": 7287,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7039,
											"end": 7287,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 7039,
											"end": 7287,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7039,
											"end": 7287,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7039,
											"end": 7287,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7039,
											"end": 7287,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7039,
											"end": 7287,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 7039,
											"end": 7287,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7039,
											"end": 7287,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7039,
											"end": 7287,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 7039,
											"end": 7287,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7039,
											"end": 7287,
											"name": "tag",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 7039,
											"end": 7287,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7039,
											"end": 7287,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 7039,
											"end": 7287,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7039,
											"end": 7287,
											"name": "tag",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 7039,
											"end": 7287,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7039,
											"end": 7287,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 5591,
											"end": 5685,
											"name": "tag",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 5591,
											"end": 5685,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5591,
											"end": 5685,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 5591,
											"end": 5685,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 5591,
											"end": 5685,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5591,
											"end": 5685,
											"name": "tag",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 5591,
											"end": 5685,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5591,
											"end": 5685,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5591,
											"end": 5685,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5591,
											"end": 5685,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 5591,
											"end": 5685,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5591,
											"end": 5685,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5591,
											"end": 5685,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 5591,
											"end": 5685,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5591,
											"end": 5685,
											"name": "tag",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 5591,
											"end": 5685,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5591,
											"end": 5685,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5591,
											"end": 5685,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5591,
											"end": 5685,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5591,
											"end": 5685,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5591,
											"end": 5685,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5591,
											"end": 5685,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5591,
											"end": 5685,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1213,
											"end": 1239,
											"name": "tag",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 1213,
											"end": 1239,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1213,
											"end": 1239,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 1213,
											"end": 1239,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 1213,
											"end": 1239,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1213,
											"end": 1239,
											"name": "tag",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 1213,
											"end": 1239,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1213,
											"end": 1239,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1213,
											"end": 1239,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1213,
											"end": 1239,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 1213,
											"end": 1239,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1213,
											"end": 1239,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1213,
											"end": 1239,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 1213,
											"end": 1239,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1213,
											"end": 1239,
											"name": "tag",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 1213,
											"end": 1239,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1213,
											"end": 1239,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1213,
											"end": 1239,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1213,
											"end": 1239,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1213,
											"end": 1239,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1213,
											"end": 1239,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1213,
											"end": 1239,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1213,
											"end": 1239,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 9331,
											"end": 9759,
											"name": "tag",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 9331,
											"end": 9759,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9331,
											"end": 9759,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 9331,
											"end": 9759,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9331,
											"end": 9759,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9331,
											"end": 9759,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 9331,
											"end": 9759,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9331,
											"end": 9759,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9331,
											"end": 9759,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9331,
											"end": 9759,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9331,
											"end": 9759,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 9331,
											"end": 9759,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9331,
											"end": 9759,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9331,
											"end": 9759,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 9331,
											"end": 9759,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9331,
											"end": 9759,
											"name": "tag",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 9331,
											"end": 9759,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9331,
											"end": 9759,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 9331,
											"end": 9759,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9331,
											"end": 9759,
											"name": "tag",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 9331,
											"end": 9759,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9331,
											"end": 9759,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9331,
											"end": 9759,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9331,
											"end": 9759,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 9331,
											"end": 9759,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9331,
											"end": 9759,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9331,
											"end": 9759,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 9331,
											"end": 9759,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9331,
											"end": 9759,
											"name": "tag",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 9331,
											"end": 9759,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9331,
											"end": 9759,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9331,
											"end": 9759,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9331,
											"end": 9759,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9331,
											"end": 9759,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9331,
											"end": 9759,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9331,
											"end": 9759,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9331,
											"end": 9759,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 7295,
											"end": 7569,
											"name": "tag",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 7295,
											"end": 7569,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7295,
											"end": 7569,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 7295,
											"end": 7569,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7295,
											"end": 7569,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7295,
											"end": 7569,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 7295,
											"end": 7569,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7295,
											"end": 7569,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7295,
											"end": 7569,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7295,
											"end": 7569,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7295,
											"end": 7569,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 7295,
											"end": 7569,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7295,
											"end": 7569,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7295,
											"end": 7569,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 7295,
											"end": 7569,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7295,
											"end": 7569,
											"name": "tag",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 7295,
											"end": 7569,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7295,
											"end": 7569,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 7295,
											"end": 7569,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7295,
											"end": 7569,
											"name": "tag",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 7295,
											"end": 7569,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7295,
											"end": 7569,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 6804,
											"end": 7031,
											"name": "tag",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6804,
											"end": 7031,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6804,
											"end": 7031,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 6804,
											"end": 7031,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6804,
											"end": 7031,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6804,
											"end": 7031,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 6804,
											"end": 7031,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6804,
											"end": 7031,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6804,
											"end": 7031,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6804,
											"end": 7031,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6804,
											"end": 7031,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 6804,
											"end": 7031,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6804,
											"end": 7031,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6804,
											"end": 7031,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 6804,
											"end": 7031,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6804,
											"end": 7031,
											"name": "tag",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 6804,
											"end": 7031,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6804,
											"end": 7031,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 6804,
											"end": 7031,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6804,
											"end": 7031,
											"name": "tag",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 6804,
											"end": 7031,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6804,
											"end": 7031,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 3808,
											"end": 4390,
											"name": "tag",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 3808,
											"end": 4390,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3808,
											"end": 4390,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 3808,
											"end": 4390,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3808,
											"end": 4390,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3808,
											"end": 4390,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 3808,
											"end": 4390,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3808,
											"end": 4390,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3808,
											"end": 4390,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3808,
											"end": 4390,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3808,
											"end": 4390,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 3808,
											"end": 4390,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3808,
											"end": 4390,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3808,
											"end": 4390,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 3808,
											"end": 4390,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3808,
											"end": 4390,
											"name": "tag",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 3808,
											"end": 4390,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3808,
											"end": 4390,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 3808,
											"end": 4390,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3808,
											"end": 4390,
											"name": "tag",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 3808,
											"end": 4390,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3808,
											"end": 4390,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 8307,
											"end": 8477,
											"name": "tag",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 8307,
											"end": 8477,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8307,
											"end": 8477,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 8307,
											"end": 8477,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8307,
											"end": 8477,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8307,
											"end": 8477,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 8307,
											"end": 8477,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8307,
											"end": 8477,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8307,
											"end": 8477,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8307,
											"end": 8477,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8307,
											"end": 8477,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 8307,
											"end": 8477,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8307,
											"end": 8477,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8307,
											"end": 8477,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 8307,
											"end": 8477,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8307,
											"end": 8477,
											"name": "tag",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 8307,
											"end": 8477,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8307,
											"end": 8477,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 8307,
											"end": 8477,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8307,
											"end": 8477,
											"name": "tag",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 8307,
											"end": 8477,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8307,
											"end": 8477,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 4612,
											"end": 4746,
											"name": "tag",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 4612,
											"end": 4746,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4612,
											"end": 4746,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 4612,
											"end": 4746,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4612,
											"end": 4746,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4612,
											"end": 4746,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 4612,
											"end": 4746,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4612,
											"end": 4746,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4612,
											"end": 4746,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4612,
											"end": 4746,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4612,
											"end": 4746,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 4612,
											"end": 4746,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4612,
											"end": 4746,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4612,
											"end": 4746,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 4612,
											"end": 4746,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4612,
											"end": 4746,
											"name": "tag",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 4612,
											"end": 4746,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4612,
											"end": 4746,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 4612,
											"end": 4746,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4612,
											"end": 4746,
											"name": "tag",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 4612,
											"end": 4746,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4612,
											"end": 4746,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4612,
											"end": 4746,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4612,
											"end": 4746,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 4612,
											"end": 4746,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4612,
											"end": 4746,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4612,
											"end": 4746,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 4612,
											"end": 4746,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4612,
											"end": 4746,
											"name": "tag",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 4612,
											"end": 4746,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4612,
											"end": 4746,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4612,
											"end": 4746,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4612,
											"end": 4746,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4612,
											"end": 4746,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4612,
											"end": 4746,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4612,
											"end": 4746,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4612,
											"end": 4746,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 7947,
											"end": 8119,
											"name": "tag",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 7947,
											"end": 8119,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7947,
											"end": 8119,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 7947,
											"end": 8119,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7947,
											"end": 8119,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7947,
											"end": 8119,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 7947,
											"end": 8119,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7947,
											"end": 8119,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7947,
											"end": 8119,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7947,
											"end": 8119,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7947,
											"end": 8119,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 7947,
											"end": 8119,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7947,
											"end": 8119,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7947,
											"end": 8119,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 7947,
											"end": 8119,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7947,
											"end": 8119,
											"name": "tag",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 7947,
											"end": 8119,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7947,
											"end": 8119,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 7947,
											"end": 8119,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7947,
											"end": 8119,
											"name": "tag",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 7947,
											"end": 8119,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7947,
											"end": 8119,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 7755,
											"end": 7939,
											"name": "tag",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 7755,
											"end": 7939,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7755,
											"end": 7939,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 7755,
											"end": 7939,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7755,
											"end": 7939,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7755,
											"end": 7939,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 7755,
											"end": 7939,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7755,
											"end": 7939,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7755,
											"end": 7939,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7755,
											"end": 7939,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7755,
											"end": 7939,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 7755,
											"end": 7939,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7755,
											"end": 7939,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7755,
											"end": 7939,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 7755,
											"end": 7939,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7755,
											"end": 7939,
											"name": "tag",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 7755,
											"end": 7939,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7755,
											"end": 7939,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 7755,
											"end": 7939,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7755,
											"end": 7939,
											"name": "tag",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 7755,
											"end": 7939,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7755,
											"end": 7939,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 5300,
											"end": 5436,
											"name": "tag",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 5300,
											"end": 5436,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5300,
											"end": 5436,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 5300,
											"end": 5436,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5300,
											"end": 5436,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5300,
											"end": 5436,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 5300,
											"end": 5436,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5300,
											"end": 5436,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5300,
											"end": 5436,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5300,
											"end": 5436,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5300,
											"end": 5436,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 5300,
											"end": 5436,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5300,
											"end": 5436,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5300,
											"end": 5436,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 5300,
											"end": 5436,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5300,
											"end": 5436,
											"name": "tag",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 5300,
											"end": 5436,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5300,
											"end": 5436,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 5300,
											"end": 5436,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5300,
											"end": 5436,
											"name": "tag",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 5300,
											"end": 5436,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5300,
											"end": 5436,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5300,
											"end": 5436,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5300,
											"end": 5436,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 5300,
											"end": 5436,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5300,
											"end": 5436,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5300,
											"end": 5436,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 5300,
											"end": 5436,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5300,
											"end": 5436,
											"name": "tag",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 5300,
											"end": 5436,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5300,
											"end": 5436,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5300,
											"end": 5436,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5300,
											"end": 5436,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5300,
											"end": 5436,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5300,
											"end": 5436,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5300,
											"end": 5436,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5300,
											"end": 5436,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1246,
											"end": 1265,
											"name": "tag",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 1246,
											"end": 1265,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1246,
											"end": 1265,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 1246,
											"end": 1265,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 1246,
											"end": 1265,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1246,
											"end": 1265,
											"name": "tag",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 1246,
											"end": 1265,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1246,
											"end": 1265,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1246,
											"end": 1265,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1246,
											"end": 1265,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 1246,
											"end": 1265,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1246,
											"end": 1265,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1246,
											"end": 1265,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 1246,
											"end": 1265,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1246,
											"end": 1265,
											"name": "tag",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 1246,
											"end": 1265,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1246,
											"end": 1265,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1246,
											"end": 1265,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1246,
											"end": 1265,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1246,
											"end": 1265,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1246,
											"end": 1265,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1246,
											"end": 1265,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1246,
											"end": 1265,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 4754,
											"end": 4878,
											"name": "tag",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 4754,
											"end": 4878,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4754,
											"end": 4878,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 4754,
											"end": 4878,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4754,
											"end": 4878,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4754,
											"end": 4878,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 4754,
											"end": 4878,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4754,
											"end": 4878,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4754,
											"end": 4878,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4754,
											"end": 4878,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4754,
											"end": 4878,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 4754,
											"end": 4878,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4754,
											"end": 4878,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4754,
											"end": 4878,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 4754,
											"end": 4878,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4754,
											"end": 4878,
											"name": "tag",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 4754,
											"end": 4878,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4754,
											"end": 4878,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 4754,
											"end": 4878,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4754,
											"end": 4878,
											"name": "tag",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 4754,
											"end": 4878,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4754,
											"end": 4878,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4754,
											"end": 4878,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4754,
											"end": 4878,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 4754,
											"end": 4878,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4754,
											"end": 4878,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4754,
											"end": 4878,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 4754,
											"end": 4878,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4754,
											"end": 4878,
											"name": "tag",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 4754,
											"end": 4878,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4754,
											"end": 4878,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4754,
											"end": 4878,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4754,
											"end": 4878,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4754,
											"end": 4878,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4754,
											"end": 4878,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4754,
											"end": 4878,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4754,
											"end": 4878,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 4398,
											"end": 4493,
											"name": "tag",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 4398,
											"end": 4493,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4445,
											"end": 4452,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4474,
											"end": 4485,
											"name": "PUSH",
											"source": 7,
											"value": "C"
										},
										{
											"begin": 4474,
											"end": 4485,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4467,
											"end": 4485,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4467,
											"end": 4485,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4398,
											"end": 4493,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4398,
											"end": 4493,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 8127,
											"end": 8299,
											"name": "tag",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 8127,
											"end": 8299,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8229,
											"end": 8230,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8216,
											"end": 8226,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8216,
											"end": 8230,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 8207,
											"end": 8248,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 8207,
											"end": 8248,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8207,
											"end": 8248,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8207,
											"end": 8248,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8207,
											"end": 8248,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8207,
											"end": 8248,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8207,
											"end": 8248,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8207,
											"end": 8248,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8207,
											"end": 8248,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8207,
											"end": 8248,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 8207,
											"end": 8248,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8207,
											"end": 8248,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 8207,
											"end": 8248,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8207,
											"end": 8248,
											"name": "tag",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 8207,
											"end": 8248,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8207,
											"end": 8248,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8207,
											"end": 8248,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8207,
											"end": 8248,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8207,
											"end": 8248,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8207,
											"end": 8248,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8207,
											"end": 8248,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8207,
											"end": 8248,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8207,
											"end": 8248,
											"name": "tag",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 8207,
											"end": 8248,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8281,
											"end": 8291,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8261,
											"end": 8278,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 8261,
											"end": 8291,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8261,
											"end": 8291,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8261,
											"end": 8291,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 8261,
											"end": 8291,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8127,
											"end": 8299,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8127,
											"end": 8299,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 5732,
											"end": 6792,
											"name": "tag",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 5732,
											"end": 6792,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5812,
											"end": 5813,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5803,
											"end": 5809,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5803,
											"end": 5813,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5795,
											"end": 5849,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 5795,
											"end": 5849,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5795,
											"end": 5849,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5795,
											"end": 5849,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5795,
											"end": 5849,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5795,
											"end": 5849,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5795,
											"end": 5849,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5795,
											"end": 5849,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5795,
											"end": 5849,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5795,
											"end": 5849,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 5795,
											"end": 5849,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5795,
											"end": 5849,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 5795,
											"end": 5849,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5795,
											"end": 5849,
											"name": "tag",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 5795,
											"end": 5849,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5795,
											"end": 5849,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5795,
											"end": 5849,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5795,
											"end": 5849,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5795,
											"end": 5849,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5795,
											"end": 5849,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5795,
											"end": 5849,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5795,
											"end": 5849,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5795,
											"end": 5849,
											"name": "tag",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 5795,
											"end": 5849,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5878,
											"end": 5885,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 5878,
											"end": 5897,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5886,
											"end": 5896,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 5878,
											"end": 5897,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5878,
											"end": 5897,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5878,
											"end": 5897,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5878,
											"end": 5897,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5878,
											"end": 5897,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5878,
											"end": 5897,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5878,
											"end": 5897,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5878,
											"end": 5897,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5878,
											"end": 5897,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5878,
											"end": 5897,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5878,
											"end": 5897,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5878,
											"end": 5897,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5878,
											"end": 5897,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5878,
											"end": 5897,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5878,
											"end": 5897,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 5878,
											"end": 5910,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 5878,
											"end": 5910,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5878,
											"end": 5910,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5868,
											"end": 5874,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5868,
											"end": 5910,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5868,
											"end": 5910,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5860,
											"end": 5929,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 5860,
											"end": 5929,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5860,
											"end": 5929,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5860,
											"end": 5929,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5860,
											"end": 5929,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5860,
											"end": 5929,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5860,
											"end": 5929,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5860,
											"end": 5929,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5860,
											"end": 5929,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5860,
											"end": 5929,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 5860,
											"end": 5929,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5860,
											"end": 5929,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 5860,
											"end": 5929,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5860,
											"end": 5929,
											"name": "tag",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 5860,
											"end": 5929,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5860,
											"end": 5929,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5860,
											"end": 5929,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5860,
											"end": 5929,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5860,
											"end": 5929,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5860,
											"end": 5929,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5860,
											"end": 5929,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5860,
											"end": 5929,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5860,
											"end": 5929,
											"name": "tag",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 5860,
											"end": 5929,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5942,
											"end": 5956,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 5942,
											"end": 5954,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 5942,
											"end": 5956,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5942,
											"end": 5956,
											"name": "tag",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 5942,
											"end": 5956,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5967,
											"end": 5994,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5997,
											"end": 6003,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5967,
											"end": 6003,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5967,
											"end": 6003,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6014,
											"end": 6028,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6031,
											"end": 6098,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 6091,
											"end": 6097,
											"name": "PUSH",
											"source": 7,
											"value": "15180"
										},
										{
											"begin": 6031,
											"end": 6086,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 6051,
											"end": 6058,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 6051,
											"end": 6070,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6059,
											"end": 6069,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 6051,
											"end": 6070,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6051,
											"end": 6070,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6051,
											"end": 6070,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6051,
											"end": 6070,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6051,
											"end": 6070,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6051,
											"end": 6070,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6051,
											"end": 6070,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6051,
											"end": 6070,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6051,
											"end": 6070,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6051,
											"end": 6070,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6051,
											"end": 6070,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6051,
											"end": 6070,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6051,
											"end": 6070,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6051,
											"end": 6070,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6051,
											"end": 6070,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 6051,
											"end": 6085,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 6051,
											"end": 6085,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6051,
											"end": 6085,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6031,
											"end": 6046,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 6031,
											"end": 6050,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 6031,
											"end": 6050,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6031,
											"end": 6086,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6031,
											"end": 6086,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6031,
											"end": 6086,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6031,
											"end": 6086,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6031,
											"end": 6086,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6031,
											"end": 6086,
											"name": "tag",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 6031,
											"end": 6086,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6031,
											"end": 6090,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 6031,
											"end": 6090,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6031,
											"end": 6098,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6031,
											"end": 6098,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6031,
											"end": 6098,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6031,
											"end": 6098,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6031,
											"end": 6098,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6031,
											"end": 6098,
											"name": "tag",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 6031,
											"end": 6098,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6014,
											"end": 6098,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6014,
											"end": 6098,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6109,
											"end": 6120,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6123,
											"end": 6126,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 6109,
											"end": 6126,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6109,
											"end": 6126,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6189,
											"end": 6190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6161,
											"end": 6168,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 6161,
											"end": 6180,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6169,
											"end": 6179,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 6161,
											"end": 6180,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6161,
											"end": 6180,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6161,
											"end": 6180,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6161,
											"end": 6180,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6161,
											"end": 6180,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6161,
											"end": 6180,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6161,
											"end": 6180,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6161,
											"end": 6180,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6161,
											"end": 6180,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6161,
											"end": 6180,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6161,
											"end": 6180,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6161,
											"end": 6180,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6161,
											"end": 6180,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6161,
											"end": 6180,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6161,
											"end": 6180,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 6161,
											"end": 6185,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 6161,
											"end": 6185,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6161,
											"end": 6185,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6161,
											"end": 6190,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 6161,
											"end": 6190,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6161,
											"end": 6321,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 6161,
											"end": 6321,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6268,
											"end": 6321,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 6307,
											"end": 6320,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 6307,
											"end": 6320,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6268,
											"end": 6275,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 6268,
											"end": 6287,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6276,
											"end": 6286,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 6268,
											"end": 6287,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6268,
											"end": 6287,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6268,
											"end": 6287,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6268,
											"end": 6287,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6268,
											"end": 6287,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6268,
											"end": 6287,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6268,
											"end": 6287,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6268,
											"end": 6287,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6268,
											"end": 6287,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6268,
											"end": 6287,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6268,
											"end": 6287,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6268,
											"end": 6287,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6268,
											"end": 6287,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6268,
											"end": 6287,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6268,
											"end": 6287,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 6268,
											"end": 6302,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 6268,
											"end": 6302,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6268,
											"end": 6302,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6268,
											"end": 6306,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 6268,
											"end": 6306,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6268,
											"end": 6321,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6268,
											"end": 6321,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6268,
											"end": 6321,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6268,
											"end": 6321,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6268,
											"end": 6321,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6268,
											"end": 6321,
											"name": "tag",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 6268,
											"end": 6321,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6249,
											"end": 6264,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 6249,
											"end": 6321,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 6249,
											"end": 6321,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6161,
											"end": 6321,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 6161,
											"end": 6321,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6161,
											"end": 6321,
											"name": "tag",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 6161,
											"end": 6321,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6218,
											"end": 6219,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6202,
											"end": 6214,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 6202,
											"end": 6214,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6193,
											"end": 6199,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6193,
											"end": 6214,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 6193,
											"end": 6214,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6193,
											"end": 6214,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6193,
											"end": 6214,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 6193,
											"end": 6214,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6193,
											"end": 6214,
											"name": "tag",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 6193,
											"end": 6214,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6193,
											"end": 6219,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 6193,
											"end": 6233,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6193,
											"end": 6233,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6193,
											"end": 6233,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 6193,
											"end": 6233,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6193,
											"end": 6233,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6232,
											"end": 6233,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6223,
											"end": 6229,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6223,
											"end": 6233,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 6193,
											"end": 6233,
											"name": "tag",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 6193,
											"end": 6233,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6161,
											"end": 6321,
											"name": "tag",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 6161,
											"end": 6321,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6137,
											"end": 6321,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6137,
											"end": 6321,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6337,
											"end": 6353,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6332,
											"end": 6405,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 6332,
											"end": 6405,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6376,
											"end": 6393,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 6376,
											"end": 6393,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6370,
											"end": 6393,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6370,
											"end": 6393,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6332,
											"end": 6405,
											"name": "tag",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 6332,
											"end": 6405,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6450,
											"end": 6507,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 6487,
											"end": 6506,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6450,
											"end": 6457,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 6450,
											"end": 6469,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6458,
											"end": 6468,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 6450,
											"end": 6469,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6450,
											"end": 6469,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6450,
											"end": 6469,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6450,
											"end": 6469,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6450,
											"end": 6469,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6450,
											"end": 6469,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6450,
											"end": 6469,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6450,
											"end": 6469,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6450,
											"end": 6469,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6450,
											"end": 6469,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6450,
											"end": 6469,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6450,
											"end": 6469,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6450,
											"end": 6469,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6450,
											"end": 6469,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6450,
											"end": 6469,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 6450,
											"end": 6482,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 6450,
											"end": 6482,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6450,
											"end": 6482,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6450,
											"end": 6486,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 6450,
											"end": 6486,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6450,
											"end": 6507,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6450,
											"end": 6507,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6450,
											"end": 6507,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6450,
											"end": 6507,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6450,
											"end": 6507,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6450,
											"end": 6507,
											"name": "tag",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 6450,
											"end": 6507,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6415,
											"end": 6422,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 6415,
											"end": 6434,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6423,
											"end": 6433,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 6415,
											"end": 6434,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6415,
											"end": 6434,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6415,
											"end": 6434,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6415,
											"end": 6434,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6415,
											"end": 6434,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6415,
											"end": 6434,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6415,
											"end": 6434,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6415,
											"end": 6434,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6415,
											"end": 6434,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6415,
											"end": 6434,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6415,
											"end": 6434,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6415,
											"end": 6434,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6415,
											"end": 6434,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6415,
											"end": 6434,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6415,
											"end": 6434,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 6415,
											"end": 6447,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 6415,
											"end": 6447,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6415,
											"end": 6507,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6415,
											"end": 6507,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6415,
											"end": 6507,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 6415,
											"end": 6507,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6532,
											"end": 6568,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 6548,
											"end": 6567,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6532,
											"end": 6543,
											"name": "PUSH",
											"source": 7,
											"value": "C"
										},
										{
											"begin": 6532,
											"end": 6543,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6532,
											"end": 6547,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 6532,
											"end": 6547,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6532,
											"end": 6568,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6532,
											"end": 6568,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6532,
											"end": 6568,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6532,
											"end": 6568,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6532,
											"end": 6568,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6532,
											"end": 6568,
											"name": "tag",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 6532,
											"end": 6568,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6518,
											"end": 6529,
											"name": "PUSH",
											"source": 7,
											"value": "C"
										},
										{
											"begin": 6518,
											"end": 6568,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6518,
											"end": 6568,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6518,
											"end": 6568,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 6518,
											"end": 6568,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6601,
											"end": 6663,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 6625,
											"end": 6662,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 6658,
											"end": 6661,
											"name": "PUSH",
											"source": 7,
											"value": "2710"
										},
										{
											"begin": 6625,
											"end": 6653,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 6649,
											"end": 6652,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6625,
											"end": 6644,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 6625,
											"end": 6648,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 6625,
											"end": 6648,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6625,
											"end": 6653,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6625,
											"end": 6653,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6625,
											"end": 6653,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6625,
											"end": 6653,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6625,
											"end": 6653,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6625,
											"end": 6653,
											"name": "tag",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 6625,
											"end": 6653,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6625,
											"end": 6657,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 6625,
											"end": 6657,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6625,
											"end": 6662,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6625,
											"end": 6662,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6625,
											"end": 6662,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6625,
											"end": 6662,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6625,
											"end": 6662,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6625,
											"end": 6662,
											"name": "tag",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 6625,
											"end": 6662,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6601,
											"end": 6620,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6601,
											"end": 6624,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 6601,
											"end": 6624,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6601,
											"end": 6663,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6601,
											"end": 6663,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6601,
											"end": 6663,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6601,
											"end": 6663,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6601,
											"end": 6663,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6601,
											"end": 6663,
											"name": "tag",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 6601,
											"end": 6663,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6579,
											"end": 6663,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 6579,
											"end": 6663,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6674,
											"end": 6725,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 6693,
											"end": 6703,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 6705,
											"end": 6724,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6674,
											"end": 6679,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 6674,
											"end": 6679,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6674,
											"end": 6679,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6674,
											"end": 6679,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6674,
											"end": 6679,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6674,
											"end": 6679,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 6674,
											"end": 6679,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 6674,
											"end": 6679,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6674,
											"end": 6679,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 6674,
											"end": 6679,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6674,
											"end": 6679,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6674,
											"end": 6692,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6674,
											"end": 6692,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6674,
											"end": 6692,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 6674,
											"end": 6692,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6674,
											"end": 6725,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6674,
											"end": 6725,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6674,
											"end": 6725,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6674,
											"end": 6725,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6674,
											"end": 6725,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6674,
											"end": 6725,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6674,
											"end": 6725,
											"name": "tag",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 6674,
											"end": 6725,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6743,
											"end": 6784,
											"name": "PUSH",
											"source": 7,
											"value": "884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364"
										},
										{
											"begin": 6752,
											"end": 6762,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 6764,
											"end": 6783,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6743,
											"end": 6784,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6743,
											"end": 6784,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6743,
											"end": 6784,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 6743,
											"end": 6784,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6743,
											"end": 6784,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6743,
											"end": 6784,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6743,
											"end": 6784,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 6743,
											"end": 6784,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6743,
											"end": 6784,
											"name": "tag",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 6743,
											"end": 6784,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6743,
											"end": 6784,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6743,
											"end": 6784,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6743,
											"end": 6784,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6743,
											"end": 6784,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6743,
											"end": 6784,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6743,
											"end": 6784,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6743,
											"end": 6784,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 5774,
											"end": 6792,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5774,
											"end": 6792,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5774,
											"end": 6792,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5774,
											"end": 6792,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5732,
											"end": 6792,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5732,
											"end": 6792,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 8738,
											"end": 9323,
											"name": "tag",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 8738,
											"end": 9323,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8784,
											"end": 8798,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 8784,
											"end": 8796,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 8784,
											"end": 8798,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8784,
											"end": 8798,
											"name": "tag",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 8784,
											"end": 8798,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8819,
											"end": 8840,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8843,
											"end": 8956,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 8887,
											"end": 8955,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 8951,
											"end": 8954,
											"name": "PUSH",
											"source": 7,
											"value": "2710"
										},
										{
											"begin": 8887,
											"end": 8946,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 8931,
											"end": 8945,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8931,
											"end": 8945,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8887,
											"end": 8894,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 8887,
											"end": 8906,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8895,
											"end": 8905,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 8887,
											"end": 8906,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8887,
											"end": 8906,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8887,
											"end": 8906,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8887,
											"end": 8906,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8887,
											"end": 8906,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8887,
											"end": 8906,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8887,
											"end": 8906,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8887,
											"end": 8906,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8887,
											"end": 8906,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8887,
											"end": 8906,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8887,
											"end": 8906,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8887,
											"end": 8906,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8887,
											"end": 8906,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8887,
											"end": 8906,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8887,
											"end": 8906,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 8887,
											"end": 8926,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8887,
											"end": 8926,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8887,
											"end": 8926,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8887,
											"end": 8930,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 8887,
											"end": 8930,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8887,
											"end": 8946,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8887,
											"end": 8946,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8887,
											"end": 8946,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8887,
											"end": 8946,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8887,
											"end": 8946,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8887,
											"end": 8946,
											"name": "tag",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 8887,
											"end": 8946,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8887,
											"end": 8950,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 8887,
											"end": 8950,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8887,
											"end": 8955,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8887,
											"end": 8955,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8887,
											"end": 8955,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8887,
											"end": 8955,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8887,
											"end": 8955,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8887,
											"end": 8955,
											"name": "tag",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 8887,
											"end": 8955,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8843,
											"end": 8850,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 8843,
											"end": 8862,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8851,
											"end": 8861,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 8843,
											"end": 8862,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8843,
											"end": 8862,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8843,
											"end": 8862,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8843,
											"end": 8862,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8843,
											"end": 8862,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8843,
											"end": 8862,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8843,
											"end": 8862,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8843,
											"end": 8862,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8843,
											"end": 8862,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8843,
											"end": 8862,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8843,
											"end": 8862,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8843,
											"end": 8862,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8843,
											"end": 8862,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8843,
											"end": 8862,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8843,
											"end": 8862,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 8843,
											"end": 8882,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8843,
											"end": 8882,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8843,
											"end": 8882,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8843,
											"end": 8886,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 8843,
											"end": 8886,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8843,
											"end": 8956,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8843,
											"end": 8956,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8843,
											"end": 8956,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8843,
											"end": 8956,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8843,
											"end": 8956,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8843,
											"end": 8956,
											"name": "tag",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 8843,
											"end": 8956,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8819,
											"end": 8956,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8819,
											"end": 8956,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9001,
											"end": 9002,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8985,
											"end": 8998,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8985,
											"end": 9002,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 8977,
											"end": 9023,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 8977,
											"end": 9023,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8977,
											"end": 9023,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8977,
											"end": 9023,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8977,
											"end": 9023,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8977,
											"end": 9023,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8977,
											"end": 9023,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8977,
											"end": 9023,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8977,
											"end": 9023,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8977,
											"end": 9023,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 8977,
											"end": 9023,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8977,
											"end": 9023,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 8977,
											"end": 9023,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8977,
											"end": 9023,
											"name": "tag",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 8977,
											"end": 9023,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8977,
											"end": 9023,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8977,
											"end": 9023,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8977,
											"end": 9023,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8977,
											"end": 9023,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8977,
											"end": 9023,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8977,
											"end": 9023,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8977,
											"end": 9023,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8977,
											"end": 9023,
											"name": "tag",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 8977,
											"end": 9023,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9054,
											"end": 9059,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 9054,
											"end": 9059,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9054,
											"end": 9059,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9054,
											"end": 9059,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 9054,
											"end": 9059,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9054,
											"end": 9059,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 9054,
											"end": 9059,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 9054,
											"end": 9059,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9054,
											"end": 9059,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 9054,
											"end": 9059,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9054,
											"end": 9059,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9054,
											"end": 9069,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9054,
											"end": 9069,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9054,
											"end": 9069,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 9078,
											"end": 9082,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 9054,
											"end": 9084,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9054,
											"end": 9084,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9054,
											"end": 9084,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9054,
											"end": 9084,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9054,
											"end": 9084,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9054,
											"end": 9084,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 9054,
											"end": 9084,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 9054,
											"end": 9084,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9054,
											"end": 9084,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9054,
											"end": 9084,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9054,
											"end": 9084,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9054,
											"end": 9084,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 9054,
											"end": 9084,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9054,
											"end": 9084,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9054,
											"end": 9084,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 9054,
											"end": 9084,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9054,
											"end": 9084,
											"name": "tag",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 9054,
											"end": 9084,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9054,
											"end": 9084,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9054,
											"end": 9084,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9054,
											"end": 9084,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9054,
											"end": 9084,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9054,
											"end": 9084,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9054,
											"end": 9084,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9054,
											"end": 9084,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9054,
											"end": 9084,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 9054,
											"end": 9084,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9054,
											"end": 9084,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 9054,
											"end": 9084,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9054,
											"end": 9084,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9054,
											"end": 9084,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9054,
											"end": 9084,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 9054,
											"end": 9084,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9054,
											"end": 9084,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9054,
											"end": 9084,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9054,
											"end": 9084,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 9054,
											"end": 9084,
											"name": "tag",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 9054,
											"end": 9084,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9054,
											"end": 9084,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9054,
											"end": 9084,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 9054,
											"end": 9084,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 9054,
											"end": 9084,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9054,
											"end": 9084,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9054,
											"end": 9084,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9054,
											"end": 9084,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 9054,
											"end": 9084,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9054,
											"end": 9084,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 9054,
											"end": 9084,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9054,
											"end": 9084,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9054,
											"end": 9084,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 9054,
											"end": 9084,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 9054,
											"end": 9084,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9054,
											"end": 9084,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 9054,
											"end": 9084,
											"name": "tag",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 9054,
											"end": 9084,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9054,
											"end": 9084,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9054,
											"end": 9084,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9054,
											"end": 9084,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9054,
											"end": 9084,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9054,
											"end": 9084,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9054,
											"end": 9084,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9054,
											"end": 9084,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 9054,
											"end": 9084,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 9054,
											"end": 9084,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 9054,
											"end": 9084,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 9054,
											"end": 9084,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9054,
											"end": 9084,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9054,
											"end": 9084,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9054,
											"end": 9084,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9054,
											"end": 9084,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9054,
											"end": 9084,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9054,
											"end": 9084,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9054,
											"end": 9084,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9054,
											"end": 9084,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9054,
											"end": 9084,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9054,
											"end": 9084,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9054,
											"end": 9084,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9054,
											"end": 9084,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 9054,
											"end": 9084,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9054,
											"end": 9084,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9054,
											"end": 9084,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 9054,
											"end": 9084,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9054,
											"end": 9084,
											"name": "tag",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 9054,
											"end": 9084,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9038,
											"end": 9051,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9038,
											"end": 9084,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 9034,
											"end": 9145,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9034,
											"end": 9145,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 9034,
											"end": 9145,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9115,
											"end": 9120,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 9115,
											"end": 9120,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9115,
											"end": 9120,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9115,
											"end": 9120,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 9115,
											"end": 9120,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9115,
											"end": 9120,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 9115,
											"end": 9120,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 9115,
											"end": 9120,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9115,
											"end": 9120,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 9115,
											"end": 9120,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9115,
											"end": 9120,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9115,
											"end": 9130,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9115,
											"end": 9130,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9115,
											"end": 9130,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 9139,
											"end": 9143,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 9115,
											"end": 9145,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9115,
											"end": 9145,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9115,
											"end": 9145,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9115,
											"end": 9145,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9115,
											"end": 9145,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9115,
											"end": 9145,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 9115,
											"end": 9145,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 9115,
											"end": 9145,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9115,
											"end": 9145,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9115,
											"end": 9145,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9115,
											"end": 9145,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9115,
											"end": 9145,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 9115,
											"end": 9145,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9115,
											"end": 9145,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9115,
											"end": 9145,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 9115,
											"end": 9145,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9115,
											"end": 9145,
											"name": "tag",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 9115,
											"end": 9145,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9115,
											"end": 9145,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9115,
											"end": 9145,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9115,
											"end": 9145,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9115,
											"end": 9145,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9115,
											"end": 9145,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9115,
											"end": 9145,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9115,
											"end": 9145,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9115,
											"end": 9145,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 9115,
											"end": 9145,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9115,
											"end": 9145,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 9115,
											"end": 9145,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9115,
											"end": 9145,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9115,
											"end": 9145,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9115,
											"end": 9145,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 9115,
											"end": 9145,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9115,
											"end": 9145,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9115,
											"end": 9145,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9115,
											"end": 9145,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 9115,
											"end": 9145,
											"name": "tag",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 9115,
											"end": 9145,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9115,
											"end": 9145,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9115,
											"end": 9145,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 9115,
											"end": 9145,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 9115,
											"end": 9145,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9115,
											"end": 9145,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9115,
											"end": 9145,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9115,
											"end": 9145,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 9115,
											"end": 9145,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9115,
											"end": 9145,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 9115,
											"end": 9145,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9115,
											"end": 9145,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9115,
											"end": 9145,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 9115,
											"end": 9145,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 9115,
											"end": 9145,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9115,
											"end": 9145,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 9115,
											"end": 9145,
											"name": "tag",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 9115,
											"end": 9145,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9115,
											"end": 9145,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9115,
											"end": 9145,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9115,
											"end": 9145,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9115,
											"end": 9145,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9115,
											"end": 9145,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9115,
											"end": 9145,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9115,
											"end": 9145,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 9115,
											"end": 9145,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 9115,
											"end": 9145,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 9115,
											"end": 9145,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 9115,
											"end": 9145,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9115,
											"end": 9145,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9115,
											"end": 9145,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9115,
											"end": 9145,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9115,
											"end": 9145,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9115,
											"end": 9145,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9115,
											"end": 9145,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9115,
											"end": 9145,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9115,
											"end": 9145,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9115,
											"end": 9145,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9115,
											"end": 9145,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9115,
											"end": 9145,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9115,
											"end": 9145,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 9115,
											"end": 9145,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9115,
											"end": 9145,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9115,
											"end": 9145,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 9115,
											"end": 9145,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9115,
											"end": 9145,
											"name": "tag",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 9115,
											"end": 9145,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9099,
											"end": 9145,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9099,
											"end": 9145,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9034,
											"end": 9145,
											"name": "tag",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 9034,
											"end": 9145,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9156,
											"end": 9201,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 9175,
											"end": 9185,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 9187,
											"end": 9200,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9156,
											"end": 9161,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 9156,
											"end": 9161,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9156,
											"end": 9161,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9156,
											"end": 9161,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 9156,
											"end": 9161,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9156,
											"end": 9161,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 9156,
											"end": 9161,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 9156,
											"end": 9161,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9156,
											"end": 9161,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 9156,
											"end": 9161,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9156,
											"end": 9161,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9156,
											"end": 9174,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9156,
											"end": 9174,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9156,
											"end": 9174,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 9156,
											"end": 9174,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9156,
											"end": 9201,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9156,
											"end": 9201,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9156,
											"end": 9201,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9156,
											"end": 9201,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9156,
											"end": 9201,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9156,
											"end": 9201,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9156,
											"end": 9201,
											"name": "tag",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 9156,
											"end": 9201,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9254,
											"end": 9255,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9212,
											"end": 9219,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 9212,
											"end": 9231,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9220,
											"end": 9230,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 9212,
											"end": 9231,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9212,
											"end": 9231,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9212,
											"end": 9231,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9212,
											"end": 9231,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9212,
											"end": 9231,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9212,
											"end": 9231,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9212,
											"end": 9231,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9212,
											"end": 9231,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9212,
											"end": 9231,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9212,
											"end": 9231,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9212,
											"end": 9231,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9212,
											"end": 9231,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9212,
											"end": 9231,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9212,
											"end": 9231,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9212,
											"end": 9231,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 9212,
											"end": 9251,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9212,
											"end": 9251,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9212,
											"end": 9255,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9212,
											"end": 9255,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9212,
											"end": 9255,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 9212,
											"end": 9255,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9281,
											"end": 9315,
											"name": "PUSH",
											"source": 7,
											"value": "C9695243A805ADB74C91F28311176C65B417E842D5699893CEF56D18BFA48CBA"
										},
										{
											"begin": 9289,
											"end": 9299,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 9301,
											"end": 9314,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9281,
											"end": 9315,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9281,
											"end": 9315,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9281,
											"end": 9315,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 9281,
											"end": 9315,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9281,
											"end": 9315,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9281,
											"end": 9315,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9281,
											"end": 9315,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 9281,
											"end": 9315,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9281,
											"end": 9315,
											"name": "tag",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 9281,
											"end": 9315,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9281,
											"end": 9315,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9281,
											"end": 9315,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9281,
											"end": 9315,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9281,
											"end": 9315,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9281,
											"end": 9315,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9281,
											"end": 9315,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9281,
											"end": 9315,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 8763,
											"end": 9323,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8738,
											"end": 9323,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 4886,
											"end": 5288,
											"name": "tag",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 4886,
											"end": 5288,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4943,
											"end": 4950,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4997,
											"end": 5001,
											"name": "PUSH",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 4969,
											"end": 4976,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 4969,
											"end": 4986,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4977,
											"end": 4985,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4969,
											"end": 4986,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4969,
											"end": 4986,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4969,
											"end": 4986,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4969,
											"end": 4986,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4969,
											"end": 4986,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4969,
											"end": 4986,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4969,
											"end": 4986,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4969,
											"end": 4986,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4969,
											"end": 4986,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4969,
											"end": 4986,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4969,
											"end": 4986,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4969,
											"end": 4986,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4969,
											"end": 4986,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4969,
											"end": 4986,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4969,
											"end": 4986,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4969,
											"end": 4993,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 4969,
											"end": 4993,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4969,
											"end": 4993,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4969,
											"end": 5001,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4965,
											"end": 5024,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 4965,
											"end": 5024,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5023,
											"end": 5024,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 5016,
											"end": 5024,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5016,
											"end": 5024,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5016,
											"end": 5024,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 5016,
											"end": 5024,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4965,
											"end": 5024,
											"name": "tag",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 4965,
											"end": 5024,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5065,
											"end": 5066,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5039,
											"end": 5046,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 5039,
											"end": 5056,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5047,
											"end": 5055,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5039,
											"end": 5056,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5039,
											"end": 5056,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5039,
											"end": 5056,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5039,
											"end": 5056,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5039,
											"end": 5056,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5039,
											"end": 5056,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5039,
											"end": 5056,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5039,
											"end": 5056,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5039,
											"end": 5056,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5039,
											"end": 5056,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5039,
											"end": 5056,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5039,
											"end": 5056,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5039,
											"end": 5056,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5039,
											"end": 5056,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5039,
											"end": 5056,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 5039,
											"end": 5061,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 5039,
											"end": 5061,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5039,
											"end": 5061,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5039,
											"end": 5066,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 5035,
											"end": 5280,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 5035,
											"end": 5280,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5156,
											"end": 5157,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5145,
											"end": 5151,
											"name": "PUSH",
											"source": 7,
											"value": "93A80"
										},
										{
											"begin": 5088,
											"end": 5141,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 5108,
											"end": 5115,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 5108,
											"end": 5125,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5116,
											"end": 5124,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5108,
											"end": 5125,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5108,
											"end": 5125,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5108,
											"end": 5125,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5108,
											"end": 5125,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5108,
											"end": 5125,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5108,
											"end": 5125,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5108,
											"end": 5125,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5108,
											"end": 5125,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5108,
											"end": 5125,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5108,
											"end": 5125,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5108,
											"end": 5125,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5108,
											"end": 5125,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5108,
											"end": 5125,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5108,
											"end": 5125,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5108,
											"end": 5125,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 5108,
											"end": 5140,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 5108,
											"end": 5140,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5108,
											"end": 5140,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5088,
											"end": 5103,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 5088,
											"end": 5107,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 5088,
											"end": 5107,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5088,
											"end": 5141,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5088,
											"end": 5141,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5088,
											"end": 5141,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5088,
											"end": 5141,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5088,
											"end": 5141,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5088,
											"end": 5141,
											"name": "tag",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 5088,
											"end": 5141,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5088,
											"end": 5152,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 5088,
											"end": 5152,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5088,
											"end": 5152,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5088,
											"end": 5152,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 5088,
											"end": 5152,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5088,
											"end": 5152,
											"name": "tag",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 5088,
											"end": 5152,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5088,
											"end": 5157,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 5088,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 5088,
											"end": 5165,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5164,
											"end": 5165,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 5088,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 5088,
											"end": 5165,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5088,
											"end": 5165,
											"name": "tag",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 5088,
											"end": 5165,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5160,
											"end": 5161,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5088,
											"end": 5165,
											"name": "tag",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 5088,
											"end": 5165,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5081,
											"end": 5165,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 5081,
											"end": 5165,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5081,
											"end": 5165,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5081,
											"end": 5165,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5081,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 5081,
											"end": 5165,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5035,
											"end": 5280,
											"name": "tag",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 5035,
											"end": 5280,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5259,
											"end": 5272,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 5259,
											"end": 5272,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5202,
											"end": 5255,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 5222,
											"end": 5229,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 5222,
											"end": 5239,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5230,
											"end": 5238,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5222,
											"end": 5239,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5222,
											"end": 5239,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5222,
											"end": 5239,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5222,
											"end": 5239,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5222,
											"end": 5239,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5222,
											"end": 5239,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5222,
											"end": 5239,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5222,
											"end": 5239,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5222,
											"end": 5239,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5222,
											"end": 5239,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5222,
											"end": 5239,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5222,
											"end": 5239,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5222,
											"end": 5239,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5222,
											"end": 5239,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5222,
											"end": 5239,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 5222,
											"end": 5254,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 5222,
											"end": 5254,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5222,
											"end": 5254,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5202,
											"end": 5217,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 5202,
											"end": 5221,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 5202,
											"end": 5221,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5202,
											"end": 5255,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5202,
											"end": 5255,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5202,
											"end": 5255,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5202,
											"end": 5255,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5202,
											"end": 5255,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5202,
											"end": 5255,
											"name": "tag",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 5202,
											"end": 5255,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5202,
											"end": 5272,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 5202,
											"end": 5272,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5202,
											"end": 5280,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 5202,
											"end": 5280,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5279,
											"end": 5280,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 5202,
											"end": 5280,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 5202,
											"end": 5280,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5202,
											"end": 5280,
											"name": "tag",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 5202,
											"end": 5280,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5275,
											"end": 5276,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5202,
											"end": 5280,
											"name": "tag",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 5202,
											"end": 5280,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5195,
											"end": 5280,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 5195,
											"end": 5280,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5195,
											"end": 5280,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5195,
											"end": 5280,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4886,
											"end": 5288,
											"name": "tag",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 4886,
											"end": 5288,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4886,
											"end": 5288,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4886,
											"end": 5288,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4886,
											"end": 5288,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4886,
											"end": 5288,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 7577,
											"end": 7747,
											"name": "tag",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 7577,
											"end": 7747,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7673,
											"end": 7674,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7660,
											"end": 7670,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7660,
											"end": 7674,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 7652,
											"end": 7692,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 7652,
											"end": 7692,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7652,
											"end": 7692,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7652,
											"end": 7692,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7652,
											"end": 7692,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7652,
											"end": 7692,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7652,
											"end": 7692,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7652,
											"end": 7692,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7652,
											"end": 7692,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7652,
											"end": 7692,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 7652,
											"end": 7692,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7652,
											"end": 7692,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 7652,
											"end": 7692,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7652,
											"end": 7692,
											"name": "tag",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 7652,
											"end": 7692,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7652,
											"end": 7692,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7652,
											"end": 7692,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7652,
											"end": 7692,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7652,
											"end": 7692,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7652,
											"end": 7692,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7652,
											"end": 7692,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7652,
											"end": 7692,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7652,
											"end": 7692,
											"name": "tag",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 7652,
											"end": 7692,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7729,
											"end": 7739,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7713,
											"end": 7726,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 7713,
											"end": 7739,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7713,
											"end": 7739,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7713,
											"end": 7739,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 7713,
											"end": 7739,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7577,
											"end": 7747,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7577,
											"end": 7747,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2828,
											"end": 3740,
											"name": "tag",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 2828,
											"end": 3740,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2930,
											"end": 2931,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2920,
											"end": 2927,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2920,
											"end": 2931,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 2967,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 2912,
											"end": 2967,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 2967,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2912,
											"end": 2967,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 2967,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2912,
											"end": 2967,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 2967,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 2967,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2912,
											"end": 2967,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 2967,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 2912,
											"end": 2967,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 2967,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 2912,
											"end": 2967,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2912,
											"end": 2967,
											"name": "tag",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 2912,
											"end": 2967,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 2967,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2912,
											"end": 2967,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 2967,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 2967,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 2967,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 2967,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 2967,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 2967,
											"name": "tag",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 2912,
											"end": 2967,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3016,
											"end": 3023,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2986,
											"end": 2991,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 2986,
											"end": 2991,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2986,
											"end": 2991,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2986,
											"end": 2991,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2986,
											"end": 2991,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2986,
											"end": 2991,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2986,
											"end": 2991,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2986,
											"end": 2991,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2986,
											"end": 2991,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 2986,
											"end": 2991,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2986,
											"end": 2991,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2986,
											"end": 3001,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2986,
											"end": 3001,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2986,
											"end": 3001,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 3002,
											"end": 3012,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2986,
											"end": 3013,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2986,
											"end": 3013,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2986,
											"end": 3013,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2986,
											"end": 3013,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2986,
											"end": 3013,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2986,
											"end": 3013,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 2986,
											"end": 3013,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 2986,
											"end": 3013,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2986,
											"end": 3013,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2986,
											"end": 3013,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2986,
											"end": 3013,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2986,
											"end": 3013,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 2986,
											"end": 3013,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2986,
											"end": 3013,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2986,
											"end": 3013,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 2986,
											"end": 3013,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2986,
											"end": 3013,
											"name": "tag",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 2986,
											"end": 3013,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2986,
											"end": 3013,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2986,
											"end": 3013,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2986,
											"end": 3013,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2986,
											"end": 3013,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2986,
											"end": 3013,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2986,
											"end": 3013,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2986,
											"end": 3013,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2986,
											"end": 3013,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2986,
											"end": 3013,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2986,
											"end": 3013,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 2986,
											"end": 3013,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2986,
											"end": 3013,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2986,
											"end": 3013,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2986,
											"end": 3013,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 2986,
											"end": 3013,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2986,
											"end": 3013,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2986,
											"end": 3013,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2986,
											"end": 3013,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2986,
											"end": 3013,
											"name": "tag",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 2986,
											"end": 3013,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2986,
											"end": 3013,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2986,
											"end": 3013,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 2986,
											"end": 3013,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 2986,
											"end": 3013,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2986,
											"end": 3013,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2986,
											"end": 3013,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2986,
											"end": 3013,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 2986,
											"end": 3013,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2986,
											"end": 3013,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2986,
											"end": 3013,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2986,
											"end": 3013,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2986,
											"end": 3013,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 2986,
											"end": 3013,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2986,
											"end": 3013,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2986,
											"end": 3013,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2986,
											"end": 3013,
											"name": "tag",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 2986,
											"end": 3013,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2986,
											"end": 3013,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2986,
											"end": 3013,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2986,
											"end": 3013,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2986,
											"end": 3013,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2986,
											"end": 3013,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2986,
											"end": 3013,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2986,
											"end": 3013,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2986,
											"end": 3013,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 2986,
											"end": 3013,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 2986,
											"end": 3013,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 2986,
											"end": 3013,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2986,
											"end": 3013,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2986,
											"end": 3013,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2986,
											"end": 3013,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2986,
											"end": 3013,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2986,
											"end": 3013,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2986,
											"end": 3013,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2986,
											"end": 3013,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2986,
											"end": 3013,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2986,
											"end": 3013,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2986,
											"end": 3013,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2986,
											"end": 3013,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2986,
											"end": 3013,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 2986,
											"end": 3013,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2986,
											"end": 3013,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2986,
											"end": 3013,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 2986,
											"end": 3013,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2986,
											"end": 3013,
											"name": "tag",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 2986,
											"end": 3013,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2986,
											"end": 3023,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2978,
											"end": 3041,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 2978,
											"end": 3041,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2978,
											"end": 3041,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2978,
											"end": 3041,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2978,
											"end": 3041,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2978,
											"end": 3041,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2978,
											"end": 3041,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2978,
											"end": 3041,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2978,
											"end": 3041,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2978,
											"end": 3041,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 2978,
											"end": 3041,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2978,
											"end": 3041,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 2978,
											"end": 3041,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2978,
											"end": 3041,
											"name": "tag",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 2978,
											"end": 3041,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2978,
											"end": 3041,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2978,
											"end": 3041,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2978,
											"end": 3041,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2978,
											"end": 3041,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2978,
											"end": 3041,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2978,
											"end": 3041,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2978,
											"end": 3041,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2978,
											"end": 3041,
											"name": "tag",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 2978,
											"end": 3041,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3090,
											"end": 3094,
											"name": "PUSH",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 3060,
											"end": 3067,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 3060,
											"end": 3079,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3068,
											"end": 3078,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3060,
											"end": 3079,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3060,
											"end": 3079,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3060,
											"end": 3079,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3060,
											"end": 3079,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3060,
											"end": 3079,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3060,
											"end": 3079,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3060,
											"end": 3079,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3060,
											"end": 3079,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3060,
											"end": 3079,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3060,
											"end": 3079,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3060,
											"end": 3079,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3060,
											"end": 3079,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3060,
											"end": 3079,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3060,
											"end": 3079,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3060,
											"end": 3079,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3060,
											"end": 3086,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 3060,
											"end": 3086,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3060,
											"end": 3086,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3060,
											"end": 3094,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 3060,
											"end": 3094,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3052,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 3052,
											"end": 3114,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3052,
											"end": 3114,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3114,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3052,
											"end": 3114,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3052,
											"end": 3114,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3052,
											"end": 3114,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3052,
											"end": 3114,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3052,
											"end": 3114,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3052,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 3052,
											"end": 3114,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3052,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 3052,
											"end": 3114,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3052,
											"end": 3114,
											"name": "tag",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 3052,
											"end": 3114,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3052,
											"end": 3114,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3114,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3052,
											"end": 3114,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3052,
											"end": 3114,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3052,
											"end": 3114,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3052,
											"end": 3114,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3052,
											"end": 3114,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3052,
											"end": 3114,
											"name": "tag",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 3052,
											"end": 3114,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3148,
											"end": 3149,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3139,
											"end": 3144,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3139,
											"end": 3149,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 3135,
											"end": 3511,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3135,
											"end": 3511,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 3135,
											"end": 3511,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3170,
											"end": 3187,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 3170,
											"end": 3187,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3159,
											"end": 3166,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3159,
											"end": 3187,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3159,
											"end": 3187,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3151,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 3151,
											"end": 3204,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3151,
											"end": 3204,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3151,
											"end": 3204,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3151,
											"end": 3204,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3151,
											"end": 3204,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3151,
											"end": 3204,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3151,
											"end": 3204,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3151,
											"end": 3204,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3151,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 3151,
											"end": 3204,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3151,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 3151,
											"end": 3204,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3151,
											"end": 3204,
											"name": "tag",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 3151,
											"end": 3204,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3151,
											"end": 3204,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3151,
											"end": 3204,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3151,
											"end": 3204,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3151,
											"end": 3204,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3151,
											"end": 3204,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3151,
											"end": 3204,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3151,
											"end": 3204,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3151,
											"end": 3204,
											"name": "tag",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 3151,
											"end": 3204,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3135,
											"end": 3511,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 3135,
											"end": 3511,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3135,
											"end": 3511,
											"name": "tag",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 3135,
											"end": 3511,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3233,
											"end": 3234,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3224,
											"end": 3229,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3224,
											"end": 3234,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 3220,
											"end": 3511,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3220,
											"end": 3511,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 3220,
											"end": 3511,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3255,
											"end": 3272,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 3255,
											"end": 3272,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3244,
											"end": 3251,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3244,
											"end": 3272,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3244,
											"end": 3272,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3236,
											"end": 3289,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 3236,
											"end": 3289,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3236,
											"end": 3289,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3236,
											"end": 3289,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3236,
											"end": 3289,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3236,
											"end": 3289,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3236,
											"end": 3289,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3236,
											"end": 3289,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3236,
											"end": 3289,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3236,
											"end": 3289,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 3236,
											"end": 3289,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3236,
											"end": 3289,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 3236,
											"end": 3289,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3236,
											"end": 3289,
											"name": "tag",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 3236,
											"end": 3289,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3236,
											"end": 3289,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3236,
											"end": 3289,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3236,
											"end": 3289,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3236,
											"end": 3289,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3236,
											"end": 3289,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3236,
											"end": 3289,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3236,
											"end": 3289,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3236,
											"end": 3289,
											"name": "tag",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 3236,
											"end": 3289,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3220,
											"end": 3511,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 3220,
											"end": 3511,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3220,
											"end": 3511,
											"name": "tag",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 3220,
											"end": 3511,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3318,
											"end": 3319,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 3309,
											"end": 3314,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3309,
											"end": 3319,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 3305,
											"end": 3511,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3305,
											"end": 3511,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 3305,
											"end": 3511,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3340,
											"end": 3357,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 3340,
											"end": 3357,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3329,
											"end": 3336,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3329,
											"end": 3357,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3329,
											"end": 3357,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3321,
											"end": 3374,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 3321,
											"end": 3374,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3321,
											"end": 3374,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3321,
											"end": 3374,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3321,
											"end": 3374,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3321,
											"end": 3374,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3321,
											"end": 3374,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3321,
											"end": 3374,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3321,
											"end": 3374,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3321,
											"end": 3374,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 3321,
											"end": 3374,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3321,
											"end": 3374,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 3321,
											"end": 3374,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3321,
											"end": 3374,
											"name": "tag",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 3321,
											"end": 3374,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3321,
											"end": 3374,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3321,
											"end": 3374,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3321,
											"end": 3374,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3321,
											"end": 3374,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3321,
											"end": 3374,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3321,
											"end": 3374,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3321,
											"end": 3374,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3321,
											"end": 3374,
											"name": "tag",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 3321,
											"end": 3374,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3305,
											"end": 3511,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 3305,
											"end": 3511,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3305,
											"end": 3511,
											"name": "tag",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 3305,
											"end": 3511,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3403,
											"end": 3404,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 3394,
											"end": 3399,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3394,
											"end": 3404,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 3390,
											"end": 3511,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3390,
											"end": 3511,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 3390,
											"end": 3511,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3425,
											"end": 3442,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 3425,
											"end": 3442,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3414,
											"end": 3421,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3414,
											"end": 3442,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3414,
											"end": 3442,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3406,
											"end": 3459,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 3406,
											"end": 3459,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3406,
											"end": 3459,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3406,
											"end": 3459,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3406,
											"end": 3459,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3406,
											"end": 3459,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3406,
											"end": 3459,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3406,
											"end": 3459,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3406,
											"end": 3459,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3406,
											"end": 3459,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 3406,
											"end": 3459,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3406,
											"end": 3459,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 3406,
											"end": 3459,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3406,
											"end": 3459,
											"name": "tag",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 3406,
											"end": 3459,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3406,
											"end": 3459,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3406,
											"end": 3459,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3406,
											"end": 3459,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3406,
											"end": 3459,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3406,
											"end": 3459,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3406,
											"end": 3459,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3406,
											"end": 3459,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3406,
											"end": 3459,
											"name": "tag",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 3406,
											"end": 3459,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3390,
											"end": 3511,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 3390,
											"end": 3511,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3390,
											"end": 3511,
											"name": "tag",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 3390,
											"end": 3511,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3493,
											"end": 3494,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3483,
											"end": 3490,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3483,
											"end": 3494,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3475,
											"end": 3511,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 3475,
											"end": 3511,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3475,
											"end": 3511,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3475,
											"end": 3511,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3475,
											"end": 3511,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3475,
											"end": 3511,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3475,
											"end": 3511,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3475,
											"end": 3511,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3475,
											"end": 3511,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3475,
											"end": 3511,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 3475,
											"end": 3511,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3475,
											"end": 3511,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 3475,
											"end": 3511,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3475,
											"end": 3511,
											"name": "tag",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 3475,
											"end": 3511,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3475,
											"end": 3511,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3475,
											"end": 3511,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3475,
											"end": 3511,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3475,
											"end": 3511,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3475,
											"end": 3511,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3475,
											"end": 3511,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3475,
											"end": 3511,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3475,
											"end": 3511,
											"name": "tag",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 3475,
											"end": 3511,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3390,
											"end": 3511,
											"name": "tag",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 3390,
											"end": 3511,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3305,
											"end": 3511,
											"name": "tag",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 3305,
											"end": 3511,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3220,
											"end": 3511,
											"name": "tag",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 3220,
											"end": 3511,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3135,
											"end": 3511,
											"name": "tag",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 3135,
											"end": 3511,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3559,
											"end": 3564,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3532,
											"end": 3539,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 3532,
											"end": 3551,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3540,
											"end": 3550,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3532,
											"end": 3551,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3532,
											"end": 3551,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3532,
											"end": 3551,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3532,
											"end": 3551,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3532,
											"end": 3551,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3532,
											"end": 3551,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3532,
											"end": 3551,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3532,
											"end": 3551,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3532,
											"end": 3551,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3532,
											"end": 3551,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3532,
											"end": 3551,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3532,
											"end": 3551,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3532,
											"end": 3551,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3532,
											"end": 3551,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3532,
											"end": 3551,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3532,
											"end": 3556,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 3532,
											"end": 3556,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3532,
											"end": 3564,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3532,
											"end": 3564,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3532,
											"end": 3564,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3532,
											"end": 3564,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3612,
											"end": 3627,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 3575,
											"end": 3582,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 3575,
											"end": 3594,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3583,
											"end": 3593,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3575,
											"end": 3594,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3575,
											"end": 3594,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3575,
											"end": 3594,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3575,
											"end": 3594,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3575,
											"end": 3594,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3575,
											"end": 3594,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3575,
											"end": 3594,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3575,
											"end": 3594,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3575,
											"end": 3594,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3575,
											"end": 3594,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3575,
											"end": 3594,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3575,
											"end": 3594,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3575,
											"end": 3594,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3575,
											"end": 3594,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3575,
											"end": 3594,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3575,
											"end": 3609,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 3575,
											"end": 3609,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3575,
											"end": 3627,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3575,
											"end": 3627,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3575,
											"end": 3627,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3575,
											"end": 3627,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3667,
											"end": 3671,
											"name": "PUSH",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 3638,
											"end": 3645,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 3638,
											"end": 3657,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3646,
											"end": 3656,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3638,
											"end": 3657,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3657,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3638,
											"end": 3657,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3657,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3638,
											"end": 3657,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3638,
											"end": 3657,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3638,
											"end": 3657,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3657,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3638,
											"end": 3657,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3638,
											"end": 3657,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3638,
											"end": 3657,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3638,
											"end": 3657,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3657,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3638,
											"end": 3657,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3657,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3638,
											"end": 3664,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 3638,
											"end": 3664,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3638,
											"end": 3671,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3638,
											"end": 3671,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3638,
											"end": 3671,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3638,
											"end": 3671,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3682,
											"end": 3690,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 3696,
											"end": 3706,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3682,
											"end": 3707,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3682,
											"end": 3707,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3682,
											"end": 3707,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3682,
											"end": 3707,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3682,
											"end": 3707,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3682,
											"end": 3707,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3682,
											"end": 3707,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3682,
											"end": 3707,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3682,
											"end": 3707,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3682,
											"end": 3707,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3682,
											"end": 3707,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3682,
											"end": 3707,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3682,
											"end": 3707,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3682,
											"end": 3707,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3682,
											"end": 3707,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3682,
											"end": 3707,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3682,
											"end": 3707,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3682,
											"end": 3707,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3682,
											"end": 3707,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3682,
											"end": 3707,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3682,
											"end": 3707,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3682,
											"end": 3707,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3682,
											"end": 3707,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3682,
											"end": 3707,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3682,
											"end": 3707,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3682,
											"end": 3707,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3682,
											"end": 3707,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3682,
											"end": 3707,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3682,
											"end": 3707,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3682,
											"end": 3707,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3682,
											"end": 3707,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 3682,
											"end": 3707,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 3682,
											"end": 3707,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3682,
											"end": 3707,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3682,
											"end": 3707,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3682,
											"end": 3707,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3682,
											"end": 3707,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3682,
											"end": 3707,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 3682,
											"end": 3707,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3682,
											"end": 3707,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3682,
											"end": 3707,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3682,
											"end": 3707,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3682,
											"end": 3707,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3682,
											"end": 3707,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3682,
											"end": 3707,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 3682,
											"end": 3707,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3682,
											"end": 3707,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3682,
											"end": 3707,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3718,
											"end": 3732,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 3724,
											"end": 3731,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3718,
											"end": 3723,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 3718,
											"end": 3732,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3718,
											"end": 3732,
											"name": "tag",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 3718,
											"end": 3732,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2828,
											"end": 3740,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2828,
											"end": 3740,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2828,
											"end": 3740,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 4501,
											"end": 4604,
											"name": "tag",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 4501,
											"end": 4604,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4552,
											"end": 4559,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4581,
											"end": 4589,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 4581,
											"end": 4596,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4581,
											"end": 4596,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4581,
											"end": 4596,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4581,
											"end": 4596,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4574,
											"end": 4596,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4574,
											"end": 4596,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4501,
											"end": 4604,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4501,
											"end": 4604,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 8540,
											"end": 8693,
											"name": "tag",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 8540,
											"end": 8693,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8583,
											"end": 8590,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8612,
											"end": 8626,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 8612,
											"end": 8624,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 8612,
											"end": 8626,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8612,
											"end": 8626,
											"name": "tag",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 8612,
											"end": 8626,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8646,
											"end": 8653,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 8646,
											"end": 8665,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8654,
											"end": 8664,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 8646,
											"end": 8665,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8646,
											"end": 8665,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8646,
											"end": 8665,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8646,
											"end": 8665,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8646,
											"end": 8665,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8646,
											"end": 8665,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8646,
											"end": 8665,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8646,
											"end": 8665,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8646,
											"end": 8665,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8646,
											"end": 8665,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8646,
											"end": 8665,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8646,
											"end": 8665,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8646,
											"end": 8665,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8646,
											"end": 8665,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8646,
											"end": 8665,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 8646,
											"end": 8685,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8646,
											"end": 8685,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8646,
											"end": 8685,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8639,
											"end": 8685,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8639,
											"end": 8685,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8540,
											"end": 8693,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8540,
											"end": 8693,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 5448,
											"end": 5583,
											"name": "tag",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 5448,
											"end": 5583,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5509,
											"end": 5516,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5538,
											"end": 5545,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 5538,
											"end": 5555,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5546,
											"end": 5554,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5538,
											"end": 5555,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5538,
											"end": 5555,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5538,
											"end": 5555,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5538,
											"end": 5555,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5538,
											"end": 5555,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5538,
											"end": 5555,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5538,
											"end": 5555,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5538,
											"end": 5555,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5538,
											"end": 5555,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5538,
											"end": 5555,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5538,
											"end": 5555,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5538,
											"end": 5555,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5538,
											"end": 5555,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5538,
											"end": 5555,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5538,
											"end": 5555,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 5538,
											"end": 5575,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5538,
											"end": 5575,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5538,
											"end": 5575,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5531,
											"end": 5575,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5531,
											"end": 5575,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5448,
											"end": 5583,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5448,
											"end": 5583,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5448,
											"end": 5583,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5448,
											"end": 5583,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 7039,
											"end": 7287,
											"name": "tag",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 7039,
											"end": 7287,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7150,
											"end": 7151,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7134,
											"end": 7147,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7134,
											"end": 7151,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 7126,
											"end": 7179,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 7126,
											"end": 7179,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7126,
											"end": 7179,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7126,
											"end": 7179,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7126,
											"end": 7179,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7126,
											"end": 7179,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7126,
											"end": 7179,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7126,
											"end": 7179,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7126,
											"end": 7179,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7126,
											"end": 7179,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 7126,
											"end": 7179,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7126,
											"end": 7179,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 7126,
											"end": 7179,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7126,
											"end": 7179,
											"name": "tag",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 7126,
											"end": 7179,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7126,
											"end": 7179,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7126,
											"end": 7179,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7126,
											"end": 7179,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7126,
											"end": 7179,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7126,
											"end": 7179,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7126,
											"end": 7179,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7126,
											"end": 7179,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7126,
											"end": 7179,
											"name": "tag",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 7126,
											"end": 7179,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7207,
											"end": 7232,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 7225,
											"end": 7231,
											"name": "PUSH",
											"source": 7,
											"value": "15180"
										},
										{
											"begin": 7207,
											"end": 7220,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7207,
											"end": 7224,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 7207,
											"end": 7224,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7207,
											"end": 7232,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7207,
											"end": 7232,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7207,
											"end": 7232,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7207,
											"end": 7232,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7207,
											"end": 7232,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7207,
											"end": 7232,
											"name": "tag",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 7207,
											"end": 7232,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7192,
											"end": 7204,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 7192,
											"end": 7232,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7192,
											"end": 7232,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7192,
											"end": 7232,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 7192,
											"end": 7232,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7250,
											"end": 7279,
											"name": "PUSH",
											"source": 7,
											"value": "189BDA9782663C67A3F95C0AA5455924C711210B00281C60EAD2F0DD8DBC924C"
										},
										{
											"begin": 7265,
											"end": 7278,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7250,
											"end": 7279,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7250,
											"end": 7279,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7250,
											"end": 7279,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 7250,
											"end": 7279,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7250,
											"end": 7279,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7250,
											"end": 7279,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 7250,
											"end": 7279,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7250,
											"end": 7279,
											"name": "tag",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 7250,
											"end": 7279,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7250,
											"end": 7279,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7250,
											"end": 7279,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7250,
											"end": 7279,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7250,
											"end": 7279,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7250,
											"end": 7279,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7250,
											"end": 7279,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7250,
											"end": 7279,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 7039,
											"end": 7287,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7039,
											"end": 7287,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "tag",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5591,
											"end": 5685,
											"name": "tag",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 5591,
											"end": 5685,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5637,
											"end": 5644,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5666,
											"end": 5677,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 5666,
											"end": 5677,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5659,
											"end": 5677,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5659,
											"end": 5677,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5591,
											"end": 5685,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5591,
											"end": 5685,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1213,
											"end": 1239,
											"name": "tag",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 1213,
											"end": 1239,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1213,
											"end": 1239,
											"name": "PUSH",
											"source": 7,
											"value": "C"
										},
										{
											"begin": 1213,
											"end": 1239,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1213,
											"end": 1239,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1213,
											"end": 1239,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1114,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9331,
											"end": 9759,
											"name": "tag",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 9331,
											"end": 9759,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9400,
											"end": 9407,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9430,
											"end": 9453,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9456,
											"end": 9457,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9430,
											"end": 9457,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9430,
											"end": 9457,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9483,
											"end": 9484,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9474,
											"end": 9479,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9474,
											"end": 9484,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 9474,
											"end": 9498,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9474,
											"end": 9498,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 9474,
											"end": 9498,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9474,
											"end": 9498,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9497,
											"end": 9498,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 9488,
											"end": 9493,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9488,
											"end": 9498,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 9474,
											"end": 9498,
											"name": "tag",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 9474,
											"end": 9498,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9470,
											"end": 9716,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9470,
											"end": 9716,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 9470,
											"end": 9716,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9518,
											"end": 9535,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 9518,
											"end": 9535,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 9500,
											"end": 9535,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9500,
											"end": 9535,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9470,
											"end": 9716,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 9470,
											"end": 9716,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9470,
											"end": 9716,
											"name": "tag",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 9470,
											"end": 9716,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9564,
											"end": 9565,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 9555,
											"end": 9560,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9555,
											"end": 9565,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 9551,
											"end": 9716,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9551,
											"end": 9716,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 9551,
											"end": 9716,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9585,
											"end": 9602,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 9585,
											"end": 9602,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 9567,
											"end": 9602,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9567,
											"end": 9602,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9551,
											"end": 9716,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 9551,
											"end": 9716,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9551,
											"end": 9716,
											"name": "tag",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 9551,
											"end": 9716,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9631,
											"end": 9632,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 9622,
											"end": 9627,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9622,
											"end": 9632,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 9618,
											"end": 9716,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9618,
											"end": 9716,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 9618,
											"end": 9716,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9652,
											"end": 9669,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 9652,
											"end": 9669,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 9634,
											"end": 9669,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9634,
											"end": 9669,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9618,
											"end": 9716,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 9618,
											"end": 9716,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9618,
											"end": 9716,
											"name": "tag",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 9618,
											"end": 9716,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9698,
											"end": 9699,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 9694,
											"end": 9695,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9694,
											"end": 9699,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 9685,
											"end": 9716,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 9685,
											"end": 9716,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9685,
											"end": 9716,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9685,
											"end": 9716,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9685,
											"end": 9716,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9685,
											"end": 9716,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9685,
											"end": 9716,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9685,
											"end": 9716,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9685,
											"end": 9716,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9685,
											"end": 9716,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 9685,
											"end": 9716,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9685,
											"end": 9716,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 9685,
											"end": 9716,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9685,
											"end": 9716,
											"name": "tag",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 9685,
											"end": 9716,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9685,
											"end": 9716,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9685,
											"end": 9716,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9685,
											"end": 9716,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9685,
											"end": 9716,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9685,
											"end": 9716,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9685,
											"end": 9716,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9685,
											"end": 9716,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 9685,
											"end": 9716,
											"name": "tag",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 9685,
											"end": 9716,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9618,
											"end": 9716,
											"name": "tag",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 9618,
											"end": 9716,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9551,
											"end": 9716,
											"name": "tag",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 9551,
											"end": 9716,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9470,
											"end": 9716,
											"name": "tag",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 9470,
											"end": 9716,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9736,
											"end": 9751,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9729,
											"end": 9751,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9729,
											"end": 9751,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9729,
											"end": 9751,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9331,
											"end": 9759,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9331,
											"end": 9759,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9331,
											"end": 9759,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9331,
											"end": 9759,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 7295,
											"end": 7569,
											"name": "tag",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 7295,
											"end": 7569,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7421,
											"end": 7422,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7400,
											"end": 7418,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7400,
											"end": 7422,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 7392,
											"end": 7453,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 7392,
											"end": 7453,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7392,
											"end": 7453,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7392,
											"end": 7453,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7392,
											"end": 7453,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7392,
											"end": 7453,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7392,
											"end": 7453,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7392,
											"end": 7453,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7392,
											"end": 7453,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7392,
											"end": 7453,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 7392,
											"end": 7453,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7392,
											"end": 7453,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 7392,
											"end": 7453,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7392,
											"end": 7453,
											"name": "tag",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 7392,
											"end": 7453,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7392,
											"end": 7453,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7392,
											"end": 7453,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7392,
											"end": 7453,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7392,
											"end": 7453,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7392,
											"end": 7453,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7392,
											"end": 7453,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7392,
											"end": 7453,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7392,
											"end": 7453,
											"name": "tag",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 7392,
											"end": 7453,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7486,
											"end": 7504,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7466,
											"end": 7483,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 7466,
											"end": 7504,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7466,
											"end": 7504,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7466,
											"end": 7504,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 7466,
											"end": 7504,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7522,
											"end": 7561,
											"name": "PUSH",
											"source": 7,
											"value": "150C688DD7595BF7862B8AB1FE46756450EB7D731037942B3BBC46F3F0E21B81"
										},
										{
											"begin": 7542,
											"end": 7560,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7522,
											"end": 7561,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7522,
											"end": 7561,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7522,
											"end": 7561,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 7522,
											"end": 7561,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7522,
											"end": 7561,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7522,
											"end": 7561,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 7522,
											"end": 7561,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7522,
											"end": 7561,
											"name": "tag",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 7522,
											"end": 7561,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7522,
											"end": 7561,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7522,
											"end": 7561,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7522,
											"end": 7561,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7522,
											"end": 7561,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7522,
											"end": 7561,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7522,
											"end": 7561,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7522,
											"end": 7561,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 7295,
											"end": 7569,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7295,
											"end": 7569,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 6804,
											"end": 7031,
											"name": "tag",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 6804,
											"end": 7031,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6912,
											"end": 6913,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6897,
											"end": 6909,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6897,
											"end": 6913,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 6889,
											"end": 6931,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 6889,
											"end": 6931,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6889,
											"end": 6931,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6889,
											"end": 6931,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6889,
											"end": 6931,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6889,
											"end": 6931,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6889,
											"end": 6931,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6889,
											"end": 6931,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6889,
											"end": 6931,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6889,
											"end": 6931,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 6889,
											"end": 6931,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6889,
											"end": 6931,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 6889,
											"end": 6931,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6889,
											"end": 6931,
											"name": "tag",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 6889,
											"end": 6931,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6889,
											"end": 6931,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6889,
											"end": 6931,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6889,
											"end": 6931,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6889,
											"end": 6931,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6889,
											"end": 6931,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6889,
											"end": 6931,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6889,
											"end": 6931,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6889,
											"end": 6931,
											"name": "tag",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 6889,
											"end": 6931,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6966,
											"end": 6978,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6952,
											"end": 6963,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 6952,
											"end": 6978,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6952,
											"end": 6978,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6952,
											"end": 6978,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 6952,
											"end": 6978,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6996,
											"end": 7023,
											"name": "PUSH",
											"source": 7,
											"value": "1946FB78C7CA778B54D82CABAAC5BA67CF446F58D0FF1F8CEAEBB6150E54E44F"
										},
										{
											"begin": 7010,
											"end": 7022,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6996,
											"end": 7023,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6996,
											"end": 7023,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6996,
											"end": 7023,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 6996,
											"end": 7023,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6996,
											"end": 7023,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6996,
											"end": 7023,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 6996,
											"end": 7023,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6996,
											"end": 7023,
											"name": "tag",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 6996,
											"end": 7023,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6996,
											"end": 7023,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6996,
											"end": 7023,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6996,
											"end": 7023,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6996,
											"end": 7023,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6996,
											"end": 7023,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6996,
											"end": 7023,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6996,
											"end": 7023,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 6804,
											"end": 7031,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6804,
											"end": 7031,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 3808,
											"end": 4390,
											"name": "tag",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 3808,
											"end": 4390,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3885,
											"end": 3886,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3875,
											"end": 3882,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3875,
											"end": 3886,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3867,
											"end": 3922,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 3867,
											"end": 3922,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3867,
											"end": 3922,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3867,
											"end": 3922,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3867,
											"end": 3922,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3867,
											"end": 3922,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3867,
											"end": 3922,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3867,
											"end": 3922,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3867,
											"end": 3922,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3867,
											"end": 3922,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 3867,
											"end": 3922,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3867,
											"end": 3922,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 3867,
											"end": 3922,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3867,
											"end": 3922,
											"name": "tag",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 3867,
											"end": 3922,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3867,
											"end": 3922,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3867,
											"end": 3922,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3867,
											"end": 3922,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3867,
											"end": 3922,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3867,
											"end": 3922,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3867,
											"end": 3922,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3867,
											"end": 3922,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3867,
											"end": 3922,
											"name": "tag",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 3867,
											"end": 3922,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3971,
											"end": 3978,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3941,
											"end": 3946,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 3941,
											"end": 3946,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3941,
											"end": 3946,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3941,
											"end": 3946,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3941,
											"end": 3946,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3941,
											"end": 3946,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 3941,
											"end": 3946,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 3941,
											"end": 3946,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3941,
											"end": 3946,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 3941,
											"end": 3946,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3941,
											"end": 3946,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3941,
											"end": 3956,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3941,
											"end": 3956,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3941,
											"end": 3956,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 3957,
											"end": 3967,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3941,
											"end": 3968,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3941,
											"end": 3968,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3941,
											"end": 3968,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3941,
											"end": 3968,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3941,
											"end": 3968,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3941,
											"end": 3968,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 3941,
											"end": 3968,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 3941,
											"end": 3968,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3941,
											"end": 3968,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3941,
											"end": 3968,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3941,
											"end": 3968,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3941,
											"end": 3968,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "305"
										},
										{
											"begin": 3941,
											"end": 3968,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3941,
											"end": 3968,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3941,
											"end": 3968,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 3941,
											"end": 3968,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3941,
											"end": 3968,
											"name": "tag",
											"source": 7,
											"value": "305"
										},
										{
											"begin": 3941,
											"end": 3968,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3941,
											"end": 3968,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3941,
											"end": 3968,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3941,
											"end": 3968,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3941,
											"end": 3968,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3941,
											"end": 3968,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3941,
											"end": 3968,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3941,
											"end": 3968,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3941,
											"end": 3968,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3941,
											"end": 3968,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3941,
											"end": 3968,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 3941,
											"end": 3968,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3941,
											"end": 3968,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3941,
											"end": 3968,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3941,
											"end": 3968,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "306"
										},
										{
											"begin": 3941,
											"end": 3968,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3941,
											"end": 3968,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3941,
											"end": 3968,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3941,
											"end": 3968,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3941,
											"end": 3968,
											"name": "tag",
											"source": 7,
											"value": "306"
										},
										{
											"begin": 3941,
											"end": 3968,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3941,
											"end": 3968,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3941,
											"end": 3968,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 3941,
											"end": 3968,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 3941,
											"end": 3968,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3941,
											"end": 3968,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3941,
											"end": 3968,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3941,
											"end": 3968,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 3941,
											"end": 3968,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3941,
											"end": 3968,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3941,
											"end": 3968,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3941,
											"end": 3968,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3941,
											"end": 3968,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 3941,
											"end": 3968,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3941,
											"end": 3968,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3941,
											"end": 3968,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3941,
											"end": 3968,
											"name": "tag",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 3941,
											"end": 3968,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3941,
											"end": 3968,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3941,
											"end": 3968,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3941,
											"end": 3968,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3941,
											"end": 3968,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3941,
											"end": 3968,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3941,
											"end": 3968,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3941,
											"end": 3968,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3941,
											"end": 3968,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3941,
											"end": 3968,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 3941,
											"end": 3968,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3941,
											"end": 3968,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3941,
											"end": 3968,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3941,
											"end": 3968,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3941,
											"end": 3968,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3941,
											"end": 3968,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3941,
											"end": 3968,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3941,
											"end": 3968,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3941,
											"end": 3968,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3941,
											"end": 3968,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3941,
											"end": 3968,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3941,
											"end": 3968,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3941,
											"end": 3968,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3941,
											"end": 3968,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 3941,
											"end": 3968,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3941,
											"end": 3968,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3941,
											"end": 3968,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 3941,
											"end": 3968,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3941,
											"end": 3968,
											"name": "tag",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 3941,
											"end": 3968,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3941,
											"end": 3978,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3933,
											"end": 3996,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 3933,
											"end": 3996,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3933,
											"end": 3996,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3933,
											"end": 3996,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3933,
											"end": 3996,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3933,
											"end": 3996,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3933,
											"end": 3996,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3933,
											"end": 3996,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3933,
											"end": 3996,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3933,
											"end": 3996,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 3933,
											"end": 3996,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3933,
											"end": 3996,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 3933,
											"end": 3996,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3933,
											"end": 3996,
											"name": "tag",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 3933,
											"end": 3996,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3933,
											"end": 3996,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3933,
											"end": 3996,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3933,
											"end": 3996,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3933,
											"end": 3996,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3933,
											"end": 3996,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3933,
											"end": 3996,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3933,
											"end": 3996,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3933,
											"end": 3996,
											"name": "tag",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 3933,
											"end": 3996,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4045,
											"end": 4049,
											"name": "PUSH",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 4015,
											"end": 4022,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 4015,
											"end": 4034,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4023,
											"end": 4033,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4015,
											"end": 4034,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4015,
											"end": 4034,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4015,
											"end": 4034,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4015,
											"end": 4034,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4015,
											"end": 4034,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4015,
											"end": 4034,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4015,
											"end": 4034,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4015,
											"end": 4034,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4015,
											"end": 4034,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4015,
											"end": 4034,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4015,
											"end": 4034,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4015,
											"end": 4034,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4015,
											"end": 4034,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4015,
											"end": 4034,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4015,
											"end": 4034,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4015,
											"end": 4041,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 4015,
											"end": 4041,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4015,
											"end": 4041,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4015,
											"end": 4049,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4007,
											"end": 4075,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 4007,
											"end": 4075,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4007,
											"end": 4075,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4007,
											"end": 4075,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4007,
											"end": 4075,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4007,
											"end": 4075,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4007,
											"end": 4075,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4007,
											"end": 4075,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4007,
											"end": 4075,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4007,
											"end": 4075,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 4007,
											"end": 4075,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4007,
											"end": 4075,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 4007,
											"end": 4075,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4007,
											"end": 4075,
											"name": "tag",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 4007,
											"end": 4075,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4007,
											"end": 4075,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4007,
											"end": 4075,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4007,
											"end": 4075,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4007,
											"end": 4075,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4007,
											"end": 4075,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4007,
											"end": 4075,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4007,
											"end": 4075,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4007,
											"end": 4075,
											"name": "tag",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 4007,
											"end": 4075,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4096,
											"end": 4110,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 4096,
											"end": 4108,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 4096,
											"end": 4110,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4096,
											"end": 4110,
											"name": "tag",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 4096,
											"end": 4110,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4131,
											"end": 4189,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 4154,
											"end": 4164,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4174,
											"end": 4178,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 4181,
											"end": 4188,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4131,
											"end": 4136,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 4131,
											"end": 4136,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4131,
											"end": 4136,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4131,
											"end": 4136,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4131,
											"end": 4136,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4131,
											"end": 4136,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 4131,
											"end": 4136,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 4131,
											"end": 4136,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4131,
											"end": 4136,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 4131,
											"end": 4136,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4131,
											"end": 4136,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4131,
											"end": 4153,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4131,
											"end": 4153,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4131,
											"end": 4153,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "317"
										},
										{
											"begin": 4131,
											"end": 4153,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4131,
											"end": 4189,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 4131,
											"end": 4189,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4131,
											"end": 4189,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4131,
											"end": 4189,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4131,
											"end": 4189,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4131,
											"end": 4189,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4131,
											"end": 4189,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4131,
											"end": 4189,
											"name": "tag",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 4131,
											"end": 4189,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4235,
											"end": 4280,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 4272,
											"end": 4279,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4235,
											"end": 4242,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 4235,
											"end": 4254,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4243,
											"end": 4253,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4235,
											"end": 4254,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4235,
											"end": 4254,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4235,
											"end": 4254,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4235,
											"end": 4254,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4235,
											"end": 4254,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4235,
											"end": 4254,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4235,
											"end": 4254,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4235,
											"end": 4254,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4235,
											"end": 4254,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4235,
											"end": 4254,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4235,
											"end": 4254,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4235,
											"end": 4254,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4235,
											"end": 4254,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4235,
											"end": 4254,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4235,
											"end": 4254,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4235,
											"end": 4267,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4235,
											"end": 4267,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4235,
											"end": 4267,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4235,
											"end": 4271,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 4235,
											"end": 4271,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4235,
											"end": 4280,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4235,
											"end": 4280,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4235,
											"end": 4280,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4235,
											"end": 4280,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4235,
											"end": 4280,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4235,
											"end": 4280,
											"name": "tag",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 4235,
											"end": 4280,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4200,
											"end": 4207,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 4200,
											"end": 4219,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4208,
											"end": 4218,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4200,
											"end": 4219,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4200,
											"end": 4219,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4200,
											"end": 4219,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4200,
											"end": 4219,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4200,
											"end": 4219,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4200,
											"end": 4219,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4200,
											"end": 4219,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4200,
											"end": 4219,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4200,
											"end": 4219,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4200,
											"end": 4219,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4200,
											"end": 4219,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4200,
											"end": 4219,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4200,
											"end": 4219,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4200,
											"end": 4219,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4200,
											"end": 4219,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4200,
											"end": 4232,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4200,
											"end": 4232,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4200,
											"end": 4280,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4200,
											"end": 4280,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4200,
											"end": 4280,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 4200,
											"end": 4280,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4305,
											"end": 4329,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 4321,
											"end": 4328,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4305,
											"end": 4316,
											"name": "PUSH",
											"source": 7,
											"value": "C"
										},
										{
											"begin": 4305,
											"end": 4316,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4305,
											"end": 4320,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 4305,
											"end": 4320,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4305,
											"end": 4329,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4305,
											"end": 4329,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4305,
											"end": 4329,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4305,
											"end": 4329,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4305,
											"end": 4329,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4305,
											"end": 4329,
											"name": "tag",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 4305,
											"end": 4329,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4291,
											"end": 4302,
											"name": "PUSH",
											"source": 7,
											"value": "C"
										},
										{
											"begin": 4291,
											"end": 4329,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4291,
											"end": 4329,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4291,
											"end": 4329,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 4291,
											"end": 4329,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4355,
											"end": 4382,
											"name": "PUSH",
											"source": 7,
											"value": "9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D"
										},
										{
											"begin": 4362,
											"end": 4372,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4374,
											"end": 4381,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4355,
											"end": 4382,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4355,
											"end": 4382,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4355,
											"end": 4382,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 4355,
											"end": 4382,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4355,
											"end": 4382,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4355,
											"end": 4382,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4355,
											"end": 4382,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 4355,
											"end": 4382,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4355,
											"end": 4382,
											"name": "tag",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 4355,
											"end": 4382,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4355,
											"end": 4382,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4355,
											"end": 4382,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4355,
											"end": 4382,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4355,
											"end": 4382,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4355,
											"end": 4382,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4355,
											"end": 4382,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4355,
											"end": 4382,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 3808,
											"end": 4390,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3808,
											"end": 4390,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 8307,
											"end": 8477,
											"name": "tag",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 8307,
											"end": 8477,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8407,
											"end": 8408,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8394,
											"end": 8404,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8394,
											"end": 8408,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 8385,
											"end": 8426,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "327"
										},
										{
											"begin": 8385,
											"end": 8426,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8385,
											"end": 8426,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8385,
											"end": 8426,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8385,
											"end": 8426,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8385,
											"end": 8426,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8385,
											"end": 8426,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8385,
											"end": 8426,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8385,
											"end": 8426,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8385,
											"end": 8426,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "328"
										},
										{
											"begin": 8385,
											"end": 8426,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8385,
											"end": 8426,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 8385,
											"end": 8426,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8385,
											"end": 8426,
											"name": "tag",
											"source": 7,
											"value": "328"
										},
										{
											"begin": 8385,
											"end": 8426,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8385,
											"end": 8426,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8385,
											"end": 8426,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8385,
											"end": 8426,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8385,
											"end": 8426,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8385,
											"end": 8426,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8385,
											"end": 8426,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8385,
											"end": 8426,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8385,
											"end": 8426,
											"name": "tag",
											"source": 7,
											"value": "327"
										},
										{
											"begin": 8385,
											"end": 8426,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8459,
											"end": 8469,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8439,
											"end": 8456,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 8439,
											"end": 8469,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8439,
											"end": 8469,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8439,
											"end": 8469,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 8439,
											"end": 8469,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8307,
											"end": 8477,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8307,
											"end": 8477,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 4612,
											"end": 4746,
											"name": "tag",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 4612,
											"end": 4746,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4674,
											"end": 4681,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4729,
											"end": 4730,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4703,
											"end": 4710,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 4703,
											"end": 4720,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4711,
											"end": 4719,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4703,
											"end": 4720,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4703,
											"end": 4720,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4703,
											"end": 4720,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4703,
											"end": 4720,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4703,
											"end": 4720,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4703,
											"end": 4720,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4703,
											"end": 4720,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4703,
											"end": 4720,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4703,
											"end": 4720,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4703,
											"end": 4720,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4703,
											"end": 4720,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4703,
											"end": 4720,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4703,
											"end": 4720,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4703,
											"end": 4720,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4703,
											"end": 4720,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4703,
											"end": 4725,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 4703,
											"end": 4725,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4703,
											"end": 4725,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4703,
											"end": 4730,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4703,
											"end": 4738,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 4703,
											"end": 4738,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4737,
											"end": 4738,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4703,
											"end": 4738,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "331"
										},
										{
											"begin": 4703,
											"end": 4738,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4703,
											"end": 4738,
											"name": "tag",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 4703,
											"end": 4738,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4733,
											"end": 4734,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4703,
											"end": 4738,
											"name": "tag",
											"source": 7,
											"value": "331"
										},
										{
											"begin": 4703,
											"end": 4738,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4696,
											"end": 4738,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 4696,
											"end": 4738,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4696,
											"end": 4738,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4696,
											"end": 4738,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4612,
											"end": 4746,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4612,
											"end": 4746,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4612,
											"end": 4746,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4612,
											"end": 4746,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 7947,
											"end": 8119,
											"name": "tag",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 7947,
											"end": 8119,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "334"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "334"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8049,
											"end": 8050,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8036,
											"end": 8046,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8036,
											"end": 8050,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 8027,
											"end": 8068,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 8027,
											"end": 8068,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8027,
											"end": 8068,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8027,
											"end": 8068,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8027,
											"end": 8068,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8027,
											"end": 8068,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8027,
											"end": 8068,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8027,
											"end": 8068,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8027,
											"end": 8068,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8027,
											"end": 8068,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "339"
										},
										{
											"begin": 8027,
											"end": 8068,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8027,
											"end": 8068,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 8027,
											"end": 8068,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8027,
											"end": 8068,
											"name": "tag",
											"source": 7,
											"value": "339"
										},
										{
											"begin": 8027,
											"end": 8068,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8027,
											"end": 8068,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8027,
											"end": 8068,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8027,
											"end": 8068,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8027,
											"end": 8068,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8027,
											"end": 8068,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8027,
											"end": 8068,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8027,
											"end": 8068,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8027,
											"end": 8068,
											"name": "tag",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 8027,
											"end": 8068,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8101,
											"end": 8111,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8081,
											"end": 8098,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 8081,
											"end": 8111,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8081,
											"end": 8111,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8081,
											"end": 8111,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 8081,
											"end": 8111,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7947,
											"end": 8119,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7947,
											"end": 8119,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 7755,
											"end": 7939,
											"name": "tag",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 7755,
											"end": 7939,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "342"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "342"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "343"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "343"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7869,
											"end": 7870,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7856,
											"end": 7866,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7856,
											"end": 7870,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 7847,
											"end": 7888,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 7847,
											"end": 7888,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7847,
											"end": 7888,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7847,
											"end": 7888,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7847,
											"end": 7888,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7847,
											"end": 7888,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7847,
											"end": 7888,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7847,
											"end": 7888,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7847,
											"end": 7888,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7847,
											"end": 7888,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "347"
										},
										{
											"begin": 7847,
											"end": 7888,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7847,
											"end": 7888,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 7847,
											"end": 7888,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7847,
											"end": 7888,
											"name": "tag",
											"source": 7,
											"value": "347"
										},
										{
											"begin": 7847,
											"end": 7888,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7847,
											"end": 7888,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7847,
											"end": 7888,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7847,
											"end": 7888,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7847,
											"end": 7888,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7847,
											"end": 7888,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7847,
											"end": 7888,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7847,
											"end": 7888,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7847,
											"end": 7888,
											"name": "tag",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 7847,
											"end": 7888,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7921,
											"end": 7931,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7901,
											"end": 7918,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 7901,
											"end": 7931,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7901,
											"end": 7931,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7901,
											"end": 7931,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 7901,
											"end": 7931,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7755,
											"end": 7939,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7755,
											"end": 7939,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "349"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "349"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "350"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "350"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "351"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "351"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2026,
											"end": 2027,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2014,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "354"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "tag",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "tag",
											"source": 0,
											"value": "354"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "357"
										},
										{
											"begin": 2100,
											"end": 2108,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2099,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "tag",
											"source": 0,
											"value": "357"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5300,
											"end": 5436,
											"name": "tag",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 5300,
											"end": 5436,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5361,
											"end": 5368,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5398,
											"end": 5405,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 5398,
											"end": 5415,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5406,
											"end": 5414,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5398,
											"end": 5415,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5398,
											"end": 5415,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5398,
											"end": 5415,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5398,
											"end": 5415,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5398,
											"end": 5415,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5398,
											"end": 5415,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5398,
											"end": 5415,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5398,
											"end": 5415,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5398,
											"end": 5415,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5398,
											"end": 5415,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5398,
											"end": 5415,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5398,
											"end": 5415,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5398,
											"end": 5415,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5398,
											"end": 5415,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5398,
											"end": 5415,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 5398,
											"end": 5428,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 5398,
											"end": 5428,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5398,
											"end": 5428,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5391,
											"end": 5428,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5391,
											"end": 5428,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5300,
											"end": 5436,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5300,
											"end": 5436,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5300,
											"end": 5436,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5300,
											"end": 5436,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1246,
											"end": 1265,
											"name": "tag",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 1246,
											"end": 1265,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1246,
											"end": 1265,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 1246,
											"end": 1265,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1246,
											"end": 1265,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1246,
											"end": 1265,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1246,
											"end": 1265,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1246,
											"end": 1265,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1246,
											"end": 1265,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 1246,
											"end": 1265,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1246,
											"end": 1265,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1246,
											"end": 1265,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1246,
											"end": 1265,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1246,
											"end": 1265,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1246,
											"end": 1265,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 4754,
											"end": 4878,
											"name": "tag",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 4754,
											"end": 4878,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4817,
											"end": 4824,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4846,
											"end": 4853,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 4846,
											"end": 4863,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4854,
											"end": 4862,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4846,
											"end": 4863,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4846,
											"end": 4863,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4846,
											"end": 4863,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4846,
											"end": 4863,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4846,
											"end": 4863,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4846,
											"end": 4863,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4846,
											"end": 4863,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4846,
											"end": 4863,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4846,
											"end": 4863,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4846,
											"end": 4863,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4846,
											"end": 4863,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4846,
											"end": 4863,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4846,
											"end": 4863,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4846,
											"end": 4863,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4846,
											"end": 4863,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4846,
											"end": 4870,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 4846,
											"end": 4870,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4846,
											"end": 4870,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4839,
											"end": 4870,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4839,
											"end": 4870,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4754,
											"end": 4878,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4754,
											"end": 4878,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4754,
											"end": 4878,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4754,
											"end": 4878,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2359,
											"end": 2816,
											"name": "tag",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 2359,
											"end": 2816,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2411,
											"end": 2437,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2440,
											"end": 2447,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 2440,
											"end": 2459,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2448,
											"end": 2458,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2440,
											"end": 2459,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2440,
											"end": 2459,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2440,
											"end": 2459,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2440,
											"end": 2459,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2440,
											"end": 2459,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2440,
											"end": 2459,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2440,
											"end": 2459,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2440,
											"end": 2459,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2440,
											"end": 2459,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2440,
											"end": 2459,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2440,
											"end": 2459,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2440,
											"end": 2459,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2440,
											"end": 2459,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2440,
											"end": 2459,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2440,
											"end": 2459,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2440,
											"end": 2472,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2440,
											"end": 2472,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2440,
											"end": 2472,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2411,
											"end": 2472,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2411,
											"end": 2472,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2493,
											"end": 2510,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2513,
											"end": 2633,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "362"
										},
										{
											"begin": 2629,
											"end": 2632,
											"name": "PUSH",
											"source": 7,
											"value": "2710"
										},
										{
											"begin": 2513,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "363"
										},
										{
											"begin": 2612,
											"end": 2623,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 2612,
											"end": 2623,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2513,
											"end": 2607,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 2536,
											"end": 2606,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "365"
										},
										{
											"begin": 2601,
											"end": 2605,
											"name": "PUSH",
											"source": 7,
											"value": "21C0"
										},
										{
											"begin": 2536,
											"end": 2596,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "366"
										},
										{
											"begin": 2553,
											"end": 2560,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 2553,
											"end": 2572,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2561,
											"end": 2571,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2553,
											"end": 2572,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2553,
											"end": 2572,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2553,
											"end": 2572,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2553,
											"end": 2572,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2553,
											"end": 2572,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2553,
											"end": 2572,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2553,
											"end": 2572,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2553,
											"end": 2572,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2553,
											"end": 2572,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2553,
											"end": 2572,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2553,
											"end": 2572,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2553,
											"end": 2572,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2553,
											"end": 2572,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2553,
											"end": 2572,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2553,
											"end": 2572,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2553,
											"end": 2595,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2553,
											"end": 2595,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2553,
											"end": 2595,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2536,
											"end": 2548,
											"name": "NUMBER",
											"source": 7
										},
										{
											"begin": 2536,
											"end": 2552,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 2536,
											"end": 2552,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2536,
											"end": 2596,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2536,
											"end": 2596,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2536,
											"end": 2596,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2536,
											"end": 2596,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2536,
											"end": 2596,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2536,
											"end": 2596,
											"name": "tag",
											"source": 7,
											"value": "366"
										},
										{
											"begin": 2536,
											"end": 2596,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2536,
											"end": 2600,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 2536,
											"end": 2600,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2536,
											"end": 2606,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2536,
											"end": 2606,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2536,
											"end": 2606,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2536,
											"end": 2606,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2536,
											"end": 2606,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2536,
											"end": 2606,
											"name": "tag",
											"source": 7,
											"value": "365"
										},
										{
											"begin": 2536,
											"end": 2606,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2513,
											"end": 2531,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 2513,
											"end": 2535,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 2513,
											"end": 2535,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2513,
											"end": 2607,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2513,
											"end": 2607,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2513,
											"end": 2607,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2513,
											"end": 2607,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2513,
											"end": 2607,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2513,
											"end": 2607,
											"name": "tag",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 2513,
											"end": 2607,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2513,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 2513,
											"end": 2611,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2513,
											"end": 2624,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2513,
											"end": 2624,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2513,
											"end": 2624,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2513,
											"end": 2624,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2513,
											"end": 2624,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2513,
											"end": 2624,
											"name": "tag",
											"source": 7,
											"value": "363"
										},
										{
											"begin": 2513,
											"end": 2624,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2513,
											"end": 2628,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 2513,
											"end": 2628,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2513,
											"end": 2633,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2513,
											"end": 2633,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2513,
											"end": 2633,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2513,
											"end": 2633,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2513,
											"end": 2633,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2513,
											"end": 2633,
											"name": "tag",
											"source": 7,
											"value": "362"
										},
										{
											"begin": 2513,
											"end": 2633,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2493,
											"end": 2633,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2493,
											"end": 2633,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2686,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "367"
										},
										{
											"begin": 2730,
											"end": 2739,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2686,
											"end": 2693,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 2686,
											"end": 2705,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2694,
											"end": 2704,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2686,
											"end": 2705,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2686,
											"end": 2705,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2686,
											"end": 2705,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2686,
											"end": 2705,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2686,
											"end": 2705,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2686,
											"end": 2705,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2686,
											"end": 2705,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2686,
											"end": 2705,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2686,
											"end": 2705,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2686,
											"end": 2705,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2686,
											"end": 2705,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2686,
											"end": 2705,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2686,
											"end": 2705,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2686,
											"end": 2705,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2686,
											"end": 2705,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2686,
											"end": 2725,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2686,
											"end": 2725,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2686,
											"end": 2725,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2686,
											"end": 2729,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 2686,
											"end": 2729,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2686,
											"end": 2740,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2686,
											"end": 2740,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2686,
											"end": 2740,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2686,
											"end": 2740,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2686,
											"end": 2740,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2686,
											"end": 2740,
											"name": "tag",
											"source": 7,
											"value": "367"
										},
										{
											"begin": 2686,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2644,
											"end": 2651,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 2644,
											"end": 2663,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2652,
											"end": 2662,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2644,
											"end": 2663,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2644,
											"end": 2663,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2644,
											"end": 2663,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2644,
											"end": 2663,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2644,
											"end": 2663,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2644,
											"end": 2663,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2644,
											"end": 2663,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2644,
											"end": 2663,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2644,
											"end": 2663,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2644,
											"end": 2663,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2644,
											"end": 2663,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2644,
											"end": 2663,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2644,
											"end": 2663,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2644,
											"end": 2663,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2644,
											"end": 2663,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2644,
											"end": 2683,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2644,
											"end": 2683,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2644,
											"end": 2740,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2644,
											"end": 2740,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2644,
											"end": 2740,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2644,
											"end": 2740,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2796,
											"end": 2808,
											"name": "NUMBER",
											"source": 7
										},
										{
											"begin": 2751,
											"end": 2758,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 2751,
											"end": 2770,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2759,
											"end": 2769,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2751,
											"end": 2770,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2751,
											"end": 2770,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2751,
											"end": 2770,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2751,
											"end": 2770,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2751,
											"end": 2770,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2751,
											"end": 2770,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2751,
											"end": 2770,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2751,
											"end": 2770,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2751,
											"end": 2770,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2751,
											"end": 2770,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2751,
											"end": 2770,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2751,
											"end": 2770,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2751,
											"end": 2770,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2751,
											"end": 2770,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2751,
											"end": 2770,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2751,
											"end": 2793,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2751,
											"end": 2793,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2751,
											"end": 2808,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2751,
											"end": 2808,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2751,
											"end": 2808,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2751,
											"end": 2808,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2390,
											"end": 2816,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2390,
											"end": 2816,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2359,
											"end": 2816,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "tag",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3166,
											"end": 3173,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3196,
											"end": 3197,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3192,
											"end": 3193,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "369"
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "370"
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "tag",
											"source": 4,
											"value": "369"
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3185,
											"end": 3197,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3185,
											"end": 3197,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "tag",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3894,
											"end": 3901,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3924,
											"end": 3925,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3920,
											"end": 3921,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "372"
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "373"
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "tag",
											"source": 4,
											"value": "372"
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3913,
											"end": 3925,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3913,
											"end": 3925,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "tag",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2799,
											"end": 2806,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2829,
											"end": 2830,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2825,
											"end": 2826,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "375"
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "376"
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "tag",
											"source": 4,
											"value": "375"
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2818,
											"end": 2830,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2818,
											"end": 2830,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "tag",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3509,
											"end": 3516,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3539,
											"end": 3540,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3535,
											"end": 3536,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "378"
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "379"
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "tag",
											"source": 4,
											"value": "378"
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3528,
											"end": 3540,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3528,
											"end": 3540,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 290,
											"end": 467,
											"name": "tag",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 290,
											"end": 467,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 373,
											"end": 459,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "381"
										},
										{
											"begin": 393,
											"end": 398,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 423,
											"end": 446,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 423,
											"end": 446,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 423,
											"end": 446,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 448,
											"end": 450,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 452,
											"end": 457,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "382"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "tag",
											"source": 6,
											"value": "382"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 373,
											"end": 392,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "383"
										},
										{
											"begin": 373,
											"end": 459,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 373,
											"end": 459,
											"name": "tag",
											"source": 6,
											"value": "381"
										},
										{
											"begin": 373,
											"end": 459,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 290,
											"end": 467,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 290,
											"end": 467,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 290,
											"end": 467,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 290,
											"end": 467,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "tag",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2368,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2387,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2384,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2378,
											"end": 2384,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2449,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2431,
											"end": 2439,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2333,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 475,
											"end": 680,
											"name": "tag",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 475,
											"end": 680,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 576,
											"end": 672,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "386"
										},
										{
											"begin": 596,
											"end": 601,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 626,
											"end": 653,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 626,
											"end": 653,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 626,
											"end": 653,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 655,
											"end": 659,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 661,
											"end": 663,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 665,
											"end": 670,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "387"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "388"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "tag",
											"source": 6,
											"value": "387"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 576,
											"end": 595,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "383"
										},
										{
											"begin": 576,
											"end": 672,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 576,
											"end": 672,
											"name": "tag",
											"source": 6,
											"value": "386"
										},
										{
											"begin": 576,
											"end": 672,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 475,
											"end": 680,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 475,
											"end": 680,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 475,
											"end": 680,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 475,
											"end": 680,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 475,
											"end": 680,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2599,
											"end": 3368,
											"name": "tag",
											"source": 6,
											"value": "383"
										},
										{
											"begin": 2599,
											"end": 3368,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3031,
											"end": 3054,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "390"
										},
										{
											"begin": 3085,
											"end": 3089,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "PUSH",
											"source": 6,
											"value": "5361666542455032303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3065,
											"end": 3070,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3084,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3057,
											"end": 3084,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "391"
										},
										{
											"begin": 3057,
											"end": 3084,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "tag",
											"source": 6,
											"value": "390"
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3031,
											"end": 3126,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3031,
											"end": 3126,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3161,
											"end": 3162,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3141,
											"end": 3151,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 3158,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 3162,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3361,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "392"
										},
										{
											"begin": 3137,
											"end": 3361,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3283,
											"end": 3293,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "393"
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "394"
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "tag",
											"source": 6,
											"value": "393"
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "395"
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "396"
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "397"
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "tag",
											"source": 6,
											"value": "396"
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "tag",
											"source": 6,
											"value": "395"
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3361,
											"name": "tag",
											"source": 6,
											"value": "392"
										},
										{
											"begin": 3137,
											"end": 3361,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2669,
											"end": 3368,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2599,
											"end": 3368,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2599,
											"end": 3368,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2599,
											"end": 3368,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "tag",
											"source": 2,
											"value": "391"
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3994,
											"end": 4006,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "399"
										},
										{
											"begin": 4047,
											"end": 4053,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4055,
											"end": 4059,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4061,
											"end": 4062,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4064,
											"end": 4076,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4025,
											"end": 4046,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "400"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "tag",
											"source": 2,
											"value": "399"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4018,
											"end": 4077,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4018,
											"end": 4077,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "tag",
											"source": 2,
											"value": "400"
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5113,
											"end": 5125,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 5170,
											"end": 5175,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5145,
											"end": 5166,
											"name": "SELFBALANCE",
											"source": 2
										},
										{
											"begin": 5145,
											"end": 5175,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 5145,
											"end": 5175,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "402"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "403"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "404"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "tag",
											"source": 2,
											"value": "403"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "tag",
											"source": 2,
											"value": "402"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5236,
											"end": 5254,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "405"
										},
										{
											"begin": 5247,
											"end": 5253,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5236,
											"end": 5246,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "406"
										},
										{
											"begin": 5236,
											"end": 5254,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5236,
											"end": 5254,
											"name": "tag",
											"source": 2,
											"value": "405"
										},
										{
											"begin": 5236,
											"end": 5254,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "407"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "408"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "409"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "tag",
											"source": 2,
											"value": "408"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "tag",
											"source": 2,
											"value": "407"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5300,
											"end": 5312,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5314,
											"end": 5337,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5347,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5352,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5341,
											"end": 5352,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5360,
											"end": 5365,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5367,
											"end": 5371,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "410"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "411"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "tag",
											"source": 2,
											"value": "410"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "414"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "3F"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "413"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "tag",
											"source": 2,
											"value": "414"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "tag",
											"source": 2,
											"value": "413"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "415"
										},
										{
											"begin": 5406,
											"end": 5413,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5415,
											"end": 5425,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5427,
											"end": 5439,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5389,
											"end": 5405,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "416"
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "tag",
											"source": 2,
											"value": "415"
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5382,
											"end": 5440,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5382,
											"end": 5440,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5382,
											"end": 5440,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5382,
											"end": 5440,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "tag",
											"source": 2,
											"value": "406"
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1235,
											"end": 1239,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1487,
											"end": 1488,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1465,
											"end": 1472,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1458,
											"end": 1488,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1458,
											"end": 1488,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "tag",
											"source": 2,
											"value": "416"
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7707,
											"end": 7719,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 7735,
											"end": 7742,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7731,
											"end": 8247,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7731,
											"end": 8247,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "419"
										},
										{
											"begin": 7731,
											"end": 8247,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7765,
											"end": 7775,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7758,
											"end": 7775,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7758,
											"end": 7775,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7758,
											"end": 7775,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "418"
										},
										{
											"begin": 7758,
											"end": 7775,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7731,
											"end": 8247,
											"name": "tag",
											"source": 2,
											"value": "419"
										},
										{
											"begin": 7731,
											"end": 8247,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7896,
											"end": 7897,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7876,
											"end": 7886,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7876,
											"end": 7893,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7876,
											"end": 7897,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 7872,
											"end": 8237,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7872,
											"end": 8237,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "421"
										},
										{
											"begin": 7872,
											"end": 8237,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8070,
											"end": 8080,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8064,
											"end": 8081,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8130,
											"end": 8145,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8117,
											"end": 8127,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8113,
											"end": 8115,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8109,
											"end": 8128,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8102,
											"end": 8146,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7872,
											"end": 8237,
											"name": "tag",
											"source": 2,
											"value": "421"
										},
										{
											"begin": 7872,
											"end": 8237,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8209,
											"end": 8221,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "423"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "424"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "tag",
											"source": 2,
											"value": "423"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "tag",
											"source": 2,
											"value": "418"
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 8,
											"value": "425"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 8,
											"value": "426"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "493"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "425"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 8,
											"value": "493"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "495"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "426"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 8,
											"value": "495"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 523,
											"end": 640,
											"name": "tag",
											"source": 8,
											"value": "428"
										},
										{
											"begin": 523,
											"end": 640,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 632,
											"end": 633,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 630,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 622,
											"end": 634,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 769,
											"end": 891,
											"name": "tag",
											"source": 8,
											"value": "430"
										},
										{
											"begin": 769,
											"end": 891,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 842,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "500"
										},
										{
											"begin": 860,
											"end": 865,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 842,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "425"
										},
										{
											"begin": 842,
											"end": 866,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 842,
											"end": 866,
											"name": "tag",
											"source": 8,
											"value": "500"
										},
										{
											"begin": 842,
											"end": 866,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 835,
											"end": 840,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 832,
											"end": 867,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 822,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "501"
										},
										{
											"begin": 822,
											"end": 885,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 881,
											"end": 882,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 878,
											"end": 879,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 871,
											"end": 883,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 822,
											"end": 885,
											"name": "tag",
											"source": 8,
											"value": "501"
										},
										{
											"begin": 822,
											"end": 885,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 769,
											"end": 891,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 769,
											"end": 891,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "tag",
											"source": 8,
											"value": "431"
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 943,
											"end": 948,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 981,
											"end": 987,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 968,
											"end": 988,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 959,
											"end": 988,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 959,
											"end": 988,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "503"
										},
										{
											"begin": 1024,
											"end": 1029,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "430"
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "tag",
											"source": 8,
											"value": "503"
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "tag",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1150,
											"end": 1152,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1138,
											"end": 1147,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1129,
											"end": 1136,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1125,
											"end": 1148,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1121,
											"end": 1153,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "505"
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "506"
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "428"
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "tag",
											"source": 8,
											"value": "506"
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "tag",
											"source": 8,
											"value": "505"
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1276,
											"end": 1277,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "507"
										},
										{
											"begin": 1346,
											"end": 1353,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1337,
											"end": 1343,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1326,
											"end": 1335,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1322,
											"end": 1344,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "431"
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "tag",
											"source": 8,
											"value": "507"
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1291,
											"end": 1354,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1291,
											"end": 1354,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1247,
											"end": 1364,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "tag",
											"source": 8,
											"value": "432"
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1414,
											"end": 1421,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1454,
											"end": 1496,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1447,
											"end": 1452,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1443,
											"end": 1497,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1432,
											"end": 1497,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1432,
											"end": 1497,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "tag",
											"source": 8,
											"value": "433"
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1546,
											"end": 1553,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "510"
										},
										{
											"begin": 1593,
											"end": 1598,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "432"
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "tag",
											"source": 8,
											"value": "510"
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1564,
											"end": 1599,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1564,
											"end": 1599,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "tag",
											"source": 8,
											"value": "434"
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "512"
										},
										{
											"begin": 1702,
											"end": 1707,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "433"
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "tag",
											"source": 8,
											"value": "512"
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1677,
											"end": 1682,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "513"
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1724,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1720,
											"end": 1721,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1713,
											"end": 1725,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "tag",
											"source": 8,
											"value": "513"
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "tag",
											"source": 8,
											"value": "435"
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1823,
											"end": 1829,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1810,
											"end": 1830,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "515"
										},
										{
											"begin": 1866,
											"end": 1871,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "434"
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "tag",
											"source": 8,
											"value": "515"
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "tag",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1943,
											"end": 1949,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1992,
											"end": 1994,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1980,
											"end": 1989,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1971,
											"end": 1978,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1967,
											"end": 1990,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1963,
											"end": 1995,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "517"
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "518"
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "428"
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "tag",
											"source": 8,
											"value": "518"
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "tag",
											"source": 8,
											"value": "517"
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2118,
											"end": 2119,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "519"
										},
										{
											"begin": 2188,
											"end": 2195,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2179,
											"end": 2185,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2168,
											"end": 2177,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2164,
											"end": 2186,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "435"
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "tag",
											"source": 8,
											"value": "519"
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2196,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2196,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2089,
											"end": 2206,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2219,
											"end": 2693,
											"name": "tag",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 2219,
											"end": 2693,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2293,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2295,
											"end": 2301,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2344,
											"end": 2346,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2332,
											"end": 2341,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2323,
											"end": 2330,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2319,
											"end": 2342,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2315,
											"end": 2347,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2312,
											"end": 2431,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2312,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "521"
										},
										{
											"begin": 2312,
											"end": 2431,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2350,
											"end": 2429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "522"
										},
										{
											"begin": 2350,
											"end": 2429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "428"
										},
										{
											"begin": 2350,
											"end": 2429,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2350,
											"end": 2429,
											"name": "tag",
											"source": 8,
											"value": "522"
										},
										{
											"begin": 2350,
											"end": 2429,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2312,
											"end": 2431,
											"name": "tag",
											"source": 8,
											"value": "521"
										},
										{
											"begin": 2312,
											"end": 2431,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2470,
											"end": 2471,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2495,
											"end": 2548,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "523"
										},
										{
											"begin": 2540,
											"end": 2547,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2531,
											"end": 2537,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2520,
											"end": 2529,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2516,
											"end": 2538,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2495,
											"end": 2548,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "431"
										},
										{
											"begin": 2495,
											"end": 2548,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2495,
											"end": 2548,
											"name": "tag",
											"source": 8,
											"value": "523"
										},
										{
											"begin": 2495,
											"end": 2548,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2548,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2548,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2441,
											"end": 2558,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2597,
											"end": 2599,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2623,
											"end": 2676,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "524"
										},
										{
											"begin": 2668,
											"end": 2675,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2659,
											"end": 2665,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2648,
											"end": 2657,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2644,
											"end": 2666,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2623,
											"end": 2676,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "431"
										},
										{
											"begin": 2623,
											"end": 2676,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2623,
											"end": 2676,
											"name": "tag",
											"source": 8,
											"value": "524"
										},
										{
											"begin": 2623,
											"end": 2676,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2613,
											"end": 2676,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2613,
											"end": 2676,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2568,
											"end": 2686,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2219,
											"end": 2693,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2219,
											"end": 2693,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2219,
											"end": 2693,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2219,
											"end": 2693,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2219,
											"end": 2693,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2219,
											"end": 2693,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2699,
											"end": 2817,
											"name": "tag",
											"source": 8,
											"value": "436"
										},
										{
											"begin": 2699,
											"end": 2817,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2786,
											"end": 2810,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "526"
										},
										{
											"begin": 2804,
											"end": 2809,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2786,
											"end": 2810,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "433"
										},
										{
											"begin": 2786,
											"end": 2810,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2786,
											"end": 2810,
											"name": "tag",
											"source": 8,
											"value": "526"
										},
										{
											"begin": 2786,
											"end": 2810,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2781,
											"end": 2784,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2774,
											"end": 2811,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2699,
											"end": 2817,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2699,
											"end": 2817,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2699,
											"end": 2817,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2823,
											"end": 3045,
											"name": "tag",
											"source": 8,
											"value": "85"
										},
										{
											"begin": 2823,
											"end": 3045,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2916,
											"end": 2920,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2956,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2943,
											"end": 2952,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2939,
											"end": 2957,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2931,
											"end": 2957,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2931,
											"end": 2957,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2967,
											"end": 3038,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "528"
										},
										{
											"begin": 3035,
											"end": 3036,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3024,
											"end": 3033,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3011,
											"end": 3017,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2967,
											"end": 3038,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "436"
										},
										{
											"begin": 2967,
											"end": 3038,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2967,
											"end": 3038,
											"name": "tag",
											"source": 8,
											"value": "528"
										},
										{
											"begin": 2967,
											"end": 3038,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2823,
											"end": 3045,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2823,
											"end": 3045,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2823,
											"end": 3045,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2823,
											"end": 3045,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2823,
											"end": 3045,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3051,
											"end": 3111,
											"name": "tag",
											"source": 8,
											"value": "437"
										},
										{
											"begin": 3051,
											"end": 3111,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3079,
											"end": 3082,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3100,
											"end": 3105,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3093,
											"end": 3105,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3093,
											"end": 3105,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3051,
											"end": 3111,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3051,
											"end": 3111,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3051,
											"end": 3111,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3051,
											"end": 3111,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3117,
											"end": 3259,
											"name": "tag",
											"source": 8,
											"value": "438"
										},
										{
											"begin": 3117,
											"end": 3259,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3167,
											"end": 3176,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3200,
											"end": 3253,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "531"
										},
										{
											"begin": 3218,
											"end": 3252,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "532"
										},
										{
											"begin": 3227,
											"end": 3251,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "533"
										},
										{
											"begin": 3245,
											"end": 3250,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3227,
											"end": 3251,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "432"
										},
										{
											"begin": 3227,
											"end": 3251,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3227,
											"end": 3251,
											"name": "tag",
											"source": 8,
											"value": "533"
										},
										{
											"begin": 3227,
											"end": 3251,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3218,
											"end": 3252,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "437"
										},
										{
											"begin": 3218,
											"end": 3252,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3218,
											"end": 3252,
											"name": "tag",
											"source": 8,
											"value": "532"
										},
										{
											"begin": 3218,
											"end": 3252,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3200,
											"end": 3253,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "432"
										},
										{
											"begin": 3200,
											"end": 3253,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3200,
											"end": 3253,
											"name": "tag",
											"source": 8,
											"value": "531"
										},
										{
											"begin": 3200,
											"end": 3253,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3187,
											"end": 3253,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3187,
											"end": 3253,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3117,
											"end": 3259,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3117,
											"end": 3259,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3117,
											"end": 3259,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3117,
											"end": 3259,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3265,
											"end": 3391,
											"name": "tag",
											"source": 8,
											"value": "439"
										},
										{
											"begin": 3265,
											"end": 3391,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3315,
											"end": 3324,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3348,
											"end": 3385,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "535"
										},
										{
											"begin": 3379,
											"end": 3384,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3348,
											"end": 3385,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "438"
										},
										{
											"begin": 3348,
											"end": 3385,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3348,
											"end": 3385,
											"name": "tag",
											"source": 8,
											"value": "535"
										},
										{
											"begin": 3348,
											"end": 3385,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3335,
											"end": 3385,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3335,
											"end": 3385,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3265,
											"end": 3391,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3265,
											"end": 3391,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3265,
											"end": 3391,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3265,
											"end": 3391,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3397,
											"end": 3537,
											"name": "tag",
											"source": 8,
											"value": "440"
										},
										{
											"begin": 3397,
											"end": 3537,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3461,
											"end": 3470,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3494,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "537"
										},
										{
											"begin": 3525,
											"end": 3530,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3494,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "439"
										},
										{
											"begin": 3494,
											"end": 3531,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3494,
											"end": 3531,
											"name": "tag",
											"source": 8,
											"value": "537"
										},
										{
											"begin": 3494,
											"end": 3531,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3481,
											"end": 3531,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3481,
											"end": 3531,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3397,
											"end": 3537,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3397,
											"end": 3537,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3397,
											"end": 3537,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3397,
											"end": 3537,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3543,
											"end": 3702,
											"name": "tag",
											"source": 8,
											"value": "441"
										},
										{
											"begin": 3543,
											"end": 3702,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3644,
											"end": 3695,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "539"
										},
										{
											"begin": 3689,
											"end": 3694,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3644,
											"end": 3695,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "440"
										},
										{
											"begin": 3644,
											"end": 3695,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3644,
											"end": 3695,
											"name": "tag",
											"source": 8,
											"value": "539"
										},
										{
											"begin": 3644,
											"end": 3695,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3639,
											"end": 3642,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3632,
											"end": 3696,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3543,
											"end": 3702,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3543,
											"end": 3702,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3543,
											"end": 3702,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3708,
											"end": 3958,
											"name": "tag",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 3708,
											"end": 3958,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3815,
											"end": 3819,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3853,
											"end": 3855,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3842,
											"end": 3851,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3838,
											"end": 3856,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3830,
											"end": 3856,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3830,
											"end": 3856,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3866,
											"end": 3951,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "541"
										},
										{
											"begin": 3948,
											"end": 3949,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3937,
											"end": 3946,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3933,
											"end": 3950,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3924,
											"end": 3930,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3866,
											"end": 3951,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "441"
										},
										{
											"begin": 3866,
											"end": 3951,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3866,
											"end": 3951,
											"name": "tag",
											"source": 8,
											"value": "541"
										},
										{
											"begin": 3866,
											"end": 3951,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3708,
											"end": 3958,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3708,
											"end": 3958,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3708,
											"end": 3958,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3708,
											"end": 3958,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3708,
											"end": 3958,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3964,
											"end": 4133,
											"name": "tag",
											"source": 8,
											"value": "442"
										},
										{
											"begin": 3964,
											"end": 4133,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4048,
											"end": 4059,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4082,
											"end": 4088,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4077,
											"end": 4080,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4070,
											"end": 4089,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4122,
											"end": 4126,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4117,
											"end": 4120,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4113,
											"end": 4127,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4098,
											"end": 4127,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4098,
											"end": 4127,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3964,
											"end": 4133,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3964,
											"end": 4133,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3964,
											"end": 4133,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3964,
											"end": 4133,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3964,
											"end": 4133,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 4139,
											"end": 4321,
											"name": "tag",
											"source": 8,
											"value": "443"
										},
										{
											"begin": 4139,
											"end": 4321,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4279,
											"end": 4313,
											"name": "PUSH",
											"source": 8,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 4275,
											"end": 4276,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4267,
											"end": 4273,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4263,
											"end": 4277,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4256,
											"end": 4314,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4139,
											"end": 4321,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4139,
											"end": 4321,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 4327,
											"end": 4693,
											"name": "tag",
											"source": 8,
											"value": "444"
										},
										{
											"begin": 4327,
											"end": 4693,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4469,
											"end": 4472,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4490,
											"end": 4557,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "545"
										},
										{
											"begin": 4554,
											"end": 4556,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4549,
											"end": 4552,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4490,
											"end": 4557,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "442"
										},
										{
											"begin": 4490,
											"end": 4557,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4490,
											"end": 4557,
											"name": "tag",
											"source": 8,
											"value": "545"
										},
										{
											"begin": 4490,
											"end": 4557,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4483,
											"end": 4557,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4483,
											"end": 4557,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4566,
											"end": 4659,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "546"
										},
										{
											"begin": 4655,
											"end": 4658,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4566,
											"end": 4659,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "443"
										},
										{
											"begin": 4566,
											"end": 4659,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4566,
											"end": 4659,
											"name": "tag",
											"source": 8,
											"value": "546"
										},
										{
											"begin": 4566,
											"end": 4659,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4684,
											"end": 4686,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4679,
											"end": 4682,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4675,
											"end": 4687,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4668,
											"end": 4687,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4668,
											"end": 4687,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4327,
											"end": 4693,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4327,
											"end": 4693,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4327,
											"end": 4693,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4327,
											"end": 4693,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 4699,
											"end": 5118,
											"name": "tag",
											"source": 8,
											"value": "134"
										},
										{
											"begin": 4699,
											"end": 5118,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4865,
											"end": 4869,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4903,
											"end": 4905,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4892,
											"end": 4901,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4888,
											"end": 4906,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4880,
											"end": 4906,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4880,
											"end": 4906,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4952,
											"end": 4961,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4946,
											"end": 4950,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4942,
											"end": 4962,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4938,
											"end": 4939,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4927,
											"end": 4936,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4923,
											"end": 4940,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4916,
											"end": 4963,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4980,
											"end": 5111,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "548"
										},
										{
											"begin": 5106,
											"end": 5110,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4980,
											"end": 5111,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "444"
										},
										{
											"begin": 4980,
											"end": 5111,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4980,
											"end": 5111,
											"name": "tag",
											"source": 8,
											"value": "548"
										},
										{
											"begin": 4980,
											"end": 5111,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4972,
											"end": 5111,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4972,
											"end": 5111,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4699,
											"end": 5118,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4699,
											"end": 5118,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4699,
											"end": 5118,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4699,
											"end": 5118,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 5124,
											"end": 5287,
											"name": "tag",
											"source": 8,
											"value": "445"
										},
										{
											"begin": 5124,
											"end": 5287,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5264,
											"end": 5279,
											"name": "PUSH",
											"source": 8,
											"value": "43616E2774206265207A65726F00000000000000000000000000000000000000"
										},
										{
											"begin": 5260,
											"end": 5261,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5252,
											"end": 5258,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5248,
											"end": 5262,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5241,
											"end": 5280,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5124,
											"end": 5287,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5124,
											"end": 5287,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 5293,
											"end": 5659,
											"name": "tag",
											"source": 8,
											"value": "446"
										},
										{
											"begin": 5293,
											"end": 5659,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5435,
											"end": 5438,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5456,
											"end": 5523,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "551"
										},
										{
											"begin": 5520,
											"end": 5522,
											"name": "PUSH",
											"source": 8,
											"value": "D"
										},
										{
											"begin": 5515,
											"end": 5518,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5456,
											"end": 5523,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "442"
										},
										{
											"begin": 5456,
											"end": 5523,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5456,
											"end": 5523,
											"name": "tag",
											"source": 8,
											"value": "551"
										},
										{
											"begin": 5456,
											"end": 5523,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5449,
											"end": 5523,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5449,
											"end": 5523,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5532,
											"end": 5625,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "552"
										},
										{
											"begin": 5621,
											"end": 5624,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5532,
											"end": 5625,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "445"
										},
										{
											"begin": 5532,
											"end": 5625,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5532,
											"end": 5625,
											"name": "tag",
											"source": 8,
											"value": "552"
										},
										{
											"begin": 5532,
											"end": 5625,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5650,
											"end": 5652,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5645,
											"end": 5648,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5641,
											"end": 5653,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5634,
											"end": 5653,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5634,
											"end": 5653,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5293,
											"end": 5659,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5293,
											"end": 5659,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5293,
											"end": 5659,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5293,
											"end": 5659,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 5665,
											"end": 6084,
											"name": "tag",
											"source": 8,
											"value": "138"
										},
										{
											"begin": 5665,
											"end": 6084,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5831,
											"end": 5835,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5869,
											"end": 5871,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5858,
											"end": 5867,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5854,
											"end": 5872,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5846,
											"end": 5872,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5846,
											"end": 5872,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5918,
											"end": 5927,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5912,
											"end": 5916,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5908,
											"end": 5928,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5904,
											"end": 5905,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5893,
											"end": 5902,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5889,
											"end": 5906,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5882,
											"end": 5929,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5946,
											"end": 6077,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "554"
										},
										{
											"begin": 6072,
											"end": 6076,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5946,
											"end": 6077,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "446"
										},
										{
											"begin": 5946,
											"end": 6077,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5946,
											"end": 6077,
											"name": "tag",
											"source": 8,
											"value": "554"
										},
										{
											"begin": 5946,
											"end": 6077,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5938,
											"end": 6077,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5938,
											"end": 6077,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5665,
											"end": 6084,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5665,
											"end": 6084,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5665,
											"end": 6084,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5665,
											"end": 6084,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 6090,
											"end": 6271,
											"name": "tag",
											"source": 8,
											"value": "447"
										},
										{
											"begin": 6090,
											"end": 6271,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6230,
											"end": 6263,
											"name": "PUSH",
											"source": 8,
											"value": "416D6F756E742073686F756C642062652067726561746572207468616E203000"
										},
										{
											"begin": 6226,
											"end": 6227,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6218,
											"end": 6224,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6214,
											"end": 6228,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6207,
											"end": 6264,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6090,
											"end": 6271,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6090,
											"end": 6271,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 6277,
											"end": 6643,
											"name": "tag",
											"source": 8,
											"value": "448"
										},
										{
											"begin": 6277,
											"end": 6643,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6419,
											"end": 6422,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6440,
											"end": 6507,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "557"
										},
										{
											"begin": 6504,
											"end": 6506,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 6499,
											"end": 6502,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6440,
											"end": 6507,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "442"
										},
										{
											"begin": 6440,
											"end": 6507,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6440,
											"end": 6507,
											"name": "tag",
											"source": 8,
											"value": "557"
										},
										{
											"begin": 6440,
											"end": 6507,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6433,
											"end": 6507,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6433,
											"end": 6507,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6516,
											"end": 6609,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "558"
										},
										{
											"begin": 6605,
											"end": 6608,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6516,
											"end": 6609,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "447"
										},
										{
											"begin": 6516,
											"end": 6609,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6516,
											"end": 6609,
											"name": "tag",
											"source": 8,
											"value": "558"
										},
										{
											"begin": 6516,
											"end": 6609,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6634,
											"end": 6636,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6629,
											"end": 6632,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6625,
											"end": 6637,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6618,
											"end": 6637,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6618,
											"end": 6637,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6277,
											"end": 6643,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6277,
											"end": 6643,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6277,
											"end": 6643,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6277,
											"end": 6643,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 6649,
											"end": 7068,
											"name": "tag",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 6649,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6815,
											"end": 6819,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6853,
											"end": 6855,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6842,
											"end": 6851,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6838,
											"end": 6856,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6830,
											"end": 6856,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6830,
											"end": 6856,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6902,
											"end": 6911,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6896,
											"end": 6900,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6892,
											"end": 6912,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6888,
											"end": 6889,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6877,
											"end": 6886,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6873,
											"end": 6890,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6866,
											"end": 6913,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6930,
											"end": 7061,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "560"
										},
										{
											"begin": 7056,
											"end": 7060,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6930,
											"end": 7061,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "448"
										},
										{
											"begin": 6930,
											"end": 7061,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6930,
											"end": 7061,
											"name": "tag",
											"source": 8,
											"value": "560"
										},
										{
											"begin": 6930,
											"end": 7061,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6922,
											"end": 7061,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6922,
											"end": 7061,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6649,
											"end": 7068,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6649,
											"end": 7068,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6649,
											"end": 7068,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6649,
											"end": 7068,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 7074,
											"end": 7238,
											"name": "tag",
											"source": 8,
											"value": "449"
										},
										{
											"begin": 7074,
											"end": 7238,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7214,
											"end": 7230,
											"name": "PUSH",
											"source": 8,
											"value": "496E76616C696420616D6F756E74000000000000000000000000000000000000"
										},
										{
											"begin": 7210,
											"end": 7211,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7202,
											"end": 7208,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7198,
											"end": 7212,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7191,
											"end": 7231,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7074,
											"end": 7238,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7074,
											"end": 7238,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 7244,
											"end": 7610,
											"name": "tag",
											"source": 8,
											"value": "450"
										},
										{
											"begin": 7244,
											"end": 7610,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7386,
											"end": 7389,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7407,
											"end": 7474,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "563"
										},
										{
											"begin": 7471,
											"end": 7473,
											"name": "PUSH",
											"source": 8,
											"value": "E"
										},
										{
											"begin": 7466,
											"end": 7469,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7407,
											"end": 7474,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "442"
										},
										{
											"begin": 7407,
											"end": 7474,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 7407,
											"end": 7474,
											"name": "tag",
											"source": 8,
											"value": "563"
										},
										{
											"begin": 7407,
											"end": 7474,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7400,
											"end": 7474,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7400,
											"end": 7474,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7483,
											"end": 7576,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "564"
										},
										{
											"begin": 7572,
											"end": 7575,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7483,
											"end": 7576,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "449"
										},
										{
											"begin": 7483,
											"end": 7576,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 7483,
											"end": 7576,
											"name": "tag",
											"source": 8,
											"value": "564"
										},
										{
											"begin": 7483,
											"end": 7576,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7601,
											"end": 7603,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7596,
											"end": 7599,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7592,
											"end": 7604,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7585,
											"end": 7604,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7585,
											"end": 7604,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7244,
											"end": 7610,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7244,
											"end": 7610,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7244,
											"end": 7610,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7244,
											"end": 7610,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 7616,
											"end": 8035,
											"name": "tag",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 7616,
											"end": 8035,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7782,
											"end": 7786,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7820,
											"end": 7822,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7809,
											"end": 7818,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7805,
											"end": 7823,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7797,
											"end": 7823,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7797,
											"end": 7823,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7869,
											"end": 7878,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7863,
											"end": 7867,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7859,
											"end": 7879,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7855,
											"end": 7856,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7844,
											"end": 7853,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7833,
											"end": 7880,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7897,
											"end": 8028,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "566"
										},
										{
											"begin": 8023,
											"end": 8027,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7897,
											"end": 8028,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "450"
										},
										{
											"begin": 7897,
											"end": 8028,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 7897,
											"end": 8028,
											"name": "tag",
											"source": 8,
											"value": "566"
										},
										{
											"begin": 7897,
											"end": 8028,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7889,
											"end": 8028,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7889,
											"end": 8028,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7616,
											"end": 8035,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7616,
											"end": 8035,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7616,
											"end": 8035,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7616,
											"end": 8035,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 8041,
											"end": 8221,
											"name": "tag",
											"source": 8,
											"value": "451"
										},
										{
											"begin": 8041,
											"end": 8221,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8089,
											"end": 8166,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8086,
											"end": 8087,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8079,
											"end": 8167,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8186,
											"end": 8190,
											"name": "PUSH",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 8183,
											"end": 8184,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 8176,
											"end": 8191,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8210,
											"end": 8214,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 8207,
											"end": 8208,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8200,
											"end": 8215,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 8227,
											"end": 8403,
											"name": "tag",
											"source": 8,
											"value": "157"
										},
										{
											"begin": 8227,
											"end": 8403,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8259,
											"end": 8260,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8276,
											"end": 8296,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "569"
										},
										{
											"begin": 8294,
											"end": 8295,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8276,
											"end": 8296,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "425"
										},
										{
											"begin": 8276,
											"end": 8296,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8276,
											"end": 8296,
											"name": "tag",
											"source": 8,
											"value": "569"
										},
										{
											"begin": 8276,
											"end": 8296,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8271,
											"end": 8296,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8271,
											"end": 8296,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8310,
											"end": 8330,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "570"
										},
										{
											"begin": 8328,
											"end": 8329,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8310,
											"end": 8330,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "425"
										},
										{
											"begin": 8310,
											"end": 8330,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8310,
											"end": 8330,
											"name": "tag",
											"source": 8,
											"value": "570"
										},
										{
											"begin": 8310,
											"end": 8330,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8305,
											"end": 8330,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8305,
											"end": 8330,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8349,
											"end": 8350,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8339,
											"end": 8374,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "571"
										},
										{
											"begin": 8339,
											"end": 8374,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8354,
											"end": 8372,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "572"
										},
										{
											"begin": 8354,
											"end": 8372,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "451"
										},
										{
											"begin": 8354,
											"end": 8372,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8354,
											"end": 8372,
											"name": "tag",
											"source": 8,
											"value": "572"
										},
										{
											"begin": 8354,
											"end": 8372,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8339,
											"end": 8374,
											"name": "tag",
											"source": 8,
											"value": "571"
										},
										{
											"begin": 8339,
											"end": 8374,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8395,
											"end": 8396,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8392,
											"end": 8393,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8388,
											"end": 8397,
											"name": "MOD",
											"source": 8
										},
										{
											"begin": 8383,
											"end": 8397,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8383,
											"end": 8397,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8227,
											"end": 8403,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8227,
											"end": 8403,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8227,
											"end": 8403,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8227,
											"end": 8403,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8227,
											"end": 8403,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 8409,
											"end": 8741,
											"name": "tag",
											"source": 8,
											"value": "169"
										},
										{
											"begin": 8409,
											"end": 8741,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8530,
											"end": 8534,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8568,
											"end": 8570,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8557,
											"end": 8566,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8553,
											"end": 8571,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8545,
											"end": 8571,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8545,
											"end": 8571,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8581,
											"end": 8652,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "574"
										},
										{
											"begin": 8649,
											"end": 8650,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8638,
											"end": 8647,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8634,
											"end": 8651,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8625,
											"end": 8631,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 8581,
											"end": 8652,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "436"
										},
										{
											"begin": 8581,
											"end": 8652,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8581,
											"end": 8652,
											"name": "tag",
											"source": 8,
											"value": "574"
										},
										{
											"begin": 8581,
											"end": 8652,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8662,
											"end": 8734,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "575"
										},
										{
											"begin": 8730,
											"end": 8732,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8719,
											"end": 8728,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8715,
											"end": 8733,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8706,
											"end": 8712,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8662,
											"end": 8734,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "426"
										},
										{
											"begin": 8662,
											"end": 8734,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8662,
											"end": 8734,
											"name": "tag",
											"source": 8,
											"value": "575"
										},
										{
											"begin": 8662,
											"end": 8734,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8409,
											"end": 8741,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 8409,
											"end": 8741,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8409,
											"end": 8741,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8409,
											"end": 8741,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8409,
											"end": 8741,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8409,
											"end": 8741,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 8747,
											"end": 8913,
											"name": "tag",
											"source": 8,
											"value": "452"
										},
										{
											"begin": 8747,
											"end": 8913,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8887,
											"end": 8905,
											"name": "PUSH",
											"source": 8,
											"value": "4E6F7468696E6720746F20636C61696D00000000000000000000000000000000"
										},
										{
											"begin": 8883,
											"end": 8884,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8875,
											"end": 8881,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8871,
											"end": 8885,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8864,
											"end": 8906,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8747,
											"end": 8913,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8747,
											"end": 8913,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 8919,
											"end": 9285,
											"name": "tag",
											"source": 8,
											"value": "453"
										},
										{
											"begin": 8919,
											"end": 9285,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9061,
											"end": 9064,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9082,
											"end": 9149,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "578"
										},
										{
											"begin": 9146,
											"end": 9148,
											"name": "PUSH",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 9141,
											"end": 9144,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9082,
											"end": 9149,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "442"
										},
										{
											"begin": 9082,
											"end": 9149,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 9082,
											"end": 9149,
											"name": "tag",
											"source": 8,
											"value": "578"
										},
										{
											"begin": 9082,
											"end": 9149,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9075,
											"end": 9149,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9075,
											"end": 9149,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9158,
											"end": 9251,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "579"
										},
										{
											"begin": 9247,
											"end": 9250,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9158,
											"end": 9251,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "452"
										},
										{
											"begin": 9158,
											"end": 9251,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 9158,
											"end": 9251,
											"name": "tag",
											"source": 8,
											"value": "579"
										},
										{
											"begin": 9158,
											"end": 9251,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9276,
											"end": 9278,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9271,
											"end": 9274,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9267,
											"end": 9279,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9260,
											"end": 9279,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9260,
											"end": 9279,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8919,
											"end": 9285,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8919,
											"end": 9285,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8919,
											"end": 9285,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8919,
											"end": 9285,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 9291,
											"end": 9710,
											"name": "tag",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 9291,
											"end": 9710,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9457,
											"end": 9461,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9495,
											"end": 9497,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9484,
											"end": 9493,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9480,
											"end": 9498,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9472,
											"end": 9498,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9472,
											"end": 9498,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9544,
											"end": 9553,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9538,
											"end": 9542,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9534,
											"end": 9554,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9530,
											"end": 9531,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9519,
											"end": 9528,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9515,
											"end": 9532,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9508,
											"end": 9555,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9572,
											"end": 9703,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "581"
										},
										{
											"begin": 9698,
											"end": 9702,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9572,
											"end": 9703,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "453"
										},
										{
											"begin": 9572,
											"end": 9703,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 9572,
											"end": 9703,
											"name": "tag",
											"source": 8,
											"value": "581"
										},
										{
											"begin": 9572,
											"end": 9703,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9564,
											"end": 9703,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9564,
											"end": 9703,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9291,
											"end": 9710,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9291,
											"end": 9710,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9291,
											"end": 9710,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9291,
											"end": 9710,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 9716,
											"end": 9859,
											"name": "tag",
											"source": 8,
											"value": "454"
										},
										{
											"begin": 9716,
											"end": 9859,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9773,
											"end": 9778,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9804,
											"end": 9810,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9798,
											"end": 9811,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9789,
											"end": 9811,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9789,
											"end": 9811,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9820,
											"end": 9853,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "583"
										},
										{
											"begin": 9847,
											"end": 9852,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9820,
											"end": 9853,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "430"
										},
										{
											"begin": 9820,
											"end": 9853,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 9820,
											"end": 9853,
											"name": "tag",
											"source": 8,
											"value": "583"
										},
										{
											"begin": 9820,
											"end": 9853,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9716,
											"end": 9859,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9716,
											"end": 9859,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9716,
											"end": 9859,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9716,
											"end": 9859,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9716,
											"end": 9859,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 9865,
											"end": 10216,
											"name": "tag",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 9865,
											"end": 10216,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9935,
											"end": 9941,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9984,
											"end": 9986,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9972,
											"end": 9981,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9963,
											"end": 9970,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9959,
											"end": 9982,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9955,
											"end": 9987,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 9952,
											"end": 10071,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9952,
											"end": 10071,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "585"
										},
										{
											"begin": 9952,
											"end": 10071,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9990,
											"end": 10069,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "586"
										},
										{
											"begin": 9990,
											"end": 10069,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "428"
										},
										{
											"begin": 9990,
											"end": 10069,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 9990,
											"end": 10069,
											"name": "tag",
											"source": 8,
											"value": "586"
										},
										{
											"begin": 9990,
											"end": 10069,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9952,
											"end": 10071,
											"name": "tag",
											"source": 8,
											"value": "585"
										},
										{
											"begin": 9952,
											"end": 10071,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10110,
											"end": 10111,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10135,
											"end": 10199,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "587"
										},
										{
											"begin": 10191,
											"end": 10198,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10182,
											"end": 10188,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10171,
											"end": 10180,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 10167,
											"end": 10189,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10135,
											"end": 10199,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "454"
										},
										{
											"begin": 10135,
											"end": 10199,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 10135,
											"end": 10199,
											"name": "tag",
											"source": 8,
											"value": "587"
										},
										{
											"begin": 10135,
											"end": 10199,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10125,
											"end": 10199,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10125,
											"end": 10199,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10081,
											"end": 10209,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9865,
											"end": 10216,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9865,
											"end": 10216,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9865,
											"end": 10216,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9865,
											"end": 10216,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9865,
											"end": 10216,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 10222,
											"end": 10385,
											"name": "tag",
											"source": 8,
											"value": "455"
										},
										{
											"begin": 10222,
											"end": 10385,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10362,
											"end": 10377,
											"name": "PUSH",
											"source": 8,
											"value": "496E73756666696369656E742100000000000000000000000000000000000000"
										},
										{
											"begin": 10358,
											"end": 10359,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10350,
											"end": 10356,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10346,
											"end": 10360,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10339,
											"end": 10378,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10222,
											"end": 10385,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10222,
											"end": 10385,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 10391,
											"end": 10757,
											"name": "tag",
											"source": 8,
											"value": "456"
										},
										{
											"begin": 10391,
											"end": 10757,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10533,
											"end": 10536,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10554,
											"end": 10621,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "590"
										},
										{
											"begin": 10618,
											"end": 10620,
											"name": "PUSH",
											"source": 8,
											"value": "D"
										},
										{
											"begin": 10613,
											"end": 10616,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10554,
											"end": 10621,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "442"
										},
										{
											"begin": 10554,
											"end": 10621,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 10554,
											"end": 10621,
											"name": "tag",
											"source": 8,
											"value": "590"
										},
										{
											"begin": 10554,
											"end": 10621,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10547,
											"end": 10621,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10547,
											"end": 10621,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10630,
											"end": 10723,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "591"
										},
										{
											"begin": 10719,
											"end": 10722,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10630,
											"end": 10723,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "455"
										},
										{
											"begin": 10630,
											"end": 10723,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 10630,
											"end": 10723,
											"name": "tag",
											"source": 8,
											"value": "591"
										},
										{
											"begin": 10630,
											"end": 10723,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10748,
											"end": 10750,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10743,
											"end": 10746,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10739,
											"end": 10751,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10732,
											"end": 10751,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10732,
											"end": 10751,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10391,
											"end": 10757,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10391,
											"end": 10757,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10391,
											"end": 10757,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10391,
											"end": 10757,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 10763,
											"end": 11182,
											"name": "tag",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 10763,
											"end": 11182,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10929,
											"end": 10933,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10967,
											"end": 10969,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10956,
											"end": 10965,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10952,
											"end": 10970,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10944,
											"end": 10970,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10944,
											"end": 10970,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11016,
											"end": 11025,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11010,
											"end": 11014,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11006,
											"end": 11026,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 11002,
											"end": 11003,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10991,
											"end": 11000,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10987,
											"end": 11004,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10980,
											"end": 11027,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11044,
											"end": 11175,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "593"
										},
										{
											"begin": 11170,
											"end": 11174,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11044,
											"end": 11175,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "456"
										},
										{
											"begin": 11044,
											"end": 11175,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 11044,
											"end": 11175,
											"name": "tag",
											"source": 8,
											"value": "593"
										},
										{
											"begin": 11044,
											"end": 11175,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11036,
											"end": 11175,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11036,
											"end": 11175,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10763,
											"end": 11182,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10763,
											"end": 11182,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10763,
											"end": 11182,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10763,
											"end": 11182,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 11188,
											"end": 11353,
											"name": "tag",
											"source": 8,
											"value": "457"
										},
										{
											"begin": 11188,
											"end": 11353,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11328,
											"end": 11345,
											"name": "PUSH",
											"source": 8,
											"value": "416C726561647920737461727465640000000000000000000000000000000000"
										},
										{
											"begin": 11324,
											"end": 11325,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11316,
											"end": 11322,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11312,
											"end": 11326,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11305,
											"end": 11346,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11188,
											"end": 11353,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11188,
											"end": 11353,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 11359,
											"end": 11725,
											"name": "tag",
											"source": 8,
											"value": "458"
										},
										{
											"begin": 11359,
											"end": 11725,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11501,
											"end": 11504,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11522,
											"end": 11589,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "596"
										},
										{
											"begin": 11586,
											"end": 11588,
											"name": "PUSH",
											"source": 8,
											"value": "F"
										},
										{
											"begin": 11581,
											"end": 11584,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11522,
											"end": 11589,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "442"
										},
										{
											"begin": 11522,
											"end": 11589,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 11522,
											"end": 11589,
											"name": "tag",
											"source": 8,
											"value": "596"
										},
										{
											"begin": 11522,
											"end": 11589,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11515,
											"end": 11589,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11515,
											"end": 11589,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11598,
											"end": 11691,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "597"
										},
										{
											"begin": 11687,
											"end": 11690,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11598,
											"end": 11691,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "457"
										},
										{
											"begin": 11598,
											"end": 11691,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 11598,
											"end": 11691,
											"name": "tag",
											"source": 8,
											"value": "597"
										},
										{
											"begin": 11598,
											"end": 11691,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11716,
											"end": 11718,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11711,
											"end": 11714,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11707,
											"end": 11719,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11700,
											"end": 11719,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11700,
											"end": 11719,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11359,
											"end": 11725,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11359,
											"end": 11725,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11359,
											"end": 11725,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11359,
											"end": 11725,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 11731,
											"end": 12150,
											"name": "tag",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 11731,
											"end": 12150,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11897,
											"end": 11901,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11935,
											"end": 11937,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11924,
											"end": 11933,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11920,
											"end": 11938,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11912,
											"end": 11938,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11912,
											"end": 11938,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11984,
											"end": 11993,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11978,
											"end": 11982,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11974,
											"end": 11994,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 11970,
											"end": 11971,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11959,
											"end": 11968,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11955,
											"end": 11972,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11948,
											"end": 11995,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12012,
											"end": 12143,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "599"
										},
										{
											"begin": 12138,
											"end": 12142,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12012,
											"end": 12143,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "458"
										},
										{
											"begin": 12012,
											"end": 12143,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 12012,
											"end": 12143,
											"name": "tag",
											"source": 8,
											"value": "599"
										},
										{
											"begin": 12012,
											"end": 12143,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12004,
											"end": 12143,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12004,
											"end": 12143,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11731,
											"end": 12150,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11731,
											"end": 12150,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11731,
											"end": 12150,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11731,
											"end": 12150,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 12156,
											"end": 12318,
											"name": "tag",
											"source": 8,
											"value": "459"
										},
										{
											"begin": 12156,
											"end": 12318,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12296,
											"end": 12310,
											"name": "PUSH",
											"source": 8,
											"value": "496E73756666696369656E740000000000000000000000000000000000000000"
										},
										{
											"begin": 12292,
											"end": 12293,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12284,
											"end": 12290,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12280,
											"end": 12294,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12273,
											"end": 12311,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12156,
											"end": 12318,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12156,
											"end": 12318,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 12324,
											"end": 12690,
											"name": "tag",
											"source": 8,
											"value": "460"
										},
										{
											"begin": 12324,
											"end": 12690,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12466,
											"end": 12469,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12487,
											"end": 12554,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "602"
										},
										{
											"begin": 12551,
											"end": 12553,
											"name": "PUSH",
											"source": 8,
											"value": "C"
										},
										{
											"begin": 12546,
											"end": 12549,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12487,
											"end": 12554,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "442"
										},
										{
											"begin": 12487,
											"end": 12554,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 12487,
											"end": 12554,
											"name": "tag",
											"source": 8,
											"value": "602"
										},
										{
											"begin": 12487,
											"end": 12554,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12480,
											"end": 12554,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12480,
											"end": 12554,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12563,
											"end": 12656,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "603"
										},
										{
											"begin": 12652,
											"end": 12655,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12563,
											"end": 12656,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "459"
										},
										{
											"begin": 12563,
											"end": 12656,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 12563,
											"end": 12656,
											"name": "tag",
											"source": 8,
											"value": "603"
										},
										{
											"begin": 12563,
											"end": 12656,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12681,
											"end": 12683,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12676,
											"end": 12679,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12672,
											"end": 12684,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12665,
											"end": 12684,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12665,
											"end": 12684,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12324,
											"end": 12690,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12324,
											"end": 12690,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12324,
											"end": 12690,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12324,
											"end": 12690,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 12696,
											"end": 13115,
											"name": "tag",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 12696,
											"end": 13115,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12862,
											"end": 12866,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12900,
											"end": 12902,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12889,
											"end": 12898,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12885,
											"end": 12903,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12877,
											"end": 12903,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12877,
											"end": 12903,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12949,
											"end": 12958,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12943,
											"end": 12947,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12939,
											"end": 12959,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 12935,
											"end": 12936,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12924,
											"end": 12933,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12920,
											"end": 12937,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12913,
											"end": 12960,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12977,
											"end": 13108,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "605"
										},
										{
											"begin": 13103,
											"end": 13107,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12977,
											"end": 13108,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "460"
										},
										{
											"begin": 12977,
											"end": 13108,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 12977,
											"end": 13108,
											"name": "tag",
											"source": 8,
											"value": "605"
										},
										{
											"begin": 12977,
											"end": 13108,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12969,
											"end": 13108,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12969,
											"end": 13108,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12696,
											"end": 13115,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12696,
											"end": 13115,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12696,
											"end": 13115,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12696,
											"end": 13115,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 13121,
											"end": 13283,
											"name": "tag",
											"source": 8,
											"value": "461"
										},
										{
											"begin": 13121,
											"end": 13283,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13261,
											"end": 13275,
											"name": "PUSH",
											"source": 8,
											"value": "496E76616C6964204D6F64650000000000000000000000000000000000000000"
										},
										{
											"begin": 13257,
											"end": 13258,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13249,
											"end": 13255,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13245,
											"end": 13259,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13238,
											"end": 13276,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13121,
											"end": 13283,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13121,
											"end": 13283,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 13289,
											"end": 13655,
											"name": "tag",
											"source": 8,
											"value": "462"
										},
										{
											"begin": 13289,
											"end": 13655,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13431,
											"end": 13434,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13452,
											"end": 13519,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "608"
										},
										{
											"begin": 13516,
											"end": 13518,
											"name": "PUSH",
											"source": 8,
											"value": "C"
										},
										{
											"begin": 13511,
											"end": 13514,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13452,
											"end": 13519,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "442"
										},
										{
											"begin": 13452,
											"end": 13519,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 13452,
											"end": 13519,
											"name": "tag",
											"source": 8,
											"value": "608"
										},
										{
											"begin": 13452,
											"end": 13519,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13445,
											"end": 13519,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13445,
											"end": 13519,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13528,
											"end": 13621,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "609"
										},
										{
											"begin": 13617,
											"end": 13620,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13528,
											"end": 13621,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "461"
										},
										{
											"begin": 13528,
											"end": 13621,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 13528,
											"end": 13621,
											"name": "tag",
											"source": 8,
											"value": "609"
										},
										{
											"begin": 13528,
											"end": 13621,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13646,
											"end": 13648,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13641,
											"end": 13644,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13637,
											"end": 13649,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13630,
											"end": 13649,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13630,
											"end": 13649,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13289,
											"end": 13655,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13289,
											"end": 13655,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13289,
											"end": 13655,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13289,
											"end": 13655,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 13661,
											"end": 14080,
											"name": "tag",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 13661,
											"end": 14080,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13827,
											"end": 13831,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13865,
											"end": 13867,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13854,
											"end": 13863,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13850,
											"end": 13868,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13842,
											"end": 13868,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13842,
											"end": 13868,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13914,
											"end": 13923,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13908,
											"end": 13912,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13904,
											"end": 13924,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 13900,
											"end": 13901,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13889,
											"end": 13898,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13885,
											"end": 13902,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13878,
											"end": 13925,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13942,
											"end": 14073,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "611"
										},
										{
											"begin": 14068,
											"end": 14072,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13942,
											"end": 14073,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "462"
										},
										{
											"begin": 13942,
											"end": 14073,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 13942,
											"end": 14073,
											"name": "tag",
											"source": 8,
											"value": "611"
										},
										{
											"begin": 13942,
											"end": 14073,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13934,
											"end": 14073,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13934,
											"end": 14073,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13661,
											"end": 14080,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13661,
											"end": 14080,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13661,
											"end": 14080,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13661,
											"end": 14080,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 14086,
											"end": 14259,
											"name": "tag",
											"source": 8,
											"value": "463"
										},
										{
											"begin": 14086,
											"end": 14259,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14226,
											"end": 14251,
											"name": "PUSH",
											"source": 8,
											"value": "496E76616C6964204C6F636B7570204475726174696F6E000000000000000000"
										},
										{
											"begin": 14222,
											"end": 14223,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14214,
											"end": 14220,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14210,
											"end": 14224,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14203,
											"end": 14252,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14086,
											"end": 14259,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14086,
											"end": 14259,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 14265,
											"end": 14631,
											"name": "tag",
											"source": 8,
											"value": "464"
										},
										{
											"begin": 14265,
											"end": 14631,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14407,
											"end": 14410,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14428,
											"end": 14495,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "614"
										},
										{
											"begin": 14492,
											"end": 14494,
											"name": "PUSH",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 14487,
											"end": 14490,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14428,
											"end": 14495,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "442"
										},
										{
											"begin": 14428,
											"end": 14495,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 14428,
											"end": 14495,
											"name": "tag",
											"source": 8,
											"value": "614"
										},
										{
											"begin": 14428,
											"end": 14495,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14421,
											"end": 14495,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14421,
											"end": 14495,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14504,
											"end": 14597,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "615"
										},
										{
											"begin": 14593,
											"end": 14596,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14504,
											"end": 14597,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "463"
										},
										{
											"begin": 14504,
											"end": 14597,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 14504,
											"end": 14597,
											"name": "tag",
											"source": 8,
											"value": "615"
										},
										{
											"begin": 14504,
											"end": 14597,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14622,
											"end": 14624,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 14617,
											"end": 14620,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14613,
											"end": 14625,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14606,
											"end": 14625,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14606,
											"end": 14625,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14265,
											"end": 14631,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14265,
											"end": 14631,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14265,
											"end": 14631,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14265,
											"end": 14631,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 14637,
											"end": 15056,
											"name": "tag",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 14637,
											"end": 15056,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14803,
											"end": 14807,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14841,
											"end": 14843,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 14830,
											"end": 14839,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14826,
											"end": 14844,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14818,
											"end": 14844,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14818,
											"end": 14844,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14890,
											"end": 14899,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14884,
											"end": 14888,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14880,
											"end": 14900,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 14876,
											"end": 14877,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14865,
											"end": 14874,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14861,
											"end": 14878,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14854,
											"end": 14901,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14918,
											"end": 15049,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "617"
										},
										{
											"begin": 15044,
											"end": 15048,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14918,
											"end": 15049,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "464"
										},
										{
											"begin": 14918,
											"end": 15049,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 14918,
											"end": 15049,
											"name": "tag",
											"source": 8,
											"value": "617"
										},
										{
											"begin": 14918,
											"end": 15049,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14910,
											"end": 15049,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14910,
											"end": 15049,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14637,
											"end": 15056,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14637,
											"end": 15056,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14637,
											"end": 15056,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14637,
											"end": 15056,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 15062,
											"end": 15238,
											"name": "tag",
											"source": 8,
											"value": "465"
										},
										{
											"begin": 15062,
											"end": 15238,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15202,
											"end": 15230,
											"name": "PUSH",
											"source": 8,
											"value": "496E76616C696420556E7374616B696E67204665652052617465000000000000"
										},
										{
											"begin": 15198,
											"end": 15199,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15190,
											"end": 15196,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15186,
											"end": 15200,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15179,
											"end": 15231,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15062,
											"end": 15238,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15062,
											"end": 15238,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 15244,
											"end": 15610,
											"name": "tag",
											"source": 8,
											"value": "466"
										},
										{
											"begin": 15244,
											"end": 15610,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15386,
											"end": 15389,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15407,
											"end": 15474,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "620"
										},
										{
											"begin": 15471,
											"end": 15473,
											"name": "PUSH",
											"source": 8,
											"value": "1A"
										},
										{
											"begin": 15466,
											"end": 15469,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15407,
											"end": 15474,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "442"
										},
										{
											"begin": 15407,
											"end": 15474,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 15407,
											"end": 15474,
											"name": "tag",
											"source": 8,
											"value": "620"
										},
										{
											"begin": 15407,
											"end": 15474,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15400,
											"end": 15474,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15400,
											"end": 15474,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15483,
											"end": 15576,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "621"
										},
										{
											"begin": 15572,
											"end": 15575,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15483,
											"end": 15576,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "465"
										},
										{
											"begin": 15483,
											"end": 15576,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 15483,
											"end": 15576,
											"name": "tag",
											"source": 8,
											"value": "621"
										},
										{
											"begin": 15483,
											"end": 15576,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15601,
											"end": 15603,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 15596,
											"end": 15599,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15592,
											"end": 15604,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15585,
											"end": 15604,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15585,
											"end": 15604,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15244,
											"end": 15610,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15244,
											"end": 15610,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15244,
											"end": 15610,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15244,
											"end": 15610,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 15616,
											"end": 16035,
											"name": "tag",
											"source": 8,
											"value": "290"
										},
										{
											"begin": 15616,
											"end": 16035,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15782,
											"end": 15786,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15820,
											"end": 15822,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 15809,
											"end": 15818,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15805,
											"end": 15823,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15797,
											"end": 15823,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15797,
											"end": 15823,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15869,
											"end": 15878,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15863,
											"end": 15867,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15859,
											"end": 15879,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 15855,
											"end": 15856,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15844,
											"end": 15853,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15840,
											"end": 15857,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15833,
											"end": 15880,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15897,
											"end": 16028,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "623"
										},
										{
											"begin": 16023,
											"end": 16027,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15897,
											"end": 16028,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "466"
										},
										{
											"begin": 15897,
											"end": 16028,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 15897,
											"end": 16028,
											"name": "tag",
											"source": 8,
											"value": "623"
										},
										{
											"begin": 15897,
											"end": 16028,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15889,
											"end": 16028,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15889,
											"end": 16028,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15616,
											"end": 16035,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15616,
											"end": 16035,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15616,
											"end": 16035,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15616,
											"end": 16035,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 16041,
											"end": 16204,
											"name": "tag",
											"source": 8,
											"value": "467"
										},
										{
											"begin": 16041,
											"end": 16204,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16181,
											"end": 16196,
											"name": "PUSH",
											"source": 8,
											"value": "496E76616C69642076616C756500000000000000000000000000000000000000"
										},
										{
											"begin": 16177,
											"end": 16178,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16169,
											"end": 16175,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16165,
											"end": 16179,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16158,
											"end": 16197,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 16041,
											"end": 16204,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16041,
											"end": 16204,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 16210,
											"end": 16576,
											"name": "tag",
											"source": 8,
											"value": "468"
										},
										{
											"begin": 16210,
											"end": 16576,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16352,
											"end": 16355,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16373,
											"end": 16440,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "626"
										},
										{
											"begin": 16437,
											"end": 16439,
											"name": "PUSH",
											"source": 8,
											"value": "D"
										},
										{
											"begin": 16432,
											"end": 16435,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 16373,
											"end": 16440,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "442"
										},
										{
											"begin": 16373,
											"end": 16440,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 16373,
											"end": 16440,
											"name": "tag",
											"source": 8,
											"value": "626"
										},
										{
											"begin": 16373,
											"end": 16440,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16366,
											"end": 16440,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16366,
											"end": 16440,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16449,
											"end": 16542,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "627"
										},
										{
											"begin": 16538,
											"end": 16541,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16449,
											"end": 16542,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "467"
										},
										{
											"begin": 16449,
											"end": 16542,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 16449,
											"end": 16542,
											"name": "tag",
											"source": 8,
											"value": "627"
										},
										{
											"begin": 16449,
											"end": 16542,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16567,
											"end": 16569,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 16562,
											"end": 16565,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16558,
											"end": 16570,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16551,
											"end": 16570,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16551,
											"end": 16570,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16210,
											"end": 16576,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16210,
											"end": 16576,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16210,
											"end": 16576,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16210,
											"end": 16576,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 16582,
											"end": 17001,
											"name": "tag",
											"source": 8,
											"value": "300"
										},
										{
											"begin": 16582,
											"end": 17001,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16748,
											"end": 16752,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16786,
											"end": 16788,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 16775,
											"end": 16784,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16771,
											"end": 16789,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16763,
											"end": 16789,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16763,
											"end": 16789,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16835,
											"end": 16844,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16829,
											"end": 16833,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16825,
											"end": 16845,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 16821,
											"end": 16822,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16810,
											"end": 16819,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 16806,
											"end": 16823,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16799,
											"end": 16846,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 16863,
											"end": 16994,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "629"
										},
										{
											"begin": 16989,
											"end": 16993,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16863,
											"end": 16994,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "468"
										},
										{
											"begin": 16863,
											"end": 16994,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 16863,
											"end": 16994,
											"name": "tag",
											"source": 8,
											"value": "629"
										},
										{
											"begin": 16863,
											"end": 16994,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16855,
											"end": 16994,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16855,
											"end": 16994,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16582,
											"end": 17001,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16582,
											"end": 17001,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16582,
											"end": 17001,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16582,
											"end": 17001,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 17007,
											"end": 17178,
											"name": "tag",
											"source": 8,
											"value": "469"
										},
										{
											"begin": 17007,
											"end": 17178,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17147,
											"end": 17170,
											"name": "PUSH",
											"source": 8,
											"value": "4572726F723A20696E76616C6964207374616B65720000000000000000000000"
										},
										{
											"begin": 17143,
											"end": 17144,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17135,
											"end": 17141,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17131,
											"end": 17145,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17124,
											"end": 17171,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 17007,
											"end": 17178,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17007,
											"end": 17178,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 17184,
											"end": 17550,
											"name": "tag",
											"source": 8,
											"value": "470"
										},
										{
											"begin": 17184,
											"end": 17550,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17326,
											"end": 17329,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17347,
											"end": 17414,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "632"
										},
										{
											"begin": 17411,
											"end": 17413,
											"name": "PUSH",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 17406,
											"end": 17409,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 17347,
											"end": 17414,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "442"
										},
										{
											"begin": 17347,
											"end": 17414,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 17347,
											"end": 17414,
											"name": "tag",
											"source": 8,
											"value": "632"
										},
										{
											"begin": 17347,
											"end": 17414,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17340,
											"end": 17414,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17340,
											"end": 17414,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17423,
											"end": 17516,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "633"
										},
										{
											"begin": 17512,
											"end": 17515,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17423,
											"end": 17516,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "469"
										},
										{
											"begin": 17423,
											"end": 17516,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 17423,
											"end": 17516,
											"name": "tag",
											"source": 8,
											"value": "633"
										},
										{
											"begin": 17423,
											"end": 17516,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17541,
											"end": 17543,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 17536,
											"end": 17539,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17532,
											"end": 17544,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17525,
											"end": 17544,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17525,
											"end": 17544,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17184,
											"end": 17550,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17184,
											"end": 17550,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17184,
											"end": 17550,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17184,
											"end": 17550,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 17556,
											"end": 17975,
											"name": "tag",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 17556,
											"end": 17975,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17722,
											"end": 17726,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17760,
											"end": 17762,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 17749,
											"end": 17758,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17745,
											"end": 17763,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17737,
											"end": 17763,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17737,
											"end": 17763,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17809,
											"end": 17818,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17803,
											"end": 17807,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17799,
											"end": 17819,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 17795,
											"end": 17796,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17784,
											"end": 17793,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 17780,
											"end": 17797,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17773,
											"end": 17820,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 17837,
											"end": 17968,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "635"
										},
										{
											"begin": 17963,
											"end": 17967,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17837,
											"end": 17968,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "470"
										},
										{
											"begin": 17837,
											"end": 17968,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 17837,
											"end": 17968,
											"name": "tag",
											"source": 8,
											"value": "635"
										},
										{
											"begin": 17837,
											"end": 17968,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17829,
											"end": 17968,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17829,
											"end": 17968,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17556,
											"end": 17975,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17556,
											"end": 17975,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17556,
											"end": 17975,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17556,
											"end": 17975,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 17981,
											"end": 18206,
											"name": "tag",
											"source": 8,
											"value": "471"
										},
										{
											"begin": 17981,
											"end": 18206,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18121,
											"end": 18155,
											"name": "PUSH",
											"source": 8,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 18117,
											"end": 18118,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18109,
											"end": 18115,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18105,
											"end": 18119,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18098,
											"end": 18156,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 18190,
											"end": 18198,
											"name": "PUSH",
											"source": 8,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18185,
											"end": 18187,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 18177,
											"end": 18183,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18173,
											"end": 18188,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18166,
											"end": 18199,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 17981,
											"end": 18206,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17981,
											"end": 18206,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 18212,
											"end": 18578,
											"name": "tag",
											"source": 8,
											"value": "472"
										},
										{
											"begin": 18212,
											"end": 18578,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18354,
											"end": 18357,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18375,
											"end": 18442,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "638"
										},
										{
											"begin": 18439,
											"end": 18441,
											"name": "PUSH",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 18434,
											"end": 18437,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 18375,
											"end": 18442,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "442"
										},
										{
											"begin": 18375,
											"end": 18442,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 18375,
											"end": 18442,
											"name": "tag",
											"source": 8,
											"value": "638"
										},
										{
											"begin": 18375,
											"end": 18442,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18368,
											"end": 18442,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18368,
											"end": 18442,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18451,
											"end": 18544,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "639"
										},
										{
											"begin": 18540,
											"end": 18543,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18451,
											"end": 18544,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "471"
										},
										{
											"begin": 18451,
											"end": 18544,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 18451,
											"end": 18544,
											"name": "tag",
											"source": 8,
											"value": "639"
										},
										{
											"begin": 18451,
											"end": 18544,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18569,
											"end": 18571,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 18564,
											"end": 18567,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18560,
											"end": 18572,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18553,
											"end": 18572,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18553,
											"end": 18572,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18212,
											"end": 18578,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18212,
											"end": 18578,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18212,
											"end": 18578,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18212,
											"end": 18578,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 18584,
											"end": 19003,
											"name": "tag",
											"source": 8,
											"value": "356"
										},
										{
											"begin": 18584,
											"end": 19003,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18750,
											"end": 18754,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18788,
											"end": 18790,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 18777,
											"end": 18786,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18773,
											"end": 18791,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18765,
											"end": 18791,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18765,
											"end": 18791,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18837,
											"end": 18846,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18831,
											"end": 18835,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18827,
											"end": 18847,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 18823,
											"end": 18824,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18812,
											"end": 18821,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 18808,
											"end": 18825,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18801,
											"end": 18848,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 18865,
											"end": 18996,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "641"
										},
										{
											"begin": 18991,
											"end": 18995,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18865,
											"end": 18996,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "472"
										},
										{
											"begin": 18865,
											"end": 18996,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 18865,
											"end": 18996,
											"name": "tag",
											"source": 8,
											"value": "641"
										},
										{
											"begin": 18865,
											"end": 18996,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18857,
											"end": 18996,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18857,
											"end": 18996,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18584,
											"end": 19003,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18584,
											"end": 19003,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18584,
											"end": 19003,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18584,
											"end": 19003,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 19009,
											"end": 19189,
											"name": "tag",
											"source": 8,
											"value": "473"
										},
										{
											"begin": 19009,
											"end": 19189,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19057,
											"end": 19134,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19054,
											"end": 19055,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19047,
											"end": 19135,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 19154,
											"end": 19158,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 19151,
											"end": 19152,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 19144,
											"end": 19159,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 19178,
											"end": 19182,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 19175,
											"end": 19176,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19168,
											"end": 19183,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 19195,
											"end": 19386,
											"name": "tag",
											"source": 8,
											"value": "370"
										},
										{
											"begin": 19195,
											"end": 19386,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19235,
											"end": 19239,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19255,
											"end": 19275,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "644"
										},
										{
											"begin": 19273,
											"end": 19274,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19255,
											"end": 19275,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "425"
										},
										{
											"begin": 19255,
											"end": 19275,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 19255,
											"end": 19275,
											"name": "tag",
											"source": 8,
											"value": "644"
										},
										{
											"begin": 19255,
											"end": 19275,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19250,
											"end": 19275,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19250,
											"end": 19275,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19289,
											"end": 19309,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "645"
										},
										{
											"begin": 19307,
											"end": 19308,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 19289,
											"end": 19309,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "425"
										},
										{
											"begin": 19289,
											"end": 19309,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 19289,
											"end": 19309,
											"name": "tag",
											"source": 8,
											"value": "645"
										},
										{
											"begin": 19289,
											"end": 19309,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19284,
											"end": 19309,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 19284,
											"end": 19309,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19328,
											"end": 19329,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19325,
											"end": 19326,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19322,
											"end": 19330,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 19319,
											"end": 19353,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 19319,
											"end": 19353,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "646"
										},
										{
											"begin": 19319,
											"end": 19353,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 19333,
											"end": 19351,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "647"
										},
										{
											"begin": 19333,
											"end": 19351,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "473"
										},
										{
											"begin": 19333,
											"end": 19351,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 19333,
											"end": 19351,
											"name": "tag",
											"source": 8,
											"value": "647"
										},
										{
											"begin": 19333,
											"end": 19351,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19319,
											"end": 19353,
											"name": "tag",
											"source": 8,
											"value": "646"
										},
										{
											"begin": 19319,
											"end": 19353,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19378,
											"end": 19379,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19375,
											"end": 19376,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19371,
											"end": 19380,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 19363,
											"end": 19380,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19363,
											"end": 19380,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19195,
											"end": 19386,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 19195,
											"end": 19386,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19195,
											"end": 19386,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19195,
											"end": 19386,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19195,
											"end": 19386,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 19392,
											"end": 19577,
											"name": "tag",
											"source": 8,
											"value": "373"
										},
										{
											"begin": 19392,
											"end": 19577,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19432,
											"end": 19433,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19449,
											"end": 19469,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "649"
										},
										{
											"begin": 19467,
											"end": 19468,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19449,
											"end": 19469,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "425"
										},
										{
											"begin": 19449,
											"end": 19469,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 19449,
											"end": 19469,
											"name": "tag",
											"source": 8,
											"value": "649"
										},
										{
											"begin": 19449,
											"end": 19469,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19444,
											"end": 19469,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19444,
											"end": 19469,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19483,
											"end": 19503,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "650"
										},
										{
											"begin": 19501,
											"end": 19502,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 19483,
											"end": 19503,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "425"
										},
										{
											"begin": 19483,
											"end": 19503,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 19483,
											"end": 19503,
											"name": "tag",
											"source": 8,
											"value": "650"
										},
										{
											"begin": 19483,
											"end": 19503,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19478,
											"end": 19503,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 19478,
											"end": 19503,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19522,
											"end": 19523,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19512,
											"end": 19547,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "651"
										},
										{
											"begin": 19512,
											"end": 19547,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 19527,
											"end": 19545,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "652"
										},
										{
											"begin": 19527,
											"end": 19545,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "451"
										},
										{
											"begin": 19527,
											"end": 19545,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 19527,
											"end": 19545,
											"name": "tag",
											"source": 8,
											"value": "652"
										},
										{
											"begin": 19527,
											"end": 19545,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19512,
											"end": 19547,
											"name": "tag",
											"source": 8,
											"value": "651"
										},
										{
											"begin": 19512,
											"end": 19547,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19569,
											"end": 19570,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19566,
											"end": 19567,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19562,
											"end": 19571,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 19557,
											"end": 19571,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19557,
											"end": 19571,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19392,
											"end": 19577,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 19392,
											"end": 19577,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19392,
											"end": 19577,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19392,
											"end": 19577,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19392,
											"end": 19577,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 19583,
											"end": 19888,
											"name": "tag",
											"source": 8,
											"value": "376"
										},
										{
											"begin": 19583,
											"end": 19888,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19623,
											"end": 19626,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19642,
											"end": 19662,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "654"
										},
										{
											"begin": 19660,
											"end": 19661,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19642,
											"end": 19662,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "425"
										},
										{
											"begin": 19642,
											"end": 19662,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 19642,
											"end": 19662,
											"name": "tag",
											"source": 8,
											"value": "654"
										},
										{
											"begin": 19642,
											"end": 19662,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19637,
											"end": 19662,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19637,
											"end": 19662,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19676,
											"end": 19696,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "655"
										},
										{
											"begin": 19694,
											"end": 19695,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 19676,
											"end": 19696,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "425"
										},
										{
											"begin": 19676,
											"end": 19696,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 19676,
											"end": 19696,
											"name": "tag",
											"source": 8,
											"value": "655"
										},
										{
											"begin": 19676,
											"end": 19696,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19671,
											"end": 19696,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 19671,
											"end": 19696,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19830,
											"end": 19831,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19762,
											"end": 19828,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19758,
											"end": 19832,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 19755,
											"end": 19756,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19752,
											"end": 19833,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 19749,
											"end": 19856,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 19749,
											"end": 19856,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "656"
										},
										{
											"begin": 19749,
											"end": 19856,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 19836,
											"end": 19854,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "657"
										},
										{
											"begin": 19836,
											"end": 19854,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "473"
										},
										{
											"begin": 19836,
											"end": 19854,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 19836,
											"end": 19854,
											"name": "tag",
											"source": 8,
											"value": "657"
										},
										{
											"begin": 19836,
											"end": 19854,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19749,
											"end": 19856,
											"name": "tag",
											"source": 8,
											"value": "656"
										},
										{
											"begin": 19749,
											"end": 19856,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19880,
											"end": 19881,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19877,
											"end": 19878,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19873,
											"end": 19882,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19866,
											"end": 19882,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19866,
											"end": 19882,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19583,
											"end": 19888,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 19583,
											"end": 19888,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19583,
											"end": 19888,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19583,
											"end": 19888,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19583,
											"end": 19888,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 19894,
											"end": 20242,
											"name": "tag",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 19894,
											"end": 20242,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19934,
											"end": 19941,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19957,
											"end": 19977,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "659"
										},
										{
											"begin": 19975,
											"end": 19976,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19957,
											"end": 19977,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "425"
										},
										{
											"begin": 19957,
											"end": 19977,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 19957,
											"end": 19977,
											"name": "tag",
											"source": 8,
											"value": "659"
										},
										{
											"begin": 19957,
											"end": 19977,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19952,
											"end": 19977,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19952,
											"end": 19977,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19991,
											"end": 20011,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "660"
										},
										{
											"begin": 20009,
											"end": 20010,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 19991,
											"end": 20011,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "425"
										},
										{
											"begin": 19991,
											"end": 20011,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 19991,
											"end": 20011,
											"name": "tag",
											"source": 8,
											"value": "660"
										},
										{
											"begin": 19991,
											"end": 20011,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19986,
											"end": 20011,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 19986,
											"end": 20011,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20179,
											"end": 20180,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20111,
											"end": 20177,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20107,
											"end": 20181,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 20104,
											"end": 20105,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 20101,
											"end": 20182,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 20096,
											"end": 20097,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20089,
											"end": 20098,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 20082,
											"end": 20099,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 20078,
											"end": 20183,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 20075,
											"end": 20206,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 20075,
											"end": 20206,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "661"
										},
										{
											"begin": 20075,
											"end": 20206,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 20186,
											"end": 20204,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "662"
										},
										{
											"begin": 20186,
											"end": 20204,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "473"
										},
										{
											"begin": 20186,
											"end": 20204,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 20186,
											"end": 20204,
											"name": "tag",
											"source": 8,
											"value": "662"
										},
										{
											"begin": 20186,
											"end": 20204,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20075,
											"end": 20206,
											"name": "tag",
											"source": 8,
											"value": "661"
										},
										{
											"begin": 20075,
											"end": 20206,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20234,
											"end": 20235,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20231,
											"end": 20232,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20227,
											"end": 20236,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 20216,
											"end": 20236,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20216,
											"end": 20236,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19894,
											"end": 20242,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 19894,
											"end": 20242,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19894,
											"end": 20242,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19894,
											"end": 20242,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19894,
											"end": 20242,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 20248,
											"end": 20690,
											"name": "tag",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 20248,
											"end": 20690,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20397,
											"end": 20401,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20435,
											"end": 20437,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 20424,
											"end": 20433,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20420,
											"end": 20438,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20412,
											"end": 20438,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20412,
											"end": 20438,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20448,
											"end": 20519,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "664"
										},
										{
											"begin": 20516,
											"end": 20517,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20505,
											"end": 20514,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 20501,
											"end": 20518,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20492,
											"end": 20498,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 20448,
											"end": 20519,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "436"
										},
										{
											"begin": 20448,
											"end": 20519,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 20448,
											"end": 20519,
											"name": "tag",
											"source": 8,
											"value": "664"
										},
										{
											"begin": 20448,
											"end": 20519,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20529,
											"end": 20601,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "665"
										},
										{
											"begin": 20597,
											"end": 20599,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 20586,
											"end": 20595,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 20582,
											"end": 20600,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20573,
											"end": 20579,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 20529,
											"end": 20601,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "436"
										},
										{
											"begin": 20529,
											"end": 20601,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 20529,
											"end": 20601,
											"name": "tag",
											"source": 8,
											"value": "665"
										},
										{
											"begin": 20529,
											"end": 20601,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20611,
											"end": 20683,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "666"
										},
										{
											"begin": 20679,
											"end": 20681,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 20668,
											"end": 20677,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 20664,
											"end": 20682,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20655,
											"end": 20661,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 20611,
											"end": 20683,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "426"
										},
										{
											"begin": 20611,
											"end": 20683,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 20611,
											"end": 20683,
											"name": "tag",
											"source": 8,
											"value": "666"
										},
										{
											"begin": 20611,
											"end": 20683,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20248,
											"end": 20690,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 20248,
											"end": 20690,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 20248,
											"end": 20690,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20248,
											"end": 20690,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20248,
											"end": 20690,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20248,
											"end": 20690,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20248,
											"end": 20690,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 20696,
											"end": 20786,
											"name": "tag",
											"source": 8,
											"value": "474"
										},
										{
											"begin": 20696,
											"end": 20786,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20730,
											"end": 20737,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20773,
											"end": 20778,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20766,
											"end": 20779,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 20759,
											"end": 20780,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 20748,
											"end": 20780,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20748,
											"end": 20780,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20696,
											"end": 20786,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 20696,
											"end": 20786,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20696,
											"end": 20786,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20696,
											"end": 20786,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 20792,
											"end": 20908,
											"name": "tag",
											"source": 8,
											"value": "475"
										},
										{
											"begin": 20792,
											"end": 20908,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20862,
											"end": 20883,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "669"
										},
										{
											"begin": 20877,
											"end": 20882,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20862,
											"end": 20883,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "474"
										},
										{
											"begin": 20862,
											"end": 20883,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 20862,
											"end": 20883,
											"name": "tag",
											"source": 8,
											"value": "669"
										},
										{
											"begin": 20862,
											"end": 20883,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20855,
											"end": 20860,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20852,
											"end": 20884,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 20842,
											"end": 20902,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "670"
										},
										{
											"begin": 20842,
											"end": 20902,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 20898,
											"end": 20899,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20895,
											"end": 20896,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 20888,
											"end": 20900,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 20842,
											"end": 20902,
											"name": "tag",
											"source": 8,
											"value": "670"
										},
										{
											"begin": 20842,
											"end": 20902,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20792,
											"end": 20908,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20792,
											"end": 20908,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 20914,
											"end": 21051,
											"name": "tag",
											"source": 8,
											"value": "476"
										},
										{
											"begin": 20914,
											"end": 21051,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20968,
											"end": 20973,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20999,
											"end": 21005,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20993,
											"end": 21006,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 20984,
											"end": 21006,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20984,
											"end": 21006,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21015,
											"end": 21045,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "672"
										},
										{
											"begin": 21039,
											"end": 21044,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 21015,
											"end": 21045,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "475"
										},
										{
											"begin": 21015,
											"end": 21045,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 21015,
											"end": 21045,
											"name": "tag",
											"source": 8,
											"value": "672"
										},
										{
											"begin": 21015,
											"end": 21045,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20914,
											"end": 21051,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 20914,
											"end": 21051,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 20914,
											"end": 21051,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20914,
											"end": 21051,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20914,
											"end": 21051,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 21057,
											"end": 21402,
											"name": "tag",
											"source": 8,
											"value": "394"
										},
										{
											"begin": 21057,
											"end": 21402,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21124,
											"end": 21130,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21173,
											"end": 21175,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 21161,
											"end": 21170,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21152,
											"end": 21159,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 21148,
											"end": 21171,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 21144,
											"end": 21176,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 21141,
											"end": 21260,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 21141,
											"end": 21260,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "674"
										},
										{
											"begin": 21141,
											"end": 21260,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 21179,
											"end": 21258,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "675"
										},
										{
											"begin": 21179,
											"end": 21258,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "428"
										},
										{
											"begin": 21179,
											"end": 21258,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 21179,
											"end": 21258,
											"name": "tag",
											"source": 8,
											"value": "675"
										},
										{
											"begin": 21179,
											"end": 21258,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21141,
											"end": 21260,
											"name": "tag",
											"source": 8,
											"value": "674"
										},
										{
											"begin": 21141,
											"end": 21260,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21299,
											"end": 21300,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21324,
											"end": 21385,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "676"
										},
										{
											"begin": 21377,
											"end": 21384,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 21368,
											"end": 21374,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21357,
											"end": 21366,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 21353,
											"end": 21375,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21324,
											"end": 21385,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "476"
										},
										{
											"begin": 21324,
											"end": 21385,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 21324,
											"end": 21385,
											"name": "tag",
											"source": 8,
											"value": "676"
										},
										{
											"begin": 21324,
											"end": 21385,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21314,
											"end": 21385,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 21314,
											"end": 21385,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21270,
											"end": 21395,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21057,
											"end": 21402,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 21057,
											"end": 21402,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 21057,
											"end": 21402,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21057,
											"end": 21402,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21057,
											"end": 21402,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 21408,
											"end": 21637,
											"name": "tag",
											"source": 8,
											"value": "477"
										},
										{
											"begin": 21408,
											"end": 21637,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21548,
											"end": 21582,
											"name": "PUSH",
											"source": 8,
											"value": "5361666542455032303A204245503230206F7065726174696F6E20646964206E"
										},
										{
											"begin": 21544,
											"end": 21545,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21536,
											"end": 21542,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21532,
											"end": 21546,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21525,
											"end": 21583,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 21617,
											"end": 21629,
											"name": "PUSH",
											"source": 8,
											"value": "6F74207375636365656400000000000000000000000000000000000000000000"
										},
										{
											"begin": 21612,
											"end": 21614,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 21604,
											"end": 21610,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21600,
											"end": 21615,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21593,
											"end": 21630,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 21408,
											"end": 21637,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21408,
											"end": 21637,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 21643,
											"end": 22009,
											"name": "tag",
											"source": 8,
											"value": "478"
										},
										{
											"begin": 21643,
											"end": 22009,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21785,
											"end": 21788,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21806,
											"end": 21873,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "679"
										},
										{
											"begin": 21870,
											"end": 21872,
											"name": "PUSH",
											"source": 8,
											"value": "2A"
										},
										{
											"begin": 21865,
											"end": 21868,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 21806,
											"end": 21873,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "442"
										},
										{
											"begin": 21806,
											"end": 21873,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 21806,
											"end": 21873,
											"name": "tag",
											"source": 8,
											"value": "679"
										},
										{
											"begin": 21806,
											"end": 21873,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21799,
											"end": 21873,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 21799,
											"end": 21873,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21882,
											"end": 21975,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "680"
										},
										{
											"begin": 21971,
											"end": 21974,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21882,
											"end": 21975,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "477"
										},
										{
											"begin": 21882,
											"end": 21975,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 21882,
											"end": 21975,
											"name": "tag",
											"source": 8,
											"value": "680"
										},
										{
											"begin": 21882,
											"end": 21975,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22000,
											"end": 22002,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 21995,
											"end": 21998,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21991,
											"end": 22003,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21984,
											"end": 22003,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21984,
											"end": 22003,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21643,
											"end": 22009,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 21643,
											"end": 22009,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21643,
											"end": 22009,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21643,
											"end": 22009,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 22015,
											"end": 22434,
											"name": "tag",
											"source": 8,
											"value": "397"
										},
										{
											"begin": 22015,
											"end": 22434,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22181,
											"end": 22185,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 22219,
											"end": 22221,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 22208,
											"end": 22217,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 22204,
											"end": 22222,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 22196,
											"end": 22222,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 22196,
											"end": 22222,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22268,
											"end": 22277,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 22262,
											"end": 22266,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 22258,
											"end": 22278,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 22254,
											"end": 22255,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 22243,
											"end": 22252,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 22239,
											"end": 22256,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 22232,
											"end": 22279,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 22296,
											"end": 22427,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "682"
										},
										{
											"begin": 22422,
											"end": 22426,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 22296,
											"end": 22427,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "478"
										},
										{
											"begin": 22296,
											"end": 22427,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 22296,
											"end": 22427,
											"name": "tag",
											"source": 8,
											"value": "682"
										},
										{
											"begin": 22296,
											"end": 22427,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22288,
											"end": 22427,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 22288,
											"end": 22427,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22015,
											"end": 22434,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 22015,
											"end": 22434,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 22015,
											"end": 22434,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22015,
											"end": 22434,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 22440,
											"end": 22665,
											"name": "tag",
											"source": 8,
											"value": "479"
										},
										{
											"begin": 22440,
											"end": 22665,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22580,
											"end": 22614,
											"name": "PUSH",
											"source": 8,
											"value": "416464726573733A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 22576,
											"end": 22577,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 22568,
											"end": 22574,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 22564,
											"end": 22578,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 22557,
											"end": 22615,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 22649,
											"end": 22657,
											"name": "PUSH",
											"source": 8,
											"value": "722063616C6C0000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22644,
											"end": 22646,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 22636,
											"end": 22642,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 22632,
											"end": 22647,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 22625,
											"end": 22658,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 22440,
											"end": 22665,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22440,
											"end": 22665,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 22671,
											"end": 23037,
											"name": "tag",
											"source": 8,
											"value": "480"
										},
										{
											"begin": 22671,
											"end": 23037,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22813,
											"end": 22816,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 22834,
											"end": 22901,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "685"
										},
										{
											"begin": 22898,
											"end": 22900,
											"name": "PUSH",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 22893,
											"end": 22896,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 22834,
											"end": 22901,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "442"
										},
										{
											"begin": 22834,
											"end": 22901,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 22834,
											"end": 22901,
											"name": "tag",
											"source": 8,
											"value": "685"
										},
										{
											"begin": 22834,
											"end": 22901,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22827,
											"end": 22901,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 22827,
											"end": 22901,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22910,
											"end": 23003,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "686"
										},
										{
											"begin": 22999,
											"end": 23002,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 22910,
											"end": 23003,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "479"
										},
										{
											"begin": 22910,
											"end": 23003,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 22910,
											"end": 23003,
											"name": "tag",
											"source": 8,
											"value": "686"
										},
										{
											"begin": 22910,
											"end": 23003,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23028,
											"end": 23030,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 23023,
											"end": 23026,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 23019,
											"end": 23031,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 23012,
											"end": 23031,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 23012,
											"end": 23031,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22671,
											"end": 23037,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 22671,
											"end": 23037,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 22671,
											"end": 23037,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22671,
											"end": 23037,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 23043,
											"end": 23462,
											"name": "tag",
											"source": 8,
											"value": "404"
										},
										{
											"begin": 23043,
											"end": 23462,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23209,
											"end": 23213,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 23247,
											"end": 23249,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 23236,
											"end": 23245,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 23232,
											"end": 23250,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 23224,
											"end": 23250,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 23224,
											"end": 23250,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23296,
											"end": 23305,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 23290,
											"end": 23294,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 23286,
											"end": 23306,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 23282,
											"end": 23283,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 23271,
											"end": 23280,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 23267,
											"end": 23284,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 23260,
											"end": 23307,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 23324,
											"end": 23455,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "688"
										},
										{
											"begin": 23450,
											"end": 23454,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 23324,
											"end": 23455,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "480"
										},
										{
											"begin": 23324,
											"end": 23455,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 23324,
											"end": 23455,
											"name": "tag",
											"source": 8,
											"value": "688"
										},
										{
											"begin": 23324,
											"end": 23455,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23316,
											"end": 23455,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 23316,
											"end": 23455,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23043,
											"end": 23462,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 23043,
											"end": 23462,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 23043,
											"end": 23462,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23043,
											"end": 23462,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 23468,
											"end": 23647,
											"name": "tag",
											"source": 8,
											"value": "481"
										},
										{
											"begin": 23468,
											"end": 23647,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23608,
											"end": 23639,
											"name": "PUSH",
											"source": 8,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 23604,
											"end": 23605,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 23596,
											"end": 23602,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 23592,
											"end": 23606,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 23585,
											"end": 23640,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 23468,
											"end": 23647,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23468,
											"end": 23647,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 23653,
											"end": 24019,
											"name": "tag",
											"source": 8,
											"value": "482"
										},
										{
											"begin": 23653,
											"end": 24019,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23795,
											"end": 23798,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 23816,
											"end": 23883,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "691"
										},
										{
											"begin": 23880,
											"end": 23882,
											"name": "PUSH",
											"source": 8,
											"value": "1D"
										},
										{
											"begin": 23875,
											"end": 23878,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 23816,
											"end": 23883,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "442"
										},
										{
											"begin": 23816,
											"end": 23883,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 23816,
											"end": 23883,
											"name": "tag",
											"source": 8,
											"value": "691"
										},
										{
											"begin": 23816,
											"end": 23883,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23809,
											"end": 23883,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 23809,
											"end": 23883,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23892,
											"end": 23985,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "692"
										},
										{
											"begin": 23981,
											"end": 23984,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 23892,
											"end": 23985,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "481"
										},
										{
											"begin": 23892,
											"end": 23985,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 23892,
											"end": 23985,
											"name": "tag",
											"source": 8,
											"value": "692"
										},
										{
											"begin": 23892,
											"end": 23985,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24010,
											"end": 24012,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 24005,
											"end": 24008,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 24001,
											"end": 24013,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 23994,
											"end": 24013,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 23994,
											"end": 24013,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23653,
											"end": 24019,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 23653,
											"end": 24019,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 23653,
											"end": 24019,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23653,
											"end": 24019,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 24025,
											"end": 24444,
											"name": "tag",
											"source": 8,
											"value": "409"
										},
										{
											"begin": 24025,
											"end": 24444,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24191,
											"end": 24195,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 24229,
											"end": 24231,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 24218,
											"end": 24227,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 24214,
											"end": 24232,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 24206,
											"end": 24232,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 24206,
											"end": 24232,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24278,
											"end": 24287,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 24272,
											"end": 24276,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 24268,
											"end": 24288,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 24264,
											"end": 24265,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 24253,
											"end": 24262,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 24249,
											"end": 24266,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 24242,
											"end": 24289,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 24306,
											"end": 24437,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "694"
										},
										{
											"begin": 24432,
											"end": 24436,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 24306,
											"end": 24437,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "482"
										},
										{
											"begin": 24306,
											"end": 24437,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 24306,
											"end": 24437,
											"name": "tag",
											"source": 8,
											"value": "694"
										},
										{
											"begin": 24306,
											"end": 24437,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24298,
											"end": 24437,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 24298,
											"end": 24437,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24025,
											"end": 24444,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 24025,
											"end": 24444,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 24025,
											"end": 24444,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24025,
											"end": 24444,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 24450,
											"end": 24548,
											"name": "tag",
											"source": 8,
											"value": "483"
										},
										{
											"begin": 24450,
											"end": 24548,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24501,
											"end": 24507,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 24535,
											"end": 24540,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 24529,
											"end": 24541,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 24519,
											"end": 24541,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 24519,
											"end": 24541,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24450,
											"end": 24548,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 24450,
											"end": 24548,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 24450,
											"end": 24548,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24450,
											"end": 24548,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 24554,
											"end": 24701,
											"name": "tag",
											"source": 8,
											"value": "484"
										},
										{
											"begin": 24554,
											"end": 24701,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24655,
											"end": 24666,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 24692,
											"end": 24695,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 24677,
											"end": 24695,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 24677,
											"end": 24695,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24554,
											"end": 24701,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 24554,
											"end": 24701,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 24554,
											"end": 24701,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24554,
											"end": 24701,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24554,
											"end": 24701,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 24707,
											"end": 25014,
											"name": "tag",
											"source": 8,
											"value": "485"
										},
										{
											"begin": 24707,
											"end": 25014,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24775,
											"end": 24776,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 24785,
											"end": 24898,
											"name": "tag",
											"source": 8,
											"value": "698"
										},
										{
											"begin": 24785,
											"end": 24898,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24799,
											"end": 24805,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 24796,
											"end": 24797,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 24793,
											"end": 24806,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 24785,
											"end": 24898,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 24785,
											"end": 24898,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "700"
										},
										{
											"begin": 24785,
											"end": 24898,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 24884,
											"end": 24885,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 24879,
											"end": 24882,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 24875,
											"end": 24886,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 24869,
											"end": 24887,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 24865,
											"end": 24866,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 24860,
											"end": 24863,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 24856,
											"end": 24867,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 24849,
											"end": 24888,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 24821,
											"end": 24823,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 24818,
											"end": 24819,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 24814,
											"end": 24824,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 24809,
											"end": 24824,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 24809,
											"end": 24824,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24785,
											"end": 24898,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "698"
										},
										{
											"begin": 24785,
											"end": 24898,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 24785,
											"end": 24898,
											"name": "tag",
											"source": 8,
											"value": "700"
										},
										{
											"begin": 24785,
											"end": 24898,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24916,
											"end": 24922,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 24913,
											"end": 24914,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 24910,
											"end": 24923,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 24907,
											"end": 25008,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 24907,
											"end": 25008,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "701"
										},
										{
											"begin": 24907,
											"end": 25008,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 24996,
											"end": 24997,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 24987,
											"end": 24993,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 24982,
											"end": 24985,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 24978,
											"end": 24994,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 24971,
											"end": 24998,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 24907,
											"end": 25008,
											"name": "tag",
											"source": 8,
											"value": "701"
										},
										{
											"begin": 24907,
											"end": 25008,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24756,
											"end": 25014,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24707,
											"end": 25014,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24707,
											"end": 25014,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24707,
											"end": 25014,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24707,
											"end": 25014,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 25020,
											"end": 25393,
											"name": "tag",
											"source": 8,
											"value": "486"
										},
										{
											"begin": 25020,
											"end": 25393,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25124,
											"end": 25127,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 25152,
											"end": 25190,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "703"
										},
										{
											"begin": 25184,
											"end": 25189,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 25152,
											"end": 25190,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "483"
										},
										{
											"begin": 25152,
											"end": 25190,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 25152,
											"end": 25190,
											"name": "tag",
											"source": 8,
											"value": "703"
										},
										{
											"begin": 25152,
											"end": 25190,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25206,
											"end": 25294,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "704"
										},
										{
											"begin": 25287,
											"end": 25293,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 25282,
											"end": 25285,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 25206,
											"end": 25294,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "484"
										},
										{
											"begin": 25206,
											"end": 25294,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 25206,
											"end": 25294,
											"name": "tag",
											"source": 8,
											"value": "704"
										},
										{
											"begin": 25206,
											"end": 25294,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25199,
											"end": 25294,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 25199,
											"end": 25294,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25303,
											"end": 25355,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "705"
										},
										{
											"begin": 25348,
											"end": 25354,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 25343,
											"end": 25346,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 25336,
											"end": 25340,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 25329,
											"end": 25334,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 25325,
											"end": 25341,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 25303,
											"end": 25355,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "485"
										},
										{
											"begin": 25303,
											"end": 25355,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 25303,
											"end": 25355,
											"name": "tag",
											"source": 8,
											"value": "705"
										},
										{
											"begin": 25303,
											"end": 25355,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25380,
											"end": 25386,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 25375,
											"end": 25378,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 25371,
											"end": 25387,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 25364,
											"end": 25387,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 25364,
											"end": 25387,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25128,
											"end": 25393,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25020,
											"end": 25393,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 25020,
											"end": 25393,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 25020,
											"end": 25393,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25020,
											"end": 25393,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25020,
											"end": 25393,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 25399,
											"end": 25670,
											"name": "tag",
											"source": 8,
											"value": "411"
										},
										{
											"begin": 25399,
											"end": 25670,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25529,
											"end": 25532,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 25551,
											"end": 25644,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "707"
										},
										{
											"begin": 25640,
											"end": 25643,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 25631,
											"end": 25637,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 25551,
											"end": 25644,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "486"
										},
										{
											"begin": 25551,
											"end": 25644,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 25551,
											"end": 25644,
											"name": "tag",
											"source": 8,
											"value": "707"
										},
										{
											"begin": 25551,
											"end": 25644,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25544,
											"end": 25644,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 25544,
											"end": 25644,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25661,
											"end": 25664,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 25654,
											"end": 25664,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 25654,
											"end": 25664,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25399,
											"end": 25670,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 25399,
											"end": 25670,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 25399,
											"end": 25670,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25399,
											"end": 25670,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25399,
											"end": 25670,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 25676,
											"end": 25775,
											"name": "tag",
											"source": 8,
											"value": "487"
										},
										{
											"begin": 25676,
											"end": 25775,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25728,
											"end": 25734,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 25762,
											"end": 25767,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 25756,
											"end": 25768,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 25746,
											"end": 25768,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 25746,
											"end": 25768,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25676,
											"end": 25775,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 25676,
											"end": 25775,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 25676,
											"end": 25775,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25676,
											"end": 25775,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 25781,
											"end": 25883,
											"name": "tag",
											"source": 8,
											"value": "488"
										},
										{
											"begin": 25781,
											"end": 25883,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25822,
											"end": 25828,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 25873,
											"end": 25875,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 25869,
											"end": 25876,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 25864,
											"end": 25866,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 25857,
											"end": 25862,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 25853,
											"end": 25867,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 25849,
											"end": 25877,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 25839,
											"end": 25877,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 25839,
											"end": 25877,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25781,
											"end": 25883,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 25781,
											"end": 25883,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 25781,
											"end": 25883,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25781,
											"end": 25883,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 25889,
											"end": 26253,
											"name": "tag",
											"source": 8,
											"value": "489"
										},
										{
											"begin": 25889,
											"end": 26253,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25977,
											"end": 25980,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 26005,
											"end": 26044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "711"
										},
										{
											"begin": 26038,
											"end": 26043,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 26005,
											"end": 26044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "487"
										},
										{
											"begin": 26005,
											"end": 26044,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 26005,
											"end": 26044,
											"name": "tag",
											"source": 8,
											"value": "711"
										},
										{
											"begin": 26005,
											"end": 26044,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26060,
											"end": 26131,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "712"
										},
										{
											"begin": 26124,
											"end": 26130,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 26119,
											"end": 26122,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 26060,
											"end": 26131,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "442"
										},
										{
											"begin": 26060,
											"end": 26131,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 26060,
											"end": 26131,
											"name": "tag",
											"source": 8,
											"value": "712"
										},
										{
											"begin": 26060,
											"end": 26131,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26053,
											"end": 26131,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 26053,
											"end": 26131,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26140,
											"end": 26192,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "713"
										},
										{
											"begin": 26185,
											"end": 26191,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 26180,
											"end": 26183,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 26173,
											"end": 26177,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 26166,
											"end": 26171,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 26162,
											"end": 26178,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 26140,
											"end": 26192,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "485"
										},
										{
											"begin": 26140,
											"end": 26192,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 26140,
											"end": 26192,
											"name": "tag",
											"source": 8,
											"value": "713"
										},
										{
											"begin": 26140,
											"end": 26192,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26217,
											"end": 26246,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "714"
										},
										{
											"begin": 26239,
											"end": 26245,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 26217,
											"end": 26246,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "488"
										},
										{
											"begin": 26217,
											"end": 26246,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 26217,
											"end": 26246,
											"name": "tag",
											"source": 8,
											"value": "714"
										},
										{
											"begin": 26217,
											"end": 26246,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26212,
											"end": 26215,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 26208,
											"end": 26247,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 26201,
											"end": 26247,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 26201,
											"end": 26247,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25981,
											"end": 26253,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25889,
											"end": 26253,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 25889,
											"end": 26253,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 25889,
											"end": 26253,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25889,
											"end": 26253,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25889,
											"end": 26253,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 26259,
											"end": 26572,
											"name": "tag",
											"source": 8,
											"value": "424"
										},
										{
											"begin": 26259,
											"end": 26572,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26372,
											"end": 26376,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 26410,
											"end": 26412,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 26399,
											"end": 26408,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 26395,
											"end": 26413,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 26387,
											"end": 26413,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 26387,
											"end": 26413,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26459,
											"end": 26468,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 26453,
											"end": 26457,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 26449,
											"end": 26469,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 26445,
											"end": 26446,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 26434,
											"end": 26443,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 26430,
											"end": 26447,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 26423,
											"end": 26470,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 26487,
											"end": 26565,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "716"
										},
										{
											"begin": 26560,
											"end": 26564,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 26551,
											"end": 26557,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 26487,
											"end": 26565,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "489"
										},
										{
											"begin": 26487,
											"end": 26565,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 26487,
											"end": 26565,
											"name": "tag",
											"source": 8,
											"value": "716"
										},
										{
											"begin": 26487,
											"end": 26565,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26479,
											"end": 26565,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 26479,
											"end": 26565,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26259,
											"end": 26572,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 26259,
											"end": 26572,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 26259,
											"end": 26572,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26259,
											"end": 26572,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26259,
											"end": 26572,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"getMinimumStakingAmount(uint256)": "909f093e",
							"getNumberofStakers()": "5715ec11",
							"getRewardRate()": "7e1a3786",
							"getStakerMode(address)": "aedf562b",
							"getTotalStaked()": "0917e776",
							"harvest()": "4641257d",
							"isLocked(address)": "4a4fbeec",
							"isStartStaking(address)": "fe600f84",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"rewardAmount(address)": "645a8a56",
							"rewardToHarvest()": "5d2ec65d",
							"setCopperMinAmount(uint256)": "c1704a14",
							"setEventPeriod(uint256)": "692642e7",
							"setGoldMinAmount(uint256)": "ae544943",
							"setLockupTime(uint256)": "4b62b70b",
							"setRewardRate(uint256)": "9e447fc6",
							"setSilverMinAmount(uint256)": "23b61117",
							"setThreeMonthMinAmount(uint256)": "c665d80e",
							"setUnstakingFeeRate(uint256)": "91e07e7a",
							"stake(uint256)": "a694fc3a",
							"stakedAmount(address)": "f9931855",
							"startStaking(uint256,uint256)": "4b77dd9e",
							"token()": "fc0c546a",
							"totalStaked()": "817b1cd2",
							"transferOwnership(address)": "f2fde38b",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardToClaim\",\"type\":\"uint256\"}],\"name\":\"Harvest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lockupDuration\",\"type\":\"uint256\"}],\"name\":\"SetEventPeriod\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardRate\",\"type\":\"uint256\"}],\"name\":\"SetRewardRate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"unstakingFeeRate\",\"type\":\"uint256\"}],\"name\":\"SetUnstakingFeeRate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_mode\",\"type\":\"uint256\"}],\"name\":\"getMinimumStakingAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNumberofStakers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRewardRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getStakerMode\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"harvest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isLocked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isStartStaking\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"rewardAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardToHarvest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_minAmount\",\"type\":\"uint256\"}],\"name\":\"setCopperMinAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"__eventPeriod\",\"type\":\"uint256\"}],\"name\":\"setEventPeriod\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_minAmount\",\"type\":\"uint256\"}],\"name\":\"setGoldMinAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lockupTime\",\"type\":\"uint256\"}],\"name\":\"setLockupTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"__rewardRate\",\"type\":\"uint256\"}],\"name\":\"setRewardRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_minAmount\",\"type\":\"uint256\"}],\"name\":\"setSilverMinAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_minAmount\",\"type\":\"uint256\"}],\"name\":\"setThreeMonthMinAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"__unstakingFeeRate\",\"type\":\"uint256\"}],\"name\":\"setUnstakingFeeRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"stakedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_mode\",\"type\":\"uint256\"}],\"name\":\"startStaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IBEP20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Staking.sol\":\"StakingPlatform\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]},\"contracts/IBEP20.sol\":{\"keccak256\":\"0xe10557d770e08d0867c7d7f45f4ecc3aa71fab37aec10f03deac873774d83958\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29c5d9f242fe719f9c99293f895de2c62b11990dcb76b0c5fe29d4bb20debd36\",\"dweb:/ipfs/QmcxmgSN37RwVYQ6uVyyksA7q9rbs7ZfAGxLg9ZAqetzVc\"]},\"contracts/SafeBEP20.sol\":{\"keccak256\":\"0x6ddb1e1687ec39379d8d51c1dd37f9fc5bdbcf76d13b12bb2ef97218f17af728\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c317daa7645bea9fb8926f04a64e9dda06454035d35dd618fb8865bead0b343\",\"dweb:/ipfs/QmcGbnJ9k7RVUBh5HyHxzV7u52hykYsHKqi7VRWSLvEjrG\"]},\"contracts/Staking.sol\":{\"keccak256\":\"0xd5990b61fc4a2205bbce5f5f52796e8fda05a89445e54e6f3338808d3916866a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c63d217b327b92278259e858fa8cdefb13bb9dce7072a5bacb5a4993eb412cb\",\"dweb:/ipfs/QmaXsScprVeEmSxnEGpzUH4CVQLvJJvUe8eL7RdGY67X2U\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "contracts/Staking.sol:StakingPlatform",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 1160,
								"contract": "contracts/Staking.sol:StakingPlatform",
								"label": "_unstakingFeeRate",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 1162,
								"contract": "contracts/Staking.sol:StakingPlatform",
								"label": "_eventPeriod",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 1164,
								"contract": "contracts/Staking.sol:StakingPlatform",
								"label": "_rewardRate",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 1166,
								"contract": "contracts/Staking.sol:StakingPlatform",
								"label": "_rewardFeeRate",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 1168,
								"contract": "contracts/Staking.sol:StakingPlatform",
								"label": "_lockupPeriod",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 1170,
								"contract": "contracts/Staking.sol:StakingPlatform",
								"label": "_minStakeAmount_m",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 1172,
								"contract": "contracts/Staking.sol:StakingPlatform",
								"label": "_minStakeAmount_g",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 1174,
								"contract": "contracts/Staking.sol:StakingPlatform",
								"label": "_minStakeAmount_s",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 1176,
								"contract": "contracts/Staking.sol:StakingPlatform",
								"label": "_minStakeAmount_c",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 1179,
								"contract": "contracts/Staking.sol:StakingPlatform",
								"label": "_stakers",
								"offset": 0,
								"slot": "10",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 1184,
								"contract": "contracts/Staking.sol:StakingPlatform",
								"label": "_staker",
								"offset": 0,
								"slot": "11",
								"type": "t_mapping(t_address,t_struct(Staker)1158_storage)"
							},
							{
								"astId": 1186,
								"contract": "contracts/Staking.sol:StakingPlatform",
								"label": "totalStaked",
								"offset": 0,
								"slot": "12",
								"type": "t_uint256"
							},
							{
								"astId": 1189,
								"contract": "contracts/Staking.sol:StakingPlatform",
								"label": "token",
								"offset": 0,
								"slot": "13",
								"type": "t_contract(IBEP20)912"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_contract(IBEP20)912": {
								"encoding": "inplace",
								"label": "contract IBEP20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(Staker)1158_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct StakingPlatform.Staker)",
								"numberOfBytes": "32",
								"value": "t_struct(Staker)1158_storage"
							},
							"t_struct(Staker)1158_storage": {
								"encoding": "inplace",
								"label": "struct StakingPlatform.Staker",
								"members": [
									{
										"astId": 1147,
										"contract": "contracts/Staking.sol:StakingPlatform",
										"label": "stakerCurrentReward",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1149,
										"contract": "contracts/Staking.sol:StakingPlatform",
										"label": "stakedAmount",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1151,
										"contract": "contracts/Staking.sol:StakingPlatform",
										"label": "mode",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1153,
										"contract": "contracts/Staking.sol:StakingPlatform",
										"label": "stakeStartTime",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 1155,
										"contract": "contracts/Staking.sol:StakingPlatform",
										"label": "lastUpdatedBlockNumber",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 1157,
										"contract": "contracts/Staking.sol:StakingPlatform",
										"label": "staked",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "192"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							499
						],
						"Ownable": [
							104
						]
					},
					"id": 105,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 105,
							"sourceUnit": 500,
							"src": "112:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 499,
										"src": "668:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "668:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "144:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 104,
							"linearizedBaseContracts": [
								104,
								499
							],
							"name": "Ownable",
							"nameLocation": "657:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "698:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 104,
									"src": "682:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "682:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "717:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "754:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "738:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "785:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "769:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "769:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:57:0"
									},
									"src": "711:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "911:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 489,
																"src": "940:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "940:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "921:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "921:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "921:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "801:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "908:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "911:0:0"
									},
									"scope": 104,
									"src": "897:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 31,
										"nodeType": "Block",
										"src": "1091:30:0",
										"statements": [
											{
												"expression": {
													"id": 29,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1108:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 28,
												"id": 30,
												"nodeType": "Return",
												"src": "1101:13:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "966:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 32,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1045:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1050:2:0"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "1082:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1082:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1081:9:0"
									},
									"scope": 104,
									"src": "1036:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 45,
										"nodeType": "Block",
										"src": "1230:96:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 36,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 32,
																	"src": "1248:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 37,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1248:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 38,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 489,
																	"src": "1259:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 39,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1259:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1248:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1273:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 35,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1240:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1240:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "1240:68:0"
											},
											{
												"id": 44,
												"nodeType": "PlaceholderStatement",
												"src": "1318:1:0"
											}
										]
									},
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "1127:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 46,
									"name": "onlyOwner",
									"nameLocation": "1218:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1227:2:0"
									},
									"src": "1209:117:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "1722:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 55,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1759:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1751:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 53,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1751:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1751:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 52,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "1732:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1732:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 58,
												"nodeType": "ExpressionStatement",
												"src": "1732:30:0"
											}
										]
									},
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "1332:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 50,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 49,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1712:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1712:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1677:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1694:2:0"
									},
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1722:0:0"
									},
									"scope": 104,
									"src": "1668:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 82,
										"nodeType": "Block",
										"src": "1988:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 69,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 63,
																"src": "2006:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 72,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2026:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 71,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2018:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 70,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2018:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2018:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2006:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 75,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2030:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 68,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1998:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1998:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 77,
												"nodeType": "ExpressionStatement",
												"src": "1998:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 79,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 63,
															"src": "2100:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 78,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "2081:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2081:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 81,
												"nodeType": "ExpressionStatement",
												"src": "2081:28:0"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "1775:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 83,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 66,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 65,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1978:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1978:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1927:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1953:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "1945:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1945:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1944:18:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1988:0:0"
									},
									"scope": 104,
									"src": "1918:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 102,
										"nodeType": "Block",
										"src": "2333:124:0",
										"statements": [
											{
												"assignments": [
													90
												],
												"declarations": [
													{
														"constant": false,
														"id": 90,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2351:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 102,
														"src": "2343:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 89,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2343:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 92,
												"initialValue": {
													"id": 91,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2362:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2343:25:0"
											},
											{
												"expression": {
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 93,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2378:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 94,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "2387:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2378:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2378:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 98,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 90,
															"src": "2431:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 99,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 86,
															"src": "2441:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 97,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2410:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2410:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 101,
												"nodeType": "EmitStatement",
												"src": "2405:45:0"
											}
										]
									},
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "2122:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2279:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2306:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "2298:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2298:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2297:18:0"
									},
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2333:0:0"
									},
									"scope": 104,
									"src": "2270:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 105,
							"src": "639:1820:0",
							"usedErrors": []
						}
					],
					"src": "87:2373:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							182
						]
					},
					"id": 183,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 106,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 107,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 182,
							"linearizedBaseContracts": [
								182
							],
							"name": "IERC20",
							"nameLocation": "212:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 108,
										"nodeType": "StructuredDocumentation",
										"src": "225:66:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 113,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "305:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "316:2:1"
									},
									"returnParameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "342:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "342:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "341:9:1"
									},
									"scope": 182,
									"src": "296:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 114,
										"nodeType": "StructuredDocumentation",
										"src": "357:72:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 121,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "443:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "461:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "453:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "453:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "452:17:1"
									},
									"returnParameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "493:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 118,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "493:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "492:9:1"
									},
									"scope": 182,
									"src": "434:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 122,
										"nodeType": "StructuredDocumentation",
										"src": "508:202:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 131,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "724:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 124,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "741:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "733:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 123,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "733:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "753:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "745:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 125,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "745:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "732:28:1"
									},
									"returnParameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "779:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 128,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "779:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "778:6:1"
									},
									"scope": 182,
									"src": "715:70:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "791:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 141,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1069:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1087:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "1079:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1079:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1102:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "1094:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 135,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1078:32:1"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "1134:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1134:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1133:9:1"
									},
									"scope": 182,
									"src": "1060:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 142,
										"nodeType": "StructuredDocumentation",
										"src": "1149:642:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 151,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1805:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1821:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 151,
												"src": "1813:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1813:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1838:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 151,
												"src": "1830:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 145,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1830:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1812:33:1"
									},
									"returnParameters": {
										"id": 150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 151,
												"src": "1864:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 148,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1864:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1863:6:1"
									},
									"scope": 182,
									"src": "1796:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 152,
										"nodeType": "StructuredDocumentation",
										"src": "1876:287:1",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 163,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2177:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2207:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "2199:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 153,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2199:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2229:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "2221:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 155,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2221:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2249:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "2241:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2241:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2189:72:1"
									},
									"returnParameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "2280:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 160,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2280:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2279:6:1"
									},
									"scope": 182,
									"src": "2168:118:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 164,
										"nodeType": "StructuredDocumentation",
										"src": "2292:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 172,
									"name": "Transfer",
									"nameLocation": "2461:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2486:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "2470:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 165,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2470:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 168,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2508:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "2492:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 167,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2492:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 170,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2520:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "2512:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2512:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2469:57:1"
									},
									"src": "2455:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 173,
										"nodeType": "StructuredDocumentation",
										"src": "2533:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 181,
									"name": "Approval",
									"nameLocation": "2692:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2717:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "2701:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 177,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2740:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "2724:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2724:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 179,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2757:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "2749:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2749:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2700:63:1"
									},
									"src": "2686:78:1"
								}
							],
							"scope": 183,
							"src": "202:2564:1",
							"usedErrors": []
						}
					],
					"src": "106:2661:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							477
						]
					},
					"id": 478,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 184,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 185,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:2",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 477,
							"linearizedBaseContracts": [
								477
							],
							"name": "Address",
							"nameLocation": "202:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 199,
										"nodeType": "Block",
										"src": "1241:254:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 193,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 188,
																"src": "1465:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 194,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1465:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 195,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1465:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 196,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1487:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1465:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 192,
												"id": 198,
												"nodeType": "Return",
												"src": "1458:30:2"
											}
										]
									},
									"documentation": {
										"id": 186,
										"nodeType": "StructuredDocumentation",
										"src": "216:954:2",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 200,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1184:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1203:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "1195:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:17:2"
									},
									"returnParameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "1235:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 190,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1235:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1234:6:2"
									},
									"scope": 477,
									"src": "1175:320:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 233,
										"nodeType": "Block",
										"src": "2483:241:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 215,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 211,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2509:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$477",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$477",
																				"typeString": "library Address"
																			}
																		],
																		"id": 210,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2501:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 209,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2501:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 212,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2501:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 213,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2501:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 214,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 205,
																"src": "2526:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2501:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 216,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2534:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 208,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2493:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:73:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 218,
												"nodeType": "ExpressionStatement",
												"src": "2493:73:2"
											},
											{
												"assignments": [
													220,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 220,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2583:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 233,
														"src": "2578:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 219,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2578:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 227,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 225,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 221,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 203,
																"src": "2596:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2596:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 224,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 223,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 205,
																"src": "2618:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2596:29:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2596:33:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2577:52:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 229,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 220,
															"src": "2647:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 230,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2656:60:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 228,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2639:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2639:78:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 232,
												"nodeType": "ExpressionStatement",
												"src": "2639:78:2"
											}
										]
									},
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "1501:906:2",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 234,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2421:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2447:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "2431:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2431:15:2",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2466:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "2458:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2458:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:43:2"
									},
									"returnParameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2483:0:2"
									},
									"scope": 477,
									"src": "2412:312:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 250,
										"nodeType": "Block",
										"src": "3555:84:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 245,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "3585:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 246,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 239,
															"src": "3593:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 247,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3599:32:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 244,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															251,
															271
														],
														"referencedDeclaration": 271,
														"src": "3572:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3572:60:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 243,
												"id": 249,
												"nodeType": "Return",
												"src": "3565:67:2"
											}
										]
									},
									"documentation": {
										"id": 235,
										"nodeType": "StructuredDocumentation",
										"src": "2730:731:2",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 251,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3475:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3496:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "3488:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 236,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3488:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3517:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "3504:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 238,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3504:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3487:35:2"
									},
									"returnParameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "3541:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 241,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3541:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3540:14:2"
									},
									"scope": 477,
									"src": "3466:173:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 270,
										"nodeType": "Block",
										"src": "4008:76:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 264,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 254,
															"src": "4047:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 265,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 256,
															"src": "4055:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 266,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4061:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 267,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 258,
															"src": "4064:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 263,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															291,
															341
														],
														"referencedDeclaration": 341,
														"src": "4025:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4025:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 262,
												"id": 269,
												"nodeType": "Return",
												"src": "4018:59:2"
											}
										]
									},
									"documentation": {
										"id": 252,
										"nodeType": "StructuredDocumentation",
										"src": "3645:211:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 271,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3870:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3900:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "3892:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3892:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3929:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "3916:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 255,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3916:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3957:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "3943:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 257,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3943:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3882:93:2"
									},
									"returnParameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "3994:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 260,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3994:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3993:14:2"
									},
									"scope": 477,
									"src": "3861:223:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 290,
										"nodeType": "Block",
										"src": "4589:111:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 284,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "4628:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 285,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "4636:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 286,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 278,
															"src": "4642:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 287,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4649:43:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 283,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															291,
															341
														],
														"referencedDeclaration": 341,
														"src": "4606:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4606:87:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 282,
												"id": 289,
												"nodeType": "Return",
												"src": "4599:94:2"
											}
										]
									},
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "4090:351:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 291,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4455:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4494:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "4486:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4486:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4523:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "4510:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 275,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4510:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4545:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "4537:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4537:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4476:80:2"
									},
									"returnParameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "4575:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 280,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4575:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4574:14:2"
									},
									"scope": 477,
									"src": "4446:254:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 340,
										"nodeType": "Block",
										"src": "5127:320:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 308,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5153:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$477",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$477",
																				"typeString": "library Address"
																			}
																		],
																		"id": 307,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5145:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 306,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5145:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 309,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5145:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 310,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5145:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 311,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 298,
																"src": "5170:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5145:30:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 313,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5177:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 305,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5137:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5137:81:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 315,
												"nodeType": "ExpressionStatement",
												"src": "5137:81:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 318,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 294,
																	"src": "5247:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 317,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 200,
																"src": "5236:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 319,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5236:18:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 320,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5256:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 316,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5228:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5228:60:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 322,
												"nodeType": "ExpressionStatement",
												"src": "5228:60:2"
											},
											{
												"assignments": [
													324,
													326
												],
												"declarations": [
													{
														"constant": false,
														"id": 324,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5305:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 340,
														"src": "5300:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 323,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5300:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 326,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5327:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 340,
														"src": "5314:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 325,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5314:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 333,
												"initialValue": {
													"arguments": [
														{
															"id": 331,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 296,
															"src": "5367:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 327,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 294,
																"src": "5341:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 328,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5341:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 330,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 329,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 298,
																"src": "5360:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5341:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5341:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5299:73:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 335,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 324,
															"src": "5406:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 336,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 326,
															"src": "5415:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 337,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 300,
															"src": "5427:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 334,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 476,
														"src": "5389:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5389:51:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 304,
												"id": 339,
												"nodeType": "Return",
												"src": "5382:58:2"
											}
										]
									},
									"documentation": {
										"id": 292,
										"nodeType": "StructuredDocumentation",
										"src": "4706:237:2",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 341,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4957:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4996:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "4988:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4988:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5025:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "5012:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 295,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5012:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 298,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5047:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "5039:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 297,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5039:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5076:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "5062:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 299,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5062:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4978:116:2"
									},
									"returnParameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "5113:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 302,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5113:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5112:14:2"
									},
									"scope": 477,
									"src": "4948:499:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 357,
										"nodeType": "Block",
										"src": "5724:97:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 352,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 344,
															"src": "5760:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 353,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 346,
															"src": "5768:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 354,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5774:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 351,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															358,
															393
														],
														"referencedDeclaration": 393,
														"src": "5741:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5741:73:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 350,
												"id": 356,
												"nodeType": "Return",
												"src": "5734:80:2"
											}
										]
									},
									"documentation": {
										"id": 342,
										"nodeType": "StructuredDocumentation",
										"src": "5453:166:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 358,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5633:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5660:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "5652:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5652:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5681:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "5668:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 345,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5668:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5651:35:2"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "5710:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 348,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5710:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5709:14:2"
									},
									"scope": 477,
									"src": "5624:197:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 392,
										"nodeType": "Block",
										"src": "6163:228:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 372,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 361,
																	"src": "6192:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 371,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 200,
																"src": "6181:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 373,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6181:18:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 374,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6201:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 370,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6173:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6173:67:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 376,
												"nodeType": "ExpressionStatement",
												"src": "6173:67:2"
											},
											{
												"assignments": [
													378,
													380
												],
												"declarations": [
													{
														"constant": false,
														"id": 378,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6257:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 392,
														"src": "6252:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 377,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6252:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 380,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6279:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 392,
														"src": "6266:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 379,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6266:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 385,
												"initialValue": {
													"arguments": [
														{
															"id": 383,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 363,
															"src": "6311:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 381,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 361,
															"src": "6293:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 382,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6293:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6293:23:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6251:65:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 387,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 378,
															"src": "6350:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 388,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 380,
															"src": "6359:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 389,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 365,
															"src": "6371:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 386,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 476,
														"src": "6333:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6333:51:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 369,
												"id": 391,
												"nodeType": "Return",
												"src": "6326:58:2"
											}
										]
									},
									"documentation": {
										"id": 359,
										"nodeType": "StructuredDocumentation",
										"src": "5827:173:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 393,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6014:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6050:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "6042:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 360,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6042:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6079:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "6066:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 362,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6066:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6107:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "6093:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 364,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6093:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6032:93:2"
									},
									"returnParameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "6149:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 367,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6149:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6148:14:2"
									},
									"scope": 477,
									"src": "6005:386:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 409,
										"nodeType": "Block",
										"src": "6667:101:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 404,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "6705:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 405,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 398,
															"src": "6713:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 406,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6719:41:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 403,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															410,
															445
														],
														"referencedDeclaration": 445,
														"src": "6684:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6684:77:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 402,
												"id": 408,
												"nodeType": "Return",
												"src": "6677:84:2"
											}
										]
									},
									"documentation": {
										"id": 394,
										"nodeType": "StructuredDocumentation",
										"src": "6397:168:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 410,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6579:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6608:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "6600:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 395,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6600:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "6616:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 397,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6599:35:2"
									},
									"returnParameters": {
										"id": 402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "6653:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 400,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6653:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6652:14:2"
									},
									"scope": 477,
									"src": "6570:198:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 444,
										"nodeType": "Block",
										"src": "7109:232:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 424,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 413,
																	"src": "7138:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 423,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 200,
																"src": "7127:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 425,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7127:18:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 426,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7147:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 422,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7119:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7119:69:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 428,
												"nodeType": "ExpressionStatement",
												"src": "7119:69:2"
											},
											{
												"assignments": [
													430,
													432
												],
												"declarations": [
													{
														"constant": false,
														"id": 430,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7205:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 444,
														"src": "7200:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 429,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7200:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 432,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7227:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 444,
														"src": "7214:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 431,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7214:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 437,
												"initialValue": {
													"arguments": [
														{
															"id": 435,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 415,
															"src": "7261:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 433,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 413,
															"src": "7241:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7241:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7241:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7199:67:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 439,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 430,
															"src": "7300:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 440,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 432,
															"src": "7309:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 441,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "7321:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 438,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 476,
														"src": "7283:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7283:51:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 421,
												"id": 443,
												"nodeType": "Return",
												"src": "7276:58:2"
											}
										]
									},
									"documentation": {
										"id": 411,
										"nodeType": "StructuredDocumentation",
										"src": "6774:175:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 445,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6963:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7001:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "6993:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 412,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6993:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7030:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "7017:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 414,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7017:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7058:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "7044:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 416,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7044:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6983:93:2"
									},
									"returnParameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "7095:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 419,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7095:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7094:14:2"
									},
									"scope": 477,
									"src": "6954:387:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 475,
										"nodeType": "Block",
										"src": "7721:532:2",
										"statements": [
											{
												"condition": {
													"id": 457,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 448,
													"src": "7735:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 473,
													"nodeType": "Block",
													"src": "7792:455:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 464,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 461,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 450,
																		"src": "7876:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 462,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7876:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 463,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7896:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7876:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 471,
																"nodeType": "Block",
																"src": "8184:53:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 468,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 452,
																					"src": "8209:12:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 467,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "8202:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 469,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8202:20:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 470,
																		"nodeType": "ExpressionStatement",
																		"src": "8202:20:2"
																	}
																]
															},
															"id": 472,
															"nodeType": "IfStatement",
															"src": "7872:365:2",
															"trueBody": {
																"id": 466,
																"nodeType": "Block",
																"src": "7899:279:2",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "8019:145:2",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "8041:40:2",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "8070:10:2"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "8064:5:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8064:17:2"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "8045:15:2",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8113:2:2",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "8117:10:2"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8109:3:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8109:19:2"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "8130:15:2"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "8102:6:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8102:44:2"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "8102:44:2"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 450,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8070:10:2",
																				"valueSize": 1
																			},
																			{
																				"declaration": 450,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8117:10:2",
																				"valueSize": 1
																			}
																		],
																		"id": 465,
																		"nodeType": "InlineAssembly",
																		"src": "8010:154:2"
																	}
																]
															}
														}
													]
												},
												"id": 474,
												"nodeType": "IfStatement",
												"src": "7731:516:2",
												"trueBody": {
													"id": 460,
													"nodeType": "Block",
													"src": "7744:42:2",
													"statements": [
														{
															"expression": {
																"id": 458,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 450,
																"src": "7765:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 456,
															"id": 459,
															"nodeType": "Return",
															"src": "7758:17:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 446,
										"nodeType": "StructuredDocumentation",
										"src": "7347:209:2",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 476,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7570:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7601:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "7596:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 447,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7596:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7631:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "7618:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 449,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7618:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7665:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "7651:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 451,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7651:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7586:97:2"
									},
									"returnParameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "7707:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 454,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7707:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7706:14:2"
									},
									"scope": 477,
									"src": "7561:692:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 478,
							"src": "194:8061:2",
							"usedErrors": []
						}
					],
					"src": "101:8155:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							499
						]
					},
					"id": 500,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 479,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 480,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 499,
							"linearizedBaseContracts": [
								499
							],
							"name": "Context",
							"nameLocation": "626:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 488,
										"nodeType": "Block",
										"src": "702:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 485,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 484,
												"id": 487,
												"nodeType": "Return",
												"src": "712:17:3"
											}
										]
									},
									"id": 489,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:3"
									},
									"returnParameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "693:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:3"
									},
									"scope": 499,
									"src": "640:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 497,
										"nodeType": "Block",
										"src": "809:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 494,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 493,
												"id": 496,
												"nodeType": "Return",
												"src": "819:15:3"
											}
										]
									},
									"id": 498,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:3"
									},
									"returnParameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "793:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 491,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:3"
									},
									"scope": 499,
									"src": "742:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 500,
							"src": "608:235:3",
							"usedErrors": []
						}
					],
					"src": "86:758:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							811
						]
					},
					"id": 812,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 501,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "92:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 502,
								"nodeType": "StructuredDocumentation",
								"src": "270:196:4",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 811,
							"linearizedBaseContracts": [
								811
							],
							"name": "SafeMath",
							"nameLocation": "475:8:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 533,
										"nodeType": "Block",
										"src": "702:140:4",
										"statements": [
											{
												"id": 532,
												"nodeType": "UncheckedBlock",
												"src": "712:124:4",
												"statements": [
													{
														"assignments": [
															515
														],
														"declarations": [
															{
																"constant": false,
																"id": 515,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "744:1:4",
																"nodeType": "VariableDeclaration",
																"scope": 532,
																"src": "736:9:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 514,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "736:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 519,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 518,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 516,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 505,
																"src": "748:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 517,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 507,
																"src": "752:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "748:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "736:17:4"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 522,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 520,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 515,
																"src": "771:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 521,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 505,
																"src": "775:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "771:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 527,
														"nodeType": "IfStatement",
														"src": "767:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 523,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "786:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 524,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "793:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 525,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "785:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 513,
															"id": 526,
															"nodeType": "Return",
															"src": "778:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 528,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "817:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 529,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 515,
																	"src": "823:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 530,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "816:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 513,
														"id": 531,
														"nodeType": "Return",
														"src": "809:16:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 503,
										"nodeType": "StructuredDocumentation",
										"src": "490:131:4",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 534,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "635:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "650:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "642:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 504,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "642:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "661:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "653:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 506,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "653:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "641:22:4"
									},
									"returnParameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "687:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 509,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "687:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "693:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 511,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "686:15:4"
									},
									"scope": 811,
									"src": "626:216:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 561,
										"nodeType": "Block",
										"src": "1064:113:4",
										"statements": [
											{
												"id": 560,
												"nodeType": "UncheckedBlock",
												"src": "1074:97:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 548,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 546,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 539,
																"src": "1102:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 547,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 537,
																"src": "1106:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1102:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 553,
														"nodeType": "IfStatement",
														"src": "1098:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 549,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1117:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 550,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1124:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 551,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1116:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 545,
															"id": 552,
															"nodeType": "Return",
															"src": "1109:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 554,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1148:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 557,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 555,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 537,
																		"src": "1154:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 556,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 539,
																		"src": "1158:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1154:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 558,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1147:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 545,
														"id": 559,
														"nodeType": "Return",
														"src": "1140:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 535,
										"nodeType": "StructuredDocumentation",
										"src": "848:135:4",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 562,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "997:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1012:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "1004:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 536,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1004:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1023:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "1015:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 538,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1015:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1003:22:4"
									},
									"returnParameters": {
										"id": 545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "1049:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 541,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1049:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "1055:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 543,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1055:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1048:15:4"
									},
									"scope": 811,
									"src": "988:189:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 603,
										"nodeType": "Block",
										"src": "1401:417:4",
										"statements": [
											{
												"id": 602,
												"nodeType": "UncheckedBlock",
												"src": "1411:401:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 576,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 574,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 565,
																"src": "1669:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 575,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1674:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1669:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 581,
														"nodeType": "IfStatement",
														"src": "1665:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 577,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1685:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 578,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1691:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 579,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1684:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 573,
															"id": 580,
															"nodeType": "Return",
															"src": "1677:16:4"
														}
													},
													{
														"assignments": [
															583
														],
														"declarations": [
															{
																"constant": false,
																"id": 583,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1715:1:4",
																"nodeType": "VariableDeclaration",
																"scope": 602,
																"src": "1707:9:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 582,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1707:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 587,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 586,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 584,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 565,
																"src": "1719:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 585,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 567,
																"src": "1723:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1719:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1707:17:4"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 592,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 590,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 588,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 583,
																	"src": "1742:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 589,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 565,
																	"src": "1746:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1742:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 591,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 567,
																"src": "1751:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1742:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 597,
														"nodeType": "IfStatement",
														"src": "1738:33:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 593,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1762:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1769:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 595,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1761:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 573,
															"id": 596,
															"nodeType": "Return",
															"src": "1754:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 598,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1793:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 599,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 583,
																	"src": "1799:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 600,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1792:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 573,
														"id": 601,
														"nodeType": "Return",
														"src": "1785:16:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 563,
										"nodeType": "StructuredDocumentation",
										"src": "1183:137:4",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 604,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1334:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1349:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "1341:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 564,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1341:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1360:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "1352:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 566,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1352:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1340:22:4"
									},
									"returnParameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "1386:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 569,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1386:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "1392:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 571,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1392:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1385:15:4"
									},
									"scope": 811,
									"src": "1325:493:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 631,
										"nodeType": "Block",
										"src": "2043:114:4",
										"statements": [
											{
												"id": 630,
												"nodeType": "UncheckedBlock",
												"src": "2053:98:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 618,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 616,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 609,
																"src": "2081:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2086:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2081:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 623,
														"nodeType": "IfStatement",
														"src": "2077:29:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 619,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2097:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 620,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2104:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 621,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2096:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 615,
															"id": 622,
															"nodeType": "Return",
															"src": "2089:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 624,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2128:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 627,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 625,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 607,
																		"src": "2134:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 626,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 609,
																		"src": "2138:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2134:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 628,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2127:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 615,
														"id": 629,
														"nodeType": "Return",
														"src": "2120:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 605,
										"nodeType": "StructuredDocumentation",
										"src": "1824:138:4",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 632,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1976:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1991:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "1983:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 606,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1983:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2002:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "1994:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1982:22:4"
									},
									"returnParameters": {
										"id": 615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "2028:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 611,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2028:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "2034:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 613,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2034:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:4"
									},
									"scope": 811,
									"src": "1967:190:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 659,
										"nodeType": "Block",
										"src": "2392:114:4",
										"statements": [
											{
												"id": 658,
												"nodeType": "UncheckedBlock",
												"src": "2402:98:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 646,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 644,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 637,
																"src": "2430:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 645,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2435:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2430:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 651,
														"nodeType": "IfStatement",
														"src": "2426:29:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 647,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2446:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 648,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2453:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 649,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2445:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 643,
															"id": 650,
															"nodeType": "Return",
															"src": "2438:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 652,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2477:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 655,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 653,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 635,
																		"src": "2483:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 654,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 637,
																		"src": "2487:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2483:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 656,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2476:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 643,
														"id": 657,
														"nodeType": "Return",
														"src": "2469:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 633,
										"nodeType": "StructuredDocumentation",
										"src": "2163:148:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 660,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2325:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2340:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "2332:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 634,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2332:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 637,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2351:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "2343:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 636,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2331:22:4"
									},
									"returnParameters": {
										"id": 643,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "2377:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 639,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "2383:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 641,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2383:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:15:4"
									},
									"scope": 811,
									"src": "2316:190:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 674,
										"nodeType": "Block",
										"src": "2808:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 672,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 670,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "2825:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 671,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 665,
														"src": "2829:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2825:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 669,
												"id": 673,
												"nodeType": "Return",
												"src": "2818:12:4"
											}
										]
									},
									"documentation": {
										"id": 661,
										"nodeType": "StructuredDocumentation",
										"src": "2512:224:4",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 675,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2750:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2762:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "2754:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 662,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2754:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2773:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "2765:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 664,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2765:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2753:22:4"
									},
									"returnParameters": {
										"id": 669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 668,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "2799:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 667,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2799:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2798:9:4"
									},
									"scope": 811,
									"src": "2741:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "3175:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 685,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 678,
														"src": "3192:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 686,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 680,
														"src": "3196:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3192:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 684,
												"id": 688,
												"nodeType": "Return",
												"src": "3185:12:4"
											}
										]
									},
									"documentation": {
										"id": 676,
										"nodeType": "StructuredDocumentation",
										"src": "2843:260:4",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3117:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 678,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3129:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "3121:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 677,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3121:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3140:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "3132:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 679,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3132:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3120:22:4"
									},
									"returnParameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "3166:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 682,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3166:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3165:9:4"
									},
									"scope": 811,
									"src": "3108:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 704,
										"nodeType": "Block",
										"src": "3518:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 700,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "3535:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 701,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "3539:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3535:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 699,
												"id": 703,
												"nodeType": "Return",
												"src": "3528:12:4"
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "3210:236:4",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 705,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3460:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3472:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "3464:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 692,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3464:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3483:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "3475:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 694,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3475:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3463:22:4"
									},
									"returnParameters": {
										"id": 699,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 698,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "3509:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 697,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3509:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3508:9:4"
									},
									"scope": 811,
									"src": "3451:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 719,
										"nodeType": "Block",
										"src": "3903:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 715,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 708,
														"src": "3920:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 716,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 710,
														"src": "3924:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3920:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 714,
												"id": 718,
												"nodeType": "Return",
												"src": "3913:12:4"
											}
										]
									},
									"documentation": {
										"id": 706,
										"nodeType": "StructuredDocumentation",
										"src": "3553:278:4",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 720,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3845:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 708,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3857:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "3849:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 707,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3849:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3868:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "3860:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 709,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3860:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3848:22:4"
									},
									"returnParameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "3894:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 712,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3894:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3893:9:4"
									},
									"scope": 811,
									"src": "3836:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 734,
										"nodeType": "Block",
										"src": "4452:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 732,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 730,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 723,
														"src": "4469:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 731,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 725,
														"src": "4473:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4469:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 729,
												"id": 733,
												"nodeType": "Return",
												"src": "4462:12:4"
											}
										]
									},
									"documentation": {
										"id": 721,
										"nodeType": "StructuredDocumentation",
										"src": "3938:442:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 735,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4394:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 726,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4406:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "4398:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4398:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4417:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "4409:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 724,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4409:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4397:22:4"
									},
									"returnParameters": {
										"id": 729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "4443:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 727,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4443:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4442:9:4"
									},
									"scope": 811,
									"src": "4385:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 759,
										"nodeType": "Block",
										"src": "5070:106:4",
										"statements": [
											{
												"id": 758,
												"nodeType": "UncheckedBlock",
												"src": "5080:90:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 750,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 748,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 740,
																		"src": "5112:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 749,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 738,
																		"src": "5117:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5112:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 751,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 742,
																	"src": "5120:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 747,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5104:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 752,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5104:29:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 753,
														"nodeType": "ExpressionStatement",
														"src": "5104:29:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 756,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 754,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 738,
																"src": "5154:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 755,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 740,
																"src": "5158:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5154:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 746,
														"id": 757,
														"nodeType": "Return",
														"src": "5147:12:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 736,
										"nodeType": "StructuredDocumentation",
										"src": "4487:453:4",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 760,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4954:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 743,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 738,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4975:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "4967:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 737,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4967:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4994:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "4986:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 739,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4986:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5019:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "5005:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 741,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5005:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4957:80:4"
									},
									"returnParameters": {
										"id": 746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 745,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "5061:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 744,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:9:4"
									},
									"scope": 811,
									"src": "4945:231:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 784,
										"nodeType": "Block",
										"src": "5785:105:4",
										"statements": [
											{
												"id": 783,
												"nodeType": "UncheckedBlock",
												"src": "5795:89:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 775,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 773,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 765,
																		"src": "5827:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 774,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5831:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5827:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 776,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 767,
																	"src": "5834:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 772,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5819:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 777,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5819:28:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 778,
														"nodeType": "ExpressionStatement",
														"src": "5819:28:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 781,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 779,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 763,
																"src": "5868:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 780,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 765,
																"src": "5872:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5868:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 771,
														"id": 782,
														"nodeType": "Return",
														"src": "5861:12:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 761,
										"nodeType": "StructuredDocumentation",
										"src": "5182:473:4",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 785,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5669:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5690:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "5682:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 762,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5682:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5709:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "5701:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 764,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5734:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "5720:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 766,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5720:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5672:80:4"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "5776:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 769,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5776:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5775:9:4"
									},
									"scope": 811,
									"src": "5660:230:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 809,
										"nodeType": "Block",
										"src": "6661:105:4",
										"statements": [
											{
												"id": 808,
												"nodeType": "UncheckedBlock",
												"src": "6671:89:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 800,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 798,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 790,
																		"src": "6703:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 799,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6707:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6703:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 801,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 792,
																	"src": "6710:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 797,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6695:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 802,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6695:28:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 803,
														"nodeType": "ExpressionStatement",
														"src": "6695:28:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 806,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 804,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 788,
																"src": "6744:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 805,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 790,
																"src": "6748:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6744:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 796,
														"id": 807,
														"nodeType": "Return",
														"src": "6737:12:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 786,
										"nodeType": "StructuredDocumentation",
										"src": "5896:635:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 810,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6545:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 788,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6566:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "6558:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 787,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6558:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 790,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6585:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "6577:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 789,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6577:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 792,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6610:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "6596:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 791,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6596:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6548:80:4"
									},
									"returnParameters": {
										"id": 796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "6652:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 794,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6652:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6651:9:4"
									},
									"scope": 811,
									"src": "6536:230:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 812,
							"src": "467:6301:4",
							"usedErrors": []
						}
					],
					"src": "92:6677:4"
				},
				"id": 4
			},
			"contracts/IBEP20.sol": {
				"ast": {
					"absolutePath": "contracts/IBEP20.sol",
					"exportedSymbols": {
						"IBEP20": [
							912
						]
					},
					"id": 913,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 813,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IBEP20",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 912,
							"linearizedBaseContracts": [
								912
							],
							"name": "IBEP20",
							"nameLocation": "72:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 814,
										"nodeType": "StructuredDocumentation",
										"src": "86:68:5",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 819,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "169:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 815,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "180:2:5"
									},
									"returnParameters": {
										"id": 818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 817,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "206:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 816,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "206:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "205:9:5"
									},
									"scope": 912,
									"src": "160:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 820,
										"nodeType": "StructuredDocumentation",
										"src": "223:53:5",
										"text": " @dev Returns the token decimals."
									},
									"functionSelector": "313ce567",
									"id": 825,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "291:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 821,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "299:2:5"
									},
									"returnParameters": {
										"id": 824,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 823,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 825,
												"src": "325:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 822,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "325:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:7:5"
									},
									"scope": 912,
									"src": "282:50:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 826,
										"nodeType": "StructuredDocumentation",
										"src": "340:51:5",
										"text": " @dev Returns the token symbol."
									},
									"functionSelector": "95d89b41",
									"id": 831,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "406:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 827,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "412:2:5"
									},
									"returnParameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 831,
												"src": "438:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 828,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "438:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "437:15:5"
									},
									"scope": 912,
									"src": "397:56:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 832,
										"nodeType": "StructuredDocumentation",
										"src": "461:49:5",
										"text": " @dev Returns the token name."
									},
									"functionSelector": "06fdde03",
									"id": 837,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "525:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "529:2:5"
									},
									"returnParameters": {
										"id": 836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 835,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 837,
												"src": "555:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 834,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "555:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "554:15:5"
									},
									"scope": 912,
									"src": "516:54:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 838,
										"nodeType": "StructuredDocumentation",
										"src": "578:54:5",
										"text": " @dev Returns the bep token owner."
									},
									"functionSelector": "893d20e8",
									"id": 843,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nameLocation": "647:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 839,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "655:2:5"
									},
									"returnParameters": {
										"id": 842,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 841,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "681:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 840,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "681:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "680:9:5"
									},
									"scope": 912,
									"src": "638:52:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 844,
										"nodeType": "StructuredDocumentation",
										"src": "698:74:5",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 851,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "787:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 847,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 846,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "805:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 851,
												"src": "797:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 845,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "797:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "796:17:5"
									},
									"returnParameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 851,
												"src": "837:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 848,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "837:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "836:9:5"
									},
									"scope": 912,
									"src": "778:68:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 852,
										"nodeType": "StructuredDocumentation",
										"src": "854:215:5",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 861,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1084:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 857,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 854,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1101:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "1093:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 853,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1093:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 856,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1120:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "1112:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 855,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1112:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1092:35:5"
									},
									"returnParameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "1146:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 858,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1146:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1145:6:5"
									},
									"scope": 912,
									"src": "1075:77:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 862,
										"nodeType": "StructuredDocumentation",
										"src": "1160:270:5",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 871,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1445:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 864,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "1463:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "1455:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 863,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1455:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 866,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1479:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "1471:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 865,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1471:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1454:33:5"
									},
									"returnParameters": {
										"id": 870,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "1511:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 868,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:9:5"
									},
									"scope": 912,
									"src": "1436:84:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 872,
										"nodeType": "StructuredDocumentation",
										"src": "1528:655:5",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT:  Beware that changingan allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 881,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2198:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2214:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "2206:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 873,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2206:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 876,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2231:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "2223:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 875,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2223:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2205:33:5"
									},
									"returnParameters": {
										"id": 880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 879,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "2257:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 878,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2257:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2256:6:5"
									},
									"scope": 912,
									"src": "2189:74:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 882,
										"nodeType": "StructuredDocumentation",
										"src": "2271:304:5",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 893,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2590:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 884,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2611:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "2603:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 883,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2603:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 886,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2627:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "2619:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 885,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2619:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2646:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "2638:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 887,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2638:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2602:51:5"
									},
									"returnParameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "2672:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 890,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2672:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2671:6:5"
									},
									"scope": 912,
									"src": "2581:97:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 894,
										"nodeType": "StructuredDocumentation",
										"src": "2686:163:5",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 902,
									"name": "Transfer",
									"nameLocation": "2861:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 896,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2886:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "2870:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 895,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2870:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 898,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2908:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "2892:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 897,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2892:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 900,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2920:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "2912:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 899,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2912:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2869:57:5"
									},
									"src": "2855:72:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 903,
										"nodeType": "StructuredDocumentation",
										"src": "2935:151:5",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 911,
									"name": "Approval",
									"nameLocation": "3098:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 905,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3123:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 911,
												"src": "3107:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 904,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3107:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 907,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3146:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 911,
												"src": "3130:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 906,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3130:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 909,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3163:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 911,
												"src": "3155:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 908,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3155:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3106:63:5"
									},
									"src": "3092:78:5"
								}
							],
							"scope": 913,
							"src": "62:3111:5",
							"usedErrors": []
						}
					],
					"src": "35:3138:5"
				},
				"id": 5
			},
			"contracts/SafeBEP20.sol": {
				"ast": {
					"absolutePath": "contracts/SafeBEP20.sol",
					"exportedSymbols": {
						"Address": [
							477
						],
						"IBEP20": [
							912
						],
						"SafeBEP20": [
							1130
						],
						"SafeMath": [
							811
						]
					},
					"id": 1131,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 914,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 915,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1131,
							"sourceUnit": 812,
							"src": "60:57:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "@openzeppelin/contracts/utils/Address.sol",
							"id": 916,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1131,
							"sourceUnit": 478,
							"src": "119:51:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/IBEP20.sol",
							"file": "./IBEP20.sol",
							"id": 917,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1131,
							"sourceUnit": 913,
							"src": "172:22:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeBEP20",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 1130,
							"linearizedBaseContracts": [
								1130
							],
							"name": "SafeBEP20",
							"nameLocation": "206:9:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 920,
									"libraryName": {
										"id": 918,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 811,
										"src": "229:8:6"
									},
									"nodeType": "UsingForDirective",
									"src": "223:27:6",
									"typeName": {
										"id": 919,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "242:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 923,
									"libraryName": {
										"id": 921,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 477,
										"src": "262:7:6"
									},
									"nodeType": "UsingForDirective",
									"src": "256:26:6",
									"typeName": {
										"id": 922,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "274:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 945,
										"nodeType": "Block",
										"src": "362:105:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 934,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 926,
															"src": "393:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 937,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 926,
																			"src": "423:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$912",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 938,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 861,
																		"src": "423:14:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 939,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "423:23:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 940,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 928,
																	"src": "448:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 941,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 930,
																	"src": "452:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 935,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "400:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 936,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "400:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 942,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "400:58:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 933,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1129,
														"src": "373:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$912_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 943,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "373:86:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 944,
												"nodeType": "ExpressionStatement",
												"src": "373:86:6"
											}
										]
									},
									"id": 946,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "299:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 926,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "319:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "312:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$912",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 925,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 924,
														"name": "IBEP20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 912,
														"src": "312:6:6"
													},
													"referencedDeclaration": 912,
													"src": "312:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$912",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 928,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "334:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "326:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 927,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "326:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 930,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "346:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "338:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 929,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "338:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "311:41:6"
									},
									"returnParameters": {
										"id": 932,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "362:0:6"
									},
									"scope": 1130,
									"src": "290:177:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 971,
										"nodeType": "Block",
										"src": "565:115:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 959,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 949,
															"src": "596:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 962,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 949,
																			"src": "626:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$912",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 963,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 893,
																		"src": "626:18:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 964,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "626:27:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 965,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 951,
																	"src": "655:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 966,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 953,
																	"src": "661:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 967,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 955,
																	"src": "665:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 960,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "603:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 961,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "603:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 968,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "603:68:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 958,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1129,
														"src": "576:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$912_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "576:96:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 970,
												"nodeType": "ExpressionStatement",
												"src": "576:96:6"
											}
										]
									},
									"id": 972,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "484:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 956,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 949,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "508:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "501:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$912",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 948,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 947,
														"name": "IBEP20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 912,
														"src": "501:6:6"
													},
													"referencedDeclaration": 912,
													"src": "501:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$912",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 951,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "523:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "515:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 950,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "515:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 953,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "537:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "529:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 952,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "529:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "549:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "541:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 954,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "541:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "500:55:6"
									},
									"returnParameters": {
										"id": 957,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "565:0:6"
									},
									"scope": 1130,
									"src": "475:205:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1015,
										"nodeType": "Block",
										"src": "1025:546:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 999,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 986,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 984,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 980,
																			"src": "1319:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 985,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1328:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1319:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 987,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1318:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 997,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 992,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "1359:4:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeBEP20_$1130",
																								"typeString": "library SafeBEP20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeBEP20_$1130",
																								"typeString": "library SafeBEP20"
																							}
																						],
																						"id": 991,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1351:7:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 990,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1351:7:6",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 993,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1351:13:6",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 994,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 978,
																					"src": "1366:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 988,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 976,
																					"src": "1335:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IBEP20_$912",
																						"typeString": "contract IBEP20"
																					}
																				},
																				"id": 989,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 871,
																				"src": "1335:15:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 995,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1335:39:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 996,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1378:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1335:44:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 998,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1334:46:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1318:62:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666542455032303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 1000,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1395:56:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_91a9bac926ceb306224f4766a09b4f2ef09ebf6b62503a939a3d65e9ddb75b06",
																"typeString": "literal_string \"SafeBEP20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeBEP20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_91a9bac926ceb306224f4766a09b4f2ef09ebf6b62503a939a3d65e9ddb75b06",
																"typeString": "literal_string \"SafeBEP20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 983,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1310:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1001,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1310:152:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1002,
												"nodeType": "ExpressionStatement",
												"src": "1310:152:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1004,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 976,
															"src": "1493:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1007,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 976,
																			"src": "1523:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$912",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 1008,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 881,
																		"src": "1523:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1009,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1523:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1010,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 978,
																	"src": "1547:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1011,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 980,
																	"src": "1556:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1005,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1500:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1006,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1500:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1012,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1500:62:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1003,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1129,
														"src": "1473:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$912_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 1013,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1473:90:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1014,
												"nodeType": "ExpressionStatement",
												"src": "1473:90:6"
											}
										]
									},
									"documentation": {
										"id": 973,
										"nodeType": "StructuredDocumentation",
										"src": "688:255:6",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IBEP20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 1016,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "958:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 976,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "977:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "970:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$912",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 975,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 974,
														"name": "IBEP20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 912,
														"src": "970:6:6"
													},
													"referencedDeclaration": 912,
													"src": "970:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$912",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 978,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "992:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "984:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 977,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "984:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 980,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1009:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "1001:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 979,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1001:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:46:6"
									},
									"returnParameters": {
										"id": 982,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1025:0:6"
									},
									"scope": 1130,
									"src": "949:622:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1052,
										"nodeType": "Block",
										"src": "1665:200:6",
										"statements": [
											{
												"assignments": [
													1027
												],
												"declarations": [
													{
														"constant": false,
														"id": 1027,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "1684:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 1052,
														"src": "1676:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1026,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1676:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1039,
												"initialValue": {
													"arguments": [
														{
															"id": 1037,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1023,
															"src": "1743:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1032,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "1723:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeBEP20_$1130",
																				"typeString": "library SafeBEP20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeBEP20_$1130",
																				"typeString": "library SafeBEP20"
																			}
																		],
																		"id": 1031,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1715:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1030,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1715:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1033,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1715:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1034,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1021,
																	"src": "1730:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1028,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1019,
																	"src": "1699:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IBEP20_$912",
																		"typeString": "contract IBEP20"
																	}
																},
																"id": 1029,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 871,
																"src": "1699:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 1035,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1699:39:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1036,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 675,
														"src": "1699:43:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1038,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1699:50:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1676:73:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1041,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1019,
															"src": "1780:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1044,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1019,
																			"src": "1810:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$912",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 1045,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 881,
																		"src": "1810:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1046,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1810:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1047,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1021,
																	"src": "1834:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1048,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1027,
																	"src": "1843:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1042,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1787:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1043,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1787:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1049,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1787:69:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1040,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1129,
														"src": "1760:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$912_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 1050,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1760:97:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1051,
												"nodeType": "ExpressionStatement",
												"src": "1760:97:6"
											}
										]
									},
									"id": 1053,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "1588:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1019,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1617:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "1610:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$912",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 1018,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1017,
														"name": "IBEP20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 912,
														"src": "1610:6:6"
													},
													"referencedDeclaration": 912,
													"src": "1610:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$912",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1632:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "1624:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1020,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1624:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1023,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1649:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "1641:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1022,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1641:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1609:46:6"
									},
									"returnParameters": {
										"id": 1025,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1665:0:6"
									},
									"scope": 1130,
									"src": "1579:286:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1090,
										"nodeType": "Block",
										"src": "1959:245:6",
										"statements": [
											{
												"assignments": [
													1064
												],
												"declarations": [
													{
														"constant": false,
														"id": 1064,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "1978:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 1090,
														"src": "1970:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1063,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1970:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1077,
												"initialValue": {
													"arguments": [
														{
															"id": 1074,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1060,
															"src": "2037:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "5361666542455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 1075,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2044:43:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8d8b0d004f76517d0accc4049600ccad745ed1cf03a0a544bc57f891c9ae38a3",
																"typeString": "literal_string \"SafeBEP20: decreased allowance below zero\""
															},
															"value": "SafeBEP20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_8d8b0d004f76517d0accc4049600ccad745ed1cf03a0a544bc57f891c9ae38a3",
																"typeString": "literal_string \"SafeBEP20: decreased allowance below zero\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1069,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2017:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeBEP20_$1130",
																				"typeString": "library SafeBEP20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeBEP20_$1130",
																				"typeString": "library SafeBEP20"
																			}
																		],
																		"id": 1068,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2009:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1067,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2009:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1070,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2009:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1071,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1058,
																	"src": "2024:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1065,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1056,
																	"src": "1993:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IBEP20_$912",
																		"typeString": "contract IBEP20"
																	}
																},
																"id": 1066,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 871,
																"src": "1993:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 1072,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1993:39:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1073,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 760,
														"src": "1993:43:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 1076,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1993:95:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1970:118:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1079,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1056,
															"src": "2119:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1082,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1056,
																			"src": "2149:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$912",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 1083,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 881,
																		"src": "2149:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1084,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2149:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1085,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1058,
																	"src": "2173:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1086,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1064,
																	"src": "2182:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1080,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2126:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1081,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2126:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1087,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2126:69:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1078,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1129,
														"src": "2099:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$912_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 1088,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2099:97:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1089,
												"nodeType": "ExpressionStatement",
												"src": "2099:97:6"
											}
										]
									},
									"id": 1091,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "1882:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1061,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1056,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1911:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "1904:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$912",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 1055,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1054,
														"name": "IBEP20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 912,
														"src": "1904:6:6"
													},
													"referencedDeclaration": 912,
													"src": "1904:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$912",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1058,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1926:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "1918:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1057,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1918:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1060,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1943:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "1935:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1059,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1935:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1903:46:6"
									},
									"returnParameters": {
										"id": 1062,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1959:0:6"
									},
									"scope": 1130,
									"src": "1873:331:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1128,
										"nodeType": "Block",
										"src": "2669:699:6",
										"statements": [
											{
												"assignments": [
													1101
												],
												"declarations": [
													{
														"constant": false,
														"id": 1101,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3044:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1128,
														"src": "3031:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1100,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3031:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1110,
												"initialValue": {
													"arguments": [
														{
															"id": 1107,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1097,
															"src": "3085:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666542455032303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3091:34:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e357ac51478c37023e9e7ad13e9d6e33f2ac0566d41923020f1a6b2e7a541c3e",
																"typeString": "literal_string \"SafeBEP20: low-level call failed\""
															},
															"value": "SafeBEP20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_e357ac51478c37023e9e7ad13e9d6e33f2ac0566d41923020f1a6b2e7a541c3e",
																"typeString": "literal_string \"SafeBEP20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1104,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1095,
																	"src": "3065:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IBEP20_$912",
																		"typeString": "contract IBEP20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IBEP20_$912",
																		"typeString": "contract IBEP20"
																	}
																],
																"id": 1103,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3057:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1102,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3057:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1105,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3057:14:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1106,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 271,
														"src": "3057:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3057:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3031:95:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1111,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1101,
															"src": "3141:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1112,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3141:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1113,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3161:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3141:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1127,
												"nodeType": "IfStatement",
												"src": "3137:224:6",
												"trueBody": {
													"id": 1126,
													"nodeType": "Block",
													"src": "3164:197:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1118,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1101,
																				"src": "3283:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 1120,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "3296:4:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 1119,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "3296:4:6",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 1121,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3295:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 1116,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3272:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1117,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "3272:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1122,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3272:30:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666542455032303a204245503230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 1123,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3304:44:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082",
																			"typeString": "literal_string \"SafeBEP20: BEP20 operation did not succeed\""
																		},
																		"value": "SafeBEP20: BEP20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082",
																			"typeString": "literal_string \"SafeBEP20: BEP20 operation did not succeed\""
																		}
																	],
																	"id": 1115,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3264:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1124,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3264:85:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1125,
															"nodeType": "ExpressionStatement",
															"src": "3264:85:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1092,
										"nodeType": "StructuredDocumentation",
										"src": "2216:377:6",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 1129,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "2608:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1098,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1095,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2635:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1129,
												"src": "2628:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$912",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 1094,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1093,
														"name": "IBEP20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 912,
														"src": "2628:6:6"
													},
													"referencedDeclaration": 912,
													"src": "2628:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$912",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1097,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2655:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1129,
												"src": "2642:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1096,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2642:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2627:33:6"
									},
									"returnParameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2669:0:6"
									},
									"scope": 1130,
									"src": "2599:769:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1131,
							"src": "198:3173:6",
							"usedErrors": []
						}
					],
					"src": "33:3338:6"
				},
				"id": 6
			},
			"contracts/Staking.sol": {
				"ast": {
					"absolutePath": "contracts/Staking.sol",
					"exportedSymbols": {
						"Address": [
							477
						],
						"Context": [
							499
						],
						"IBEP20": [
							912
						],
						"IERC20": [
							182
						],
						"Ownable": [
							104
						],
						"SafeBEP20": [
							1130
						],
						"SafeMath": [
							811
						],
						"StakingPlatform": [
							2139
						]
					},
					"id": 2140,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1132,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1133,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2140,
							"sourceUnit": 105,
							"src": "60:52:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1134,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2140,
							"sourceUnit": 183,
							"src": "114:56:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 1135,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2140,
							"sourceUnit": 812,
							"src": "172:57:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/SafeBEP20.sol",
							"file": "./SafeBEP20.sol",
							"id": 1136,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2140,
							"sourceUnit": 1131,
							"src": "231:25:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1137,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 104,
										"src": "288:7:7"
									},
									"id": 1138,
									"nodeType": "InheritanceSpecifier",
									"src": "288:7:7"
								}
							],
							"canonicalName": "StakingPlatform",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2139,
							"linearizedBaseContracts": [
								2139,
								104,
								499
							],
							"name": "StakingPlatform",
							"nameLocation": "269:15:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1141,
									"libraryName": {
										"id": 1139,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 811,
										"src": "315:8:7"
									},
									"nodeType": "UsingForDirective",
									"src": "309:27:7",
									"typeName": {
										"id": 1140,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "328:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 1145,
									"libraryName": {
										"id": 1142,
										"name": "SafeBEP20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1130,
										"src": "348:9:7"
									},
									"nodeType": "UsingForDirective",
									"src": "342:27:7",
									"typeName": {
										"id": 1144,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1143,
											"name": "IBEP20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 912,
											"src": "362:6:7"
										},
										"referencedDeclaration": 912,
										"src": "362:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IBEP20_$912",
											"typeString": "contract IBEP20"
										}
									}
								},
								{
									"canonicalName": "StakingPlatform.Staker",
									"id": 1158,
									"members": [
										{
											"constant": false,
											"id": 1147,
											"mutability": "mutable",
											"name": "stakerCurrentReward",
											"nameLocation": "440:19:7",
											"nodeType": "VariableDeclaration",
											"scope": 1158,
											"src": "432:27:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1146,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "432:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1149,
											"mutability": "mutable",
											"name": "stakedAmount",
											"nameLocation": "478:12:7",
											"nodeType": "VariableDeclaration",
											"scope": 1158,
											"src": "470:20:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1148,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "470:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1151,
											"mutability": "mutable",
											"name": "mode",
											"nameLocation": "509:4:7",
											"nodeType": "VariableDeclaration",
											"scope": 1158,
											"src": "501:12:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1150,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "501:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1153,
											"mutability": "mutable",
											"name": "stakeStartTime",
											"nameLocation": "532:14:7",
											"nodeType": "VariableDeclaration",
											"scope": 1158,
											"src": "524:22:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1152,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "524:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1155,
											"mutability": "mutable",
											"name": "lastUpdatedBlockNumber",
											"nameLocation": "565:22:7",
											"nodeType": "VariableDeclaration",
											"scope": 1158,
											"src": "557:30:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1154,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "557:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1157,
											"mutability": "mutable",
											"name": "staked",
											"nameLocation": "606:6:7",
											"nodeType": "VariableDeclaration",
											"scope": 1158,
											"src": "598:14:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1156,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "598:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Staker",
									"nameLocation": "414:6:7",
									"nodeType": "StructDefinition",
									"scope": 2139,
									"src": "407:213:7",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1160,
									"mutability": "mutable",
									"name": "_unstakingFeeRate",
									"nameLocation": "741:17:7",
									"nodeType": "VariableDeclaration",
									"scope": 2139,
									"src": "725:33:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1159,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "725:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1162,
									"mutability": "mutable",
									"name": "_eventPeriod",
									"nameLocation": "781:12:7",
									"nodeType": "VariableDeclaration",
									"scope": 2139,
									"src": "765:28:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1161,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "765:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1164,
									"mutability": "mutable",
									"name": "_rewardRate",
									"nameLocation": "816:11:7",
									"nodeType": "VariableDeclaration",
									"scope": 2139,
									"src": "800:27:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1163,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "800:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1166,
									"mutability": "mutable",
									"name": "_rewardFeeRate",
									"nameLocation": "850:14:7",
									"nodeType": "VariableDeclaration",
									"scope": 2139,
									"src": "834:30:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1165,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "834:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1168,
									"mutability": "mutable",
									"name": "_lockupPeriod",
									"nameLocation": "887:13:7",
									"nodeType": "VariableDeclaration",
									"scope": 2139,
									"src": "871:29:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1167,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "871:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1170,
									"mutability": "mutable",
									"name": "_minStakeAmount_m",
									"nameLocation": "923:17:7",
									"nodeType": "VariableDeclaration",
									"scope": 2139,
									"src": "907:33:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1169,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "907:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1172,
									"mutability": "mutable",
									"name": "_minStakeAmount_g",
									"nameLocation": "963:17:7",
									"nodeType": "VariableDeclaration",
									"scope": 2139,
									"src": "947:33:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1171,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "947:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1174,
									"mutability": "mutable",
									"name": "_minStakeAmount_s",
									"nameLocation": "1003:17:7",
									"nodeType": "VariableDeclaration",
									"scope": 2139,
									"src": "987:33:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1173,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "987:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1176,
									"mutability": "mutable",
									"name": "_minStakeAmount_c",
									"nameLocation": "1043:17:7",
									"nodeType": "VariableDeclaration",
									"scope": 2139,
									"src": "1027:33:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1175,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1027:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1179,
									"mutability": "mutable",
									"name": "_stakers",
									"nameLocation": "1091:8:7",
									"nodeType": "VariableDeclaration",
									"scope": 2139,
									"src": "1073:26:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 1177,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1073:7:7",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 1178,
										"nodeType": "ArrayTypeName",
										"src": "1073:9:7",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1184,
									"mutability": "mutable",
									"name": "_staker",
									"nameLocation": "1143:7:7",
									"nodeType": "VariableDeclaration",
									"scope": 2139,
									"src": "1108:42:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
										"typeString": "mapping(address => struct StakingPlatform.Staker)"
									},
									"typeName": {
										"id": 1183,
										"keyType": {
											"id": 1180,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1116:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1108:26:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
											"typeString": "mapping(address => struct StakingPlatform.Staker)"
										},
										"valueType": {
											"id": 1182,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1181,
												"name": "Staker",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1158,
												"src": "1127:6:7"
											},
											"referencedDeclaration": 1158,
											"src": "1127:6:7",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Staker_$1158_storage_ptr",
												"typeString": "struct StakingPlatform.Staker"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "817b1cd2",
									"id": 1186,
									"mutability": "mutable",
									"name": "totalStaked",
									"nameLocation": "1228:11:7",
									"nodeType": "VariableDeclaration",
									"scope": 2139,
									"src": "1213:26:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1185,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1213:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fc0c546a",
									"id": 1189,
									"mutability": "mutable",
									"name": "token",
									"nameLocation": "1260:5:7",
									"nodeType": "VariableDeclaration",
									"scope": 2139,
									"src": "1246:19:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IBEP20_$912",
										"typeString": "contract IBEP20"
									},
									"typeName": {
										"id": 1188,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1187,
											"name": "IBEP20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 912,
											"src": "1246:6:7"
										},
										"referencedDeclaration": 912,
										"src": "1246:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IBEP20_$912",
											"typeString": "contract IBEP20"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 1195,
									"name": "Staked",
									"nameLocation": "1359:6:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1191,
												"indexed": false,
												"mutability": "mutable",
												"name": "staker",
												"nameLocation": "1374:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1195,
												"src": "1366:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1190,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1193,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1390:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1195,
												"src": "1382:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1382:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1365:32:7"
									},
									"src": "1353:45:7"
								},
								{
									"anonymous": false,
									"id": 1201,
									"name": "Harvest",
									"nameLocation": "1410:7:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1197,
												"indexed": false,
												"mutability": "mutable",
												"name": "staker",
												"nameLocation": "1426:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1201,
												"src": "1418:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1418:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1199,
												"indexed": false,
												"mutability": "mutable",
												"name": "rewardToClaim",
												"nameLocation": "1442:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 1201,
												"src": "1434:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1434:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1417:39:7"
									},
									"src": "1404:53:7"
								},
								{
									"anonymous": false,
									"id": 1207,
									"name": "Withdraw",
									"nameLocation": "1469:8:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1203,
												"indexed": false,
												"mutability": "mutable",
												"name": "staker",
												"nameLocation": "1486:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "1478:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1478:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1205,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1502:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "1494:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1494:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1477:32:7"
									},
									"src": "1463:47:7"
								},
								{
									"anonymous": false,
									"id": 1211,
									"name": "SetRewardRate",
									"nameLocation": "1522:13:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1209,
												"indexed": false,
												"mutability": "mutable",
												"name": "rewardRate",
												"nameLocation": "1544:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1211,
												"src": "1536:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1208,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1536:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1535:20:7"
									},
									"src": "1516:40:7"
								},
								{
									"anonymous": false,
									"id": 1215,
									"name": "SetEventPeriod",
									"nameLocation": "1568:14:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1213,
												"indexed": false,
												"mutability": "mutable",
												"name": "lockupDuration",
												"nameLocation": "1591:14:7",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "1583:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1583:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1582:24:7"
									},
									"src": "1562:45:7"
								},
								{
									"anonymous": false,
									"id": 1219,
									"name": "SetUnstakingFeeRate",
									"nameLocation": "1619:19:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1217,
												"indexed": false,
												"mutability": "mutable",
												"name": "unstakingFeeRate",
												"nameLocation": "1647:16:7",
												"nodeType": "VariableDeclaration",
												"scope": 1219,
												"src": "1639:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1639:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1638:26:7"
									},
									"src": "1613:52:7"
								},
								{
									"body": {
										"id": 1233,
										"nodeType": "Block",
										"src": "1701:68:7",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1224,
														"name": "Init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1280,
														"src": "1722:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1722:6:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1226,
												"nodeType": "ExpressionStatement",
												"src": "1722:6:7"
											},
											{
												"expression": {
													"id": 1231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1227,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1189,
														"src": "1739:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IBEP20_$912",
															"typeString": "contract IBEP20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1229,
																"name": "_token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1221,
																"src": "1754:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1228,
															"name": "IBEP20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 912,
															"src": "1747:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IBEP20_$912_$",
																"typeString": "type(contract IBEP20)"
															}
														},
														"id": 1230,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1747:14:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IBEP20_$912",
															"typeString": "contract IBEP20"
														}
													},
													"src": "1739:22:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$912",
														"typeString": "contract IBEP20"
													}
												},
												"id": 1232,
												"nodeType": "ExpressionStatement",
												"src": "1739:22:7"
											}
										]
									},
									"id": 1234,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1221,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "1693:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1234,
												"src": "1685:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1220,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1685:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1684:16:7"
									},
									"returnParameters": {
										"id": 1223,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1701:0:7"
									},
									"scope": 2139,
									"src": "1673:96:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1279,
										"nodeType": "Block",
										"src": "1802:340:7",
										"statements": [
											{
												"expression": {
													"id": 1239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1237,
														"name": "_rewardRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1164,
														"src": "1823:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "323030",
														"id": 1238,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1837:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_200_by_1",
															"typeString": "int_const 200"
														},
														"value": "200"
													},
													"src": "1823:17:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1240,
												"nodeType": "ExpressionStatement",
												"src": "1823:17:7"
											},
											{
												"expression": {
													"id": 1243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1241,
														"name": "_unstakingFeeRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1160,
														"src": "1862:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31353030",
														"id": 1242,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1882:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1500_by_1",
															"typeString": "int_const 1500"
														},
														"value": "1500"
													},
													"src": "1862:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1244,
												"nodeType": "ExpressionStatement",
												"src": "1862:24:7"
											},
											{
												"expression": {
													"id": 1247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1245,
														"name": "_rewardFeeRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1166,
														"src": "1897:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "313030",
														"id": 1246,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1914:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "1897:20:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1248,
												"nodeType": "ExpressionStatement",
												"src": "1897:20:7"
											},
											{
												"expression": {
													"id": 1251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1249,
														"name": "_eventPeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1162,
														"src": "1928:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "37",
														"id": 1250,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1943:6:7",
														"subdenomination": "days",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_604800_by_1",
															"typeString": "int_const 604800"
														},
														"value": "7"
													},
													"src": "1928:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1252,
												"nodeType": "ExpressionStatement",
												"src": "1928:21:7"
											},
											{
												"expression": {
													"id": 1255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1253,
														"name": "_lockupPeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1168,
														"src": "1960:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3930",
														"id": 1254,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1976:7:7",
														"subdenomination": "days",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_7776000_by_1",
															"typeString": "int_const 7776000"
														},
														"value": "90"
													},
													"src": "1960:23:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1256,
												"nodeType": "ExpressionStatement",
												"src": "1960:23:7"
											},
											{
												"expression": {
													"id": 1261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1257,
														"name": "_minStakeAmount_m",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1170,
														"src": "1994:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_rational_3000000000000000000000000_by_1",
															"typeString": "int_const 3000000000000000000000000"
														},
														"id": 1260,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "33",
															"id": 1258,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2014:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3_by_1",
																"typeString": "int_const 3"
															},
															"value": "3"
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "31653234",
															"id": 1259,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2017:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000000000"
															},
															"value": "1e24"
														},
														"src": "2014:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3000000000000000000000000_by_1",
															"typeString": "int_const 3000000000000000000000000"
														}
													},
													"src": "1994:27:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1262,
												"nodeType": "ExpressionStatement",
												"src": "1994:27:7"
											},
											{
												"expression": {
													"id": 1265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1263,
														"name": "_minStakeAmount_c",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1176,
														"src": "2032:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31653234",
														"id": 1264,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2052:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000000000"
														},
														"value": "1e24"
													},
													"src": "2032:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1266,
												"nodeType": "ExpressionStatement",
												"src": "2032:24:7"
											},
											{
												"expression": {
													"id": 1271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1267,
														"name": "_minStakeAmount_s",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1174,
														"src": "2067:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_rational_3000000000000000000000000_by_1",
															"typeString": "int_const 3000000000000000000000000"
														},
														"id": 1270,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "33",
															"id": 1268,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2087:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3_by_1",
																"typeString": "int_const 3"
															},
															"value": "3"
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "31653234",
															"id": 1269,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2091:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000000000"
															},
															"value": "1e24"
														},
														"src": "2087:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3000000000000000000000000_by_1",
															"typeString": "int_const 3000000000000000000000000"
														}
													},
													"src": "2067:28:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1272,
												"nodeType": "ExpressionStatement",
												"src": "2067:28:7"
											},
											{
												"expression": {
													"id": 1277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1273,
														"name": "_minStakeAmount_g",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1172,
														"src": "2106:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_rational_7000000000000000000000000_by_1",
															"typeString": "int_const 7000000000000000000000000"
														},
														"id": 1276,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "37",
															"id": 1274,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2126:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_7_by_1",
																"typeString": "int_const 7"
															},
															"value": "7"
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "31653234",
															"id": 1275,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2130:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000000000"
															},
															"value": "1e24"
														},
														"src": "2126:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_7000000000000000000000000_by_1",
															"typeString": "int_const 7000000000000000000000000"
														}
													},
													"src": "2106:28:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1278,
												"nodeType": "ExpressionStatement",
												"src": "2106:28:7"
											}
										]
									},
									"id": 1280,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "Init",
									"nameLocation": "1786:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1235,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1790:2:7"
									},
									"returnParameters": {
										"id": 1236,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1802:0:7"
									},
									"scope": 2139,
									"src": "1777:365:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1292,
										"nodeType": "Block",
										"src": "2229:55:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "31",
															"id": 1289,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2269:6:7",
															"subdenomination": "days",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_86400_by_1",
																"typeString": "int_const 86400"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_86400_by_1",
																"typeString": "int_const 86400"
															}
														],
														"expression": {
															"id": 1287,
															"name": "timedur",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1282,
															"src": "2257:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1288,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 720,
														"src": "2257:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2257:19:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1286,
												"id": 1291,
												"nodeType": "Return",
												"src": "2250:26:7"
											}
										]
									},
									"id": 1293,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calDaysFromTimestamp",
									"nameLocation": "2159:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1282,
												"mutability": "mutable",
												"name": "timedur",
												"nameLocation": "2188:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "2180:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1281,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2180:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2179:17:7"
									},
									"returnParameters": {
										"id": 1286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1285,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "2220:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1284,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2220:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2219:9:7"
									},
									"scope": 2139,
									"src": "2150:134:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1352,
										"nodeType": "Block",
										"src": "2390:426:7",
										"statements": [
											{
												"assignments": [
													1297
												],
												"declarations": [
													{
														"constant": false,
														"id": 1297,
														"mutability": "mutable",
														"name": "stakerStakedAmount",
														"nameLocation": "2419:18:7",
														"nodeType": "VariableDeclaration",
														"scope": 1352,
														"src": "2411:26:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1296,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2411:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1303,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 1298,
															"name": "_staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1184,
															"src": "2440:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
															}
														},
														"id": 1301,
														"indexExpression": {
															"expression": {
																"id": 1299,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2448:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1300,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2448:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2440:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$1158_storage",
															"typeString": "struct StakingPlatform.Staker storage ref"
														}
													},
													"id": 1302,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "stakedAmount",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1149,
													"src": "2440:32:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2411:61:7"
											},
											{
												"assignments": [
													1305
												],
												"declarations": [
													{
														"constant": false,
														"id": 1305,
														"mutability": "mutable",
														"name": "newReward",
														"nameLocation": "2501:9:7",
														"nodeType": "VariableDeclaration",
														"scope": 1352,
														"src": "2493:17:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1304,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2493:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1327,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "316534",
															"id": 1325,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2629:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10000_by_1",
																"typeString": "int_const 10000"
															},
															"value": "1e4"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_10000_by_1",
																"typeString": "int_const 10000"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1322,
																	"name": "_rewardRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1164,
																	"src": "2612:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"hexValue": "38363430",
																					"id": 1318,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2601:4:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_8640_by_1",
																						"typeString": "int_const 8640"
																					},
																					"value": "8640"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_8640_by_1",
																						"typeString": "int_const 8640"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"expression": {
																								"baseExpression": {
																									"id": 1311,
																									"name": "_staker",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1184,
																									"src": "2553:7:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																										"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																									}
																								},
																								"id": 1314,
																								"indexExpression": {
																									"expression": {
																										"id": 1312,
																										"name": "msg",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 4294967281,
																										"src": "2561:3:7",
																										"typeDescriptions": {
																											"typeIdentifier": "t_magic_message",
																											"typeString": "msg"
																										}
																									},
																									"id": 1313,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "sender",
																									"nodeType": "MemberAccess",
																									"src": "2561:10:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "2553:19:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_Staker_$1158_storage",
																									"typeString": "struct StakingPlatform.Staker storage ref"
																								}
																							},
																							"id": 1315,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "lastUpdatedBlockNumber",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1155,
																							"src": "2553:42:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"expression": {
																								"id": 1308,
																								"name": "block",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967292,
																								"src": "2536:5:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_block",
																									"typeString": "block"
																								}
																							},
																							"id": 1309,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "number",
																							"nodeType": "MemberAccess",
																							"src": "2536:12:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1310,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "sub",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 690,
																						"src": "2536:16:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 1316,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2536:60:7",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1317,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "div",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 720,
																				"src": "2536:64:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1319,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2536:70:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1306,
																			"name": "stakerStakedAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1297,
																			"src": "2513:18:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1307,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 705,
																		"src": "2513:22:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1320,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2513:94:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1321,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 705,
																"src": "2513:98:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1323,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2513:111:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1324,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 720,
														"src": "2513:115:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2513:120:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2493:140:7"
											},
											{
												"expression": {
													"id": 1341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1328,
																"name": "_staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1184,
																"src": "2644:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																	"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																}
															},
															"id": 1331,
															"indexExpression": {
																"expression": {
																	"id": 1329,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2652:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1330,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2652:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2644:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1158_storage",
																"typeString": "struct StakingPlatform.Staker storage ref"
															}
														},
														"id": 1332,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "stakerCurrentReward",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1147,
														"src": "2644:39:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1339,
																"name": "newReward",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1305,
																"src": "2730:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"baseExpression": {
																		"id": 1333,
																		"name": "_staker",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1184,
																		"src": "2686:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																			"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																		}
																	},
																	"id": 1336,
																	"indexExpression": {
																		"expression": {
																			"id": 1334,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2694:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1335,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2694:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2686:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Staker_$1158_storage",
																		"typeString": "struct StakingPlatform.Staker storage ref"
																	}
																},
																"id": 1337,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "stakerCurrentReward",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1147,
																"src": "2686:39:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1338,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 675,
															"src": "2686:43:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1340,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2686:54:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2644:96:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1342,
												"nodeType": "ExpressionStatement",
												"src": "2644:96:7"
											},
											{
												"expression": {
													"id": 1350,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1343,
																"name": "_staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1184,
																"src": "2751:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																	"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																}
															},
															"id": 1346,
															"indexExpression": {
																"expression": {
																	"id": 1344,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2759:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1345,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2759:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2751:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1158_storage",
																"typeString": "struct StakingPlatform.Staker storage ref"
															}
														},
														"id": 1347,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "lastUpdatedBlockNumber",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1155,
														"src": "2751:42:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1348,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2796:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1349,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "number",
														"nodeType": "MemberAccess",
														"src": "2796:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2751:57:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1351,
												"nodeType": "ExpressionStatement",
												"src": "2751:57:7"
											}
										]
									},
									"id": 1353,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updateReward",
									"nameLocation": "2368:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1294,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2380:2:7"
									},
									"returnParameters": {
										"id": 1295,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2390:0:7"
									},
									"scope": 2139,
									"src": "2359:457:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1476,
										"nodeType": "Block",
										"src": "2891:849:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1363,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1361,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1355,
																"src": "2920:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2930:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2920:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e742073686f756c642062652067726561746572207468616e2030",
															"id": 1364,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2933:33:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580",
																"typeString": "literal_string \"Amount should be greater than 0\""
															},
															"value": "Amount should be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580",
																"typeString": "literal_string \"Amount should be greater than 0\""
															}
														],
														"id": 1360,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2912:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2912:55:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1366,
												"nodeType": "ExpressionStatement",
												"src": "2912:55:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1374,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1370,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3002:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1371,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3002:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1368,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1189,
																		"src": "2986:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IBEP20_$912",
																			"typeString": "contract IBEP20"
																		}
																	},
																	"id": 1369,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 851,
																	"src": "2986:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1372,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2986:27:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1373,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1355,
																"src": "3016:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2986:37:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e7421",
															"id": 1375,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3025:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811",
																"typeString": "literal_string \"Insufficient!\""
															},
															"value": "Insufficient!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811",
																"typeString": "literal_string \"Insufficient!\""
															}
														],
														"id": 1367,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2978:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2978:63:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1377,
												"nodeType": "ExpressionStatement",
												"src": "2978:63:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1385,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1379,
																		"name": "_staker",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1184,
																		"src": "3060:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																			"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																		}
																	},
																	"id": 1382,
																	"indexExpression": {
																		"expression": {
																			"id": 1380,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3068:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1381,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3068:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3060:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Staker_$1158_storage",
																		"typeString": "struct StakingPlatform.Staker storage ref"
																	}
																},
																"id": 1383,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "staked",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1157,
																"src": "3060:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30783535",
																"id": 1384,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3090:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_85_by_1",
																	"typeString": "int_const 85"
																},
																"value": "0x55"
															},
															"src": "3060:34:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c72656164792073746172746564",
															"id": 1386,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3096:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6",
																"typeString": "literal_string \"Already started\""
															},
															"value": "Already started"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6",
																"typeString": "literal_string \"Already started\""
															}
														],
														"id": 1378,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3052:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:62:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1388,
												"nodeType": "ExpressionStatement",
												"src": "3052:62:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1389,
														"name": "_mode",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1357,
														"src": "3139:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1390,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3148:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3139:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1401,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1399,
															"name": "_mode",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1357,
															"src": "3224:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 1400,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3233:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3224:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1411,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1409,
																"name": "_mode",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1357,
																"src": "3309:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "32",
																"id": 1410,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3318:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "3309:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1421,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1419,
																	"name": "_mode",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1357,
																	"src": "3394:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "33",
																	"id": 1420,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3403:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_3_by_1",
																		"typeString": "int_const 3"
																	},
																	"value": "3"
																},
																"src": "3394:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"expression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1432,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1430,
																				"name": "_amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1355,
																				"src": "3483:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 1431,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3493:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "3483:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		{
																			"hexValue": "496e76616c6964204d6f6465",
																			"id": 1433,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3496:14:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_deac108a7d54cf66b12f6e883ab8551f52667d7b9815f115365cc11ce5c44062",
																				"typeString": "literal_string \"Invalid Mode\""
																			},
																			"value": "Invalid Mode"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			{
																				"typeIdentifier": "t_stringliteral_deac108a7d54cf66b12f6e883ab8551f52667d7b9815f115365cc11ce5c44062",
																				"typeString": "literal_string \"Invalid Mode\""
																			}
																		],
																		"id": 1429,
																		"name": "require",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			4294967278,
																			4294967278
																		],
																		"referencedDeclaration": 4294967278,
																		"src": "3475:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																			"typeString": "function (bool,string memory) pure"
																		}
																	},
																	"id": 1434,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3475:36:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1435,
																"nodeType": "ExpressionStatement",
																"src": "3475:36:7"
															},
															"id": 1436,
															"nodeType": "IfStatement",
															"src": "3390:121:7",
															"trueBody": {
																"expression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1425,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1423,
																				"name": "_amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1355,
																				"src": "3414:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">=",
																			"rightExpression": {
																				"id": 1424,
																				"name": "_minStakeAmount_g",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1172,
																				"src": "3425:17:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3414:28:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		{
																			"hexValue": "496e73756666696369656e74",
																			"id": 1426,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3444:14:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_0d617be88096c346284999e0c326580edf46a27365999d8d83893f396c546e11",
																				"typeString": "literal_string \"Insufficient\""
																			},
																			"value": "Insufficient"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			{
																				"typeIdentifier": "t_stringliteral_0d617be88096c346284999e0c326580edf46a27365999d8d83893f396c546e11",
																				"typeString": "literal_string \"Insufficient\""
																			}
																		],
																		"id": 1422,
																		"name": "require",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			4294967278,
																			4294967278
																		],
																		"referencedDeclaration": 4294967278,
																		"src": "3406:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																			"typeString": "function (bool,string memory) pure"
																		}
																	},
																	"id": 1427,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3406:53:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1428,
																"nodeType": "ExpressionStatement",
																"src": "3406:53:7"
															}
														},
														"id": 1437,
														"nodeType": "IfStatement",
														"src": "3305:206:7",
														"trueBody": {
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1415,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1413,
																			"name": "_amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1355,
																			"src": "3329:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 1414,
																			"name": "_minStakeAmount_s",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1174,
																			"src": "3340:17:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3329:28:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "496e73756666696369656e74",
																		"id": 1416,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3359:14:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_0d617be88096c346284999e0c326580edf46a27365999d8d83893f396c546e11",
																			"typeString": "literal_string \"Insufficient\""
																		},
																		"value": "Insufficient"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_0d617be88096c346284999e0c326580edf46a27365999d8d83893f396c546e11",
																			"typeString": "literal_string \"Insufficient\""
																		}
																	],
																	"id": 1412,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3321:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1417,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3321:53:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1418,
															"nodeType": "ExpressionStatement",
															"src": "3321:53:7"
														}
													},
													"id": 1438,
													"nodeType": "IfStatement",
													"src": "3220:291:7",
													"trueBody": {
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1405,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1403,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1355,
																		"src": "3244:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 1404,
																		"name": "_minStakeAmount_c",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1176,
																		"src": "3255:17:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3244:28:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "496e73756666696369656e74",
																	"id": 1406,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3274:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_0d617be88096c346284999e0c326580edf46a27365999d8d83893f396c546e11",
																		"typeString": "literal_string \"Insufficient\""
																	},
																	"value": "Insufficient"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_0d617be88096c346284999e0c326580edf46a27365999d8d83893f396c546e11",
																		"typeString": "literal_string \"Insufficient\""
																	}
																],
																"id": 1402,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "3236:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1407,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3236:53:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1408,
														"nodeType": "ExpressionStatement",
														"src": "3236:53:7"
													}
												},
												"id": 1439,
												"nodeType": "IfStatement",
												"src": "3135:376:7",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1395,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1393,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1355,
																	"src": "3159:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 1394,
																	"name": "_minStakeAmount_m",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1170,
																	"src": "3170:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3159:28:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															{
																"hexValue": "496e73756666696369656e74",
																"id": 1396,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3189:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_0d617be88096c346284999e0c326580edf46a27365999d8d83893f396c546e11",
																	"typeString": "literal_string \"Insufficient\""
																},
																"value": "Insufficient"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																{
																	"typeIdentifier": "t_stringliteral_0d617be88096c346284999e0c326580edf46a27365999d8d83893f396c546e11",
																	"typeString": "literal_string \"Insufficient\""
																}
															],
															"id": 1392,
															"name": "require",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																4294967278,
																4294967278
															],
															"referencedDeclaration": 4294967278,
															"src": "3151:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																"typeString": "function (bool,string memory) pure"
															}
														},
														"id": 1397,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3151:53:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1398,
													"nodeType": "ExpressionStatement",
													"src": "3151:53:7"
												}
											},
											{
												"expression": {
													"id": 1446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1440,
																"name": "_staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1184,
																"src": "3532:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																	"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																}
															},
															"id": 1443,
															"indexExpression": {
																"expression": {
																	"id": 1441,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3540:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1442,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3540:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3532:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1158_storage",
																"typeString": "struct StakingPlatform.Staker storage ref"
															}
														},
														"id": 1444,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "mode",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1151,
														"src": "3532:24:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1445,
														"name": "_mode",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1357,
														"src": "3559:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3532:32:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1447,
												"nodeType": "ExpressionStatement",
												"src": "3532:32:7"
											},
											{
												"expression": {
													"id": 1455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1448,
																"name": "_staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1184,
																"src": "3575:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																	"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																}
															},
															"id": 1451,
															"indexExpression": {
																"expression": {
																	"id": 1449,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3583:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1450,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3583:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3575:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1158_storage",
																"typeString": "struct StakingPlatform.Staker storage ref"
															}
														},
														"id": 1452,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "stakeStartTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1153,
														"src": "3575:34:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1453,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3612:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1454,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "3612:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3575:52:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1456,
												"nodeType": "ExpressionStatement",
												"src": "3575:52:7"
											},
											{
												"expression": {
													"id": 1463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1457,
																"name": "_staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1184,
																"src": "3638:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																	"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																}
															},
															"id": 1460,
															"indexExpression": {
																"expression": {
																	"id": 1458,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3646:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1459,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3646:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3638:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1158_storage",
																"typeString": "struct StakingPlatform.Staker storage ref"
															}
														},
														"id": 1461,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "staked",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1157,
														"src": "3638:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30783535",
														"id": 1462,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3667:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_85_by_1",
															"typeString": "int_const 85"
														},
														"value": "0x55"
													},
													"src": "3638:33:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1464,
												"nodeType": "ExpressionStatement",
												"src": "3638:33:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1468,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3696:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1469,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3696:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1465,
															"name": "_stakers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1179,
															"src": "3682:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1467,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "3682:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
															"typeString": "function (address[] storage pointer,address)"
														}
													},
													"id": 1470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3682:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1471,
												"nodeType": "ExpressionStatement",
												"src": "3682:25:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1473,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1355,
															"src": "3724:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1472,
														"name": "stake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1555,
														"src": "3718:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3718:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1475,
												"nodeType": "ExpressionStatement",
												"src": "3718:14:7"
											}
										]
									},
									"functionSelector": "4b77dd9e",
									"id": 1477,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "startStaking",
									"nameLocation": "2837:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1355,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "2858:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1477,
												"src": "2850:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2850:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1357,
												"mutability": "mutable",
												"name": "_mode",
												"nameLocation": "2875:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1477,
												"src": "2867:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1356,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2867:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2849:32:7"
									},
									"returnParameters": {
										"id": 1359,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2891:0:7"
									},
									"scope": 2139,
									"src": "2828:912:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1554,
										"nodeType": "Block",
										"src": "3846:544:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1485,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1483,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1479,
																"src": "3875:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1484,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3885:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3875:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e742073686f756c642062652067726561746572207468616e2030",
															"id": 1486,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3888:33:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580",
																"typeString": "literal_string \"Amount should be greater than 0\""
															},
															"value": "Amount should be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580",
																"typeString": "literal_string \"Amount should be greater than 0\""
															}
														],
														"id": 1482,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3867:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3867:55:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1488,
												"nodeType": "ExpressionStatement",
												"src": "3867:55:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1496,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1492,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3957:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1493,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3957:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1490,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1189,
																		"src": "3941:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IBEP20_$912",
																			"typeString": "contract IBEP20"
																		}
																	},
																	"id": 1491,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 851,
																	"src": "3941:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1494,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3941:27:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1495,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1479,
																"src": "3971:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3941:37:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e7421",
															"id": 1497,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3980:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811",
																"typeString": "literal_string \"Insufficient!\""
															},
															"value": "Insufficient!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811",
																"typeString": "literal_string \"Insufficient!\""
															}
														],
														"id": 1489,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3933:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3933:63:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1499,
												"nodeType": "ExpressionStatement",
												"src": "3933:63:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1507,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1501,
																		"name": "_staker",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1184,
																		"src": "4015:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																			"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																		}
																	},
																	"id": 1504,
																	"indexExpression": {
																		"expression": {
																			"id": 1502,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4023:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1503,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4023:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4015:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Staker_$1158_storage",
																		"typeString": "struct StakingPlatform.Staker storage ref"
																	}
																},
																"id": 1505,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "staked",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1157,
																"src": "4015:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30783535",
																"id": 1506,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4045:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_85_by_1",
																	"typeString": "int_const 85"
																},
																"value": "0x55"
															},
															"src": "4015:34:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4572726f723a20696e76616c6964207374616b6572",
															"id": 1508,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4051:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684",
																"typeString": "literal_string \"Error: invalid staker\""
															},
															"value": "Error: invalid staker"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684",
																"typeString": "literal_string \"Error: invalid staker\""
															}
														],
														"id": 1500,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4007:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4007:68:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1510,
												"nodeType": "ExpressionStatement",
												"src": "4007:68:7"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1511,
														"name": "updateReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1353,
														"src": "4096:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4096:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1513,
												"nodeType": "ExpressionStatement",
												"src": "4096:14:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1517,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4154:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1518,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4154:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1521,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4174:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakingPlatform_$2139",
																		"typeString": "contract StakingPlatform"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_StakingPlatform_$2139",
																		"typeString": "contract StakingPlatform"
																	}
																],
																"id": 1520,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4166:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1519,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4166:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1522,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4166:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1523,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1479,
															"src": "4181:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1514,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1189,
															"src": "4131:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															}
														},
														"id": 1516,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 972,
														"src": "4131:22:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$912_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IBEP20_$912_$",
															"typeString": "function (contract IBEP20,address,address,uint256)"
														}
													},
													"id": 1524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4131:58:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1525,
												"nodeType": "ExpressionStatement",
												"src": "4131:58:7"
											},
											{
												"expression": {
													"id": 1539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1526,
																"name": "_staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1184,
																"src": "4200:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																	"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																}
															},
															"id": 1529,
															"indexExpression": {
																"expression": {
																	"id": 1527,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4208:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1528,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "4208:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4200:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1158_storage",
																"typeString": "struct StakingPlatform.Staker storage ref"
															}
														},
														"id": 1530,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "stakedAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1149,
														"src": "4200:32:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1537,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1479,
																"src": "4272:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"baseExpression": {
																		"id": 1531,
																		"name": "_staker",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1184,
																		"src": "4235:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																			"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																		}
																	},
																	"id": 1534,
																	"indexExpression": {
																		"expression": {
																			"id": 1532,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4243:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1533,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4243:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4235:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Staker_$1158_storage",
																		"typeString": "struct StakingPlatform.Staker storage ref"
																	}
																},
																"id": 1535,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "stakedAmount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1149,
																"src": "4235:32:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1536,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 675,
															"src": "4235:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1538,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4235:45:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4200:80:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1540,
												"nodeType": "ExpressionStatement",
												"src": "4200:80:7"
											},
											{
												"expression": {
													"id": 1546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1541,
														"name": "totalStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1186,
														"src": "4291:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1544,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1479,
																"src": "4321:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1542,
																"name": "totalStaked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1186,
																"src": "4305:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1543,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 675,
															"src": "4305:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1545,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4305:24:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4291:38:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1547,
												"nodeType": "ExpressionStatement",
												"src": "4291:38:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1549,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4362:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1550,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4362:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1551,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1479,
															"src": "4374:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1548,
														"name": "Staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1195,
														"src": "4355:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4355:27:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1553,
												"nodeType": "EmitStatement",
												"src": "4350:32:7"
											}
										]
									},
									"functionSelector": "a694fc3a",
									"id": 1555,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stake",
									"nameLocation": "3817:5:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1479,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "3831:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1555,
												"src": "3823:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1478,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3823:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3822:17:7"
									},
									"returnParameters": {
										"id": 1481,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3846:0:7"
									},
									"scope": 2139,
									"src": "3808:582:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1562,
										"nodeType": "Block",
										"src": "4454:39:7",
										"statements": [
											{
												"expression": {
													"id": 1560,
													"name": "totalStaked",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1186,
													"src": "4474:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1559,
												"id": 1561,
												"nodeType": "Return",
												"src": "4467:18:7"
											}
										]
									},
									"functionSelector": "0917e776",
									"id": 1563,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTotalStaked",
									"nameLocation": "4407:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1556,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4421:2:7"
									},
									"returnParameters": {
										"id": 1559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1558,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1563,
												"src": "4445:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1557,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4445:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4444:9:7"
									},
									"scope": 2139,
									"src": "4398:95:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1571,
										"nodeType": "Block",
										"src": "4561:43:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1568,
														"name": "_stakers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1179,
														"src": "4581:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"id": 1569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "4581:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1567,
												"id": 1570,
												"nodeType": "Return",
												"src": "4574:22:7"
											}
										]
									},
									"functionSelector": "5715ec11",
									"id": 1572,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getNumberofStakers",
									"nameLocation": "4510:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1564,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4528:2:7"
									},
									"returnParameters": {
										"id": 1567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1566,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1572,
												"src": "4552:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1565,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4552:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4551:9:7"
									},
									"scope": 2139,
									"src": "4501:103:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1589,
										"nodeType": "Block",
										"src": "4683:63:7",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1584,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"baseExpression": {
																	"id": 1579,
																	"name": "_staker",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1184,
																	"src": "4703:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																		"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																	}
																},
																"id": 1581,
																"indexExpression": {
																	"id": 1580,
																	"name": "_address",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1574,
																	"src": "4711:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4703:17:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Staker_$1158_storage",
																	"typeString": "struct StakingPlatform.Staker storage ref"
																}
															},
															"id": 1582,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "mode",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1151,
															"src": "4703:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1583,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4729:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4703:27:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "31",
														"id": 1586,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4737:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"id": 1587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "4703:35:7",
													"trueExpression": {
														"hexValue": "30",
														"id": 1585,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4733:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 1578,
												"id": 1588,
												"nodeType": "Return",
												"src": "4696:42:7"
											}
										]
									},
									"functionSelector": "aedf562b",
									"id": 1590,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStakerMode",
									"nameLocation": "4621:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1574,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "4643:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1590,
												"src": "4635:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1573,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4635:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4634:18:7"
									},
									"returnParameters": {
										"id": 1578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1577,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1590,
												"src": "4674:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1576,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4674:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4673:9:7"
									},
									"scope": 2139,
									"src": "4612:134:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1602,
										"nodeType": "Block",
										"src": "4826:52:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 1597,
															"name": "_staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1184,
															"src": "4846:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
															}
														},
														"id": 1599,
														"indexExpression": {
															"id": 1598,
															"name": "_address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1592,
															"src": "4854:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4846:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$1158_storage",
															"typeString": "struct StakingPlatform.Staker storage ref"
														}
													},
													"id": 1600,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "staked",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1157,
													"src": "4846:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1596,
												"id": 1601,
												"nodeType": "Return",
												"src": "4839:31:7"
											}
										]
									},
									"functionSelector": "fe600f84",
									"id": 1603,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isStartStaking",
									"nameLocation": "4763:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1592,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "4786:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1603,
												"src": "4778:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1591,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4778:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4777:18:7"
									},
									"returnParameters": {
										"id": 1596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1595,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1603,
												"src": "4817:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1594,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4817:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4816:9:7"
									},
									"scope": 2139,
									"src": "4754:124:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1657,
										"nodeType": "Block",
										"src": "4952:336:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 1610,
																"name": "_staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1184,
																"src": "4969:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																	"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																}
															},
															"id": 1612,
															"indexExpression": {
																"id": 1611,
																"name": "_address",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1605,
																"src": "4977:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4969:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1158_storage",
																"typeString": "struct StakingPlatform.Staker storage ref"
															}
														},
														"id": 1613,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staked",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1157,
														"src": "4969:24:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30783535",
														"id": 1614,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4997:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_85_by_1",
															"typeString": "int_const 85"
														},
														"value": "0x55"
													},
													"src": "4969:32:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1618,
												"nodeType": "IfStatement",
												"src": "4965:59:7",
												"trueBody": {
													"expression": {
														"hexValue": "31",
														"id": 1616,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5023:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"functionReturnParameters": 1609,
													"id": 1617,
													"nodeType": "Return",
													"src": "5016:8:7"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 1619,
																"name": "_staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1184,
																"src": "5039:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																	"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																}
															},
															"id": 1621,
															"indexExpression": {
																"id": 1620,
																"name": "_address",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1605,
																"src": "5047:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5039:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1158_storage",
																"typeString": "struct StakingPlatform.Staker storage ref"
															}
														},
														"id": 1622,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mode",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1151,
														"src": "5039:22:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1623,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5065:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5039:27:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"expression": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1651,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"baseExpression": {
																				"id": 1645,
																				"name": "_staker",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1184,
																				"src": "5222:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																					"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																				}
																			},
																			"id": 1647,
																			"indexExpression": {
																				"id": 1646,
																				"name": "_address",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1605,
																				"src": "5230:8:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "5222:17:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Staker_$1158_storage",
																				"typeString": "struct StakingPlatform.Staker storage ref"
																			}
																		},
																		"id": 1648,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "stakeStartTime",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1153,
																		"src": "5222:32:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 1642,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "5202:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1643,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "5202:15:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1644,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 690,
																	"src": "5202:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1649,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5202:53:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1650,
																"name": "_lockupPeriod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1168,
																"src": "5259:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5202:70:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"hexValue": "31",
															"id": 1653,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5279:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"id": 1654,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "5202:78:7",
														"trueExpression": {
															"hexValue": "30",
															"id": 1652,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5275:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"functionReturnParameters": 1609,
													"id": 1655,
													"nodeType": "Return",
													"src": "5195:85:7"
												},
												"id": 1656,
												"nodeType": "IfStatement",
												"src": "5035:245:7",
												"trueBody": {
													"expression": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1637,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1635,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"expression": {
																				"baseExpression": {
																					"id": 1628,
																					"name": "_staker",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1184,
																					"src": "5108:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																						"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																					}
																				},
																				"id": 1630,
																				"indexExpression": {
																					"id": 1629,
																					"name": "_address",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1605,
																					"src": "5116:8:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "5108:17:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Staker_$1158_storage",
																					"typeString": "struct StakingPlatform.Staker storage ref"
																				}
																			},
																			"id": 1631,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "stakeStartTime",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1153,
																			"src": "5108:32:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 1625,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967292,
																				"src": "5088:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 1626,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "timestamp",
																			"nodeType": "MemberAccess",
																			"src": "5088:15:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1627,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 690,
																		"src": "5088:19:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5088:53:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "%",
																"rightExpression": {
																	"components": [
																		{
																			"hexValue": "37",
																			"id": 1633,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5145:6:7",
																			"subdenomination": "days",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_604800_by_1",
																				"typeString": "int_const 604800"
																			},
																			"value": "7"
																		}
																	],
																	"id": 1634,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "5144:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_604800_by_1",
																		"typeString": "int_const 604800"
																	}
																},
																"src": "5088:64:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1636,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5156:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5088:69:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"hexValue": "31",
															"id": 1639,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5164:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"id": 1640,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "5088:77:7",
														"trueExpression": {
															"hexValue": "30",
															"id": 1638,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5160:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"functionReturnParameters": 1609,
													"id": 1641,
													"nodeType": "Return",
													"src": "5081:84:7"
												}
											}
										]
									},
									"functionSelector": "4a4fbeec",
									"id": 1658,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isLocked",
									"nameLocation": "4895:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1605,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "4912:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1658,
												"src": "4904:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4904:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4903:18:7"
									},
									"returnParameters": {
										"id": 1609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1608,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1658,
												"src": "4943:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1607,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4943:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4942:9:7"
									},
									"scope": 2139,
									"src": "4886:402:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1670,
										"nodeType": "Block",
										"src": "5370:66:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 1665,
															"name": "_staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1184,
															"src": "5398:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
															}
														},
														"id": 1667,
														"indexExpression": {
															"id": 1666,
															"name": "_address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1660,
															"src": "5406:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5398:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$1158_storage",
															"typeString": "struct StakingPlatform.Staker storage ref"
														}
													},
													"id": 1668,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "stakedAmount",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1149,
													"src": "5398:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1664,
												"id": 1669,
												"nodeType": "Return",
												"src": "5391:37:7"
											}
										]
									},
									"functionSelector": "f9931855",
									"id": 1671,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stakedAmount",
									"nameLocation": "5309:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1660,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "5330:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1671,
												"src": "5322:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1659,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5322:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5321:18:7"
									},
									"returnParameters": {
										"id": 1664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1663,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1671,
												"src": "5361:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1662,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5361:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5360:9:7"
									},
									"scope": 2139,
									"src": "5300:136:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1683,
										"nodeType": "Block",
										"src": "5518:65:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 1678,
															"name": "_staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1184,
															"src": "5538:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
															}
														},
														"id": 1680,
														"indexExpression": {
															"id": 1679,
															"name": "_address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1673,
															"src": "5546:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5538:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$1158_storage",
															"typeString": "struct StakingPlatform.Staker storage ref"
														}
													},
													"id": 1681,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "stakerCurrentReward",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1147,
													"src": "5538:37:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1677,
												"id": 1682,
												"nodeType": "Return",
												"src": "5531:44:7"
											}
										]
									},
									"functionSelector": "645a8a56",
									"id": 1684,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "rewardAmount",
									"nameLocation": "5457:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1673,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "5478:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1684,
												"src": "5470:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1672,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5470:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5469:18:7"
									},
									"returnParameters": {
										"id": 1677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1684,
												"src": "5509:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5509:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5508:9:7"
									},
									"scope": 2139,
									"src": "5448:135:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1691,
										"nodeType": "Block",
										"src": "5646:39:7",
										"statements": [
											{
												"expression": {
													"id": 1689,
													"name": "_rewardRate",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1164,
													"src": "5666:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1688,
												"id": 1690,
												"nodeType": "Return",
												"src": "5659:18:7"
											}
										]
									},
									"functionSelector": "7e1a3786",
									"id": 1692,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRewardRate",
									"nameLocation": "5600:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1685,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5613:2:7"
									},
									"returnParameters": {
										"id": 1688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1687,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1692,
												"src": "5637:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1686,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5637:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5636:9:7"
									},
									"scope": 2139,
									"src": "5591:94:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1829,
										"nodeType": "Block",
										"src": "5774:1018:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1700,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1698,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1694,
																"src": "5803:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1699,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5812:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5803:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e742073686f756c642062652067726561746572207468616e2030",
															"id": 1701,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5815:33:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580",
																"typeString": "literal_string \"Amount should be greater than 0\""
															},
															"value": "Amount should be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580",
																"typeString": "literal_string \"Amount should be greater than 0\""
															}
														],
														"id": 1697,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5795:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5795:54:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1703,
												"nodeType": "ExpressionStatement",
												"src": "5795:54:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1711,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1705,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1694,
																"src": "5868:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1706,
																		"name": "_staker",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1184,
																		"src": "5878:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																			"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																		}
																	},
																	"id": 1709,
																	"indexExpression": {
																		"expression": {
																			"id": 1707,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "5886:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1708,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "5886:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5878:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Staker_$1158_storage",
																		"typeString": "struct StakingPlatform.Staker storage ref"
																	}
																},
																"id": 1710,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "stakedAmount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1149,
																"src": "5878:32:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5868:42:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420616d6f756e74",
															"id": 1712,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5912:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1",
																"typeString": "literal_string \"Invalid amount\""
															},
															"value": "Invalid amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1",
																"typeString": "literal_string \"Invalid amount\""
															}
														],
														"id": 1704,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5860:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1713,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5860:69:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1714,
												"nodeType": "ExpressionStatement",
												"src": "5860:69:7"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1715,
														"name": "updateReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1353,
														"src": "5942:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1716,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5942:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1717,
												"nodeType": "ExpressionStatement",
												"src": "5942:14:7"
											},
											{
												"assignments": [
													1719
												],
												"declarations": [
													{
														"constant": false,
														"id": 1719,
														"mutability": "mutable",
														"name": "amountTobeWithdrawn",
														"nameLocation": "5975:19:7",
														"nodeType": "VariableDeclaration",
														"scope": 1829,
														"src": "5967:27:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1718,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5967:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1721,
												"initialValue": {
													"id": 1720,
													"name": "amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1694,
													"src": "5997:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5967:36:7"
											},
											{
												"assignments": [
													1723
												],
												"declarations": [
													{
														"constant": false,
														"id": 1723,
														"mutability": "mutable",
														"name": "during",
														"nameLocation": "6022:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1829,
														"src": "6014:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1722,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6014:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1736,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31",
															"id": 1734,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6091:6:7",
															"subdenomination": "days",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_86400_by_1",
																"typeString": "int_const 86400"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_86400_by_1",
																"typeString": "int_const 86400"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"baseExpression": {
																			"id": 1727,
																			"name": "_staker",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1184,
																			"src": "6051:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																				"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																			}
																		},
																		"id": 1730,
																		"indexExpression": {
																			"expression": {
																				"id": 1728,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "6059:3:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1729,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "6059:10:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6051:19:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Staker_$1158_storage",
																			"typeString": "struct StakingPlatform.Staker storage ref"
																		}
																	},
																	"id": 1731,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "stakeStartTime",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1153,
																	"src": "6051:34:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"expression": {
																		"id": 1724,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "6031:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1725,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "6031:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1726,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 690,
																"src": "6031:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1732,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6031:55:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1733,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 720,
														"src": "6031:59:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1735,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6031:67:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6014:84:7"
											},
											{
												"assignments": [
													1738
												],
												"declarations": [
													{
														"constant": false,
														"id": 1738,
														"mutability": "mutable",
														"name": "fee",
														"nameLocation": "6117:3:7",
														"nodeType": "VariableDeclaration",
														"scope": 1829,
														"src": "6109:11:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1737,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6109:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1740,
												"initialValue": {
													"hexValue": "313030",
													"id": 1739,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6123:3:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_100_by_1",
														"typeString": "int_const 100"
													},
													"value": "100"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6109:17:7"
											},
											{
												"assignments": [
													1742
												],
												"declarations": [
													{
														"constant": false,
														"id": 1742,
														"mutability": "mutable",
														"name": "isLockupTimeOver",
														"nameLocation": "6142:16:7",
														"nodeType": "VariableDeclaration",
														"scope": 1829,
														"src": "6137:21:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1741,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6137:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1771,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1749,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"baseExpression": {
																	"id": 1743,
																	"name": "_staker",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1184,
																	"src": "6161:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																		"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																	}
																},
																"id": 1746,
																"indexExpression": {
																	"expression": {
																		"id": 1744,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "6169:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1745,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "6169:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6161:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Staker_$1158_storage",
																	"typeString": "struct StakingPlatform.Staker storage ref"
																}
															},
															"id": 1747,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "mode",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1151,
															"src": "6161:24:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 1748,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6189:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "6161:29:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1769,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1759,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "6249:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1760,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "6249:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"arguments": [
																{
																	"id": 1767,
																	"name": "_lockupPeriod",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1168,
																	"src": "6307:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"expression": {
																		"baseExpression": {
																			"id": 1761,
																			"name": "_staker",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1184,
																			"src": "6268:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																				"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																			}
																		},
																		"id": 1764,
																		"indexExpression": {
																			"expression": {
																				"id": 1762,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "6276:3:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1763,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "6276:10:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6268:19:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Staker_$1158_storage",
																			"typeString": "struct StakingPlatform.Staker storage ref"
																		}
																	},
																	"id": 1765,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "stakeStartTime",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1153,
																	"src": "6268:34:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1766,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 675,
																"src": "6268:38:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1768,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6268:53:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6249:72:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1770,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "6161:160:7",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1758,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1754,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1752,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1750,
																	"name": "during",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1723,
																	"src": "6193:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "%",
																"rightExpression": {
																	"id": 1751,
																	"name": "_eventPeriod",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1162,
																	"src": "6202:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6193:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1753,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6218:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6193:26:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1757,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1755,
																"name": "during",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1723,
																"src": "6223:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1756,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6232:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6223:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "6193:40:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6137:184:7"
											},
											{
												"condition": {
													"id": 1773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6336:17:7",
													"subExpression": {
														"id": 1772,
														"name": "isLockupTimeOver",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1742,
														"src": "6337:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1779,
												"nodeType": "IfStatement",
												"src": "6332:73:7",
												"trueBody": {
													"id": 1778,
													"nodeType": "Block",
													"src": "6355:50:7",
													"statements": [
														{
															"expression": {
																"id": 1776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1774,
																	"name": "fee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1738,
																	"src": "6370:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1775,
																	"name": "_unstakingFeeRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1160,
																	"src": "6376:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6370:23:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1777,
															"nodeType": "ExpressionStatement",
															"src": "6370:23:7"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1793,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1780,
																"name": "_staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1184,
																"src": "6415:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																	"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																}
															},
															"id": 1783,
															"indexExpression": {
																"expression": {
																	"id": 1781,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "6423:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1782,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "6423:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6415:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1158_storage",
																"typeString": "struct StakingPlatform.Staker storage ref"
															}
														},
														"id": 1784,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "stakedAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1149,
														"src": "6415:32:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1791,
																"name": "amountTobeWithdrawn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1719,
																"src": "6487:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"baseExpression": {
																		"id": 1785,
																		"name": "_staker",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1184,
																		"src": "6450:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																			"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																		}
																	},
																	"id": 1788,
																	"indexExpression": {
																		"expression": {
																			"id": 1786,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "6458:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1787,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "6458:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6450:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Staker_$1158_storage",
																		"typeString": "struct StakingPlatform.Staker storage ref"
																	}
																},
																"id": 1789,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "stakedAmount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1149,
																"src": "6450:32:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1790,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 690,
															"src": "6450:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1792,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6450:57:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6415:92:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1794,
												"nodeType": "ExpressionStatement",
												"src": "6415:92:7"
											},
											{
												"expression": {
													"id": 1800,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1795,
														"name": "totalStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1186,
														"src": "6518:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1798,
																"name": "amountTobeWithdrawn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1719,
																"src": "6548:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1796,
																"name": "totalStaked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1186,
																"src": "6532:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1797,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 690,
															"src": "6532:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1799,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6532:36:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6518:50:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1801,
												"nodeType": "ExpressionStatement",
												"src": "6518:50:7"
											},
											{
												"expression": {
													"id": 1813,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1802,
														"name": "amountTobeWithdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1719,
														"src": "6579:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"hexValue": "316534",
																		"id": 1810,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6658:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10000_by_1",
																			"typeString": "int_const 10000"
																		},
																		"value": "1e4"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_10000_by_1",
																			"typeString": "int_const 10000"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1807,
																				"name": "fee",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1738,
																				"src": "6649:3:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1805,
																				"name": "amountTobeWithdrawn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1719,
																				"src": "6625:19:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1806,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 705,
																			"src": "6625:23:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1808,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6625:28:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1809,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 720,
																	"src": "6625:32:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1811,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6625:37:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1803,
																"name": "amountTobeWithdrawn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1719,
																"src": "6601:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1804,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 690,
															"src": "6601:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1812,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6601:62:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6579:84:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1814,
												"nodeType": "ExpressionStatement",
												"src": "6579:84:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1818,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6693:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1819,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6693:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1820,
															"name": "amountTobeWithdrawn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1719,
															"src": "6705:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1815,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1189,
															"src": "6674:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															}
														},
														"id": 1817,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 946,
														"src": "6674:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$912_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IBEP20_$912_$",
															"typeString": "function (contract IBEP20,address,uint256)"
														}
													},
													"id": 1821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6674:51:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1822,
												"nodeType": "ExpressionStatement",
												"src": "6674:51:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1824,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6752:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1825,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6752:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1826,
															"name": "amountTobeWithdrawn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1719,
															"src": "6764:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1823,
														"name": "Withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1207,
														"src": "6743:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1827,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6743:41:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1828,
												"nodeType": "EmitStatement",
												"src": "6738:46:7"
											}
										]
									},
									"functionSelector": "2e1a7d4d",
									"id": 1830,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "5741:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1694,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5758:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1830,
												"src": "5750:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1693,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5750:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5749:16:7"
									},
									"returnParameters": {
										"id": 1696,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5774:0:7"
									},
									"scope": 2139,
									"src": "5732:1060:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1852,
										"nodeType": "Block",
										"src": "6868:163:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1840,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1838,
																"name": "__rewardRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1832,
																"src": "6897:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1839,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6912:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6897:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642076616c7565",
															"id": 1841,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6915:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6",
																"typeString": "literal_string \"Invalid value\""
															},
															"value": "Invalid value"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6",
																"typeString": "literal_string \"Invalid value\""
															}
														],
														"id": 1837,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6889:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1842,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6889:42:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1843,
												"nodeType": "ExpressionStatement",
												"src": "6889:42:7"
											},
											{
												"expression": {
													"id": 1846,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1844,
														"name": "_rewardRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1164,
														"src": "6952:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1845,
														"name": "__rewardRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1832,
														"src": "6966:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6952:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1847,
												"nodeType": "ExpressionStatement",
												"src": "6952:26:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1849,
															"name": "__rewardRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1832,
															"src": "7010:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1848,
														"name": "SetRewardRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1211,
														"src": "6996:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1850,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6996:27:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1851,
												"nodeType": "EmitStatement",
												"src": "6991:32:7"
											}
										]
									},
									"functionSelector": "9e447fc6",
									"id": 1853,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1835,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1834,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "6858:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "6858:9:7"
										}
									],
									"name": "setRewardRate",
									"nameLocation": "6813:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1832,
												"mutability": "mutable",
												"name": "__rewardRate",
												"nameLocation": "6835:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1853,
												"src": "6827:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6827:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6826:22:7"
									},
									"returnParameters": {
										"id": 1836,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6868:0:7"
									},
									"scope": 2139,
									"src": "6804:227:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1878,
										"nodeType": "Block",
										"src": "7105:182:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1863,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1861,
																"name": "__eventPeriod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1855,
																"src": "7134:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1862,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7150:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7134:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964204c6f636b7570204475726174696f6e",
															"id": 1864,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7153:25:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561",
																"typeString": "literal_string \"Invalid Lockup Duration\""
															},
															"value": "Invalid Lockup Duration"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561",
																"typeString": "literal_string \"Invalid Lockup Duration\""
															}
														],
														"id": 1860,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7126:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1865,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7126:53:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1866,
												"nodeType": "ExpressionStatement",
												"src": "7126:53:7"
											},
											{
												"expression": {
													"id": 1872,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1867,
														"name": "_eventPeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1162,
														"src": "7192:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "31",
																"id": 1870,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7225:6:7",
																"subdenomination": "days",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_86400_by_1",
																	"typeString": "int_const 86400"
																},
																"value": "1"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_86400_by_1",
																	"typeString": "int_const 86400"
																}
															],
															"expression": {
																"id": 1868,
																"name": "__eventPeriod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1855,
																"src": "7207:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1869,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "mul",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 705,
															"src": "7207:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1871,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7207:25:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7192:40:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1873,
												"nodeType": "ExpressionStatement",
												"src": "7192:40:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1875,
															"name": "__eventPeriod",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1855,
															"src": "7265:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1874,
														"name": "SetEventPeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1215,
														"src": "7250:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1876,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7250:29:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1877,
												"nodeType": "EmitStatement",
												"src": "7245:34:7"
											}
										]
									},
									"functionSelector": "692642e7",
									"id": 1879,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1858,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1857,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "7095:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "7095:9:7"
										}
									],
									"name": "setEventPeriod",
									"nameLocation": "7048:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1855,
												"mutability": "mutable",
												"name": "__eventPeriod",
												"nameLocation": "7071:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 1879,
												"src": "7063:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1854,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7063:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7062:23:7"
									},
									"returnParameters": {
										"id": 1859,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7105:0:7"
									},
									"scope": 2139,
									"src": "7039:248:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1901,
										"nodeType": "Block",
										"src": "7371:198:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1889,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1887,
																"name": "__unstakingFeeRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1881,
																"src": "7400:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1888,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7421:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7400:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420556e7374616b696e67204665652052617465",
															"id": 1890,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7424:28:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3",
																"typeString": "literal_string \"Invalid Unstaking Fee Rate\""
															},
															"value": "Invalid Unstaking Fee Rate"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3",
																"typeString": "literal_string \"Invalid Unstaking Fee Rate\""
															}
														],
														"id": 1886,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7392:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1891,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7392:61:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1892,
												"nodeType": "ExpressionStatement",
												"src": "7392:61:7"
											},
											{
												"expression": {
													"id": 1895,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1893,
														"name": "_unstakingFeeRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1160,
														"src": "7466:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1894,
														"name": "__unstakingFeeRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1881,
														"src": "7486:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7466:38:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1896,
												"nodeType": "ExpressionStatement",
												"src": "7466:38:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1898,
															"name": "__unstakingFeeRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1881,
															"src": "7542:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1897,
														"name": "SetUnstakingFeeRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1219,
														"src": "7522:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1899,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7522:39:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1900,
												"nodeType": "EmitStatement",
												"src": "7517:44:7"
											}
										]
									},
									"functionSelector": "91e07e7a",
									"id": 1902,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1884,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1883,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "7361:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "7361:9:7"
										}
									],
									"name": "setUnstakingFeeRate",
									"nameLocation": "7304:19:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1882,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1881,
												"mutability": "mutable",
												"name": "__unstakingFeeRate",
												"nameLocation": "7332:18:7",
												"nodeType": "VariableDeclaration",
												"scope": 1902,
												"src": "7324:26:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1880,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7324:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7323:28:7"
									},
									"returnParameters": {
										"id": 1885,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7371:0:7"
									},
									"scope": 2139,
									"src": "7295:274:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1920,
										"nodeType": "Block",
										"src": "7639:108:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1912,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1910,
																"name": "lockupTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1904,
																"src": "7660:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1911,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7673:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7660:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e2774206265207a65726f",
															"id": 1913,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7676:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2",
																"typeString": "literal_string \"Can't be zero\""
															},
															"value": "Can't be zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2",
																"typeString": "literal_string \"Can't be zero\""
															}
														],
														"id": 1909,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7652:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1914,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7652:40:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1915,
												"nodeType": "ExpressionStatement",
												"src": "7652:40:7"
											},
											{
												"expression": {
													"id": 1918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1916,
														"name": "_lockupPeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1168,
														"src": "7713:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1917,
														"name": "lockupTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1904,
														"src": "7729:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7713:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1919,
												"nodeType": "ExpressionStatement",
												"src": "7713:26:7"
											}
										]
									},
									"functionSelector": "4b62b70b",
									"id": 1921,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1907,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1906,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "7629:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "7629:9:7"
										}
									],
									"name": "setLockupTime",
									"nameLocation": "7586:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1904,
												"mutability": "mutable",
												"name": "lockupTime",
												"nameLocation": "7608:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1921,
												"src": "7600:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1903,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7600:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7599:20:7"
									},
									"returnParameters": {
										"id": 1908,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7639:0:7"
									},
									"scope": 2139,
									"src": "7577:170:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1939,
										"nodeType": "Block",
										"src": "7826:113:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1931,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1929,
																"name": "_minAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1923,
																"src": "7856:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1930,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7869:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7856:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e2774206265207a65726f",
															"id": 1932,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7872:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2",
																"typeString": "literal_string \"Can't be zero\""
															},
															"value": "Can't be zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2",
																"typeString": "literal_string \"Can't be zero\""
															}
														],
														"id": 1928,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7847:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1933,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7847:41:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1934,
												"nodeType": "ExpressionStatement",
												"src": "7847:41:7"
											},
											{
												"expression": {
													"id": 1937,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1935,
														"name": "_minStakeAmount_m",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1170,
														"src": "7901:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1936,
														"name": "_minAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1923,
														"src": "7921:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7901:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1938,
												"nodeType": "ExpressionStatement",
												"src": "7901:30:7"
											}
										]
									},
									"functionSelector": "c665d80e",
									"id": 1940,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1926,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1925,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "7816:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "7816:9:7"
										}
									],
									"name": "setThreeMonthMinAmount",
									"nameLocation": "7764:22:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1923,
												"mutability": "mutable",
												"name": "_minAmount",
												"nameLocation": "7795:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1940,
												"src": "7787:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1922,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7787:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7786:20:7"
									},
									"returnParameters": {
										"id": 1927,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7826:0:7"
									},
									"scope": 2139,
									"src": "7755:184:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1958,
										"nodeType": "Block",
										"src": "8014:105:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1950,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1948,
																"name": "_minAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1942,
																"src": "8036:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1949,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8049:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8036:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e2774206265207a65726f",
															"id": 1951,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8052:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2",
																"typeString": "literal_string \"Can't be zero\""
															},
															"value": "Can't be zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2",
																"typeString": "literal_string \"Can't be zero\""
															}
														],
														"id": 1947,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8027:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1952,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8027:41:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1953,
												"nodeType": "ExpressionStatement",
												"src": "8027:41:7"
											},
											{
												"expression": {
													"id": 1956,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1954,
														"name": "_minStakeAmount_c",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1176,
														"src": "8081:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1955,
														"name": "_minAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1942,
														"src": "8101:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8081:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1957,
												"nodeType": "ExpressionStatement",
												"src": "8081:30:7"
											}
										]
									},
									"functionSelector": "c1704a14",
									"id": 1959,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1945,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1944,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "8004:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "8004:9:7"
										}
									],
									"name": "setCopperMinAmount",
									"nameLocation": "7956:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1942,
												"mutability": "mutable",
												"name": "_minAmount",
												"nameLocation": "7983:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1959,
												"src": "7975:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1941,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7975:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7974:20:7"
									},
									"returnParameters": {
										"id": 1946,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8014:0:7"
									},
									"scope": 2139,
									"src": "7947:172:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1977,
										"nodeType": "Block",
										"src": "8194:105:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1969,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1967,
																"name": "_minAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1961,
																"src": "8216:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1968,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8229:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8216:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e2774206265207a65726f",
															"id": 1970,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8232:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2",
																"typeString": "literal_string \"Can't be zero\""
															},
															"value": "Can't be zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2",
																"typeString": "literal_string \"Can't be zero\""
															}
														],
														"id": 1966,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8207:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1971,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8207:41:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1972,
												"nodeType": "ExpressionStatement",
												"src": "8207:41:7"
											},
											{
												"expression": {
													"id": 1975,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1973,
														"name": "_minStakeAmount_s",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1174,
														"src": "8261:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1974,
														"name": "_minAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1961,
														"src": "8281:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8261:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1976,
												"nodeType": "ExpressionStatement",
												"src": "8261:30:7"
											}
										]
									},
									"functionSelector": "23b61117",
									"id": 1978,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1964,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1963,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "8184:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "8184:9:7"
										}
									],
									"name": "setSilverMinAmount",
									"nameLocation": "8136:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1962,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1961,
												"mutability": "mutable",
												"name": "_minAmount",
												"nameLocation": "8163:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1978,
												"src": "8155:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1960,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8155:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8154:20:7"
									},
									"returnParameters": {
										"id": 1965,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8194:0:7"
									},
									"scope": 2139,
									"src": "8127:172:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1996,
										"nodeType": "Block",
										"src": "8372:105:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1988,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1986,
																"name": "_minAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1980,
																"src": "8394:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1987,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8407:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8394:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e2774206265207a65726f",
															"id": 1989,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8410:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2",
																"typeString": "literal_string \"Can't be zero\""
															},
															"value": "Can't be zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2",
																"typeString": "literal_string \"Can't be zero\""
															}
														],
														"id": 1985,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8385:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1990,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8385:41:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1991,
												"nodeType": "ExpressionStatement",
												"src": "8385:41:7"
											},
											{
												"expression": {
													"id": 1994,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1992,
														"name": "_minStakeAmount_g",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1172,
														"src": "8439:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1993,
														"name": "_minAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1980,
														"src": "8459:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8439:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1995,
												"nodeType": "ExpressionStatement",
												"src": "8439:30:7"
											}
										]
									},
									"functionSelector": "ae544943",
									"id": 1997,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1983,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1982,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "8362:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "8362:9:7"
										}
									],
									"name": "setGoldMinAmount",
									"nameLocation": "8316:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1980,
												"mutability": "mutable",
												"name": "_minAmount",
												"nameLocation": "8341:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1997,
												"src": "8333:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1979,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8333:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8332:20:7"
									},
									"returnParameters": {
										"id": 1984,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8372:0:7"
									},
									"scope": 2139,
									"src": "8307:170:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2011,
										"nodeType": "Block",
										"src": "8591:102:7",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2002,
														"name": "updateReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1353,
														"src": "8612:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2003,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8612:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2004,
												"nodeType": "ExpressionStatement",
												"src": "8612:14:7"
											},
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 2005,
															"name": "_staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1184,
															"src": "8646:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
															}
														},
														"id": 2008,
														"indexExpression": {
															"expression": {
																"id": 2006,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8654:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2007,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8654:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "8646:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$1158_storage",
															"typeString": "struct StakingPlatform.Staker storage ref"
														}
													},
													"id": 2009,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "stakerCurrentReward",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1147,
													"src": "8646:39:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2001,
												"id": 2010,
												"nodeType": "Return",
												"src": "8639:46:7"
											}
										]
									},
									"functionSelector": "5d2ec65d",
									"id": 2012,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "rewardToHarvest",
									"nameLocation": "8549:15:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1998,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8564:2:7"
									},
									"returnParameters": {
										"id": 2001,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2000,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2012,
												"src": "8583:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1999,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8583:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8582:9:7"
									},
									"scope": 2139,
									"src": "8540:153:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2088,
										"nodeType": "Block",
										"src": "8763:560:7",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2015,
														"name": "updateReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1353,
														"src": "8784:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2016,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8784:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2017,
												"nodeType": "ExpressionStatement",
												"src": "8784:14:7"
											},
											{
												"assignments": [
													2019
												],
												"declarations": [
													{
														"constant": false,
														"id": 2019,
														"mutability": "mutable",
														"name": "rewardToClaim",
														"nameLocation": "8827:13:7",
														"nodeType": "VariableDeclaration",
														"scope": 2088,
														"src": "8819:21:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2018,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8819:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2038,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "316534",
																	"id": 2035,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8951:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10000_by_1",
																		"typeString": "int_const 10000"
																	},
																	"value": "1e4"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_10000_by_1",
																		"typeString": "int_const 10000"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 2032,
																			"name": "_rewardFeeRate",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1166,
																			"src": "8931:14:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"baseExpression": {
																					"id": 2026,
																					"name": "_staker",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1184,
																					"src": "8887:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																						"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																					}
																				},
																				"id": 2029,
																				"indexExpression": {
																					"expression": {
																						"id": 2027,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "8895:3:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 2028,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "8895:10:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "8887:19:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Staker_$1158_storage",
																					"typeString": "struct StakingPlatform.Staker storage ref"
																				}
																			},
																			"id": 2030,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "stakerCurrentReward",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1147,
																			"src": "8887:39:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2031,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 705,
																		"src": "8887:43:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2033,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8887:59:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2034,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 720,
																"src": "8887:63:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2036,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8887:68:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"baseExpression": {
																	"id": 2020,
																	"name": "_staker",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1184,
																	"src": "8843:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																		"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																	}
																},
																"id": 2023,
																"indexExpression": {
																	"expression": {
																		"id": 2021,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "8851:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2022,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "8851:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8843:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Staker_$1158_storage",
																	"typeString": "struct StakingPlatform.Staker storage ref"
																}
															},
															"id": 2024,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "stakerCurrentReward",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1147,
															"src": "8843:39:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2025,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 690,
														"src": "8843:43:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2037,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8843:113:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8819:137:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2042,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2040,
																"name": "rewardToClaim",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2019,
																"src": "8985:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2041,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9001:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8985:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7468696e6720746f20636c61696d",
															"id": 2043,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9004:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3",
																"typeString": "literal_string \"Nothing to claim\""
															},
															"value": "Nothing to claim"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3",
																"typeString": "literal_string \"Nothing to claim\""
															}
														],
														"id": 2039,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8977:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2044,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8977:46:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2045,
												"nodeType": "ExpressionStatement",
												"src": "8977:46:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2054,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2046,
														"name": "rewardToClaim",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2019,
														"src": "9038:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 2051,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "9078:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_StakingPlatform_$2139",
																			"typeString": "contract StakingPlatform"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_StakingPlatform_$2139",
																			"typeString": "contract StakingPlatform"
																		}
																	],
																	"id": 2050,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9070:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2049,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9070:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 2052,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9070:13:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 2047,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1189,
																"src": "9054:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IBEP20_$912",
																	"typeString": "contract IBEP20"
																}
															},
															"id": 2048,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 851,
															"src": "9054:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 2053,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9054:30:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9038:46:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2065,
												"nodeType": "IfStatement",
												"src": "9034:111:7",
												"trueBody": {
													"expression": {
														"id": 2063,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2055,
															"name": "rewardToClaim",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2019,
															"src": "9099:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2060,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "9139:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_StakingPlatform_$2139",
																				"typeString": "contract StakingPlatform"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_StakingPlatform_$2139",
																				"typeString": "contract StakingPlatform"
																			}
																		],
																		"id": 2059,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "9131:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2058,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "9131:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2061,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9131:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 2056,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1189,
																	"src": "9115:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IBEP20_$912",
																		"typeString": "contract IBEP20"
																	}
																},
																"id": 2057,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 851,
																"src": "9115:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 2062,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9115:30:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "9099:46:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2064,
													"nodeType": "ExpressionStatement",
													"src": "9099:46:7"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2069,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "9175:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2070,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "9175:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2071,
															"name": "rewardToClaim",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2019,
															"src": "9187:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2066,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1189,
															"src": "9156:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															}
														},
														"id": 2068,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 946,
														"src": "9156:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$912_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IBEP20_$912_$",
															"typeString": "function (contract IBEP20,address,uint256)"
														}
													},
													"id": 2072,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9156:45:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2073,
												"nodeType": "ExpressionStatement",
												"src": "9156:45:7"
											},
											{
												"expression": {
													"id": 2080,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 2074,
																"name": "_staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1184,
																"src": "9212:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																	"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																}
															},
															"id": 2077,
															"indexExpression": {
																"expression": {
																	"id": 2075,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "9220:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2076,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "9220:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9212:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1158_storage",
																"typeString": "struct StakingPlatform.Staker storage ref"
															}
														},
														"id": 2078,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "stakerCurrentReward",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1147,
														"src": "9212:39:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2079,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9254:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9212:43:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2081,
												"nodeType": "ExpressionStatement",
												"src": "9212:43:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2083,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "9289:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2084,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "9289:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2085,
															"name": "rewardToClaim",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2019,
															"src": "9301:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2082,
														"name": "Harvest",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1201,
														"src": "9281:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2086,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9281:34:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2087,
												"nodeType": "EmitStatement",
												"src": "9276:39:7"
											}
										]
									},
									"functionSelector": "4641257d",
									"id": 2089,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "harvest",
									"nameLocation": "8747:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2013,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8754:2:7"
									},
									"returnParameters": {
										"id": 2014,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8763:0:7"
									},
									"scope": 2139,
									"src": "8738:585:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2137,
										"nodeType": "Block",
										"src": "9409:350:7",
										"statements": [
											{
												"assignments": [
													2097
												],
												"declarations": [
													{
														"constant": false,
														"id": 2097,
														"mutability": "mutable",
														"name": "_minStakeAmount",
														"nameLocation": "9438:15:7",
														"nodeType": "VariableDeclaration",
														"scope": 2137,
														"src": "9430:23:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2096,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9430:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2099,
												"initialValue": {
													"hexValue": "30",
													"id": 2098,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9456:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9430:27:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2102,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2100,
															"name": "_mode",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2091,
															"src": "9474:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 2101,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9483:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "9474:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2105,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2103,
															"name": "_mode",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2091,
															"src": "9488:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "32",
															"id": 2104,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9497:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "9488:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9474:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2113,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2111,
															"name": "_mode",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2091,
															"src": "9555:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 2112,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9564:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "9555:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2120,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2118,
																"name": "_mode",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2091,
																"src": "9622:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "33",
																"id": 2119,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9631:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_3_by_1",
																	"typeString": "int_const 3"
																},
																"value": "3"
															},
															"src": "9622:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		"id": 2128,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 2126,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9694:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2127,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9698:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9694:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "496e76616c6964204d6f6465",
																		"id": 2129,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9701:14:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_deac108a7d54cf66b12f6e883ab8551f52667d7b9815f115365cc11ce5c44062",
																			"typeString": "literal_string \"Invalid Mode\""
																		},
																		"value": "Invalid Mode"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_deac108a7d54cf66b12f6e883ab8551f52667d7b9815f115365cc11ce5c44062",
																			"typeString": "literal_string \"Invalid Mode\""
																		}
																	],
																	"id": 2125,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "9685:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 2130,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9685:31:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2131,
															"nodeType": "ExpressionStatement",
															"src": "9685:31:7"
														},
														"id": 2132,
														"nodeType": "IfStatement",
														"src": "9618:98:7",
														"trueBody": {
															"expression": {
																"id": 2123,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2121,
																	"name": "_minStakeAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2097,
																	"src": "9634:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 2122,
																	"name": "_minStakeAmount_g",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1172,
																	"src": "9652:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9634:35:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2124,
															"nodeType": "ExpressionStatement",
															"src": "9634:35:7"
														}
													},
													"id": 2133,
													"nodeType": "IfStatement",
													"src": "9551:165:7",
													"trueBody": {
														"expression": {
															"id": 2116,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2114,
																"name": "_minStakeAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2097,
																"src": "9567:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"id": 2115,
																"name": "_minStakeAmount_c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1176,
																"src": "9585:17:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9567:35:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2117,
														"nodeType": "ExpressionStatement",
														"src": "9567:35:7"
													}
												},
												"id": 2134,
												"nodeType": "IfStatement",
												"src": "9470:246:7",
												"trueBody": {
													"expression": {
														"id": 2109,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2107,
															"name": "_minStakeAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2097,
															"src": "9500:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"id": 2108,
															"name": "_minStakeAmount_m",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1170,
															"src": "9518:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "9500:35:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2110,
													"nodeType": "ExpressionStatement",
													"src": "9500:35:7"
												}
											},
											{
												"expression": {
													"id": 2135,
													"name": "_minStakeAmount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2097,
													"src": "9736:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2095,
												"id": 2136,
												"nodeType": "Return",
												"src": "9729:22:7"
											}
										]
									},
									"functionSelector": "909f093e",
									"id": 2138,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMinimumStakingAmount",
									"nameLocation": "9340:23:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2092,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2091,
												"mutability": "mutable",
												"name": "_mode",
												"nameLocation": "9372:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2138,
												"src": "9364:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2090,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9364:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9363:15:7"
									},
									"returnParameters": {
										"id": 2095,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2094,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2138,
												"src": "9400:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2093,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9400:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9399:9:7"
									},
									"scope": 2139,
									"src": "9331:428:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 2140,
							"src": "260:9502:7",
							"usedErrors": []
						}
					],
					"src": "33:9731:7"
				},
				"id": 7
			}
		}
	}
}