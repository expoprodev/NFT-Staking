{
	"id": "8d99a3200de2defb38d7a108bcf22b85",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.10",
	"solcLongVersion": "0.8.10+commit.fc410830",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Staking.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.4;\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\nimport \"./SafeBEP20.sol\";\r\n\r\ncontract StakingPlatform is Ownable {\r\n    \r\n    using SafeMath for uint256;\r\n    using SafeBEP20 for IBEP20;\r\n    \r\n    // args for _stakers\r\n    struct Staker {\r\n        uint256 stakerCurrentReward;\r\n        uint256 stakedAmount;\r\n        uint256 mode;\r\n        uint256 stakeStartTime;\r\n        uint256 lastUpdatedBlockNumber;\r\n        uint256 staked;\r\n    }   \r\n    \r\n    // refer to CRSFANS token. Address: 0x7AD8A62451f79399c940fC1A6FE96358a80B1931\r\n    \r\n    uint256 private _unstakingFeeRate;\r\n    uint256 private _eventPeriod;\r\n    uint256 private _rewardRate;\r\n    uint256 private _rewardFeeRate;\r\n    uint256 private _lockupPeriod;\r\n    uint256 private _minStakeAmount_g;\r\n    uint256 private _minStakeAmount_s;\r\n    uint256 private _minStakeAmount_c;\r\n    \r\n    address[] private _stakers;\r\n\r\n    mapping(address => Staker) private _staker;\r\n\r\n    // Total amount of token staked in staking pool.\r\n    uint256 public totalStaked;\r\n    IBEP20 public token;\r\n    \r\n    // Events triggered when start, stake, unstake(withdraw), get reward.\r\n    event Staked(address staker, uint256 amount);\r\n    event Harvest(address staker, uint256 rewardToClaim);\r\n    event Withdraw(address staker, uint256 amount);\r\n    event SetRewardRate(uint256 rewardRate);\r\n    event SetEventPeriod(uint256 lockupDuration);\r\n    event SetUnstakingFeeRate(uint256 unstakingFeeRate);\r\n\r\n    constructor(address _token) {\r\n        \r\n        Init();\r\n        token = IBEP20(_token);\r\n    }\r\n\r\n    function Init() internal {\r\n        \r\n        _rewardRate = 200; // per day\r\n        _unstakingFeeRate = 1500;\r\n        _rewardFeeRate = 100;\r\n        _eventPeriod = 7 days;\r\n        _lockupPeriod = 90 days;\r\n        _minStakeAmount_c = 1e24;\r\n        _minStakeAmount_s = 3*1e24;\r\n        _minStakeAmount_g = 7*1e24;\r\n    }\r\n\r\n    function calDaysFromTimestamp(uint256 timedur) internal pure returns (uint256) {\r\n        \r\n        return timedur.div(1 days);\r\n    }\r\n\r\n    // Update rewards for _stakers according to deposited amount.\r\n    function updateReward() private{\r\n        \r\n        uint256 stakerStakedAmount = _staker[msg.sender].stakedAmount;\r\n        \r\n        uint256 newReward = stakerStakedAmount.mul(block.number.sub(_staker[msg.sender].lastUpdatedBlockNumber).div(8640)).mul(_rewardRate).div(1e4);\r\n        _staker[msg.sender].stakerCurrentReward = _staker[msg.sender].stakerCurrentReward.add(newReward);\r\n        _staker[msg.sender].lastUpdatedBlockNumber = block.number;\r\n    }\r\n    \r\n    function startStaking(uint256 _amount, uint256 _mode) external {\r\n        \r\n        require(_amount > 0, \"Amount should be greater than 0\");\r\n        require(token.balanceOf(msg.sender) > _amount, \"Insufficient!\");\r\n        require(_staker[msg.sender].staked != 0x55, \"Already started\");\r\n        \r\n        if (_mode == 0) require(_amount > 0);\r\n        else if (_mode == 1) require(_amount >= _minStakeAmount_c, \"Insufficient\");\r\n        else if (_mode == 2) require(_amount >= _minStakeAmount_s, \"Insufficient\");\r\n        else if (_mode == 3) require(_amount >= _minStakeAmount_g, \"Insufficient\");\r\n        else require(_amount < 0, \"Invalid Mode\");\r\n        \r\n        _staker[msg.sender].mode = _mode;\r\n        _staker[msg.sender].stakeStartTime = block.timestamp;\r\n        _staker[msg.sender].staked = 0x55;\r\n        _stakers.push(msg.sender);\r\n        stake(_amount);\r\n    }\r\n    \r\n    // Staker tries to stake specific amount of token.\r\n    function stake(uint256 _amount) public{\r\n        \r\n        require(_amount > 0, \"Amount should be greater than 0\");\r\n        require(token.balanceOf(msg.sender) > _amount, \"Insufficient!\");\r\n        require(_staker[msg.sender].staked == 0x55, \"Error: invalid staker\");\r\n        \r\n        updateReward();\r\n        \r\n        token.safeTransferFrom(msg.sender, address(this), _amount);\r\n        _staker[msg.sender].stakedAmount = _staker[msg.sender].stakedAmount.add(_amount);\r\n        totalStaked = totalStaked.add(_amount);\r\n        \r\n        emit Staked(msg.sender, _amount);\r\n    }\r\n\r\n    function getTotalStaked() public view returns (uint256) {\r\n\r\n        return totalStaked;\r\n    }\r\n\r\n    function getNumberofStakers() public view returns (uint256) {\r\n\r\n        return _stakers.length;\r\n    }\r\n\r\n    function getStakerMode(address _address) public view returns (uint256) {\r\n\r\n        return _staker[_address].mode == 0 ? 0 : 1;\r\n    }\r\n\r\n    function isStartStaking(address _address) public view returns (uint256) {\r\n\r\n        return _staker[_address].staked;\r\n    }\r\n\r\n    function isLocked(address _address) public view returns (uint256) {\r\n\r\n        if (_staker[_address].staked != 0x55)\r\n            return 1;\r\n        if (_staker[_address].mode != 0)\r\n            return block.timestamp.sub(_staker[_address].stakeStartTime) % (7 days) == 0 ? 0 : 1;\r\n        else \r\n            return block.timestamp.sub(_staker[_address].stakeStartTime) >= _lockupPeriod ? 0 : 1;\r\n    }\r\n    \r\n    function stakedAmount(address _address) public view returns (uint256) {\r\n        \r\n        return _staker[_address].stakedAmount;\r\n    }\r\n    \r\n    function rewardAmount(address _address) public view returns (uint256) {\r\n\r\n        return _staker[_address].stakerCurrentReward;\r\n    }\r\n\r\n    function getRewardRate() public view returns (uint256) {\r\n\r\n        return _rewardRate;\r\n    }\r\n\r\n    // Withdraw some of token staked.\r\n    function withdraw(uint256 amount) external{\r\n        \r\n        require(amount > 0, \"Amount should be greater than 0\");\r\n        require(amount <= _staker[msg.sender].stakedAmount, \"Invalid amount\");\r\n\r\n        updateReward();\r\n        uint256 amountTobeWithdrawn = amount;\r\n        uint256 during = block.timestamp.sub(_staker[msg.sender].stakeStartTime).div(1 days);\r\n        uint256 fee = 100;\r\n        bool isLockupTimeOver = _staker[msg.sender].mode != 0 ? during % _eventPeriod == 0 && during > 0 :\r\n            block.timestamp >= _staker[msg.sender].stakeStartTime.add(_lockupPeriod);\r\n        if (!isLockupTimeOver) {\r\n            fee = _unstakingFeeRate;\r\n        }\r\n        amountTobeWithdrawn = amountTobeWithdrawn.sub(amountTobeWithdrawn.mul(fee).div(1e4));\r\n        totalStaked = totalStaked.sub(amountTobeWithdrawn);\r\n        _staker[msg.sender].stakedAmount = _staker[msg.sender].stakedAmount.sub(amountTobeWithdrawn);\r\n        token.safeTransfer(msg.sender, amountTobeWithdrawn);\r\n\r\n        emit Withdraw(msg.sender, amountTobeWithdrawn);\r\n        // return block.timestamp.sub(staker.stakeStartTime);\r\n    }\r\n    \r\n    function setRewardRate(uint256 __rewardRate) external onlyOwner {\r\n        \r\n        require(__rewardRate > 0, \"Invalid value\");\r\n        \r\n        _rewardRate = __rewardRate;\r\n\r\n        emit SetRewardRate(__rewardRate);\r\n    }\r\n\r\n    function setEventPeriod(uint256 __eventPeriod) external onlyOwner {\r\n        \r\n        require(__eventPeriod > 0, \"Invalid Lockup Duration\");\r\n\r\n        _eventPeriod = __eventPeriod.mul(1 days);\r\n\r\n        emit SetEventPeriod(__eventPeriod);\r\n    }\r\n\r\n    function setUnstakingFeeRate(uint256 __unstakingFeeRate) external onlyOwner {\r\n        \r\n        require(__unstakingFeeRate > 0, \"Invalid Unstaking Fee Rate\");\r\n\r\n        _unstakingFeeRate = __unstakingFeeRate;\r\n\r\n        emit SetUnstakingFeeRate(__unstakingFeeRate);\r\n    }\r\n\r\n    function setLockupTime(uint256 lockupTime) external onlyOwner {\r\n\r\n        require(lockupTime > 0, \"Can't be zero\");\r\n        \r\n        _lockupPeriod = lockupTime;\r\n    }\r\n    \r\n    // Amount of reward staker can be guaranteed.\r\n    function rewardToHarvest() public view returns (uint256){\r\n        \r\n        // updateReward();\r\n        return _staker[msg.sender].stakerCurrentReward;\r\n    }\r\n\r\n    // Get reward of msg.sender\r\n    function harvest() public{\r\n        \r\n        updateReward();\r\n        uint256 rewardToClaim = _staker[msg.sender].stakerCurrentReward.sub(_staker[msg.sender].stakerCurrentReward.mul(_rewardFeeRate).div(1e4));\r\n        \r\n        require(rewardToClaim > 0, \"Nothing to claim\");\r\n        if (rewardToClaim > token.balanceOf(address(this)))\r\n            rewardToClaim = token.balanceOf(address(this));\r\n        token.safeTransfer(msg.sender, rewardToClaim);\r\n        _staker[msg.sender].stakerCurrentReward = 0;\r\n        \r\n        emit Harvest(msg.sender, rewardToClaim);\r\n    }\r\n}\r\n"
			},
			"contracts/SafeBEP20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.4;\r\n\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\nimport \"@openzeppelin/contracts/utils/Address.sol\";\r\nimport \"./IBEP20.sol\";\r\n\r\nlibrary SafeBEP20 {\r\n    using SafeMath for uint256;\r\n    using Address for address;\r\n\r\n    function safeTransfer(IBEP20 token, address to, uint256 value) internal {\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\r\n    }\r\n\r\n    function safeTransferFrom(IBEP20 token, address from, address to, uint256 value) internal {\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\r\n    }\r\n\r\n    /**\r\n     * @dev Deprecated. This function has issues similar to the ones found in\r\n     * {IBEP20-approve}, and its usage is discouraged.\r\n     *\r\n     * Whenever possible, use {safeIncreaseAllowance} and\r\n     * {safeDecreaseAllowance} instead.\r\n     */\r\n    function safeApprove(IBEP20 token, address spender, uint256 value) internal {\r\n        // safeApprove should only be called when setting an initial allowance,\r\n        // or when resetting it to zero. To increase and decrease it, use\r\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\r\n        // solhint-disable-next-line max-line-length\r\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\r\n            \"SafeBEP20: approve from non-zero to non-zero allowance\"\r\n        );\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\r\n    }\r\n\r\n    function safeIncreaseAllowance(IBEP20 token, address spender, uint256 value) internal {\r\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\r\n    }\r\n\r\n    function safeDecreaseAllowance(IBEP20 token, address spender, uint256 value) internal {\r\n        uint256 newAllowance = token.allowance(address(this), spender).sub(value, \"SafeBEP20: decreased allowance below zero\");\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\r\n    }\r\n    \r\n    /**\r\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\r\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\r\n     * @param token The token targeted by the call.\r\n     * @param data The call data (encoded using abi.encode or one of its variants).\r\n     */\r\n    function _callOptionalReturn(IBEP20 token, bytes memory data) private {\r\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\r\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\r\n        // the target address contains contract code and also asserts for success in the low-level call.\r\n        \r\n        bytes memory returndata = address(token).functionCall(data, \"SafeBEP20: low-level call failed\");\r\n        if (returndata.length > 0) { // Return data is optional\r\n            // solhint-disable-next-line max-line-length\r\n            require(abi.decode(returndata, (bool)), \"SafeBEP20: BEP20 operation did not succeed\");\r\n        }\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"contracts/IBEP20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\ninterface IBEP20 {\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the token decimals.\r\n     */\r\n    function decimals() external view returns (uint8);\r\n\r\n    /**\r\n     * @dev Returns the token symbol.\r\n     */\r\n    function symbol() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the token name.\r\n     */\r\n    function name() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the bep token owner.\r\n     */\r\n    function getOwner() external view returns (address);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address _owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT:  Beware that changingan allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":194:8255  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":194:8255  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212207e564383d47c24e1390e247e28081a8f95054095b42911da50336bcd436d490b64736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207e564383d47c24e1390e247e28081a8f95054095b42911da50336bcd436d490b64736f6c634300080a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH31 0x564383D47C24E1390E247E28081A8F95054095B42911DA50336BCD436D490B PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ",
							"sourceMap": "194:8061:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207e564383d47c24e1390e247e28081a8f95054095b42911da50336bcd436d490b64736f6c634300080a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH31 0x564383D47C24E1390E247E28081A8F95054095B42911DA50336BCD436D490B PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ",
							"sourceMap": "194:8061:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207e564383d47c24e1390e247e28081a8f95054095b42911da50336bcd436d490b64736f6c634300080a0033",
									".code": [
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":467:6768  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":467:6768  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122001da6497236acfac83aad86debdbfcc8af08703017bdd28723ab3025eee3c9f664736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122001da6497236acfac83aad86debdbfcc8af08703017bdd28723ab3025eee3c9f664736f6c634300080a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADD 0xDA PUSH5 0x97236ACFAC DUP4 0xAA 0xD8 PUSH14 0xEBDBFCC8AF08703017BDD28723AB ADDRESS 0x25 0xEE 0xE3 0xC9 0xF6 PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ",
							"sourceMap": "467:6301:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122001da6497236acfac83aad86debdbfcc8af08703017bdd28723ab3025eee3c9f664736f6c634300080a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADD 0xDA PUSH5 0x97236ACFAC DUP4 0xAA 0xD8 PUSH14 0xEBDBFCC8AF08703017BDD28723AB ADDRESS 0x25 0xEE 0xE3 0xC9 0xF6 PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ",
							"sourceMap": "467:6301:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122001da6497236acfac83aad86debdbfcc8af08703017bdd28723ab3025eee3c9f664736f6c634300080a0033",
									".code": [
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/IBEP20.sol": {
				"IBEP20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT:  Beware that changingan allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"getOwner()": {
								"details": "Returns the bep token owner."
							},
							"name()": {
								"details": "Returns the token name."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"getOwner()": "893d20e8",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT:  Beware that changingan allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"name()\":{\"details\":\"Returns the token name.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IBEP20.sol\":\"IBEP20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IBEP20.sol\":{\"keccak256\":\"0xe10557d770e08d0867c7d7f45f4ecc3aa71fab37aec10f03deac873774d83958\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29c5d9f242fe719f9c99293f895de2c62b11990dcb76b0c5fe29d4bb20debd36\",\"dweb:/ipfs/QmcxmgSN37RwVYQ6uVyyksA7q9rbs7ZfAGxLg9ZAqetzVc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/SafeBEP20.sol": {
				"SafeBEP20": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/SafeBEP20.sol\":198:3371  library SafeBEP20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/SafeBEP20.sol\":198:3371  library SafeBEP20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212200822ab4c3f0602b2402b1985e24a9ed7433fa607d832d8b2fa11857ed51adfe764736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200822ab4c3f0602b2402b1985e24a9ed7433fa607d832d8b2fa11857ed51adfe764736f6c634300080a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDMOD 0x22 0xAB 0x4C EXTCODEHASH MOD MUL 0xB2 BLOCKHASH 0x2B NOT DUP6 0xE2 0x4A SWAP15 0xD7 NUMBER EXTCODEHASH 0xA6 SMOD 0xD8 ORIGIN 0xD8 0xB2 STATICCALL GT DUP6 PUSH31 0xD51ADFE764736F6C634300080A003300000000000000000000000000000000 ",
							"sourceMap": "198:3173:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200822ab4c3f0602b2402b1985e24a9ed7433fa607d832d8b2fa11857ed51adfe764736f6c634300080a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDMOD 0x22 0xAB 0x4C EXTCODEHASH MOD MUL 0xB2 BLOCKHASH 0x2B NOT DUP6 0xE2 0x4A SWAP15 0xD7 NUMBER EXTCODEHASH 0xA6 SMOD 0xD8 ORIGIN 0xD8 0xB2 STATICCALL GT DUP6 PUSH31 0xD51ADFE764736F6C634300080A003300000000000000000000000000000000 ",
							"sourceMap": "198:3173:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IBEP20,bytes memory)": "infinite",
								"safeApprove(contract IBEP20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IBEP20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IBEP20,address,uint256)": "infinite",
								"safeTransfer(contract IBEP20,address,uint256)": "infinite",
								"safeTransferFrom(contract IBEP20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200822ab4c3f0602b2402b1985e24a9ed7433fa607d832d8b2fa11857ed51adfe764736f6c634300080a0033",
									".code": [
										{
											"begin": 198,
											"end": 3371,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 198,
											"end": 3371,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 198,
											"end": 3371,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 198,
											"end": 3371,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 198,
											"end": 3371,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 198,
											"end": 3371,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 198,
											"end": 3371,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 198,
											"end": 3371,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 198,
											"end": 3371,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SafeBEP20.sol\":\"SafeBEP20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]},\"contracts/IBEP20.sol\":{\"keccak256\":\"0xe10557d770e08d0867c7d7f45f4ecc3aa71fab37aec10f03deac873774d83958\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29c5d9f242fe719f9c99293f895de2c62b11990dcb76b0c5fe29d4bb20debd36\",\"dweb:/ipfs/QmcxmgSN37RwVYQ6uVyyksA7q9rbs7ZfAGxLg9ZAqetzVc\"]},\"contracts/SafeBEP20.sol\":{\"keccak256\":\"0x6ddb1e1687ec39379d8d51c1dd37f9fc5bdbcf76d13b12bb2ef97218f17af728\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c317daa7645bea9fb8926f04a64e9dda06454035d35dd618fb8865bead0b343\",\"dweb:/ipfs/QmcGbnJ9k7RVUBh5HyHxzV7u52hykYsHKqi7VRWSLvEjrG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Staking.sol": {
				"StakingPlatform": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "staker",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "rewardToClaim",
									"type": "uint256"
								}
							],
							"name": "Harvest",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "lockupDuration",
									"type": "uint256"
								}
							],
							"name": "SetEventPeriod",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "rewardRate",
									"type": "uint256"
								}
							],
							"name": "SetRewardRate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "unstakingFeeRate",
									"type": "uint256"
								}
							],
							"name": "SetUnstakingFeeRate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "staker",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Staked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "staker",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdraw",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "getNumberofStakers",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getRewardRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "getStakerMode",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTotalStaked",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "harvest",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "isLocked",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "isStartStaking",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "rewardAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardToHarvest",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "__eventPeriod",
									"type": "uint256"
								}
							],
							"name": "setEventPeriod",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "lockupTime",
									"type": "uint256"
								}
							],
							"name": "setLockupTime",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "__rewardRate",
									"type": "uint256"
								}
							],
							"name": "setRewardRate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "__unstakingFeeRate",
									"type": "uint256"
								}
							],
							"name": "setUnstakingFeeRate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "stakedAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_mode",
									"type": "uint256"
								}
							],
							"name": "startStaking",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "contract IBEP20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalStaked",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Staking.sol\":260:8536  contract StakingPlatform is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Staking.sol\":1633:1729  constructor(address _token) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  tag_7\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":940:952  _msgSender() */\n  tag_8\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":940:950  _msgSender */\n  shl(0x20, tag_9)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":940:952  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:939  _transferOwnership */\n  shl(0x20, tag_10)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_7:\n    /* \"contracts/Staking.sol\":1682:1688  Init() */\n  tag_12\n    /* \"contracts/Staking.sol\":1682:1686  Init */\n  shl(0x20, tag_13)\n    /* \"contracts/Staking.sol\":1682:1688  Init() */\n  0x20\n  shr\n  jump\t// in\ntag_12:\n    /* \"contracts/Staking.sol\":1714:1720  _token */\n  dup1\n    /* \"contracts/Staking.sol\":1699:1704  token */\n  0x0c\n  0x00\n    /* \"contracts/Staking.sol\":1699:1721  token = IBEP20(_token) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Staking.sol\":1633:1729  constructor(address _token) {... */\n  pop\n    /* \"contracts/Staking.sol\":260:8536  contract StakingPlatform is Ownable {... */\n  jump(tag_14)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_9:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2368  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2387:2395  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2384  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2441:2449  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2431:2439  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"contracts/Staking.sol\":1737:2060  function Init() internal {... */\ntag_13:\n    /* \"contracts/Staking.sol\":1797:1800  200 */\n  0xc8\n    /* \"contracts/Staking.sol\":1783:1794  _rewardRate */\n  0x03\n    /* \"contracts/Staking.sol\":1783:1800  _rewardRate = 200 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Staking.sol\":1842:1846  1500 */\n  0x05dc\n    /* \"contracts/Staking.sol\":1822:1839  _unstakingFeeRate */\n  0x01\n    /* \"contracts/Staking.sol\":1822:1846  _unstakingFeeRate = 1500 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Staking.sol\":1874:1877  100 */\n  0x64\n    /* \"contracts/Staking.sol\":1857:1871  _rewardFeeRate */\n  0x04\n    /* \"contracts/Staking.sol\":1857:1877  _rewardFeeRate = 100 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Staking.sol\":1903:1909  7 days */\n  0x093a80\n    /* \"contracts/Staking.sol\":1888:1900  _eventPeriod */\n  0x02\n    /* \"contracts/Staking.sol\":1888:1909  _eventPeriod = 7 days */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Staking.sol\":1936:1943  90 days */\n  0x76a700\n    /* \"contracts/Staking.sol\":1920:1933  _lockupPeriod */\n  0x05\n    /* \"contracts/Staking.sol\":1920:1943  _lockupPeriod = 90 days */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Staking.sol\":1974:1978  1e24 */\n  0xd3c21bcecceda1000000\n    /* \"contracts/Staking.sol\":1954:1971  _minStakeAmount_c */\n  0x08\n    /* \"contracts/Staking.sol\":1954:1978  _minStakeAmount_c = 1e24 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Staking.sol\":2009:2015  3*1e24 */\n  0x027b46536c66c8e3000000\n    /* \"contracts/Staking.sol\":1989:2006  _minStakeAmount_s */\n  0x07\n    /* \"contracts/Staking.sol\":1989:2015  _minStakeAmount_s = 3*1e24 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Staking.sol\":2046:2052  7*1e24 */\n  0x05ca4ec2a79a7f67000000\n    /* \"contracts/Staking.sol\":2026:2043  _minStakeAmount_g */\n  0x06\n    /* \"contracts/Staking.sol\":2026:2052  _minStakeAmount_g = 7*1e24 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Staking.sol\":1737:2060  function Init() internal {... */\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_19:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_21:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_22:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_31\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_21\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_23:\n    /* \"#utility.yul\":641:665   */\n  tag_33\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_22\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_34\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_34:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_24:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_36\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_23\n  jump\t// in\ntag_36:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_38\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_39\n  tag_19\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":932:1051   */\ntag_38:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_40\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_24\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/Staking.sol\":260:8536  contract StakingPlatform is Ownable {... */\ntag_14:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Staking.sol\":260:8536  contract StakingPlatform is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7e1a3786\n      gt\n      tag_25\n      jumpi\n      dup1\n      0xa694fc3a\n      gt\n      tag_26\n      jumpi\n      dup1\n      0xa694fc3a\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xaedf562b\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xf9931855\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xfc0c546a\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xfe600f84\n      eq\n      tag_24\n      jumpi\n      jump(tag_2)\n    tag_26:\n      dup1\n      0x7e1a3786\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x817b1cd2\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x91e07e7a\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x9e447fc6\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_25:\n      dup1\n      0x4b77dd9e\n      gt\n      tag_27\n      jumpi\n      dup1\n      0x4b77dd9e\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x5715ec11\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x5d2ec65d\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x645a8a56\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x692642e7\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_27:\n      dup1\n      0x0917e776\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x4641257d\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x4a4fbeec\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x4b62b70b\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Staking.sol\":4283:4378  function getTotalStaked() public view returns (uint256) {... */\n    tag_3:\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":5617:6740  function withdraw(uint256 amount) external{... */\n    tag_4:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n    tag_32:\n      stop\n        /* \"contracts/Staking.sol\":7958:8533  function harvest() public{... */\n    tag_5:\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      stop\n        /* \"contracts/Staking.sol\":4771:5173  function isLocked(address _address) public view returns (uint256) {... */\n    tag_6:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":7525:7695  function setLockupTime(uint256 lockupTime) external onlyOwner {... */\n    tag_7:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_44:\n      tag_45\n      jump\t// in\n    tag_43:\n      stop\n        /* \"contracts/Staking.sol\":2746:3625  function startStaking(uint256 _amount, uint256 _mode) external {... */\n    tag_8:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      tag_49\n      jump\t// in\n    tag_46:\n      stop\n        /* \"contracts/Staking.sol\":4386:4489  function getNumberofStakers() public view returns (uint256) {... */\n    tag_9:\n      tag_50\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":7758:7917  function rewardToHarvest() public view returns (uint256){... */\n    tag_10:\n      tag_53\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_55\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":5333:5468  function rewardAmount(address _address) public view returns (uint256) {... */\n    tag_11:\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_57\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_57:\n      tag_58\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":6987:7235  function setEventPeriod(uint256 __eventPeriod) external onlyOwner {... */\n    tag_12:\n      tag_60\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_61\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_61:\n      tag_62\n      jump\t// in\n    tag_60:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_13:\n      tag_63\n      tag_64\n      jump\t// in\n    tag_63:\n      stop\n        /* \"contracts/Staking.sol\":5476:5570  function getRewardRate() public view returns (uint256) {... */\n    tag_14:\n      tag_65\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      tag_67\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":1173:1199  uint256 public totalStaked */\n    tag_15:\n      tag_68\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      tag_70\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_16:\n      tag_71\n      tag_72\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      tag_73\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":7243:7517  function setUnstakingFeeRate(uint256 __unstakingFeeRate) external onlyOwner {... */\n    tag_17:\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_76\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_76:\n      tag_77\n      jump\t// in\n    tag_75:\n      stop\n        /* \"contracts/Staking.sol\":6752:6979  function setRewardRate(uint256 __rewardRate) external onlyOwner {... */\n    tag_18:\n      tag_78\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_79\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_79:\n      tag_80\n      jump\t// in\n    tag_78:\n      stop\n        /* \"contracts/Staking.sol\":3693:4275  function stake(uint256 _amount) public{... */\n    tag_19:\n      tag_81\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_82\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_82:\n      tag_83\n      jump\t// in\n    tag_81:\n      stop\n        /* \"contracts/Staking.sol\":4497:4631  function getStakerMode(address _address) public view returns (uint256) {... */\n    tag_20:\n      tag_84\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_85\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_85:\n      tag_86\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      tag_87\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_21:\n      tag_88\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_89\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_89:\n      tag_90\n      jump\t// in\n    tag_88:\n      stop\n        /* \"contracts/Staking.sol\":5185:5321  function stakedAmount(address _address) public view returns (uint256) {... */\n    tag_22:\n      tag_91\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_92\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_92:\n      tag_93\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      tag_94\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":1206:1225  IBEP20 public token */\n    tag_23:\n      tag_95\n      tag_96\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      tag_97\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":4639:4763  function isStartStaking(address _address) public view returns (uint256) {... */\n    tag_24:\n      tag_99\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_100\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_100:\n      tag_101\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      tag_102\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":4283:4378  function getTotalStaked() public view returns (uint256) {... */\n    tag_29:\n        /* \"contracts/Staking.sol\":4330:4337  uint256 */\n      0x00\n        /* \"contracts/Staking.sol\":4359:4370  totalStaked */\n      sload(0x0b)\n        /* \"contracts/Staking.sol\":4352:4370  return totalStaked */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":4283:4378  function getTotalStaked() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Staking.sol\":5617:6740  function withdraw(uint256 amount) external{... */\n    tag_35:\n        /* \"contracts/Staking.sol\":5697:5698  0 */\n      0x00\n        /* \"contracts/Staking.sol\":5688:5694  amount */\n      dup2\n        /* \"contracts/Staking.sol\":5688:5698  amount > 0 */\n      gt\n        /* \"contracts/Staking.sol\":5680:5734  require(amount > 0, \"Amount should be greater than 0\") */\n      tag_105\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_106\n      swap1\n      tag_107\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_105:\n        /* \"contracts/Staking.sol\":5763:5770  _staker */\n      0x0a\n        /* \"contracts/Staking.sol\":5763:5782  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":5771:5781  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":5763:5782  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":5763:5795  _staker[msg.sender].stakedAmount */\n      0x01\n      add\n      sload\n        /* \"contracts/Staking.sol\":5753:5759  amount */\n      dup2\n        /* \"contracts/Staking.sol\":5753:5795  amount <= _staker[msg.sender].stakedAmount */\n      gt\n      iszero\n        /* \"contracts/Staking.sol\":5745:5814  require(amount <= _staker[msg.sender].stakedAmount, \"Invalid amount\") */\n      tag_108\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_109\n      swap1\n      tag_110\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_108:\n        /* \"contracts/Staking.sol\":5827:5841  updateReward() */\n      tag_111\n        /* \"contracts/Staking.sol\":5827:5839  updateReward */\n      tag_112\n        /* \"contracts/Staking.sol\":5827:5841  updateReward() */\n      jump\t// in\n    tag_111:\n        /* \"contracts/Staking.sol\":5852:5879  uint256 amountTobeWithdrawn */\n      0x00\n        /* \"contracts/Staking.sol\":5882:5888  amount */\n      dup2\n        /* \"contracts/Staking.sol\":5852:5888  uint256 amountTobeWithdrawn = amount */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":5899:5913  uint256 during */\n      0x00\n        /* \"contracts/Staking.sol\":5916:5983  block.timestamp.sub(_staker[msg.sender].stakeStartTime).div(1 days) */\n      tag_113\n        /* \"contracts/Staking.sol\":5976:5982  1 days */\n      0x015180\n        /* \"contracts/Staking.sol\":5916:5971  block.timestamp.sub(_staker[msg.sender].stakeStartTime) */\n      tag_114\n        /* \"contracts/Staking.sol\":5936:5943  _staker */\n      0x0a\n        /* \"contracts/Staking.sol\":5936:5955  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":5944:5954  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":5936:5955  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":5936:5970  _staker[msg.sender].stakeStartTime */\n      0x03\n      add\n      sload\n        /* \"contracts/Staking.sol\":5916:5931  block.timestamp */\n      timestamp\n        /* \"contracts/Staking.sol\":5916:5935  block.timestamp.sub */\n      tag_115\n      swap1\n        /* \"contracts/Staking.sol\":5916:5971  block.timestamp.sub(_staker[msg.sender].stakeStartTime) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_114:\n        /* \"contracts/Staking.sol\":5916:5975  block.timestamp.sub(_staker[msg.sender].stakeStartTime).div */\n      tag_116\n      swap1\n        /* \"contracts/Staking.sol\":5916:5983  block.timestamp.sub(_staker[msg.sender].stakeStartTime).div(1 days) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_113:\n        /* \"contracts/Staking.sol\":5899:5983  uint256 during = block.timestamp.sub(_staker[msg.sender].stakeStartTime).div(1 days) */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":5994:6005  uint256 fee */\n      0x00\n        /* \"contracts/Staking.sol\":6008:6011  100 */\n      0x64\n        /* \"contracts/Staking.sol\":5994:6011  uint256 fee = 100 */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":6022:6043  bool isLockupTimeOver */\n      0x00\n        /* \"contracts/Staking.sol\":6074:6075  0 */\n      dup1\n        /* \"contracts/Staking.sol\":6046:6053  _staker */\n      0x0a\n        /* \"contracts/Staking.sol\":6046:6065  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":6054:6064  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":6046:6065  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":6046:6070  _staker[msg.sender].mode */\n      0x02\n      add\n      sload\n        /* \"contracts/Staking.sol\":6046:6075  _staker[msg.sender].mode != 0 */\n      eq\n      iszero\n        /* \"contracts/Staking.sol\":6046:6206  _staker[msg.sender].mode != 0 ? during % _eventPeriod == 0 && during > 0 :... */\n      tag_117\n      jumpi\n        /* \"contracts/Staking.sol\":6153:6206  _staker[msg.sender].stakeStartTime.add(_lockupPeriod) */\n      tag_118\n        /* \"contracts/Staking.sol\":6192:6205  _lockupPeriod */\n      sload(0x05)\n        /* \"contracts/Staking.sol\":6153:6160  _staker */\n      0x0a\n        /* \"contracts/Staking.sol\":6153:6172  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":6161:6171  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":6153:6172  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":6153:6187  _staker[msg.sender].stakeStartTime */\n      0x03\n      add\n      sload\n        /* \"contracts/Staking.sol\":6153:6191  _staker[msg.sender].stakeStartTime.add */\n      tag_119\n      swap1\n        /* \"contracts/Staking.sol\":6153:6206  _staker[msg.sender].stakeStartTime.add(_lockupPeriod) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_118:\n        /* \"contracts/Staking.sol\":6134:6149  block.timestamp */\n      timestamp\n        /* \"contracts/Staking.sol\":6134:6206  block.timestamp >= _staker[msg.sender].stakeStartTime.add(_lockupPeriod) */\n      lt\n      iszero\n        /* \"contracts/Staking.sol\":6046:6206  _staker[msg.sender].mode != 0 ? during % _eventPeriod == 0 && during > 0 :... */\n      jump(tag_120)\n    tag_117:\n        /* \"contracts/Staking.sol\":6103:6104  0 */\n      0x00\n        /* \"contracts/Staking.sol\":6087:6099  _eventPeriod */\n      sload(0x02)\n        /* \"contracts/Staking.sol\":6078:6084  during */\n      dup5\n        /* \"contracts/Staking.sol\":6078:6099  during % _eventPeriod */\n      tag_121\n      swap2\n      swap1\n      tag_122\n      jump\t// in\n    tag_121:\n        /* \"contracts/Staking.sol\":6078:6104  during % _eventPeriod == 0 */\n      eq\n        /* \"contracts/Staking.sol\":6078:6118  during % _eventPeriod == 0 && during > 0 */\n      dup1\n      iszero\n      tag_123\n      jumpi\n      pop\n        /* \"contracts/Staking.sol\":6117:6118  0 */\n      0x00\n        /* \"contracts/Staking.sol\":6108:6114  during */\n      dup4\n        /* \"contracts/Staking.sol\":6108:6118  during > 0 */\n      gt\n        /* \"contracts/Staking.sol\":6078:6118  during % _eventPeriod == 0 && during > 0 */\n    tag_123:\n        /* \"contracts/Staking.sol\":6046:6206  _staker[msg.sender].mode != 0 ? during % _eventPeriod == 0 && during > 0 :... */\n    tag_120:\n        /* \"contracts/Staking.sol\":6022:6206  bool isLockupTimeOver = _staker[msg.sender].mode != 0 ? during % _eventPeriod == 0 && during > 0 :... */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":6222:6238  isLockupTimeOver */\n      dup1\n        /* \"contracts/Staking.sol\":6217:6290  if (!isLockupTimeOver) {... */\n      tag_124\n      jumpi\n        /* \"contracts/Staking.sol\":6261:6278  _unstakingFeeRate */\n      sload(0x01)\n        /* \"contracts/Staking.sol\":6255:6278  fee = _unstakingFeeRate */\n      swap2\n      pop\n        /* \"contracts/Staking.sol\":6217:6290  if (!isLockupTimeOver) {... */\n    tag_124:\n        /* \"contracts/Staking.sol\":6322:6384  amountTobeWithdrawn.sub(amountTobeWithdrawn.mul(fee).div(1e4)) */\n      tag_125\n        /* \"contracts/Staking.sol\":6346:6383  amountTobeWithdrawn.mul(fee).div(1e4) */\n      tag_126\n        /* \"contracts/Staking.sol\":6379:6382  1e4 */\n      0x2710\n        /* \"contracts/Staking.sol\":6346:6374  amountTobeWithdrawn.mul(fee) */\n      tag_127\n        /* \"contracts/Staking.sol\":6370:6373  fee */\n      dup6\n        /* \"contracts/Staking.sol\":6346:6365  amountTobeWithdrawn */\n      dup9\n        /* \"contracts/Staking.sol\":6346:6369  amountTobeWithdrawn.mul */\n      tag_128\n      swap1\n        /* \"contracts/Staking.sol\":6346:6374  amountTobeWithdrawn.mul(fee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_127:\n        /* \"contracts/Staking.sol\":6346:6378  amountTobeWithdrawn.mul(fee).div */\n      tag_116\n      swap1\n        /* \"contracts/Staking.sol\":6346:6383  amountTobeWithdrawn.mul(fee).div(1e4) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_126:\n        /* \"contracts/Staking.sol\":6322:6341  amountTobeWithdrawn */\n      dup6\n        /* \"contracts/Staking.sol\":6322:6345  amountTobeWithdrawn.sub */\n      tag_115\n      swap1\n        /* \"contracts/Staking.sol\":6322:6384  amountTobeWithdrawn.sub(amountTobeWithdrawn.mul(fee).div(1e4)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_125:\n        /* \"contracts/Staking.sol\":6300:6384  amountTobeWithdrawn = amountTobeWithdrawn.sub(amountTobeWithdrawn.mul(fee).div(1e4)) */\n      swap4\n      pop\n        /* \"contracts/Staking.sol\":6409:6445  totalStaked.sub(amountTobeWithdrawn) */\n      tag_129\n        /* \"contracts/Staking.sol\":6425:6444  amountTobeWithdrawn */\n      dup5\n        /* \"contracts/Staking.sol\":6409:6420  totalStaked */\n      sload(0x0b)\n        /* \"contracts/Staking.sol\":6409:6424  totalStaked.sub */\n      tag_115\n      swap1\n        /* \"contracts/Staking.sol\":6409:6445  totalStaked.sub(amountTobeWithdrawn) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_129:\n        /* \"contracts/Staking.sol\":6395:6406  totalStaked */\n      0x0b\n        /* \"contracts/Staking.sol\":6395:6445  totalStaked = totalStaked.sub(amountTobeWithdrawn) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":6491:6548  _staker[msg.sender].stakedAmount.sub(amountTobeWithdrawn) */\n      tag_130\n        /* \"contracts/Staking.sol\":6528:6547  amountTobeWithdrawn */\n      dup5\n        /* \"contracts/Staking.sol\":6491:6498  _staker */\n      0x0a\n        /* \"contracts/Staking.sol\":6491:6510  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":6499:6509  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":6491:6510  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":6491:6523  _staker[msg.sender].stakedAmount */\n      0x01\n      add\n      sload\n        /* \"contracts/Staking.sol\":6491:6527  _staker[msg.sender].stakedAmount.sub */\n      tag_115\n      swap1\n        /* \"contracts/Staking.sol\":6491:6548  _staker[msg.sender].stakedAmount.sub(amountTobeWithdrawn) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_130:\n        /* \"contracts/Staking.sol\":6456:6463  _staker */\n      0x0a\n        /* \"contracts/Staking.sol\":6456:6475  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":6464:6474  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":6456:6475  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":6456:6488  _staker[msg.sender].stakedAmount */\n      0x01\n      add\n        /* \"contracts/Staking.sol\":6456:6548  _staker[msg.sender].stakedAmount = _staker[msg.sender].stakedAmount.sub(amountTobeWithdrawn) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":6559:6610  token.safeTransfer(msg.sender, amountTobeWithdrawn) */\n      tag_131\n        /* \"contracts/Staking.sol\":6578:6588  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":6590:6609  amountTobeWithdrawn */\n      dup6\n        /* \"contracts/Staking.sol\":6559:6564  token */\n      0x0c\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Staking.sol\":6559:6577  token.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_132\n      swap1\n        /* \"contracts/Staking.sol\":6559:6610  token.safeTransfer(msg.sender, amountTobeWithdrawn) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_131:\n        /* \"contracts/Staking.sol\":6628:6669  Withdraw(msg.sender, amountTobeWithdrawn) */\n      0x884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364\n        /* \"contracts/Staking.sol\":6637:6647  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":6649:6668  amountTobeWithdrawn */\n      dup6\n        /* \"contracts/Staking.sol\":6628:6669  Withdraw(msg.sender, amountTobeWithdrawn) */\n      mload(0x40)\n      tag_133\n      swap3\n      swap2\n      swap1\n      tag_134\n      jump\t// in\n    tag_133:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Staking.sol\":5659:6740  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Staking.sol\":5617:6740  function withdraw(uint256 amount) external{... */\n      pop\n      jump\t// out\n        /* \"contracts/Staking.sol\":7958:8533  function harvest() public{... */\n    tag_37:\n        /* \"contracts/Staking.sol\":8004:8018  updateReward() */\n      tag_136\n        /* \"contracts/Staking.sol\":8004:8016  updateReward */\n      tag_112\n        /* \"contracts/Staking.sol\":8004:8018  updateReward() */\n      jump\t// in\n    tag_136:\n        /* \"contracts/Staking.sol\":8029:8050  uint256 rewardToClaim */\n      0x00\n        /* \"contracts/Staking.sol\":8053:8166  _staker[msg.sender].stakerCurrentReward.sub(_staker[msg.sender].stakerCurrentReward.mul(_rewardFeeRate).div(1e4)) */\n      tag_137\n        /* \"contracts/Staking.sol\":8097:8165  _staker[msg.sender].stakerCurrentReward.mul(_rewardFeeRate).div(1e4) */\n      tag_138\n        /* \"contracts/Staking.sol\":8161:8164  1e4 */\n      0x2710\n        /* \"contracts/Staking.sol\":8097:8156  _staker[msg.sender].stakerCurrentReward.mul(_rewardFeeRate) */\n      tag_139\n        /* \"contracts/Staking.sol\":8141:8155  _rewardFeeRate */\n      sload(0x04)\n        /* \"contracts/Staking.sol\":8097:8104  _staker */\n      0x0a\n        /* \"contracts/Staking.sol\":8097:8116  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":8105:8115  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":8097:8116  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":8097:8136  _staker[msg.sender].stakerCurrentReward */\n      0x00\n      add\n      sload\n        /* \"contracts/Staking.sol\":8097:8140  _staker[msg.sender].stakerCurrentReward.mul */\n      tag_128\n      swap1\n        /* \"contracts/Staking.sol\":8097:8156  _staker[msg.sender].stakerCurrentReward.mul(_rewardFeeRate) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_139:\n        /* \"contracts/Staking.sol\":8097:8160  _staker[msg.sender].stakerCurrentReward.mul(_rewardFeeRate).div */\n      tag_116\n      swap1\n        /* \"contracts/Staking.sol\":8097:8165  _staker[msg.sender].stakerCurrentReward.mul(_rewardFeeRate).div(1e4) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_138:\n        /* \"contracts/Staking.sol\":8053:8060  _staker */\n      0x0a\n        /* \"contracts/Staking.sol\":8053:8072  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":8061:8071  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":8053:8072  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":8053:8092  _staker[msg.sender].stakerCurrentReward */\n      0x00\n      add\n      sload\n        /* \"contracts/Staking.sol\":8053:8096  _staker[msg.sender].stakerCurrentReward.sub */\n      tag_115\n      swap1\n        /* \"contracts/Staking.sol\":8053:8166  _staker[msg.sender].stakerCurrentReward.sub(_staker[msg.sender].stakerCurrentReward.mul(_rewardFeeRate).div(1e4)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_137:\n        /* \"contracts/Staking.sol\":8029:8166  uint256 rewardToClaim = _staker[msg.sender].stakerCurrentReward.sub(_staker[msg.sender].stakerCurrentReward.mul(_rewardFeeRate).div(1e4)) */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":8211:8212  0 */\n      0x00\n        /* \"contracts/Staking.sol\":8195:8208  rewardToClaim */\n      dup2\n        /* \"contracts/Staking.sol\":8195:8212  rewardToClaim > 0 */\n      gt\n        /* \"contracts/Staking.sol\":8187:8233  require(rewardToClaim > 0, \"Nothing to claim\") */\n      tag_140\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_141\n      swap1\n      tag_142\n      jump\t// in\n    tag_141:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_140:\n        /* \"contracts/Staking.sol\":8264:8269  token */\n      0x0c\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Staking.sol\":8264:8279  token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/Staking.sol\":8288:8292  this */\n      address\n        /* \"contracts/Staking.sol\":8264:8294  token.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_143\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_143:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_145\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_145:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_146\n      swap2\n      swap1\n      tag_147\n      jump\t// in\n    tag_146:\n        /* \"contracts/Staking.sol\":8248:8261  rewardToClaim */\n      dup2\n        /* \"contracts/Staking.sol\":8248:8294  rewardToClaim > token.balanceOf(address(this)) */\n      gt\n        /* \"contracts/Staking.sol\":8244:8355  if (rewardToClaim > token.balanceOf(address(this)))... */\n      iszero\n      tag_148\n      jumpi\n        /* \"contracts/Staking.sol\":8325:8330  token */\n      0x0c\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Staking.sol\":8325:8340  token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/Staking.sol\":8349:8353  this */\n      address\n        /* \"contracts/Staking.sol\":8325:8355  token.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_149\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_149:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_151\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_151:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_152\n      swap2\n      swap1\n      tag_147\n      jump\t// in\n    tag_152:\n        /* \"contracts/Staking.sol\":8309:8355  rewardToClaim = token.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":8244:8355  if (rewardToClaim > token.balanceOf(address(this)))... */\n    tag_148:\n        /* \"contracts/Staking.sol\":8366:8411  token.safeTransfer(msg.sender, rewardToClaim) */\n      tag_153\n        /* \"contracts/Staking.sol\":8385:8395  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":8397:8410  rewardToClaim */\n      dup3\n        /* \"contracts/Staking.sol\":8366:8371  token */\n      0x0c\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Staking.sol\":8366:8384  token.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_132\n      swap1\n        /* \"contracts/Staking.sol\":8366:8411  token.safeTransfer(msg.sender, rewardToClaim) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_153:\n        /* \"contracts/Staking.sol\":8464:8465  0 */\n      0x00\n        /* \"contracts/Staking.sol\":8422:8429  _staker */\n      0x0a\n        /* \"contracts/Staking.sol\":8422:8441  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":8430:8440  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":8422:8441  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":8422:8461  _staker[msg.sender].stakerCurrentReward */\n      0x00\n      add\n        /* \"contracts/Staking.sol\":8422:8465  _staker[msg.sender].stakerCurrentReward = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":8491:8525  Harvest(msg.sender, rewardToClaim) */\n      0xc9695243a805adb74c91f28311176c65b417e842d5699893cef56d18bfa48cba\n        /* \"contracts/Staking.sol\":8499:8509  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":8511:8524  rewardToClaim */\n      dup3\n        /* \"contracts/Staking.sol\":8491:8525  Harvest(msg.sender, rewardToClaim) */\n      mload(0x40)\n      tag_154\n      swap3\n      swap2\n      swap1\n      tag_134\n      jump\t// in\n    tag_154:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Staking.sol\":7983:8533  {... */\n      pop\n        /* \"contracts/Staking.sol\":7958:8533  function harvest() public{... */\n      jump\t// out\n        /* \"contracts/Staking.sol\":4771:5173  function isLocked(address _address) public view returns (uint256) {... */\n    tag_41:\n        /* \"contracts/Staking.sol\":4828:4835  uint256 */\n      0x00\n        /* \"contracts/Staking.sol\":4882:4886  0x55 */\n      0x55\n        /* \"contracts/Staking.sol\":4854:4861  _staker */\n      0x0a\n        /* \"contracts/Staking.sol\":4854:4871  _staker[_address] */\n      0x00\n        /* \"contracts/Staking.sol\":4862:4870  _address */\n      dup5\n        /* \"contracts/Staking.sol\":4854:4871  _staker[_address] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":4854:4878  _staker[_address].staked */\n      0x05\n      add\n      sload\n        /* \"contracts/Staking.sol\":4854:4886  _staker[_address].staked != 0x55 */\n      eq\n        /* \"contracts/Staking.sol\":4850:4909  if (_staker[_address].staked != 0x55)... */\n      tag_156\n      jumpi\n        /* \"contracts/Staking.sol\":4908:4909  1 */\n      0x01\n        /* \"contracts/Staking.sol\":4901:4909  return 1 */\n      swap1\n      pop\n      jump(tag_155)\n        /* \"contracts/Staking.sol\":4850:4909  if (_staker[_address].staked != 0x55)... */\n    tag_156:\n        /* \"contracts/Staking.sol\":4950:4951  0 */\n      0x00\n        /* \"contracts/Staking.sol\":4924:4931  _staker */\n      0x0a\n        /* \"contracts/Staking.sol\":4924:4941  _staker[_address] */\n      0x00\n        /* \"contracts/Staking.sol\":4932:4940  _address */\n      dup5\n        /* \"contracts/Staking.sol\":4924:4941  _staker[_address] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":4924:4946  _staker[_address].mode */\n      0x02\n      add\n      sload\n        /* \"contracts/Staking.sol\":4924:4951  _staker[_address].mode != 0 */\n      eq\n        /* \"contracts/Staking.sol\":4920:5165  if (_staker[_address].mode != 0)... */\n      tag_157\n      jumpi\n        /* \"contracts/Staking.sol\":5041:5042  0 */\n      0x00\n        /* \"contracts/Staking.sol\":5030:5036  7 days */\n      0x093a80\n        /* \"contracts/Staking.sol\":4973:5026  block.timestamp.sub(_staker[_address].stakeStartTime) */\n      tag_158\n        /* \"contracts/Staking.sol\":4993:5000  _staker */\n      0x0a\n        /* \"contracts/Staking.sol\":4993:5010  _staker[_address] */\n      0x00\n        /* \"contracts/Staking.sol\":5001:5009  _address */\n      dup7\n        /* \"contracts/Staking.sol\":4993:5010  _staker[_address] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":4993:5025  _staker[_address].stakeStartTime */\n      0x03\n      add\n      sload\n        /* \"contracts/Staking.sol\":4973:4988  block.timestamp */\n      timestamp\n        /* \"contracts/Staking.sol\":4973:4992  block.timestamp.sub */\n      tag_115\n      swap1\n        /* \"contracts/Staking.sol\":4973:5026  block.timestamp.sub(_staker[_address].stakeStartTime) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_158:\n        /* \"contracts/Staking.sol\":4973:5037  block.timestamp.sub(_staker[_address].stakeStartTime) % (7 days) */\n      tag_159\n      swap2\n      swap1\n      tag_122\n      jump\t// in\n    tag_159:\n        /* \"contracts/Staking.sol\":4973:5042  block.timestamp.sub(_staker[_address].stakeStartTime) % (7 days) == 0 */\n      eq\n        /* \"contracts/Staking.sol\":4973:5050  block.timestamp.sub(_staker[_address].stakeStartTime) % (7 days) == 0 ? 0 : 1 */\n      tag_160\n      jumpi\n        /* \"contracts/Staking.sol\":5049:5050  1 */\n      0x01\n        /* \"contracts/Staking.sol\":4973:5050  block.timestamp.sub(_staker[_address].stakeStartTime) % (7 days) == 0 ? 0 : 1 */\n      jump(tag_161)\n    tag_160:\n        /* \"contracts/Staking.sol\":5045:5046  0 */\n      0x00\n        /* \"contracts/Staking.sol\":4973:5050  block.timestamp.sub(_staker[_address].stakeStartTime) % (7 days) == 0 ? 0 : 1 */\n    tag_161:\n        /* \"contracts/Staking.sol\":4966:5050  return block.timestamp.sub(_staker[_address].stakeStartTime) % (7 days) == 0 ? 0 : 1 */\n      0xff\n      and\n      swap1\n      pop\n      jump(tag_155)\n        /* \"contracts/Staking.sol\":4920:5165  if (_staker[_address].mode != 0)... */\n    tag_157:\n        /* \"contracts/Staking.sol\":5144:5157  _lockupPeriod */\n      sload(0x05)\n        /* \"contracts/Staking.sol\":5087:5140  block.timestamp.sub(_staker[_address].stakeStartTime) */\n      tag_163\n        /* \"contracts/Staking.sol\":5107:5114  _staker */\n      0x0a\n        /* \"contracts/Staking.sol\":5107:5124  _staker[_address] */\n      0x00\n        /* \"contracts/Staking.sol\":5115:5123  _address */\n      dup6\n        /* \"contracts/Staking.sol\":5107:5124  _staker[_address] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":5107:5139  _staker[_address].stakeStartTime */\n      0x03\n      add\n      sload\n        /* \"contracts/Staking.sol\":5087:5102  block.timestamp */\n      timestamp\n        /* \"contracts/Staking.sol\":5087:5106  block.timestamp.sub */\n      tag_115\n      swap1\n        /* \"contracts/Staking.sol\":5087:5140  block.timestamp.sub(_staker[_address].stakeStartTime) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_163:\n        /* \"contracts/Staking.sol\":5087:5157  block.timestamp.sub(_staker[_address].stakeStartTime) >= _lockupPeriod */\n      lt\n      iszero\n        /* \"contracts/Staking.sol\":5087:5165  block.timestamp.sub(_staker[_address].stakeStartTime) >= _lockupPeriod ? 0 : 1 */\n      tag_164\n      jumpi\n        /* \"contracts/Staking.sol\":5164:5165  1 */\n      0x01\n        /* \"contracts/Staking.sol\":5087:5165  block.timestamp.sub(_staker[_address].stakeStartTime) >= _lockupPeriod ? 0 : 1 */\n      jump(tag_165)\n    tag_164:\n        /* \"contracts/Staking.sol\":5160:5161  0 */\n      0x00\n        /* \"contracts/Staking.sol\":5087:5165  block.timestamp.sub(_staker[_address].stakeStartTime) >= _lockupPeriod ? 0 : 1 */\n    tag_165:\n        /* \"contracts/Staking.sol\":5080:5165  return block.timestamp.sub(_staker[_address].stakeStartTime) >= _lockupPeriod ? 0 : 1 */\n      0xff\n      and\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":4771:5173  function isLocked(address _address) public view returns (uint256) {... */\n    tag_155:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Staking.sol\":7525:7695  function setLockupTime(uint256 lockupTime) external onlyOwner {... */\n    tag_45:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_167\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_168\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_167:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_169\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_72\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_169:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_170\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_171\n      swap1\n      tag_172\n      jump\t// in\n    tag_171:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_170:\n        /* \"contracts/Staking.sol\":7621:7622  0 */\n      0x00\n        /* \"contracts/Staking.sol\":7608:7618  lockupTime */\n      dup2\n        /* \"contracts/Staking.sol\":7608:7622  lockupTime > 0 */\n      gt\n        /* \"contracts/Staking.sol\":7600:7640  require(lockupTime > 0, \"Can't be zero\") */\n      tag_174\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_175\n      swap1\n      tag_176\n      jump\t// in\n    tag_175:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_174:\n        /* \"contracts/Staking.sol\":7677:7687  lockupTime */\n      dup1\n        /* \"contracts/Staking.sol\":7661:7674  _lockupPeriod */\n      0x05\n        /* \"contracts/Staking.sol\":7661:7687  _lockupPeriod = lockupTime */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":7525:7695  function setLockupTime(uint256 lockupTime) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Staking.sol\":2746:3625  function startStaking(uint256 _amount, uint256 _mode) external {... */\n    tag_49:\n        /* \"contracts/Staking.sol\":2848:2849  0 */\n      0x00\n        /* \"contracts/Staking.sol\":2838:2845  _amount */\n      dup3\n        /* \"contracts/Staking.sol\":2838:2849  _amount > 0 */\n      gt\n        /* \"contracts/Staking.sol\":2830:2885  require(_amount > 0, \"Amount should be greater than 0\") */\n      tag_178\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_179\n      swap1\n      tag_107\n      jump\t// in\n    tag_179:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_178:\n        /* \"contracts/Staking.sol\":2934:2941  _amount */\n      dup2\n        /* \"contracts/Staking.sol\":2904:2909  token */\n      0x0c\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Staking.sol\":2904:2919  token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/Staking.sol\":2920:2930  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":2904:2931  token.balanceOf(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_180\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_180:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_182\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_182:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_183\n      swap2\n      swap1\n      tag_147\n      jump\t// in\n    tag_183:\n        /* \"contracts/Staking.sol\":2904:2941  token.balanceOf(msg.sender) > _amount */\n      gt\n        /* \"contracts/Staking.sol\":2896:2959  require(token.balanceOf(msg.sender) > _amount, \"Insufficient!\") */\n      tag_184\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_185\n      swap1\n      tag_186\n      jump\t// in\n    tag_185:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_184:\n        /* \"contracts/Staking.sol\":3008:3012  0x55 */\n      0x55\n        /* \"contracts/Staking.sol\":2978:2985  _staker */\n      0x0a\n        /* \"contracts/Staking.sol\":2978:2997  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":2986:2996  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":2978:2997  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":2978:3004  _staker[msg.sender].staked */\n      0x05\n      add\n      sload\n        /* \"contracts/Staking.sol\":2978:3012  _staker[msg.sender].staked != 0x55 */\n      eq\n      iszero\n        /* \"contracts/Staking.sol\":2970:3032  require(_staker[msg.sender].staked != 0x55, \"Already started\") */\n      tag_187\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_188\n      swap1\n      tag_189\n      jump\t// in\n    tag_188:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_187:\n        /* \"contracts/Staking.sol\":3066:3067  0 */\n      0x00\n        /* \"contracts/Staking.sol\":3057:3062  _mode */\n      dup2\n        /* \"contracts/Staking.sol\":3057:3067  _mode == 0 */\n      eq\n        /* \"contracts/Staking.sol\":3053:3396  if (_mode == 0) require(_amount > 0);... */\n      iszero\n      tag_190\n      jumpi\n        /* \"contracts/Staking.sol\":3087:3088  0 */\n      0x00\n        /* \"contracts/Staking.sol\":3077:3084  _amount */\n      dup3\n        /* \"contracts/Staking.sol\":3077:3088  _amount > 0 */\n      gt\n        /* \"contracts/Staking.sol\":3069:3089  require(_amount > 0) */\n      tag_191\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_191:\n        /* \"contracts/Staking.sol\":3053:3396  if (_mode == 0) require(_amount > 0);... */\n      jump(tag_192)\n    tag_190:\n        /* \"contracts/Staking.sol\":3118:3119  1 */\n      0x01\n        /* \"contracts/Staking.sol\":3109:3114  _mode */\n      dup2\n        /* \"contracts/Staking.sol\":3109:3119  _mode == 1 */\n      eq\n        /* \"contracts/Staking.sol\":3105:3396  if (_mode == 1) require(_amount >= _minStakeAmount_c, \"Insufficient\");... */\n      iszero\n      tag_193\n      jumpi\n        /* \"contracts/Staking.sol\":3140:3157  _minStakeAmount_c */\n      sload(0x08)\n        /* \"contracts/Staking.sol\":3129:3136  _amount */\n      dup3\n        /* \"contracts/Staking.sol\":3129:3157  _amount >= _minStakeAmount_c */\n      lt\n      iszero\n        /* \"contracts/Staking.sol\":3121:3174  require(_amount >= _minStakeAmount_c, \"Insufficient\") */\n      tag_194\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_195\n      swap1\n      tag_196\n      jump\t// in\n    tag_195:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_194:\n        /* \"contracts/Staking.sol\":3105:3396  if (_mode == 1) require(_amount >= _minStakeAmount_c, \"Insufficient\");... */\n      jump(tag_197)\n    tag_193:\n        /* \"contracts/Staking.sol\":3203:3204  2 */\n      0x02\n        /* \"contracts/Staking.sol\":3194:3199  _mode */\n      dup2\n        /* \"contracts/Staking.sol\":3194:3204  _mode == 2 */\n      eq\n        /* \"contracts/Staking.sol\":3190:3396  if (_mode == 2) require(_amount >= _minStakeAmount_s, \"Insufficient\");... */\n      iszero\n      tag_198\n      jumpi\n        /* \"contracts/Staking.sol\":3225:3242  _minStakeAmount_s */\n      sload(0x07)\n        /* \"contracts/Staking.sol\":3214:3221  _amount */\n      dup3\n        /* \"contracts/Staking.sol\":3214:3242  _amount >= _minStakeAmount_s */\n      lt\n      iszero\n        /* \"contracts/Staking.sol\":3206:3259  require(_amount >= _minStakeAmount_s, \"Insufficient\") */\n      tag_199\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_200\n      swap1\n      tag_196\n      jump\t// in\n    tag_200:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_199:\n        /* \"contracts/Staking.sol\":3190:3396  if (_mode == 2) require(_amount >= _minStakeAmount_s, \"Insufficient\");... */\n      jump(tag_201)\n    tag_198:\n        /* \"contracts/Staking.sol\":3288:3289  3 */\n      0x03\n        /* \"contracts/Staking.sol\":3279:3284  _mode */\n      dup2\n        /* \"contracts/Staking.sol\":3279:3289  _mode == 3 */\n      eq\n        /* \"contracts/Staking.sol\":3275:3396  if (_mode == 3) require(_amount >= _minStakeAmount_g, \"Insufficient\");... */\n      iszero\n      tag_202\n      jumpi\n        /* \"contracts/Staking.sol\":3310:3327  _minStakeAmount_g */\n      sload(0x06)\n        /* \"contracts/Staking.sol\":3299:3306  _amount */\n      dup3\n        /* \"contracts/Staking.sol\":3299:3327  _amount >= _minStakeAmount_g */\n      lt\n      iszero\n        /* \"contracts/Staking.sol\":3291:3344  require(_amount >= _minStakeAmount_g, \"Insufficient\") */\n      tag_203\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_204\n      swap1\n      tag_196\n      jump\t// in\n    tag_204:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_203:\n        /* \"contracts/Staking.sol\":3275:3396  if (_mode == 3) require(_amount >= _minStakeAmount_g, \"Insufficient\");... */\n      jump(tag_205)\n    tag_202:\n        /* \"contracts/Staking.sol\":3378:3379  0 */\n      0x00\n        /* \"contracts/Staking.sol\":3368:3375  _amount */\n      dup3\n        /* \"contracts/Staking.sol\":3368:3379  _amount < 0 */\n      lt\n        /* \"contracts/Staking.sol\":3360:3396  require(_amount < 0, \"Invalid Mode\") */\n      tag_206\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_207\n      swap1\n      tag_208\n      jump\t// in\n    tag_207:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_206:\n        /* \"contracts/Staking.sol\":3275:3396  if (_mode == 3) require(_amount >= _minStakeAmount_g, \"Insufficient\");... */\n    tag_205:\n        /* \"contracts/Staking.sol\":3190:3396  if (_mode == 2) require(_amount >= _minStakeAmount_s, \"Insufficient\");... */\n    tag_201:\n        /* \"contracts/Staking.sol\":3105:3396  if (_mode == 1) require(_amount >= _minStakeAmount_c, \"Insufficient\");... */\n    tag_197:\n        /* \"contracts/Staking.sol\":3053:3396  if (_mode == 0) require(_amount > 0);... */\n    tag_192:\n        /* \"contracts/Staking.sol\":3444:3449  _mode */\n      dup1\n        /* \"contracts/Staking.sol\":3417:3424  _staker */\n      0x0a\n        /* \"contracts/Staking.sol\":3417:3436  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":3425:3435  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":3417:3436  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":3417:3441  _staker[msg.sender].mode */\n      0x02\n      add\n        /* \"contracts/Staking.sol\":3417:3449  _staker[msg.sender].mode = _mode */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":3497:3512  block.timestamp */\n      timestamp\n        /* \"contracts/Staking.sol\":3460:3467  _staker */\n      0x0a\n        /* \"contracts/Staking.sol\":3460:3479  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":3468:3478  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":3460:3479  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":3460:3494  _staker[msg.sender].stakeStartTime */\n      0x03\n      add\n        /* \"contracts/Staking.sol\":3460:3512  _staker[msg.sender].stakeStartTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":3552:3556  0x55 */\n      0x55\n        /* \"contracts/Staking.sol\":3523:3530  _staker */\n      0x0a\n        /* \"contracts/Staking.sol\":3523:3542  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":3531:3541  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":3523:3542  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":3523:3549  _staker[msg.sender].staked */\n      0x05\n      add\n        /* \"contracts/Staking.sol\":3523:3556  _staker[msg.sender].staked = 0x55 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":3567:3575  _stakers */\n      0x09\n        /* \"contracts/Staking.sol\":3581:3591  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":3567:3592  _stakers.push(msg.sender) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":3603:3617  stake(_amount) */\n      tag_210\n        /* \"contracts/Staking.sol\":3609:3616  _amount */\n      dup3\n        /* \"contracts/Staking.sol\":3603:3608  stake */\n      tag_83\n        /* \"contracts/Staking.sol\":3603:3617  stake(_amount) */\n      jump\t// in\n    tag_210:\n        /* \"contracts/Staking.sol\":2746:3625  function startStaking(uint256 _amount, uint256 _mode) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Staking.sol\":4386:4489  function getNumberofStakers() public view returns (uint256) {... */\n    tag_51:\n        /* \"contracts/Staking.sol\":4437:4444  uint256 */\n      0x00\n        /* \"contracts/Staking.sol\":4466:4474  _stakers */\n      0x09\n        /* \"contracts/Staking.sol\":4466:4481  _stakers.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":4459:4481  return _stakers.length */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":4386:4489  function getNumberofStakers() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Staking.sol\":7758:7917  function rewardToHarvest() public view returns (uint256){... */\n    tag_54:\n        /* \"contracts/Staking.sol\":7806:7813  uint256 */\n      0x00\n        /* \"contracts/Staking.sol\":7870:7877  _staker */\n      0x0a\n        /* \"contracts/Staking.sol\":7870:7889  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":7878:7888  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":7870:7889  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":7870:7909  _staker[msg.sender].stakerCurrentReward */\n      0x00\n      add\n      sload\n        /* \"contracts/Staking.sol\":7863:7909  return _staker[msg.sender].stakerCurrentReward */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":7758:7917  function rewardToHarvest() public view returns (uint256){... */\n      swap1\n      jump\t// out\n        /* \"contracts/Staking.sol\":5333:5468  function rewardAmount(address _address) public view returns (uint256) {... */\n    tag_58:\n        /* \"contracts/Staking.sol\":5394:5401  uint256 */\n      0x00\n        /* \"contracts/Staking.sol\":5423:5430  _staker */\n      0x0a\n        /* \"contracts/Staking.sol\":5423:5440  _staker[_address] */\n      0x00\n        /* \"contracts/Staking.sol\":5431:5439  _address */\n      dup4\n        /* \"contracts/Staking.sol\":5423:5440  _staker[_address] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":5423:5460  _staker[_address].stakerCurrentReward */\n      0x00\n      add\n      sload\n        /* \"contracts/Staking.sol\":5416:5460  return _staker[_address].stakerCurrentReward */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":5333:5468  function rewardAmount(address _address) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Staking.sol\":6987:7235  function setEventPeriod(uint256 __eventPeriod) external onlyOwner {... */\n    tag_62:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_215\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_168\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_215:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_216\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_72\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_216:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_217\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_218\n      swap1\n      tag_172\n      jump\t// in\n    tag_218:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_217:\n        /* \"contracts/Staking.sol\":7098:7099  0 */\n      0x00\n        /* \"contracts/Staking.sol\":7082:7095  __eventPeriod */\n      dup2\n        /* \"contracts/Staking.sol\":7082:7099  __eventPeriod > 0 */\n      gt\n        /* \"contracts/Staking.sol\":7074:7127  require(__eventPeriod > 0, \"Invalid Lockup Duration\") */\n      tag_220\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_221\n      swap1\n      tag_222\n      jump\t// in\n    tag_221:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_220:\n        /* \"contracts/Staking.sol\":7155:7180  __eventPeriod.mul(1 days) */\n      tag_223\n        /* \"contracts/Staking.sol\":7173:7179  1 days */\n      0x015180\n        /* \"contracts/Staking.sol\":7155:7168  __eventPeriod */\n      dup3\n        /* \"contracts/Staking.sol\":7155:7172  __eventPeriod.mul */\n      tag_128\n      swap1\n        /* \"contracts/Staking.sol\":7155:7180  __eventPeriod.mul(1 days) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_223:\n        /* \"contracts/Staking.sol\":7140:7152  _eventPeriod */\n      0x02\n        /* \"contracts/Staking.sol\":7140:7180  _eventPeriod = __eventPeriod.mul(1 days) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":7198:7227  SetEventPeriod(__eventPeriod) */\n      0x189bda9782663c67a3f95c0aa5455924c711210b00281c60ead2f0dd8dbc924c\n        /* \"contracts/Staking.sol\":7213:7226  __eventPeriod */\n      dup2\n        /* \"contracts/Staking.sol\":7198:7227  SetEventPeriod(__eventPeriod) */\n      mload(0x40)\n      tag_224\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_224:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Staking.sol\":6987:7235  function setEventPeriod(uint256 __eventPeriod) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_64:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_226\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_168\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_226:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_227\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_72\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_227:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_228\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_229\n      swap1\n      tag_172\n      jump\t// in\n    tag_229:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_228:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      tag_231\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1759:1760  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1750  _transferOwnership */\n      tag_232\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_231:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/Staking.sol\":5476:5570  function getRewardRate() public view returns (uint256) {... */\n    tag_66:\n        /* \"contracts/Staking.sol\":5522:5529  uint256 */\n      0x00\n        /* \"contracts/Staking.sol\":5551:5562  _rewardRate */\n      sload(0x03)\n        /* \"contracts/Staking.sol\":5544:5562  return _rewardRate */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":5476:5570  function getRewardRate() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Staking.sol\":1173:1199  uint256 public totalStaked */\n    tag_69:\n      sload(0x0b)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_72:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1101:1114  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Staking.sol\":7243:7517  function setUnstakingFeeRate(uint256 __unstakingFeeRate) external onlyOwner {... */\n    tag_77:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_236\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_168\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_236:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_237\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_72\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_237:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_238\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_239\n      swap1\n      tag_172\n      jump\t// in\n    tag_239:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_238:\n        /* \"contracts/Staking.sol\":7369:7370  0 */\n      0x00\n        /* \"contracts/Staking.sol\":7348:7366  __unstakingFeeRate */\n      dup2\n        /* \"contracts/Staking.sol\":7348:7370  __unstakingFeeRate > 0 */\n      gt\n        /* \"contracts/Staking.sol\":7340:7401  require(__unstakingFeeRate > 0, \"Invalid Unstaking Fee Rate\") */\n      tag_241\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_242\n      swap1\n      tag_243\n      jump\t// in\n    tag_242:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_241:\n        /* \"contracts/Staking.sol\":7434:7452  __unstakingFeeRate */\n      dup1\n        /* \"contracts/Staking.sol\":7414:7431  _unstakingFeeRate */\n      0x01\n        /* \"contracts/Staking.sol\":7414:7452  _unstakingFeeRate = __unstakingFeeRate */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":7470:7509  SetUnstakingFeeRate(__unstakingFeeRate) */\n      0x150c688dd7595bf7862b8ab1fe46756450eb7d731037942b3bbc46f3f0e21b81\n        /* \"contracts/Staking.sol\":7490:7508  __unstakingFeeRate */\n      dup2\n        /* \"contracts/Staking.sol\":7470:7509  SetUnstakingFeeRate(__unstakingFeeRate) */\n      mload(0x40)\n      tag_244\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_244:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Staking.sol\":7243:7517  function setUnstakingFeeRate(uint256 __unstakingFeeRate) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Staking.sol\":6752:6979  function setRewardRate(uint256 __rewardRate) external onlyOwner {... */\n    tag_80:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_246\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_168\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_246:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_247\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_72\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_247:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_248\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_249\n      swap1\n      tag_172\n      jump\t// in\n    tag_249:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_248:\n        /* \"contracts/Staking.sol\":6860:6861  0 */\n      0x00\n        /* \"contracts/Staking.sol\":6845:6857  __rewardRate */\n      dup2\n        /* \"contracts/Staking.sol\":6845:6861  __rewardRate > 0 */\n      gt\n        /* \"contracts/Staking.sol\":6837:6879  require(__rewardRate > 0, \"Invalid value\") */\n      tag_251\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_252\n      swap1\n      tag_253\n      jump\t// in\n    tag_252:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_251:\n        /* \"contracts/Staking.sol\":6914:6926  __rewardRate */\n      dup1\n        /* \"contracts/Staking.sol\":6900:6911  _rewardRate */\n      0x03\n        /* \"contracts/Staking.sol\":6900:6926  _rewardRate = __rewardRate */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":6944:6971  SetRewardRate(__rewardRate) */\n      0x1946fb78c7ca778b54d82cabaac5ba67cf446f58d0ff1f8ceaebb6150e54e44f\n        /* \"contracts/Staking.sol\":6958:6970  __rewardRate */\n      dup2\n        /* \"contracts/Staking.sol\":6944:6971  SetRewardRate(__rewardRate) */\n      mload(0x40)\n      tag_254\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_254:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Staking.sol\":6752:6979  function setRewardRate(uint256 __rewardRate) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Staking.sol\":3693:4275  function stake(uint256 _amount) public{... */\n    tag_83:\n        /* \"contracts/Staking.sol\":3770:3771  0 */\n      0x00\n        /* \"contracts/Staking.sol\":3760:3767  _amount */\n      dup2\n        /* \"contracts/Staking.sol\":3760:3771  _amount > 0 */\n      gt\n        /* \"contracts/Staking.sol\":3752:3807  require(_amount > 0, \"Amount should be greater than 0\") */\n      tag_256\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_257\n      swap1\n      tag_107\n      jump\t// in\n    tag_257:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_256:\n        /* \"contracts/Staking.sol\":3856:3863  _amount */\n      dup1\n        /* \"contracts/Staking.sol\":3826:3831  token */\n      0x0c\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Staking.sol\":3826:3841  token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/Staking.sol\":3842:3852  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":3826:3853  token.balanceOf(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_258\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_258:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_260\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_260:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_261\n      swap2\n      swap1\n      tag_147\n      jump\t// in\n    tag_261:\n        /* \"contracts/Staking.sol\":3826:3863  token.balanceOf(msg.sender) > _amount */\n      gt\n        /* \"contracts/Staking.sol\":3818:3881  require(token.balanceOf(msg.sender) > _amount, \"Insufficient!\") */\n      tag_262\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_263\n      swap1\n      tag_186\n      jump\t// in\n    tag_263:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_262:\n        /* \"contracts/Staking.sol\":3930:3934  0x55 */\n      0x55\n        /* \"contracts/Staking.sol\":3900:3907  _staker */\n      0x0a\n        /* \"contracts/Staking.sol\":3900:3919  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":3908:3918  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":3900:3919  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":3900:3926  _staker[msg.sender].staked */\n      0x05\n      add\n      sload\n        /* \"contracts/Staking.sol\":3900:3934  _staker[msg.sender].staked == 0x55 */\n      eq\n        /* \"contracts/Staking.sol\":3892:3960  require(_staker[msg.sender].staked == 0x55, \"Error: invalid staker\") */\n      tag_264\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_265\n      swap1\n      tag_266\n      jump\t// in\n    tag_265:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_264:\n        /* \"contracts/Staking.sol\":3981:3995  updateReward() */\n      tag_267\n        /* \"contracts/Staking.sol\":3981:3993  updateReward */\n      tag_112\n        /* \"contracts/Staking.sol\":3981:3995  updateReward() */\n      jump\t// in\n    tag_267:\n        /* \"contracts/Staking.sol\":4016:4074  token.safeTransferFrom(msg.sender, address(this), _amount) */\n      tag_268\n        /* \"contracts/Staking.sol\":4039:4049  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":4059:4063  this */\n      address\n        /* \"contracts/Staking.sol\":4066:4073  _amount */\n      dup4\n        /* \"contracts/Staking.sol\":4016:4021  token */\n      0x0c\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Staking.sol\":4016:4038  token.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_269\n      swap1\n        /* \"contracts/Staking.sol\":4016:4074  token.safeTransferFrom(msg.sender, address(this), _amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_268:\n        /* \"contracts/Staking.sol\":4120:4165  _staker[msg.sender].stakedAmount.add(_amount) */\n      tag_270\n        /* \"contracts/Staking.sol\":4157:4164  _amount */\n      dup2\n        /* \"contracts/Staking.sol\":4120:4127  _staker */\n      0x0a\n        /* \"contracts/Staking.sol\":4120:4139  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":4128:4138  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":4120:4139  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":4120:4152  _staker[msg.sender].stakedAmount */\n      0x01\n      add\n      sload\n        /* \"contracts/Staking.sol\":4120:4156  _staker[msg.sender].stakedAmount.add */\n      tag_119\n      swap1\n        /* \"contracts/Staking.sol\":4120:4165  _staker[msg.sender].stakedAmount.add(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_270:\n        /* \"contracts/Staking.sol\":4085:4092  _staker */\n      0x0a\n        /* \"contracts/Staking.sol\":4085:4104  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":4093:4103  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":4085:4104  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":4085:4117  _staker[msg.sender].stakedAmount */\n      0x01\n      add\n        /* \"contracts/Staking.sol\":4085:4165  _staker[msg.sender].stakedAmount = _staker[msg.sender].stakedAmount.add(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":4190:4214  totalStaked.add(_amount) */\n      tag_271\n        /* \"contracts/Staking.sol\":4206:4213  _amount */\n      dup2\n        /* \"contracts/Staking.sol\":4190:4201  totalStaked */\n      sload(0x0b)\n        /* \"contracts/Staking.sol\":4190:4205  totalStaked.add */\n      tag_119\n      swap1\n        /* \"contracts/Staking.sol\":4190:4214  totalStaked.add(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_271:\n        /* \"contracts/Staking.sol\":4176:4187  totalStaked */\n      0x0b\n        /* \"contracts/Staking.sol\":4176:4214  totalStaked = totalStaked.add(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":4240:4267  Staked(msg.sender, _amount) */\n      0x9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d\n        /* \"contracts/Staking.sol\":4247:4257  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":4259:4266  _amount */\n      dup3\n        /* \"contracts/Staking.sol\":4240:4267  Staked(msg.sender, _amount) */\n      mload(0x40)\n      tag_272\n      swap3\n      swap2\n      swap1\n      tag_134\n      jump\t// in\n    tag_272:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Staking.sol\":3693:4275  function stake(uint256 _amount) public{... */\n      pop\n      jump\t// out\n        /* \"contracts/Staking.sol\":4497:4631  function getStakerMode(address _address) public view returns (uint256) {... */\n    tag_86:\n        /* \"contracts/Staking.sol\":4559:4566  uint256 */\n      0x00\n        /* \"contracts/Staking.sol\":4614:4615  0 */\n      dup1\n        /* \"contracts/Staking.sol\":4588:4595  _staker */\n      0x0a\n        /* \"contracts/Staking.sol\":4588:4605  _staker[_address] */\n      0x00\n        /* \"contracts/Staking.sol\":4596:4604  _address */\n      dup5\n        /* \"contracts/Staking.sol\":4588:4605  _staker[_address] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":4588:4610  _staker[_address].mode */\n      0x02\n      add\n      sload\n        /* \"contracts/Staking.sol\":4588:4615  _staker[_address].mode == 0 */\n      eq\n        /* \"contracts/Staking.sol\":4588:4623  _staker[_address].mode == 0 ? 0 : 1 */\n      tag_274\n      jumpi\n        /* \"contracts/Staking.sol\":4622:4623  1 */\n      0x01\n        /* \"contracts/Staking.sol\":4588:4623  _staker[_address].mode == 0 ? 0 : 1 */\n      jump(tag_275)\n    tag_274:\n        /* \"contracts/Staking.sol\":4618:4619  0 */\n      0x00\n        /* \"contracts/Staking.sol\":4588:4623  _staker[_address].mode == 0 ? 0 : 1 */\n    tag_275:\n        /* \"contracts/Staking.sol\":4581:4623  return _staker[_address].mode == 0 ? 0 : 1 */\n      0xff\n      and\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":4497:4631  function getStakerMode(address _address) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_90:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_277\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_168\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_277:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_278\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_72\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_278:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_279\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_280\n      swap1\n      tag_172\n      jump\t// in\n    tag_280:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_279:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2026:2027  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2028  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2014  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2028  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_282\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_283\n      swap1\n      tag_284\n      jump\t// in\n    tag_283:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_282:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      tag_285\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2100:2108  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2099  _transferOwnership */\n      tag_232\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_285:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Staking.sol\":5185:5321  function stakedAmount(address _address) public view returns (uint256) {... */\n    tag_93:\n        /* \"contracts/Staking.sol\":5246:5253  uint256 */\n      0x00\n        /* \"contracts/Staking.sol\":5283:5290  _staker */\n      0x0a\n        /* \"contracts/Staking.sol\":5283:5300  _staker[_address] */\n      0x00\n        /* \"contracts/Staking.sol\":5291:5299  _address */\n      dup4\n        /* \"contracts/Staking.sol\":5283:5300  _staker[_address] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":5283:5313  _staker[_address].stakedAmount */\n      0x01\n      add\n      sload\n        /* \"contracts/Staking.sol\":5276:5313  return _staker[_address].stakedAmount */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":5185:5321  function stakedAmount(address _address) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Staking.sol\":1206:1225  IBEP20 public token */\n    tag_96:\n      0x0c\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Staking.sol\":4639:4763  function isStartStaking(address _address) public view returns (uint256) {... */\n    tag_101:\n        /* \"contracts/Staking.sol\":4702:4709  uint256 */\n      0x00\n        /* \"contracts/Staking.sol\":4731:4738  _staker */\n      0x0a\n        /* \"contracts/Staking.sol\":4731:4748  _staker[_address] */\n      0x00\n        /* \"contracts/Staking.sol\":4739:4747  _address */\n      dup4\n        /* \"contracts/Staking.sol\":4731:4748  _staker[_address] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":4731:4755  _staker[_address].staked */\n      0x05\n      add\n      sload\n        /* \"contracts/Staking.sol\":4724:4755  return _staker[_address].staked */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":4639:4763  function isStartStaking(address _address) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Staking.sol\":2277:2734  function updateReward() private{... */\n    tag_112:\n        /* \"contracts/Staking.sol\":2329:2355  uint256 stakerStakedAmount */\n      0x00\n        /* \"contracts/Staking.sol\":2358:2365  _staker */\n      0x0a\n        /* \"contracts/Staking.sol\":2358:2377  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":2366:2376  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":2358:2377  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":2358:2390  _staker[msg.sender].stakedAmount */\n      0x01\n      add\n      sload\n        /* \"contracts/Staking.sol\":2329:2390  uint256 stakerStakedAmount = _staker[msg.sender].stakedAmount */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":2411:2428  uint256 newReward */\n      0x00\n        /* \"contracts/Staking.sol\":2431:2551  stakerStakedAmount.mul(block.number.sub(_staker[msg.sender].lastUpdatedBlockNumber).div(8640)).mul(_rewardRate).div(1e4) */\n      tag_289\n        /* \"contracts/Staking.sol\":2547:2550  1e4 */\n      0x2710\n        /* \"contracts/Staking.sol\":2431:2542  stakerStakedAmount.mul(block.number.sub(_staker[msg.sender].lastUpdatedBlockNumber).div(8640)).mul(_rewardRate) */\n      tag_290\n        /* \"contracts/Staking.sol\":2530:2541  _rewardRate */\n      sload(0x03)\n        /* \"contracts/Staking.sol\":2431:2525  stakerStakedAmount.mul(block.number.sub(_staker[msg.sender].lastUpdatedBlockNumber).div(8640)) */\n      tag_291\n        /* \"contracts/Staking.sol\":2454:2524  block.number.sub(_staker[msg.sender].lastUpdatedBlockNumber).div(8640) */\n      tag_292\n        /* \"contracts/Staking.sol\":2519:2523  8640 */\n      0x21c0\n        /* \"contracts/Staking.sol\":2454:2514  block.number.sub(_staker[msg.sender].lastUpdatedBlockNumber) */\n      tag_293\n        /* \"contracts/Staking.sol\":2471:2478  _staker */\n      0x0a\n        /* \"contracts/Staking.sol\":2471:2490  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":2479:2489  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":2471:2490  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":2471:2513  _staker[msg.sender].lastUpdatedBlockNumber */\n      0x04\n      add\n      sload\n        /* \"contracts/Staking.sol\":2454:2466  block.number */\n      number\n        /* \"contracts/Staking.sol\":2454:2470  block.number.sub */\n      tag_115\n      swap1\n        /* \"contracts/Staking.sol\":2454:2514  block.number.sub(_staker[msg.sender].lastUpdatedBlockNumber) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_293:\n        /* \"contracts/Staking.sol\":2454:2518  block.number.sub(_staker[msg.sender].lastUpdatedBlockNumber).div */\n      tag_116\n      swap1\n        /* \"contracts/Staking.sol\":2454:2524  block.number.sub(_staker[msg.sender].lastUpdatedBlockNumber).div(8640) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_292:\n        /* \"contracts/Staking.sol\":2431:2449  stakerStakedAmount */\n      dup8\n        /* \"contracts/Staking.sol\":2431:2453  stakerStakedAmount.mul */\n      tag_128\n      swap1\n        /* \"contracts/Staking.sol\":2431:2525  stakerStakedAmount.mul(block.number.sub(_staker[msg.sender].lastUpdatedBlockNumber).div(8640)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_291:\n        /* \"contracts/Staking.sol\":2431:2529  stakerStakedAmount.mul(block.number.sub(_staker[msg.sender].lastUpdatedBlockNumber).div(8640)).mul */\n      tag_128\n      swap1\n        /* \"contracts/Staking.sol\":2431:2542  stakerStakedAmount.mul(block.number.sub(_staker[msg.sender].lastUpdatedBlockNumber).div(8640)).mul(_rewardRate) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_290:\n        /* \"contracts/Staking.sol\":2431:2546  stakerStakedAmount.mul(block.number.sub(_staker[msg.sender].lastUpdatedBlockNumber).div(8640)).mul(_rewardRate).div */\n      tag_116\n      swap1\n        /* \"contracts/Staking.sol\":2431:2551  stakerStakedAmount.mul(block.number.sub(_staker[msg.sender].lastUpdatedBlockNumber).div(8640)).mul(_rewardRate).div(1e4) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_289:\n        /* \"contracts/Staking.sol\":2411:2551  uint256 newReward = stakerStakedAmount.mul(block.number.sub(_staker[msg.sender].lastUpdatedBlockNumber).div(8640)).mul(_rewardRate).div(1e4) */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":2604:2658  _staker[msg.sender].stakerCurrentReward.add(newReward) */\n      tag_294\n        /* \"contracts/Staking.sol\":2648:2657  newReward */\n      dup2\n        /* \"contracts/Staking.sol\":2604:2611  _staker */\n      0x0a\n        /* \"contracts/Staking.sol\":2604:2623  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":2612:2622  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":2604:2623  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":2604:2643  _staker[msg.sender].stakerCurrentReward */\n      0x00\n      add\n      sload\n        /* \"contracts/Staking.sol\":2604:2647  _staker[msg.sender].stakerCurrentReward.add */\n      tag_119\n      swap1\n        /* \"contracts/Staking.sol\":2604:2658  _staker[msg.sender].stakerCurrentReward.add(newReward) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_294:\n        /* \"contracts/Staking.sol\":2562:2569  _staker */\n      0x0a\n        /* \"contracts/Staking.sol\":2562:2581  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":2570:2580  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":2562:2581  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":2562:2601  _staker[msg.sender].stakerCurrentReward */\n      0x00\n      add\n        /* \"contracts/Staking.sol\":2562:2658  _staker[msg.sender].stakerCurrentReward = _staker[msg.sender].stakerCurrentReward.add(newReward) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":2714:2726  block.number */\n      number\n        /* \"contracts/Staking.sol\":2669:2676  _staker */\n      0x0a\n        /* \"contracts/Staking.sol\":2669:2688  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":2677:2687  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":2669:2688  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":2669:2711  _staker[msg.sender].lastUpdatedBlockNumber */\n      0x04\n      add\n        /* \"contracts/Staking.sol\":2669:2726  _staker[msg.sender].lastUpdatedBlockNumber = block.number */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":2308:2734  {... */\n      pop\n      pop\n        /* \"contracts/Staking.sol\":2277:2734  function updateReward() private{... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3108:3204  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_115:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3166:3173  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3196:3197  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3192:3193  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3192:3197  a - b */\n      tag_296\n      swap2\n      swap1\n      tag_297\n      jump\t// in\n    tag_296:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3185:3197  return a - b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3108:3204  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3836:3932  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_116:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3894:3901  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3924:3925  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3920:3921  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3920:3925  a / b */\n      tag_299\n      swap2\n      swap1\n      tag_300\n      jump\t// in\n    tag_299:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3913:3925  return a / b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3836:3932  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2741:2837  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_119:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2799:2806  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2829:2830  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2825:2826  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2825:2830  a + b */\n      tag_302\n      swap2\n      swap1\n      tag_303\n      jump\t// in\n    tag_302:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2818:2830  return a + b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2741:2837  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3451:3547  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_128:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3509:3516  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3539:3540  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3535:3536  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3535:3540  a * b */\n      tag_305\n      swap2\n      swap1\n      tag_306\n      jump\t// in\n    tag_305:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3528:3540  return a * b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3451:3547  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SafeBEP20.sol\":290:467  function safeTransfer(IBEP20 token, address to, uint256 value) internal {... */\n    tag_132:\n        /* \"contracts/SafeBEP20.sol\":373:459  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_308\n        /* \"contracts/SafeBEP20.sol\":393:398  token */\n      dup4\n        /* \"contracts/SafeBEP20.sol\":423:446  token.transfer.selector */\n      shl(0xe0, 0xa9059cbb)\n        /* \"contracts/SafeBEP20.sol\":448:450  to */\n      dup5\n        /* \"contracts/SafeBEP20.sol\":452:457  value */\n      dup5\n        /* \"contracts/SafeBEP20.sol\":400:458  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      add(0x24, mload(0x40))\n      tag_309\n      swap3\n      swap2\n      swap1\n      tag_134\n      jump\t// in\n    tag_309:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/SafeBEP20.sol\":373:392  _callOptionalReturn */\n      tag_310\n        /* \"contracts/SafeBEP20.sol\":373:459  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n    tag_308:\n        /* \"contracts/SafeBEP20.sol\":290:467  function safeTransfer(IBEP20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_168:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_232:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2368  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2387:2395  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2384  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2441:2449  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2431:2439  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/SafeBEP20.sol\":475:680  function safeTransferFrom(IBEP20 token, address from, address to, uint256 value) internal {... */\n    tag_269:\n        /* \"contracts/SafeBEP20.sol\":576:672  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      tag_314\n        /* \"contracts/SafeBEP20.sol\":596:601  token */\n      dup5\n        /* \"contracts/SafeBEP20.sol\":626:653  token.transferFrom.selector */\n      shl(0xe0, 0x23b872dd)\n        /* \"contracts/SafeBEP20.sol\":655:659  from */\n      dup6\n        /* \"contracts/SafeBEP20.sol\":661:663  to */\n      dup6\n        /* \"contracts/SafeBEP20.sol\":665:670  value */\n      dup6\n        /* \"contracts/SafeBEP20.sol\":603:671  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      add(0x24, mload(0x40))\n      tag_315\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_316\n      jump\t// in\n    tag_315:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/SafeBEP20.sol\":576:595  _callOptionalReturn */\n      tag_310\n        /* \"contracts/SafeBEP20.sol\":576:672  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      jump\t// in\n    tag_314:\n        /* \"contracts/SafeBEP20.sol\":475:680  function safeTransferFrom(IBEP20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SafeBEP20.sol\":2599:3368  function _callOptionalReturn(IBEP20 token, bytes memory data) private {... */\n    tag_310:\n        /* \"contracts/SafeBEP20.sol\":3031:3054  bytes memory returndata */\n      0x00\n        /* \"contracts/SafeBEP20.sol\":3057:3126  address(token).functionCall(data, \"SafeBEP20: low-level call failed\") */\n      tag_318\n        /* \"contracts/SafeBEP20.sol\":3085:3089  data */\n      dup3\n        /* \"contracts/SafeBEP20.sol\":3057:3126  address(token).functionCall(data, \"SafeBEP20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666542455032303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"contracts/SafeBEP20.sol\":3065:3070  token */\n      dup6\n        /* \"contracts/SafeBEP20.sol\":3057:3084  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_319\n      swap1\n        /* \"contracts/SafeBEP20.sol\":3057:3126  address(token).functionCall(data, \"SafeBEP20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_318:\n        /* \"contracts/SafeBEP20.sol\":3031:3126  bytes memory returndata = address(token).functionCall(data, \"SafeBEP20: low-level call failed\") */\n      swap1\n      pop\n        /* \"contracts/SafeBEP20.sol\":3161:3162  0 */\n      0x00\n        /* \"contracts/SafeBEP20.sol\":3141:3151  returndata */\n      dup2\n        /* \"contracts/SafeBEP20.sol\":3141:3158  returndata.length */\n      mload\n        /* \"contracts/SafeBEP20.sol\":3141:3162  returndata.length > 0 */\n      gt\n        /* \"contracts/SafeBEP20.sol\":3137:3361  if (returndata.length > 0) { // Return data is optional... */\n      iszero\n      tag_320\n      jumpi\n        /* \"contracts/SafeBEP20.sol\":3283:3293  returndata */\n      dup1\n        /* \"contracts/SafeBEP20.sol\":3272:3302  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_321\n      swap2\n      swap1\n      tag_322\n      jump\t// in\n    tag_321:\n        /* \"contracts/SafeBEP20.sol\":3264:3349  require(abi.decode(returndata, (bool)), \"SafeBEP20: BEP20 operation did not succeed\") */\n      tag_323\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_324\n      swap1\n      tag_325\n      jump\t// in\n    tag_324:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_323:\n        /* \"contracts/SafeBEP20.sol\":3137:3361  if (returndata.length > 0) { // Return data is optional... */\n    tag_320:\n        /* \"contracts/SafeBEP20.sol\":2669:3368  {... */\n      pop\n        /* \"contracts/SafeBEP20.sol\":2599:3368  function _callOptionalReturn(IBEP20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3861:4084  function functionCall(... */\n    tag_319:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3994:4006  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4025:4077  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_327\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4047:4053  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4055:4059  data */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4061:4062  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4064:4076  errorMessage */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4025:4046  functionCallWithValue */\n      tag_328\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4025:4077  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_327:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4018:4077  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3861:4084  function functionCall(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4948:5447  function functionCallWithValue(... */\n    tag_328:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5113:5125  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5170:5175  value */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5145:5166  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5145:5175  address(this).balance >= value */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5137:5218  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_330\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_331\n      swap1\n      tag_332\n      jump\t// in\n    tag_331:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_330:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5236:5254  isContract(target) */\n      tag_333\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5247:5253  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5236:5246  isContract */\n      tag_334\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5236:5254  isContract(target) */\n      jump\t// in\n    tag_333:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5228:5288  require(isContract(target), \"Address: call to non-contract\") */\n      tag_335\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_336\n      swap1\n      tag_337\n      jump\t// in\n    tag_336:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_335:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5300:5312  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5314:5337  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5341:5347  target */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5341:5352  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5360:5365  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5367:5371  data */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5341:5372  target.call{value: value}(data) */\n      mload(0x40)\n      tag_338\n      swap2\n      swap1\n      tag_339\n      jump\t// in\n    tag_338:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_342\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_341)\n    tag_342:\n      0x60\n      swap2\n      pop\n    tag_341:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5299:5372  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5389:5440  verifyCallResult(success, returndata, errorMessage) */\n      tag_343\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5406:5413  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5415:5425  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5427:5439  errorMessage */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5389:5405  verifyCallResult */\n      tag_344\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5389:5440  verifyCallResult(success, returndata, errorMessage) */\n      jump\t// in\n    tag_343:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5382:5440  return verifyCallResult(success, returndata, errorMessage) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4948:5447  function functionCallWithValue(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1175:1495  function isContract(address account) internal view returns (bool) {... */\n    tag_334:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1235:1239  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1487:1488  0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1472  account */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1484  account.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1488  account.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1458:1488  return account.code.length > 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1175:1495  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7561:8253  function verifyCallResult(... */\n    tag_344:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7707:7719  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7735:7742  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7731:8247  if (success) {... */\n      iszero\n      tag_347\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7765:7775  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7758:7775  return returndata */\n      swap1\n      pop\n      jump(tag_346)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7731:8247  if (success) {... */\n    tag_347:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7896:7897  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7876:7886  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7876:7893  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7876:7897  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7872:8237  if (returndata.length > 0) {... */\n      iszero\n      tag_349\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8070:8080  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8064:8081  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8130:8145  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8117:8127  returndata */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8113:8115  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8109:8128  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8102:8146  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7872:8237  if (returndata.length > 0) {... */\n    tag_349:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8209:8221  errorMessage */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8202:8222  revert(errorMessage) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_351\n      swap2\n      swap1\n      tag_352\n      jump\t// in\n    tag_351:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7561:8253  function verifyCallResult(... */\n    tag_346:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_353:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_354:\n        /* \"#utility.yul\":177:201   */\n      tag_421\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_353\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_31:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_423\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_354\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":523:640   */\n    tag_356:\n        /* \"#utility.yul\":632:633   */\n      0x00\n        /* \"#utility.yul\":629:630   */\n      dup1\n        /* \"#utility.yul\":622:634   */\n      revert\n        /* \"#utility.yul\":769:891   */\n    tag_358:\n        /* \"#utility.yul\":842:866   */\n      tag_428\n        /* \"#utility.yul\":860:865   */\n      dup2\n        /* \"#utility.yul\":842:866   */\n      tag_353\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":835:840   */\n      dup2\n        /* \"#utility.yul\":832:867   */\n      eq\n        /* \"#utility.yul\":822:885   */\n      tag_429\n      jumpi\n        /* \"#utility.yul\":881:882   */\n      0x00\n        /* \"#utility.yul\":878:879   */\n      dup1\n        /* \"#utility.yul\":871:883   */\n      revert\n        /* \"#utility.yul\":822:885   */\n    tag_429:\n        /* \"#utility.yul\":769:891   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":897:1036   */\n    tag_359:\n        /* \"#utility.yul\":943:948   */\n      0x00\n        /* \"#utility.yul\":981:987   */\n      dup2\n        /* \"#utility.yul\":968:988   */\n      calldataload\n        /* \"#utility.yul\":959:988   */\n      swap1\n      pop\n        /* \"#utility.yul\":997:1030   */\n      tag_431\n        /* \"#utility.yul\":1024:1029   */\n      dup2\n        /* \"#utility.yul\":997:1030   */\n      tag_358\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":897:1036   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1042:1371   */\n    tag_34:\n        /* \"#utility.yul\":1101:1107   */\n      0x00\n        /* \"#utility.yul\":1150:1152   */\n      0x20\n        /* \"#utility.yul\":1138:1147   */\n      dup3\n        /* \"#utility.yul\":1129:1136   */\n      dup5\n        /* \"#utility.yul\":1125:1148   */\n      sub\n        /* \"#utility.yul\":1121:1153   */\n      slt\n        /* \"#utility.yul\":1118:1237   */\n      iszero\n      tag_433\n      jumpi\n        /* \"#utility.yul\":1156:1235   */\n      tag_434\n      tag_356\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":1118:1237   */\n    tag_433:\n        /* \"#utility.yul\":1276:1277   */\n      0x00\n        /* \"#utility.yul\":1301:1354   */\n      tag_435\n        /* \"#utility.yul\":1346:1353   */\n      dup5\n        /* \"#utility.yul\":1337:1343   */\n      dup3\n        /* \"#utility.yul\":1326:1335   */\n      dup6\n        /* \"#utility.yul\":1322:1344   */\n      add\n        /* \"#utility.yul\":1301:1354   */\n      tag_359\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":1291:1354   */\n      swap2\n      pop\n        /* \"#utility.yul\":1247:1364   */\n      pop\n        /* \"#utility.yul\":1042:1371   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1377:1503   */\n    tag_360:\n        /* \"#utility.yul\":1414:1421   */\n      0x00\n        /* \"#utility.yul\":1454:1496   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1447:1452   */\n      dup3\n        /* \"#utility.yul\":1443:1497   */\n      and\n        /* \"#utility.yul\":1432:1497   */\n      swap1\n      pop\n        /* \"#utility.yul\":1377:1503   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1509:1605   */\n    tag_361:\n        /* \"#utility.yul\":1546:1553   */\n      0x00\n        /* \"#utility.yul\":1575:1599   */\n      tag_438\n        /* \"#utility.yul\":1593:1598   */\n      dup3\n        /* \"#utility.yul\":1575:1599   */\n      tag_360\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":1564:1599   */\n      swap1\n      pop\n        /* \"#utility.yul\":1509:1605   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1733   */\n    tag_362:\n        /* \"#utility.yul\":1684:1708   */\n      tag_440\n        /* \"#utility.yul\":1702:1707   */\n      dup2\n        /* \"#utility.yul\":1684:1708   */\n      tag_361\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":1677:1682   */\n      dup2\n        /* \"#utility.yul\":1674:1709   */\n      eq\n        /* \"#utility.yul\":1664:1727   */\n      tag_441\n      jumpi\n        /* \"#utility.yul\":1723:1724   */\n      0x00\n        /* \"#utility.yul\":1720:1721   */\n      dup1\n        /* \"#utility.yul\":1713:1725   */\n      revert\n        /* \"#utility.yul\":1664:1727   */\n    tag_441:\n        /* \"#utility.yul\":1611:1733   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1739:1878   */\n    tag_363:\n        /* \"#utility.yul\":1785:1790   */\n      0x00\n        /* \"#utility.yul\":1823:1829   */\n      dup2\n        /* \"#utility.yul\":1810:1830   */\n      calldataload\n        /* \"#utility.yul\":1801:1830   */\n      swap1\n      pop\n        /* \"#utility.yul\":1839:1872   */\n      tag_443\n        /* \"#utility.yul\":1866:1871   */\n      dup2\n        /* \"#utility.yul\":1839:1872   */\n      tag_362\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":1739:1878   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1884:2213   */\n    tag_40:\n        /* \"#utility.yul\":1943:1949   */\n      0x00\n        /* \"#utility.yul\":1992:1994   */\n      0x20\n        /* \"#utility.yul\":1980:1989   */\n      dup3\n        /* \"#utility.yul\":1971:1978   */\n      dup5\n        /* \"#utility.yul\":1967:1990   */\n      sub\n        /* \"#utility.yul\":1963:1995   */\n      slt\n        /* \"#utility.yul\":1960:2079   */\n      iszero\n      tag_445\n      jumpi\n        /* \"#utility.yul\":1998:2077   */\n      tag_446\n      tag_356\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":1960:2079   */\n    tag_445:\n        /* \"#utility.yul\":2118:2119   */\n      0x00\n        /* \"#utility.yul\":2143:2196   */\n      tag_447\n        /* \"#utility.yul\":2188:2195   */\n      dup5\n        /* \"#utility.yul\":2179:2185   */\n      dup3\n        /* \"#utility.yul\":2168:2177   */\n      dup6\n        /* \"#utility.yul\":2164:2186   */\n      add\n        /* \"#utility.yul\":2143:2196   */\n      tag_363\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":2133:2196   */\n      swap2\n      pop\n        /* \"#utility.yul\":2089:2206   */\n      pop\n        /* \"#utility.yul\":1884:2213   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2219:2693   */\n    tag_48:\n        /* \"#utility.yul\":2287:2293   */\n      0x00\n        /* \"#utility.yul\":2295:2301   */\n      dup1\n        /* \"#utility.yul\":2344:2346   */\n      0x40\n        /* \"#utility.yul\":2332:2341   */\n      dup4\n        /* \"#utility.yul\":2323:2330   */\n      dup6\n        /* \"#utility.yul\":2319:2342   */\n      sub\n        /* \"#utility.yul\":2315:2347   */\n      slt\n        /* \"#utility.yul\":2312:2431   */\n      iszero\n      tag_449\n      jumpi\n        /* \"#utility.yul\":2350:2429   */\n      tag_450\n      tag_356\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":2312:2431   */\n    tag_449:\n        /* \"#utility.yul\":2470:2471   */\n      0x00\n        /* \"#utility.yul\":2495:2548   */\n      tag_451\n        /* \"#utility.yul\":2540:2547   */\n      dup6\n        /* \"#utility.yul\":2531:2537   */\n      dup3\n        /* \"#utility.yul\":2520:2529   */\n      dup7\n        /* \"#utility.yul\":2516:2538   */\n      add\n        /* \"#utility.yul\":2495:2548   */\n      tag_359\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":2485:2548   */\n      swap3\n      pop\n        /* \"#utility.yul\":2441:2558   */\n      pop\n        /* \"#utility.yul\":2597:2599   */\n      0x20\n        /* \"#utility.yul\":2623:2676   */\n      tag_452\n        /* \"#utility.yul\":2668:2675   */\n      dup6\n        /* \"#utility.yul\":2659:2665   */\n      dup3\n        /* \"#utility.yul\":2648:2657   */\n      dup7\n        /* \"#utility.yul\":2644:2666   */\n      add\n        /* \"#utility.yul\":2623:2676   */\n      tag_359\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":2613:2676   */\n      swap2\n      pop\n        /* \"#utility.yul\":2568:2686   */\n      pop\n        /* \"#utility.yul\":2219:2693   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2699:2817   */\n    tag_364:\n        /* \"#utility.yul\":2786:2810   */\n      tag_454\n        /* \"#utility.yul\":2804:2809   */\n      dup2\n        /* \"#utility.yul\":2786:2810   */\n      tag_361\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":2781:2784   */\n      dup3\n        /* \"#utility.yul\":2774:2811   */\n      mstore\n        /* \"#utility.yul\":2699:2817   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2823:3045   */\n    tag_74:\n        /* \"#utility.yul\":2916:2920   */\n      0x00\n        /* \"#utility.yul\":2954:2956   */\n      0x20\n        /* \"#utility.yul\":2943:2952   */\n      dup3\n        /* \"#utility.yul\":2939:2957   */\n      add\n        /* \"#utility.yul\":2931:2957   */\n      swap1\n      pop\n        /* \"#utility.yul\":2967:3038   */\n      tag_456\n        /* \"#utility.yul\":3035:3036   */\n      0x00\n        /* \"#utility.yul\":3024:3033   */\n      dup4\n        /* \"#utility.yul\":3020:3037   */\n      add\n        /* \"#utility.yul\":3011:3017   */\n      dup5\n        /* \"#utility.yul\":2967:3038   */\n      tag_364\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":2823:3045   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3051:3111   */\n    tag_365:\n        /* \"#utility.yul\":3079:3082   */\n      0x00\n        /* \"#utility.yul\":3100:3105   */\n      dup2\n        /* \"#utility.yul\":3093:3105   */\n      swap1\n      pop\n        /* \"#utility.yul\":3051:3111   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3117:3259   */\n    tag_366:\n        /* \"#utility.yul\":3167:3176   */\n      0x00\n        /* \"#utility.yul\":3200:3253   */\n      tag_459\n        /* \"#utility.yul\":3218:3252   */\n      tag_460\n        /* \"#utility.yul\":3227:3251   */\n      tag_461\n        /* \"#utility.yul\":3245:3250   */\n      dup5\n        /* \"#utility.yul\":3227:3251   */\n      tag_360\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":3218:3252   */\n      tag_365\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":3200:3253   */\n      tag_360\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":3187:3253   */\n      swap1\n      pop\n        /* \"#utility.yul\":3117:3259   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3265:3391   */\n    tag_367:\n        /* \"#utility.yul\":3315:3324   */\n      0x00\n        /* \"#utility.yul\":3348:3385   */\n      tag_463\n        /* \"#utility.yul\":3379:3384   */\n      dup3\n        /* \"#utility.yul\":3348:3385   */\n      tag_366\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":3335:3385   */\n      swap1\n      pop\n        /* \"#utility.yul\":3265:3391   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3397:3537   */\n    tag_368:\n        /* \"#utility.yul\":3461:3470   */\n      0x00\n        /* \"#utility.yul\":3494:3531   */\n      tag_465\n        /* \"#utility.yul\":3525:3530   */\n      dup3\n        /* \"#utility.yul\":3494:3531   */\n      tag_367\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":3481:3531   */\n      swap1\n      pop\n        /* \"#utility.yul\":3397:3537   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3543:3702   */\n    tag_369:\n        /* \"#utility.yul\":3644:3695   */\n      tag_467\n        /* \"#utility.yul\":3689:3694   */\n      dup2\n        /* \"#utility.yul\":3644:3695   */\n      tag_368\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":3639:3642   */\n      dup3\n        /* \"#utility.yul\":3632:3696   */\n      mstore\n        /* \"#utility.yul\":3543:3702   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3708:3958   */\n    tag_98:\n        /* \"#utility.yul\":3815:3819   */\n      0x00\n        /* \"#utility.yul\":3853:3855   */\n      0x20\n        /* \"#utility.yul\":3842:3851   */\n      dup3\n        /* \"#utility.yul\":3838:3856   */\n      add\n        /* \"#utility.yul\":3830:3856   */\n      swap1\n      pop\n        /* \"#utility.yul\":3866:3951   */\n      tag_469\n        /* \"#utility.yul\":3948:3949   */\n      0x00\n        /* \"#utility.yul\":3937:3946   */\n      dup4\n        /* \"#utility.yul\":3933:3950   */\n      add\n        /* \"#utility.yul\":3924:3930   */\n      dup5\n        /* \"#utility.yul\":3866:3951   */\n      tag_369\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":3708:3958   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3964:4133   */\n    tag_370:\n        /* \"#utility.yul\":4048:4059   */\n      0x00\n        /* \"#utility.yul\":4082:4088   */\n      dup3\n        /* \"#utility.yul\":4077:4080   */\n      dup3\n        /* \"#utility.yul\":4070:4089   */\n      mstore\n        /* \"#utility.yul\":4122:4126   */\n      0x20\n        /* \"#utility.yul\":4117:4120   */\n      dup3\n        /* \"#utility.yul\":4113:4127   */\n      add\n        /* \"#utility.yul\":4098:4127   */\n      swap1\n      pop\n        /* \"#utility.yul\":3964:4133   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4139:4320   */\n    tag_371:\n        /* \"#utility.yul\":4279:4312   */\n      0x416d6f756e742073686f756c642062652067726561746572207468616e203000\n        /* \"#utility.yul\":4275:4276   */\n      0x00\n        /* \"#utility.yul\":4267:4273   */\n      dup3\n        /* \"#utility.yul\":4263:4277   */\n      add\n        /* \"#utility.yul\":4256:4313   */\n      mstore\n        /* \"#utility.yul\":4139:4320   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4326:4692   */\n    tag_372:\n        /* \"#utility.yul\":4468:4471   */\n      0x00\n        /* \"#utility.yul\":4489:4556   */\n      tag_473\n        /* \"#utility.yul\":4553:4555   */\n      0x1f\n        /* \"#utility.yul\":4548:4551   */\n      dup4\n        /* \"#utility.yul\":4489:4556   */\n      tag_370\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":4482:4556   */\n      swap2\n      pop\n        /* \"#utility.yul\":4565:4658   */\n      tag_474\n        /* \"#utility.yul\":4654:4657   */\n      dup3\n        /* \"#utility.yul\":4565:4658   */\n      tag_371\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":4683:4685   */\n      0x20\n        /* \"#utility.yul\":4678:4681   */\n      dup3\n        /* \"#utility.yul\":4674:4686   */\n      add\n        /* \"#utility.yul\":4667:4686   */\n      swap1\n      pop\n        /* \"#utility.yul\":4326:4692   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4698:5117   */\n    tag_107:\n        /* \"#utility.yul\":4864:4868   */\n      0x00\n        /* \"#utility.yul\":4902:4904   */\n      0x20\n        /* \"#utility.yul\":4891:4900   */\n      dup3\n        /* \"#utility.yul\":4887:4905   */\n      add\n        /* \"#utility.yul\":4879:4905   */\n      swap1\n      pop\n        /* \"#utility.yul\":4951:4960   */\n      dup2\n        /* \"#utility.yul\":4945:4949   */\n      dup2\n        /* \"#utility.yul\":4941:4961   */\n      sub\n        /* \"#utility.yul\":4937:4938   */\n      0x00\n        /* \"#utility.yul\":4926:4935   */\n      dup4\n        /* \"#utility.yul\":4922:4939   */\n      add\n        /* \"#utility.yul\":4915:4962   */\n      mstore\n        /* \"#utility.yul\":4979:5110   */\n      tag_476\n        /* \"#utility.yul\":5105:5109   */\n      dup2\n        /* \"#utility.yul\":4979:5110   */\n      tag_372\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":4971:5110   */\n      swap1\n      pop\n        /* \"#utility.yul\":4698:5117   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5123:5287   */\n    tag_373:\n        /* \"#utility.yul\":5263:5279   */\n      0x496e76616c696420616d6f756e74000000000000000000000000000000000000\n        /* \"#utility.yul\":5259:5260   */\n      0x00\n        /* \"#utility.yul\":5251:5257   */\n      dup3\n        /* \"#utility.yul\":5247:5261   */\n      add\n        /* \"#utility.yul\":5240:5280   */\n      mstore\n        /* \"#utility.yul\":5123:5287   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5293:5659   */\n    tag_374:\n        /* \"#utility.yul\":5435:5438   */\n      0x00\n        /* \"#utility.yul\":5456:5523   */\n      tag_479\n        /* \"#utility.yul\":5520:5522   */\n      0x0e\n        /* \"#utility.yul\":5515:5518   */\n      dup4\n        /* \"#utility.yul\":5456:5523   */\n      tag_370\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":5449:5523   */\n      swap2\n      pop\n        /* \"#utility.yul\":5532:5625   */\n      tag_480\n        /* \"#utility.yul\":5621:5624   */\n      dup3\n        /* \"#utility.yul\":5532:5625   */\n      tag_373\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":5650:5652   */\n      0x20\n        /* \"#utility.yul\":5645:5648   */\n      dup3\n        /* \"#utility.yul\":5641:5653   */\n      add\n        /* \"#utility.yul\":5634:5653   */\n      swap1\n      pop\n        /* \"#utility.yul\":5293:5659   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5665:6084   */\n    tag_110:\n        /* \"#utility.yul\":5831:5835   */\n      0x00\n        /* \"#utility.yul\":5869:5871   */\n      0x20\n        /* \"#utility.yul\":5858:5867   */\n      dup3\n        /* \"#utility.yul\":5854:5872   */\n      add\n        /* \"#utility.yul\":5846:5872   */\n      swap1\n      pop\n        /* \"#utility.yul\":5918:5927   */\n      dup2\n        /* \"#utility.yul\":5912:5916   */\n      dup2\n        /* \"#utility.yul\":5908:5928   */\n      sub\n        /* \"#utility.yul\":5904:5905   */\n      0x00\n        /* \"#utility.yul\":5893:5902   */\n      dup4\n        /* \"#utility.yul\":5889:5906   */\n      add\n        /* \"#utility.yul\":5882:5929   */\n      mstore\n        /* \"#utility.yul\":5946:6077   */\n      tag_482\n        /* \"#utility.yul\":6072:6076   */\n      dup2\n        /* \"#utility.yul\":5946:6077   */\n      tag_374\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":5938:6077   */\n      swap1\n      pop\n        /* \"#utility.yul\":5665:6084   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6090:6270   */\n    tag_375:\n        /* \"#utility.yul\":6138:6215   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6135:6136   */\n      0x00\n        /* \"#utility.yul\":6128:6216   */\n      mstore\n        /* \"#utility.yul\":6235:6239   */\n      0x12\n        /* \"#utility.yul\":6232:6233   */\n      0x04\n        /* \"#utility.yul\":6225:6240   */\n      mstore\n        /* \"#utility.yul\":6259:6263   */\n      0x24\n        /* \"#utility.yul\":6256:6257   */\n      0x00\n        /* \"#utility.yul\":6249:6264   */\n      revert\n        /* \"#utility.yul\":6276:6452   */\n    tag_122:\n        /* \"#utility.yul\":6308:6309   */\n      0x00\n        /* \"#utility.yul\":6325:6345   */\n      tag_485\n        /* \"#utility.yul\":6343:6344   */\n      dup3\n        /* \"#utility.yul\":6325:6345   */\n      tag_353\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":6320:6345   */\n      swap2\n      pop\n        /* \"#utility.yul\":6359:6379   */\n      tag_486\n        /* \"#utility.yul\":6377:6378   */\n      dup4\n        /* \"#utility.yul\":6359:6379   */\n      tag_353\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":6354:6379   */\n      swap3\n      pop\n        /* \"#utility.yul\":6398:6399   */\n      dup3\n        /* \"#utility.yul\":6388:6423   */\n      tag_487\n      jumpi\n        /* \"#utility.yul\":6403:6421   */\n      tag_488\n      tag_375\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":6388:6423   */\n    tag_487:\n        /* \"#utility.yul\":6444:6445   */\n      dup3\n        /* \"#utility.yul\":6441:6442   */\n      dup3\n        /* \"#utility.yul\":6437:6446   */\n      mod\n        /* \"#utility.yul\":6432:6446   */\n      swap1\n      pop\n        /* \"#utility.yul\":6276:6452   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6458:6790   */\n    tag_134:\n        /* \"#utility.yul\":6579:6583   */\n      0x00\n        /* \"#utility.yul\":6617:6619   */\n      0x40\n        /* \"#utility.yul\":6606:6615   */\n      dup3\n        /* \"#utility.yul\":6602:6620   */\n      add\n        /* \"#utility.yul\":6594:6620   */\n      swap1\n      pop\n        /* \"#utility.yul\":6630:6701   */\n      tag_490\n        /* \"#utility.yul\":6698:6699   */\n      0x00\n        /* \"#utility.yul\":6687:6696   */\n      dup4\n        /* \"#utility.yul\":6683:6700   */\n      add\n        /* \"#utility.yul\":6674:6680   */\n      dup6\n        /* \"#utility.yul\":6630:6701   */\n      tag_364\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":6711:6783   */\n      tag_491\n        /* \"#utility.yul\":6779:6781   */\n      0x20\n        /* \"#utility.yul\":6768:6777   */\n      dup4\n        /* \"#utility.yul\":6764:6782   */\n      add\n        /* \"#utility.yul\":6755:6761   */\n      dup5\n        /* \"#utility.yul\":6711:6783   */\n      tag_354\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":6458:6790   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6796:6962   */\n    tag_376:\n        /* \"#utility.yul\":6936:6954   */\n      0x4e6f7468696e6720746f20636c61696d00000000000000000000000000000000\n        /* \"#utility.yul\":6932:6933   */\n      0x00\n        /* \"#utility.yul\":6924:6930   */\n      dup3\n        /* \"#utility.yul\":6920:6934   */\n      add\n        /* \"#utility.yul\":6913:6955   */\n      mstore\n        /* \"#utility.yul\":6796:6962   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6968:7334   */\n    tag_377:\n        /* \"#utility.yul\":7110:7113   */\n      0x00\n        /* \"#utility.yul\":7131:7198   */\n      tag_494\n        /* \"#utility.yul\":7195:7197   */\n      0x10\n        /* \"#utility.yul\":7190:7193   */\n      dup4\n        /* \"#utility.yul\":7131:7198   */\n      tag_370\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":7124:7198   */\n      swap2\n      pop\n        /* \"#utility.yul\":7207:7300   */\n      tag_495\n        /* \"#utility.yul\":7296:7299   */\n      dup3\n        /* \"#utility.yul\":7207:7300   */\n      tag_376\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":7325:7327   */\n      0x20\n        /* \"#utility.yul\":7320:7323   */\n      dup3\n        /* \"#utility.yul\":7316:7328   */\n      add\n        /* \"#utility.yul\":7309:7328   */\n      swap1\n      pop\n        /* \"#utility.yul\":6968:7334   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7340:7759   */\n    tag_142:\n        /* \"#utility.yul\":7506:7510   */\n      0x00\n        /* \"#utility.yul\":7544:7546   */\n      0x20\n        /* \"#utility.yul\":7533:7542   */\n      dup3\n        /* \"#utility.yul\":7529:7547   */\n      add\n        /* \"#utility.yul\":7521:7547   */\n      swap1\n      pop\n        /* \"#utility.yul\":7593:7602   */\n      dup2\n        /* \"#utility.yul\":7587:7591   */\n      dup2\n        /* \"#utility.yul\":7583:7603   */\n      sub\n        /* \"#utility.yul\":7579:7580   */\n      0x00\n        /* \"#utility.yul\":7568:7577   */\n      dup4\n        /* \"#utility.yul\":7564:7581   */\n      add\n        /* \"#utility.yul\":7557:7604   */\n      mstore\n        /* \"#utility.yul\":7621:7752   */\n      tag_497\n        /* \"#utility.yul\":7747:7751   */\n      dup2\n        /* \"#utility.yul\":7621:7752   */\n      tag_377\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":7613:7752   */\n      swap1\n      pop\n        /* \"#utility.yul\":7340:7759   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7765:7908   */\n    tag_378:\n        /* \"#utility.yul\":7822:7827   */\n      0x00\n        /* \"#utility.yul\":7853:7859   */\n      dup2\n        /* \"#utility.yul\":7847:7860   */\n      mload\n        /* \"#utility.yul\":7838:7860   */\n      swap1\n      pop\n        /* \"#utility.yul\":7869:7902   */\n      tag_499\n        /* \"#utility.yul\":7896:7901   */\n      dup2\n        /* \"#utility.yul\":7869:7902   */\n      tag_358\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":7765:7908   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7914:8265   */\n    tag_147:\n        /* \"#utility.yul\":7984:7990   */\n      0x00\n        /* \"#utility.yul\":8033:8035   */\n      0x20\n        /* \"#utility.yul\":8021:8030   */\n      dup3\n        /* \"#utility.yul\":8012:8019   */\n      dup5\n        /* \"#utility.yul\":8008:8031   */\n      sub\n        /* \"#utility.yul\":8004:8036   */\n      slt\n        /* \"#utility.yul\":8001:8120   */\n      iszero\n      tag_501\n      jumpi\n        /* \"#utility.yul\":8039:8118   */\n      tag_502\n      tag_356\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":8001:8120   */\n    tag_501:\n        /* \"#utility.yul\":8159:8160   */\n      0x00\n        /* \"#utility.yul\":8184:8248   */\n      tag_503\n        /* \"#utility.yul\":8240:8247   */\n      dup5\n        /* \"#utility.yul\":8231:8237   */\n      dup3\n        /* \"#utility.yul\":8220:8229   */\n      dup6\n        /* \"#utility.yul\":8216:8238   */\n      add\n        /* \"#utility.yul\":8184:8248   */\n      tag_378\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":8174:8248   */\n      swap2\n      pop\n        /* \"#utility.yul\":8130:8258   */\n      pop\n        /* \"#utility.yul\":7914:8265   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8271:8453   */\n    tag_379:\n        /* \"#utility.yul\":8411:8445   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":8407:8408   */\n      0x00\n        /* \"#utility.yul\":8399:8405   */\n      dup3\n        /* \"#utility.yul\":8395:8409   */\n      add\n        /* \"#utility.yul\":8388:8446   */\n      mstore\n        /* \"#utility.yul\":8271:8453   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8459:8825   */\n    tag_380:\n        /* \"#utility.yul\":8601:8604   */\n      0x00\n        /* \"#utility.yul\":8622:8689   */\n      tag_506\n        /* \"#utility.yul\":8686:8688   */\n      0x20\n        /* \"#utility.yul\":8681:8684   */\n      dup4\n        /* \"#utility.yul\":8622:8689   */\n      tag_370\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":8615:8689   */\n      swap2\n      pop\n        /* \"#utility.yul\":8698:8791   */\n      tag_507\n        /* \"#utility.yul\":8787:8790   */\n      dup3\n        /* \"#utility.yul\":8698:8791   */\n      tag_379\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":8816:8818   */\n      0x20\n        /* \"#utility.yul\":8811:8814   */\n      dup3\n        /* \"#utility.yul\":8807:8819   */\n      add\n        /* \"#utility.yul\":8800:8819   */\n      swap1\n      pop\n        /* \"#utility.yul\":8459:8825   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8831:9250   */\n    tag_172:\n        /* \"#utility.yul\":8997:9001   */\n      0x00\n        /* \"#utility.yul\":9035:9037   */\n      0x20\n        /* \"#utility.yul\":9024:9033   */\n      dup3\n        /* \"#utility.yul\":9020:9038   */\n      add\n        /* \"#utility.yul\":9012:9038   */\n      swap1\n      pop\n        /* \"#utility.yul\":9084:9093   */\n      dup2\n        /* \"#utility.yul\":9078:9082   */\n      dup2\n        /* \"#utility.yul\":9074:9094   */\n      sub\n        /* \"#utility.yul\":9070:9071   */\n      0x00\n        /* \"#utility.yul\":9059:9068   */\n      dup4\n        /* \"#utility.yul\":9055:9072   */\n      add\n        /* \"#utility.yul\":9048:9095   */\n      mstore\n        /* \"#utility.yul\":9112:9243   */\n      tag_509\n        /* \"#utility.yul\":9238:9242   */\n      dup2\n        /* \"#utility.yul\":9112:9243   */\n      tag_380\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":9104:9243   */\n      swap1\n      pop\n        /* \"#utility.yul\":8831:9250   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9256:9419   */\n    tag_381:\n        /* \"#utility.yul\":9396:9411   */\n      0x43616e2774206265207a65726f00000000000000000000000000000000000000\n        /* \"#utility.yul\":9392:9393   */\n      0x00\n        /* \"#utility.yul\":9384:9390   */\n      dup3\n        /* \"#utility.yul\":9380:9394   */\n      add\n        /* \"#utility.yul\":9373:9412   */\n      mstore\n        /* \"#utility.yul\":9256:9419   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9425:9791   */\n    tag_382:\n        /* \"#utility.yul\":9567:9570   */\n      0x00\n        /* \"#utility.yul\":9588:9655   */\n      tag_512\n        /* \"#utility.yul\":9652:9654   */\n      0x0d\n        /* \"#utility.yul\":9647:9650   */\n      dup4\n        /* \"#utility.yul\":9588:9655   */\n      tag_370\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":9581:9655   */\n      swap2\n      pop\n        /* \"#utility.yul\":9664:9757   */\n      tag_513\n        /* \"#utility.yul\":9753:9756   */\n      dup3\n        /* \"#utility.yul\":9664:9757   */\n      tag_381\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":9782:9784   */\n      0x20\n        /* \"#utility.yul\":9777:9780   */\n      dup3\n        /* \"#utility.yul\":9773:9785   */\n      add\n        /* \"#utility.yul\":9766:9785   */\n      swap1\n      pop\n        /* \"#utility.yul\":9425:9791   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9797:10216   */\n    tag_176:\n        /* \"#utility.yul\":9963:9967   */\n      0x00\n        /* \"#utility.yul\":10001:10003   */\n      0x20\n        /* \"#utility.yul\":9990:9999   */\n      dup3\n        /* \"#utility.yul\":9986:10004   */\n      add\n        /* \"#utility.yul\":9978:10004   */\n      swap1\n      pop\n        /* \"#utility.yul\":10050:10059   */\n      dup2\n        /* \"#utility.yul\":10044:10048   */\n      dup2\n        /* \"#utility.yul\":10040:10060   */\n      sub\n        /* \"#utility.yul\":10036:10037   */\n      0x00\n        /* \"#utility.yul\":10025:10034   */\n      dup4\n        /* \"#utility.yul\":10021:10038   */\n      add\n        /* \"#utility.yul\":10014:10061   */\n      mstore\n        /* \"#utility.yul\":10078:10209   */\n      tag_515\n        /* \"#utility.yul\":10204:10208   */\n      dup2\n        /* \"#utility.yul\":10078:10209   */\n      tag_382\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":10070:10209   */\n      swap1\n      pop\n        /* \"#utility.yul\":9797:10216   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10222:10385   */\n    tag_383:\n        /* \"#utility.yul\":10362:10377   */\n      0x496e73756666696369656e742100000000000000000000000000000000000000\n        /* \"#utility.yul\":10358:10359   */\n      0x00\n        /* \"#utility.yul\":10350:10356   */\n      dup3\n        /* \"#utility.yul\":10346:10360   */\n      add\n        /* \"#utility.yul\":10339:10378   */\n      mstore\n        /* \"#utility.yul\":10222:10385   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10391:10757   */\n    tag_384:\n        /* \"#utility.yul\":10533:10536   */\n      0x00\n        /* \"#utility.yul\":10554:10621   */\n      tag_518\n        /* \"#utility.yul\":10618:10620   */\n      0x0d\n        /* \"#utility.yul\":10613:10616   */\n      dup4\n        /* \"#utility.yul\":10554:10621   */\n      tag_370\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":10547:10621   */\n      swap2\n      pop\n        /* \"#utility.yul\":10630:10723   */\n      tag_519\n        /* \"#utility.yul\":10719:10722   */\n      dup3\n        /* \"#utility.yul\":10630:10723   */\n      tag_383\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":10748:10750   */\n      0x20\n        /* \"#utility.yul\":10743:10746   */\n      dup3\n        /* \"#utility.yul\":10739:10751   */\n      add\n        /* \"#utility.yul\":10732:10751   */\n      swap1\n      pop\n        /* \"#utility.yul\":10391:10757   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10763:11182   */\n    tag_186:\n        /* \"#utility.yul\":10929:10933   */\n      0x00\n        /* \"#utility.yul\":10967:10969   */\n      0x20\n        /* \"#utility.yul\":10956:10965   */\n      dup3\n        /* \"#utility.yul\":10952:10970   */\n      add\n        /* \"#utility.yul\":10944:10970   */\n      swap1\n      pop\n        /* \"#utility.yul\":11016:11025   */\n      dup2\n        /* \"#utility.yul\":11010:11014   */\n      dup2\n        /* \"#utility.yul\":11006:11026   */\n      sub\n        /* \"#utility.yul\":11002:11003   */\n      0x00\n        /* \"#utility.yul\":10991:11000   */\n      dup4\n        /* \"#utility.yul\":10987:11004   */\n      add\n        /* \"#utility.yul\":10980:11027   */\n      mstore\n        /* \"#utility.yul\":11044:11175   */\n      tag_521\n        /* \"#utility.yul\":11170:11174   */\n      dup2\n        /* \"#utility.yul\":11044:11175   */\n      tag_384\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":11036:11175   */\n      swap1\n      pop\n        /* \"#utility.yul\":10763:11182   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11188:11353   */\n    tag_385:\n        /* \"#utility.yul\":11328:11345   */\n      0x416c726561647920737461727465640000000000000000000000000000000000\n        /* \"#utility.yul\":11324:11325   */\n      0x00\n        /* \"#utility.yul\":11316:11322   */\n      dup3\n        /* \"#utility.yul\":11312:11326   */\n      add\n        /* \"#utility.yul\":11305:11346   */\n      mstore\n        /* \"#utility.yul\":11188:11353   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11359:11725   */\n    tag_386:\n        /* \"#utility.yul\":11501:11504   */\n      0x00\n        /* \"#utility.yul\":11522:11589   */\n      tag_524\n        /* \"#utility.yul\":11586:11588   */\n      0x0f\n        /* \"#utility.yul\":11581:11584   */\n      dup4\n        /* \"#utility.yul\":11522:11589   */\n      tag_370\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":11515:11589   */\n      swap2\n      pop\n        /* \"#utility.yul\":11598:11691   */\n      tag_525\n        /* \"#utility.yul\":11687:11690   */\n      dup3\n        /* \"#utility.yul\":11598:11691   */\n      tag_385\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":11716:11718   */\n      0x20\n        /* \"#utility.yul\":11711:11714   */\n      dup3\n        /* \"#utility.yul\":11707:11719   */\n      add\n        /* \"#utility.yul\":11700:11719   */\n      swap1\n      pop\n        /* \"#utility.yul\":11359:11725   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11731:12150   */\n    tag_189:\n        /* \"#utility.yul\":11897:11901   */\n      0x00\n        /* \"#utility.yul\":11935:11937   */\n      0x20\n        /* \"#utility.yul\":11924:11933   */\n      dup3\n        /* \"#utility.yul\":11920:11938   */\n      add\n        /* \"#utility.yul\":11912:11938   */\n      swap1\n      pop\n        /* \"#utility.yul\":11984:11993   */\n      dup2\n        /* \"#utility.yul\":11978:11982   */\n      dup2\n        /* \"#utility.yul\":11974:11994   */\n      sub\n        /* \"#utility.yul\":11970:11971   */\n      0x00\n        /* \"#utility.yul\":11959:11968   */\n      dup4\n        /* \"#utility.yul\":11955:11972   */\n      add\n        /* \"#utility.yul\":11948:11995   */\n      mstore\n        /* \"#utility.yul\":12012:12143   */\n      tag_527\n        /* \"#utility.yul\":12138:12142   */\n      dup2\n        /* \"#utility.yul\":12012:12143   */\n      tag_386\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":12004:12143   */\n      swap1\n      pop\n        /* \"#utility.yul\":11731:12150   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12156:12318   */\n    tag_387:\n        /* \"#utility.yul\":12296:12310   */\n      0x496e73756666696369656e740000000000000000000000000000000000000000\n        /* \"#utility.yul\":12292:12293   */\n      0x00\n        /* \"#utility.yul\":12284:12290   */\n      dup3\n        /* \"#utility.yul\":12280:12294   */\n      add\n        /* \"#utility.yul\":12273:12311   */\n      mstore\n        /* \"#utility.yul\":12156:12318   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12324:12690   */\n    tag_388:\n        /* \"#utility.yul\":12466:12469   */\n      0x00\n        /* \"#utility.yul\":12487:12554   */\n      tag_530\n        /* \"#utility.yul\":12551:12553   */\n      0x0c\n        /* \"#utility.yul\":12546:12549   */\n      dup4\n        /* \"#utility.yul\":12487:12554   */\n      tag_370\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":12480:12554   */\n      swap2\n      pop\n        /* \"#utility.yul\":12563:12656   */\n      tag_531\n        /* \"#utility.yul\":12652:12655   */\n      dup3\n        /* \"#utility.yul\":12563:12656   */\n      tag_387\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":12681:12683   */\n      0x20\n        /* \"#utility.yul\":12676:12679   */\n      dup3\n        /* \"#utility.yul\":12672:12684   */\n      add\n        /* \"#utility.yul\":12665:12684   */\n      swap1\n      pop\n        /* \"#utility.yul\":12324:12690   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12696:13115   */\n    tag_196:\n        /* \"#utility.yul\":12862:12866   */\n      0x00\n        /* \"#utility.yul\":12900:12902   */\n      0x20\n        /* \"#utility.yul\":12889:12898   */\n      dup3\n        /* \"#utility.yul\":12885:12903   */\n      add\n        /* \"#utility.yul\":12877:12903   */\n      swap1\n      pop\n        /* \"#utility.yul\":12949:12958   */\n      dup2\n        /* \"#utility.yul\":12943:12947   */\n      dup2\n        /* \"#utility.yul\":12939:12959   */\n      sub\n        /* \"#utility.yul\":12935:12936   */\n      0x00\n        /* \"#utility.yul\":12924:12933   */\n      dup4\n        /* \"#utility.yul\":12920:12937   */\n      add\n        /* \"#utility.yul\":12913:12960   */\n      mstore\n        /* \"#utility.yul\":12977:13108   */\n      tag_533\n        /* \"#utility.yul\":13103:13107   */\n      dup2\n        /* \"#utility.yul\":12977:13108   */\n      tag_388\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":12969:13108   */\n      swap1\n      pop\n        /* \"#utility.yul\":12696:13115   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13121:13283   */\n    tag_389:\n        /* \"#utility.yul\":13261:13275   */\n      0x496e76616c6964204d6f64650000000000000000000000000000000000000000\n        /* \"#utility.yul\":13257:13258   */\n      0x00\n        /* \"#utility.yul\":13249:13255   */\n      dup3\n        /* \"#utility.yul\":13245:13259   */\n      add\n        /* \"#utility.yul\":13238:13276   */\n      mstore\n        /* \"#utility.yul\":13121:13283   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13289:13655   */\n    tag_390:\n        /* \"#utility.yul\":13431:13434   */\n      0x00\n        /* \"#utility.yul\":13452:13519   */\n      tag_536\n        /* \"#utility.yul\":13516:13518   */\n      0x0c\n        /* \"#utility.yul\":13511:13514   */\n      dup4\n        /* \"#utility.yul\":13452:13519   */\n      tag_370\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":13445:13519   */\n      swap2\n      pop\n        /* \"#utility.yul\":13528:13621   */\n      tag_537\n        /* \"#utility.yul\":13617:13620   */\n      dup3\n        /* \"#utility.yul\":13528:13621   */\n      tag_389\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":13646:13648   */\n      0x20\n        /* \"#utility.yul\":13641:13644   */\n      dup3\n        /* \"#utility.yul\":13637:13649   */\n      add\n        /* \"#utility.yul\":13630:13649   */\n      swap1\n      pop\n        /* \"#utility.yul\":13289:13655   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13661:14080   */\n    tag_208:\n        /* \"#utility.yul\":13827:13831   */\n      0x00\n        /* \"#utility.yul\":13865:13867   */\n      0x20\n        /* \"#utility.yul\":13854:13863   */\n      dup3\n        /* \"#utility.yul\":13850:13868   */\n      add\n        /* \"#utility.yul\":13842:13868   */\n      swap1\n      pop\n        /* \"#utility.yul\":13914:13923   */\n      dup2\n        /* \"#utility.yul\":13908:13912   */\n      dup2\n        /* \"#utility.yul\":13904:13924   */\n      sub\n        /* \"#utility.yul\":13900:13901   */\n      0x00\n        /* \"#utility.yul\":13889:13898   */\n      dup4\n        /* \"#utility.yul\":13885:13902   */\n      add\n        /* \"#utility.yul\":13878:13925   */\n      mstore\n        /* \"#utility.yul\":13942:14073   */\n      tag_539\n        /* \"#utility.yul\":14068:14072   */\n      dup2\n        /* \"#utility.yul\":13942:14073   */\n      tag_390\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":13934:14073   */\n      swap1\n      pop\n        /* \"#utility.yul\":13661:14080   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14086:14259   */\n    tag_391:\n        /* \"#utility.yul\":14226:14251   */\n      0x496e76616c6964204c6f636b7570204475726174696f6e000000000000000000\n        /* \"#utility.yul\":14222:14223   */\n      0x00\n        /* \"#utility.yul\":14214:14220   */\n      dup3\n        /* \"#utility.yul\":14210:14224   */\n      add\n        /* \"#utility.yul\":14203:14252   */\n      mstore\n        /* \"#utility.yul\":14086:14259   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14265:14631   */\n    tag_392:\n        /* \"#utility.yul\":14407:14410   */\n      0x00\n        /* \"#utility.yul\":14428:14495   */\n      tag_542\n        /* \"#utility.yul\":14492:14494   */\n      0x17\n        /* \"#utility.yul\":14487:14490   */\n      dup4\n        /* \"#utility.yul\":14428:14495   */\n      tag_370\n      jump\t// in\n    tag_542:\n        /* \"#utility.yul\":14421:14495   */\n      swap2\n      pop\n        /* \"#utility.yul\":14504:14597   */\n      tag_543\n        /* \"#utility.yul\":14593:14596   */\n      dup3\n        /* \"#utility.yul\":14504:14597   */\n      tag_391\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":14622:14624   */\n      0x20\n        /* \"#utility.yul\":14617:14620   */\n      dup3\n        /* \"#utility.yul\":14613:14625   */\n      add\n        /* \"#utility.yul\":14606:14625   */\n      swap1\n      pop\n        /* \"#utility.yul\":14265:14631   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14637:15056   */\n    tag_222:\n        /* \"#utility.yul\":14803:14807   */\n      0x00\n        /* \"#utility.yul\":14841:14843   */\n      0x20\n        /* \"#utility.yul\":14830:14839   */\n      dup3\n        /* \"#utility.yul\":14826:14844   */\n      add\n        /* \"#utility.yul\":14818:14844   */\n      swap1\n      pop\n        /* \"#utility.yul\":14890:14899   */\n      dup2\n        /* \"#utility.yul\":14884:14888   */\n      dup2\n        /* \"#utility.yul\":14880:14900   */\n      sub\n        /* \"#utility.yul\":14876:14877   */\n      0x00\n        /* \"#utility.yul\":14865:14874   */\n      dup4\n        /* \"#utility.yul\":14861:14878   */\n      add\n        /* \"#utility.yul\":14854:14901   */\n      mstore\n        /* \"#utility.yul\":14918:15049   */\n      tag_545\n        /* \"#utility.yul\":15044:15048   */\n      dup2\n        /* \"#utility.yul\":14918:15049   */\n      tag_392\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":14910:15049   */\n      swap1\n      pop\n        /* \"#utility.yul\":14637:15056   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15062:15238   */\n    tag_393:\n        /* \"#utility.yul\":15202:15230   */\n      0x496e76616c696420556e7374616b696e67204665652052617465000000000000\n        /* \"#utility.yul\":15198:15199   */\n      0x00\n        /* \"#utility.yul\":15190:15196   */\n      dup3\n        /* \"#utility.yul\":15186:15200   */\n      add\n        /* \"#utility.yul\":15179:15231   */\n      mstore\n        /* \"#utility.yul\":15062:15238   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15244:15610   */\n    tag_394:\n        /* \"#utility.yul\":15386:15389   */\n      0x00\n        /* \"#utility.yul\":15407:15474   */\n      tag_548\n        /* \"#utility.yul\":15471:15473   */\n      0x1a\n        /* \"#utility.yul\":15466:15469   */\n      dup4\n        /* \"#utility.yul\":15407:15474   */\n      tag_370\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":15400:15474   */\n      swap2\n      pop\n        /* \"#utility.yul\":15483:15576   */\n      tag_549\n        /* \"#utility.yul\":15572:15575   */\n      dup3\n        /* \"#utility.yul\":15483:15576   */\n      tag_393\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":15601:15603   */\n      0x20\n        /* \"#utility.yul\":15596:15599   */\n      dup3\n        /* \"#utility.yul\":15592:15604   */\n      add\n        /* \"#utility.yul\":15585:15604   */\n      swap1\n      pop\n        /* \"#utility.yul\":15244:15610   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15616:16035   */\n    tag_243:\n        /* \"#utility.yul\":15782:15786   */\n      0x00\n        /* \"#utility.yul\":15820:15822   */\n      0x20\n        /* \"#utility.yul\":15809:15818   */\n      dup3\n        /* \"#utility.yul\":15805:15823   */\n      add\n        /* \"#utility.yul\":15797:15823   */\n      swap1\n      pop\n        /* \"#utility.yul\":15869:15878   */\n      dup2\n        /* \"#utility.yul\":15863:15867   */\n      dup2\n        /* \"#utility.yul\":15859:15879   */\n      sub\n        /* \"#utility.yul\":15855:15856   */\n      0x00\n        /* \"#utility.yul\":15844:15853   */\n      dup4\n        /* \"#utility.yul\":15840:15857   */\n      add\n        /* \"#utility.yul\":15833:15880   */\n      mstore\n        /* \"#utility.yul\":15897:16028   */\n      tag_551\n        /* \"#utility.yul\":16023:16027   */\n      dup2\n        /* \"#utility.yul\":15897:16028   */\n      tag_394\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":15889:16028   */\n      swap1\n      pop\n        /* \"#utility.yul\":15616:16035   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16041:16204   */\n    tag_395:\n        /* \"#utility.yul\":16181:16196   */\n      0x496e76616c69642076616c756500000000000000000000000000000000000000\n        /* \"#utility.yul\":16177:16178   */\n      0x00\n        /* \"#utility.yul\":16169:16175   */\n      dup3\n        /* \"#utility.yul\":16165:16179   */\n      add\n        /* \"#utility.yul\":16158:16197   */\n      mstore\n        /* \"#utility.yul\":16041:16204   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16210:16576   */\n    tag_396:\n        /* \"#utility.yul\":16352:16355   */\n      0x00\n        /* \"#utility.yul\":16373:16440   */\n      tag_554\n        /* \"#utility.yul\":16437:16439   */\n      0x0d\n        /* \"#utility.yul\":16432:16435   */\n      dup4\n        /* \"#utility.yul\":16373:16440   */\n      tag_370\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":16366:16440   */\n      swap2\n      pop\n        /* \"#utility.yul\":16449:16542   */\n      tag_555\n        /* \"#utility.yul\":16538:16541   */\n      dup3\n        /* \"#utility.yul\":16449:16542   */\n      tag_395\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":16567:16569   */\n      0x20\n        /* \"#utility.yul\":16562:16565   */\n      dup3\n        /* \"#utility.yul\":16558:16570   */\n      add\n        /* \"#utility.yul\":16551:16570   */\n      swap1\n      pop\n        /* \"#utility.yul\":16210:16576   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16582:17001   */\n    tag_253:\n        /* \"#utility.yul\":16748:16752   */\n      0x00\n        /* \"#utility.yul\":16786:16788   */\n      0x20\n        /* \"#utility.yul\":16775:16784   */\n      dup3\n        /* \"#utility.yul\":16771:16789   */\n      add\n        /* \"#utility.yul\":16763:16789   */\n      swap1\n      pop\n        /* \"#utility.yul\":16835:16844   */\n      dup2\n        /* \"#utility.yul\":16829:16833   */\n      dup2\n        /* \"#utility.yul\":16825:16845   */\n      sub\n        /* \"#utility.yul\":16821:16822   */\n      0x00\n        /* \"#utility.yul\":16810:16819   */\n      dup4\n        /* \"#utility.yul\":16806:16823   */\n      add\n        /* \"#utility.yul\":16799:16846   */\n      mstore\n        /* \"#utility.yul\":16863:16994   */\n      tag_557\n        /* \"#utility.yul\":16989:16993   */\n      dup2\n        /* \"#utility.yul\":16863:16994   */\n      tag_396\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":16855:16994   */\n      swap1\n      pop\n        /* \"#utility.yul\":16582:17001   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17007:17178   */\n    tag_397:\n        /* \"#utility.yul\":17147:17170   */\n      0x4572726f723a20696e76616c6964207374616b65720000000000000000000000\n        /* \"#utility.yul\":17143:17144   */\n      0x00\n        /* \"#utility.yul\":17135:17141   */\n      dup3\n        /* \"#utility.yul\":17131:17145   */\n      add\n        /* \"#utility.yul\":17124:17171   */\n      mstore\n        /* \"#utility.yul\":17007:17178   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17184:17550   */\n    tag_398:\n        /* \"#utility.yul\":17326:17329   */\n      0x00\n        /* \"#utility.yul\":17347:17414   */\n      tag_560\n        /* \"#utility.yul\":17411:17413   */\n      0x15\n        /* \"#utility.yul\":17406:17409   */\n      dup4\n        /* \"#utility.yul\":17347:17414   */\n      tag_370\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":17340:17414   */\n      swap2\n      pop\n        /* \"#utility.yul\":17423:17516   */\n      tag_561\n        /* \"#utility.yul\":17512:17515   */\n      dup3\n        /* \"#utility.yul\":17423:17516   */\n      tag_397\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":17541:17543   */\n      0x20\n        /* \"#utility.yul\":17536:17539   */\n      dup3\n        /* \"#utility.yul\":17532:17544   */\n      add\n        /* \"#utility.yul\":17525:17544   */\n      swap1\n      pop\n        /* \"#utility.yul\":17184:17550   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17556:17975   */\n    tag_266:\n        /* \"#utility.yul\":17722:17726   */\n      0x00\n        /* \"#utility.yul\":17760:17762   */\n      0x20\n        /* \"#utility.yul\":17749:17758   */\n      dup3\n        /* \"#utility.yul\":17745:17763   */\n      add\n        /* \"#utility.yul\":17737:17763   */\n      swap1\n      pop\n        /* \"#utility.yul\":17809:17818   */\n      dup2\n        /* \"#utility.yul\":17803:17807   */\n      dup2\n        /* \"#utility.yul\":17799:17819   */\n      sub\n        /* \"#utility.yul\":17795:17796   */\n      0x00\n        /* \"#utility.yul\":17784:17793   */\n      dup4\n        /* \"#utility.yul\":17780:17797   */\n      add\n        /* \"#utility.yul\":17773:17820   */\n      mstore\n        /* \"#utility.yul\":17837:17968   */\n      tag_563\n        /* \"#utility.yul\":17963:17967   */\n      dup2\n        /* \"#utility.yul\":17837:17968   */\n      tag_398\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":17829:17968   */\n      swap1\n      pop\n        /* \"#utility.yul\":17556:17975   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17981:18206   */\n    tag_399:\n        /* \"#utility.yul\":18121:18155   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":18117:18118   */\n      0x00\n        /* \"#utility.yul\":18109:18115   */\n      dup3\n        /* \"#utility.yul\":18105:18119   */\n      add\n        /* \"#utility.yul\":18098:18156   */\n      mstore\n        /* \"#utility.yul\":18190:18198   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":18185:18187   */\n      0x20\n        /* \"#utility.yul\":18177:18183   */\n      dup3\n        /* \"#utility.yul\":18173:18188   */\n      add\n        /* \"#utility.yul\":18166:18199   */\n      mstore\n        /* \"#utility.yul\":17981:18206   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18212:18578   */\n    tag_400:\n        /* \"#utility.yul\":18354:18357   */\n      0x00\n        /* \"#utility.yul\":18375:18442   */\n      tag_566\n        /* \"#utility.yul\":18439:18441   */\n      0x26\n        /* \"#utility.yul\":18434:18437   */\n      dup4\n        /* \"#utility.yul\":18375:18442   */\n      tag_370\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":18368:18442   */\n      swap2\n      pop\n        /* \"#utility.yul\":18451:18544   */\n      tag_567\n        /* \"#utility.yul\":18540:18543   */\n      dup3\n        /* \"#utility.yul\":18451:18544   */\n      tag_399\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":18569:18571   */\n      0x40\n        /* \"#utility.yul\":18564:18567   */\n      dup3\n        /* \"#utility.yul\":18560:18572   */\n      add\n        /* \"#utility.yul\":18553:18572   */\n      swap1\n      pop\n        /* \"#utility.yul\":18212:18578   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18584:19003   */\n    tag_284:\n        /* \"#utility.yul\":18750:18754   */\n      0x00\n        /* \"#utility.yul\":18788:18790   */\n      0x20\n        /* \"#utility.yul\":18777:18786   */\n      dup3\n        /* \"#utility.yul\":18773:18791   */\n      add\n        /* \"#utility.yul\":18765:18791   */\n      swap1\n      pop\n        /* \"#utility.yul\":18837:18846   */\n      dup2\n        /* \"#utility.yul\":18831:18835   */\n      dup2\n        /* \"#utility.yul\":18827:18847   */\n      sub\n        /* \"#utility.yul\":18823:18824   */\n      0x00\n        /* \"#utility.yul\":18812:18821   */\n      dup4\n        /* \"#utility.yul\":18808:18825   */\n      add\n        /* \"#utility.yul\":18801:18848   */\n      mstore\n        /* \"#utility.yul\":18865:18996   */\n      tag_569\n        /* \"#utility.yul\":18991:18995   */\n      dup2\n        /* \"#utility.yul\":18865:18996   */\n      tag_400\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":18857:18996   */\n      swap1\n      pop\n        /* \"#utility.yul\":18584:19003   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19009:19189   */\n    tag_401:\n        /* \"#utility.yul\":19057:19134   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":19054:19055   */\n      0x00\n        /* \"#utility.yul\":19047:19135   */\n      mstore\n        /* \"#utility.yul\":19154:19158   */\n      0x11\n        /* \"#utility.yul\":19151:19152   */\n      0x04\n        /* \"#utility.yul\":19144:19159   */\n      mstore\n        /* \"#utility.yul\":19178:19182   */\n      0x24\n        /* \"#utility.yul\":19175:19176   */\n      0x00\n        /* \"#utility.yul\":19168:19183   */\n      revert\n        /* \"#utility.yul\":19195:19386   */\n    tag_297:\n        /* \"#utility.yul\":19235:19239   */\n      0x00\n        /* \"#utility.yul\":19255:19275   */\n      tag_572\n        /* \"#utility.yul\":19273:19274   */\n      dup3\n        /* \"#utility.yul\":19255:19275   */\n      tag_353\n      jump\t// in\n    tag_572:\n        /* \"#utility.yul\":19250:19275   */\n      swap2\n      pop\n        /* \"#utility.yul\":19289:19309   */\n      tag_573\n        /* \"#utility.yul\":19307:19308   */\n      dup4\n        /* \"#utility.yul\":19289:19309   */\n      tag_353\n      jump\t// in\n    tag_573:\n        /* \"#utility.yul\":19284:19309   */\n      swap3\n      pop\n        /* \"#utility.yul\":19328:19329   */\n      dup3\n        /* \"#utility.yul\":19325:19326   */\n      dup3\n        /* \"#utility.yul\":19322:19330   */\n      lt\n        /* \"#utility.yul\":19319:19353   */\n      iszero\n      tag_574\n      jumpi\n        /* \"#utility.yul\":19333:19351   */\n      tag_575\n      tag_401\n      jump\t// in\n    tag_575:\n        /* \"#utility.yul\":19319:19353   */\n    tag_574:\n        /* \"#utility.yul\":19378:19379   */\n      dup3\n        /* \"#utility.yul\":19375:19376   */\n      dup3\n        /* \"#utility.yul\":19371:19380   */\n      sub\n        /* \"#utility.yul\":19363:19380   */\n      swap1\n      pop\n        /* \"#utility.yul\":19195:19386   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19392:19577   */\n    tag_300:\n        /* \"#utility.yul\":19432:19433   */\n      0x00\n        /* \"#utility.yul\":19449:19469   */\n      tag_577\n        /* \"#utility.yul\":19467:19468   */\n      dup3\n        /* \"#utility.yul\":19449:19469   */\n      tag_353\n      jump\t// in\n    tag_577:\n        /* \"#utility.yul\":19444:19469   */\n      swap2\n      pop\n        /* \"#utility.yul\":19483:19503   */\n      tag_578\n        /* \"#utility.yul\":19501:19502   */\n      dup4\n        /* \"#utility.yul\":19483:19503   */\n      tag_353\n      jump\t// in\n    tag_578:\n        /* \"#utility.yul\":19478:19503   */\n      swap3\n      pop\n        /* \"#utility.yul\":19522:19523   */\n      dup3\n        /* \"#utility.yul\":19512:19547   */\n      tag_579\n      jumpi\n        /* \"#utility.yul\":19527:19545   */\n      tag_580\n      tag_375\n      jump\t// in\n    tag_580:\n        /* \"#utility.yul\":19512:19547   */\n    tag_579:\n        /* \"#utility.yul\":19569:19570   */\n      dup3\n        /* \"#utility.yul\":19566:19567   */\n      dup3\n        /* \"#utility.yul\":19562:19571   */\n      div\n        /* \"#utility.yul\":19557:19571   */\n      swap1\n      pop\n        /* \"#utility.yul\":19392:19577   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19583:19888   */\n    tag_303:\n        /* \"#utility.yul\":19623:19626   */\n      0x00\n        /* \"#utility.yul\":19642:19662   */\n      tag_582\n        /* \"#utility.yul\":19660:19661   */\n      dup3\n        /* \"#utility.yul\":19642:19662   */\n      tag_353\n      jump\t// in\n    tag_582:\n        /* \"#utility.yul\":19637:19662   */\n      swap2\n      pop\n        /* \"#utility.yul\":19676:19696   */\n      tag_583\n        /* \"#utility.yul\":19694:19695   */\n      dup4\n        /* \"#utility.yul\":19676:19696   */\n      tag_353\n      jump\t// in\n    tag_583:\n        /* \"#utility.yul\":19671:19696   */\n      swap3\n      pop\n        /* \"#utility.yul\":19830:19831   */\n      dup3\n        /* \"#utility.yul\":19762:19828   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":19758:19832   */\n      sub\n        /* \"#utility.yul\":19755:19756   */\n      dup3\n        /* \"#utility.yul\":19752:19833   */\n      gt\n        /* \"#utility.yul\":19749:19856   */\n      iszero\n      tag_584\n      jumpi\n        /* \"#utility.yul\":19836:19854   */\n      tag_585\n      tag_401\n      jump\t// in\n    tag_585:\n        /* \"#utility.yul\":19749:19856   */\n    tag_584:\n        /* \"#utility.yul\":19880:19881   */\n      dup3\n        /* \"#utility.yul\":19877:19878   */\n      dup3\n        /* \"#utility.yul\":19873:19882   */\n      add\n        /* \"#utility.yul\":19866:19882   */\n      swap1\n      pop\n        /* \"#utility.yul\":19583:19888   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19894:20242   */\n    tag_306:\n        /* \"#utility.yul\":19934:19941   */\n      0x00\n        /* \"#utility.yul\":19957:19977   */\n      tag_587\n        /* \"#utility.yul\":19975:19976   */\n      dup3\n        /* \"#utility.yul\":19957:19977   */\n      tag_353\n      jump\t// in\n    tag_587:\n        /* \"#utility.yul\":19952:19977   */\n      swap2\n      pop\n        /* \"#utility.yul\":19991:20011   */\n      tag_588\n        /* \"#utility.yul\":20009:20010   */\n      dup4\n        /* \"#utility.yul\":19991:20011   */\n      tag_353\n      jump\t// in\n    tag_588:\n        /* \"#utility.yul\":19986:20011   */\n      swap3\n      pop\n        /* \"#utility.yul\":20179:20180   */\n      dup2\n        /* \"#utility.yul\":20111:20177   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":20107:20181   */\n      div\n        /* \"#utility.yul\":20104:20105   */\n      dup4\n        /* \"#utility.yul\":20101:20182   */\n      gt\n        /* \"#utility.yul\":20096:20097   */\n      dup3\n        /* \"#utility.yul\":20089:20098   */\n      iszero\n        /* \"#utility.yul\":20082:20099   */\n      iszero\n        /* \"#utility.yul\":20078:20183   */\n      and\n        /* \"#utility.yul\":20075:20206   */\n      iszero\n      tag_589\n      jumpi\n        /* \"#utility.yul\":20186:20204   */\n      tag_590\n      tag_401\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":20075:20206   */\n    tag_589:\n        /* \"#utility.yul\":20234:20235   */\n      dup3\n        /* \"#utility.yul\":20231:20232   */\n      dup3\n        /* \"#utility.yul\":20227:20236   */\n      mul\n        /* \"#utility.yul\":20216:20236   */\n      swap1\n      pop\n        /* \"#utility.yul\":19894:20242   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20248:20690   */\n    tag_316:\n        /* \"#utility.yul\":20397:20401   */\n      0x00\n        /* \"#utility.yul\":20435:20437   */\n      0x60\n        /* \"#utility.yul\":20424:20433   */\n      dup3\n        /* \"#utility.yul\":20420:20438   */\n      add\n        /* \"#utility.yul\":20412:20438   */\n      swap1\n      pop\n        /* \"#utility.yul\":20448:20519   */\n      tag_592\n        /* \"#utility.yul\":20516:20517   */\n      0x00\n        /* \"#utility.yul\":20505:20514   */\n      dup4\n        /* \"#utility.yul\":20501:20518   */\n      add\n        /* \"#utility.yul\":20492:20498   */\n      dup7\n        /* \"#utility.yul\":20448:20519   */\n      tag_364\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":20529:20601   */\n      tag_593\n        /* \"#utility.yul\":20597:20599   */\n      0x20\n        /* \"#utility.yul\":20586:20595   */\n      dup4\n        /* \"#utility.yul\":20582:20600   */\n      add\n        /* \"#utility.yul\":20573:20579   */\n      dup6\n        /* \"#utility.yul\":20529:20601   */\n      tag_364\n      jump\t// in\n    tag_593:\n        /* \"#utility.yul\":20611:20683   */\n      tag_594\n        /* \"#utility.yul\":20679:20681   */\n      0x40\n        /* \"#utility.yul\":20668:20677   */\n      dup4\n        /* \"#utility.yul\":20664:20682   */\n      add\n        /* \"#utility.yul\":20655:20661   */\n      dup5\n        /* \"#utility.yul\":20611:20683   */\n      tag_354\n      jump\t// in\n    tag_594:\n        /* \"#utility.yul\":20248:20690   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20696:20786   */\n    tag_402:\n        /* \"#utility.yul\":20730:20737   */\n      0x00\n        /* \"#utility.yul\":20773:20778   */\n      dup2\n        /* \"#utility.yul\":20766:20779   */\n      iszero\n        /* \"#utility.yul\":20759:20780   */\n      iszero\n        /* \"#utility.yul\":20748:20780   */\n      swap1\n      pop\n        /* \"#utility.yul\":20696:20786   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20792:20908   */\n    tag_403:\n        /* \"#utility.yul\":20862:20883   */\n      tag_597\n        /* \"#utility.yul\":20877:20882   */\n      dup2\n        /* \"#utility.yul\":20862:20883   */\n      tag_402\n      jump\t// in\n    tag_597:\n        /* \"#utility.yul\":20855:20860   */\n      dup2\n        /* \"#utility.yul\":20852:20884   */\n      eq\n        /* \"#utility.yul\":20842:20902   */\n      tag_598\n      jumpi\n        /* \"#utility.yul\":20898:20899   */\n      0x00\n        /* \"#utility.yul\":20895:20896   */\n      dup1\n        /* \"#utility.yul\":20888:20900   */\n      revert\n        /* \"#utility.yul\":20842:20902   */\n    tag_598:\n        /* \"#utility.yul\":20792:20908   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20914:21051   */\n    tag_404:\n        /* \"#utility.yul\":20968:20973   */\n      0x00\n        /* \"#utility.yul\":20999:21005   */\n      dup2\n        /* \"#utility.yul\":20993:21006   */\n      mload\n        /* \"#utility.yul\":20984:21006   */\n      swap1\n      pop\n        /* \"#utility.yul\":21015:21045   */\n      tag_600\n        /* \"#utility.yul\":21039:21044   */\n      dup2\n        /* \"#utility.yul\":21015:21045   */\n      tag_403\n      jump\t// in\n    tag_600:\n        /* \"#utility.yul\":20914:21051   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21057:21402   */\n    tag_322:\n        /* \"#utility.yul\":21124:21130   */\n      0x00\n        /* \"#utility.yul\":21173:21175   */\n      0x20\n        /* \"#utility.yul\":21161:21170   */\n      dup3\n        /* \"#utility.yul\":21152:21159   */\n      dup5\n        /* \"#utility.yul\":21148:21171   */\n      sub\n        /* \"#utility.yul\":21144:21176   */\n      slt\n        /* \"#utility.yul\":21141:21260   */\n      iszero\n      tag_602\n      jumpi\n        /* \"#utility.yul\":21179:21258   */\n      tag_603\n      tag_356\n      jump\t// in\n    tag_603:\n        /* \"#utility.yul\":21141:21260   */\n    tag_602:\n        /* \"#utility.yul\":21299:21300   */\n      0x00\n        /* \"#utility.yul\":21324:21385   */\n      tag_604\n        /* \"#utility.yul\":21377:21384   */\n      dup5\n        /* \"#utility.yul\":21368:21374   */\n      dup3\n        /* \"#utility.yul\":21357:21366   */\n      dup6\n        /* \"#utility.yul\":21353:21375   */\n      add\n        /* \"#utility.yul\":21324:21385   */\n      tag_404\n      jump\t// in\n    tag_604:\n        /* \"#utility.yul\":21314:21385   */\n      swap2\n      pop\n        /* \"#utility.yul\":21270:21395   */\n      pop\n        /* \"#utility.yul\":21057:21402   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21408:21637   */\n    tag_405:\n        /* \"#utility.yul\":21548:21582   */\n      0x5361666542455032303a204245503230206f7065726174696f6e20646964206e\n        /* \"#utility.yul\":21544:21545   */\n      0x00\n        /* \"#utility.yul\":21536:21542   */\n      dup3\n        /* \"#utility.yul\":21532:21546   */\n      add\n        /* \"#utility.yul\":21525:21583   */\n      mstore\n        /* \"#utility.yul\":21617:21629   */\n      0x6f74207375636365656400000000000000000000000000000000000000000000\n        /* \"#utility.yul\":21612:21614   */\n      0x20\n        /* \"#utility.yul\":21604:21610   */\n      dup3\n        /* \"#utility.yul\":21600:21615   */\n      add\n        /* \"#utility.yul\":21593:21630   */\n      mstore\n        /* \"#utility.yul\":21408:21637   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21643:22009   */\n    tag_406:\n        /* \"#utility.yul\":21785:21788   */\n      0x00\n        /* \"#utility.yul\":21806:21873   */\n      tag_607\n        /* \"#utility.yul\":21870:21872   */\n      0x2a\n        /* \"#utility.yul\":21865:21868   */\n      dup4\n        /* \"#utility.yul\":21806:21873   */\n      tag_370\n      jump\t// in\n    tag_607:\n        /* \"#utility.yul\":21799:21873   */\n      swap2\n      pop\n        /* \"#utility.yul\":21882:21975   */\n      tag_608\n        /* \"#utility.yul\":21971:21974   */\n      dup3\n        /* \"#utility.yul\":21882:21975   */\n      tag_405\n      jump\t// in\n    tag_608:\n        /* \"#utility.yul\":22000:22002   */\n      0x40\n        /* \"#utility.yul\":21995:21998   */\n      dup3\n        /* \"#utility.yul\":21991:22003   */\n      add\n        /* \"#utility.yul\":21984:22003   */\n      swap1\n      pop\n        /* \"#utility.yul\":21643:22009   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22015:22434   */\n    tag_325:\n        /* \"#utility.yul\":22181:22185   */\n      0x00\n        /* \"#utility.yul\":22219:22221   */\n      0x20\n        /* \"#utility.yul\":22208:22217   */\n      dup3\n        /* \"#utility.yul\":22204:22222   */\n      add\n        /* \"#utility.yul\":22196:22222   */\n      swap1\n      pop\n        /* \"#utility.yul\":22268:22277   */\n      dup2\n        /* \"#utility.yul\":22262:22266   */\n      dup2\n        /* \"#utility.yul\":22258:22278   */\n      sub\n        /* \"#utility.yul\":22254:22255   */\n      0x00\n        /* \"#utility.yul\":22243:22252   */\n      dup4\n        /* \"#utility.yul\":22239:22256   */\n      add\n        /* \"#utility.yul\":22232:22279   */\n      mstore\n        /* \"#utility.yul\":22296:22427   */\n      tag_610\n        /* \"#utility.yul\":22422:22426   */\n      dup2\n        /* \"#utility.yul\":22296:22427   */\n      tag_406\n      jump\t// in\n    tag_610:\n        /* \"#utility.yul\":22288:22427   */\n      swap1\n      pop\n        /* \"#utility.yul\":22015:22434   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22440:22665   */\n    tag_407:\n        /* \"#utility.yul\":22580:22614   */\n      0x416464726573733a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":22576:22577   */\n      0x00\n        /* \"#utility.yul\":22568:22574   */\n      dup3\n        /* \"#utility.yul\":22564:22578   */\n      add\n        /* \"#utility.yul\":22557:22615   */\n      mstore\n        /* \"#utility.yul\":22649:22657   */\n      0x722063616c6c0000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":22644:22646   */\n      0x20\n        /* \"#utility.yul\":22636:22642   */\n      dup3\n        /* \"#utility.yul\":22632:22647   */\n      add\n        /* \"#utility.yul\":22625:22658   */\n      mstore\n        /* \"#utility.yul\":22440:22665   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22671:23037   */\n    tag_408:\n        /* \"#utility.yul\":22813:22816   */\n      0x00\n        /* \"#utility.yul\":22834:22901   */\n      tag_613\n        /* \"#utility.yul\":22898:22900   */\n      0x26\n        /* \"#utility.yul\":22893:22896   */\n      dup4\n        /* \"#utility.yul\":22834:22901   */\n      tag_370\n      jump\t// in\n    tag_613:\n        /* \"#utility.yul\":22827:22901   */\n      swap2\n      pop\n        /* \"#utility.yul\":22910:23003   */\n      tag_614\n        /* \"#utility.yul\":22999:23002   */\n      dup3\n        /* \"#utility.yul\":22910:23003   */\n      tag_407\n      jump\t// in\n    tag_614:\n        /* \"#utility.yul\":23028:23030   */\n      0x40\n        /* \"#utility.yul\":23023:23026   */\n      dup3\n        /* \"#utility.yul\":23019:23031   */\n      add\n        /* \"#utility.yul\":23012:23031   */\n      swap1\n      pop\n        /* \"#utility.yul\":22671:23037   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23043:23462   */\n    tag_332:\n        /* \"#utility.yul\":23209:23213   */\n      0x00\n        /* \"#utility.yul\":23247:23249   */\n      0x20\n        /* \"#utility.yul\":23236:23245   */\n      dup3\n        /* \"#utility.yul\":23232:23250   */\n      add\n        /* \"#utility.yul\":23224:23250   */\n      swap1\n      pop\n        /* \"#utility.yul\":23296:23305   */\n      dup2\n        /* \"#utility.yul\":23290:23294   */\n      dup2\n        /* \"#utility.yul\":23286:23306   */\n      sub\n        /* \"#utility.yul\":23282:23283   */\n      0x00\n        /* \"#utility.yul\":23271:23280   */\n      dup4\n        /* \"#utility.yul\":23267:23284   */\n      add\n        /* \"#utility.yul\":23260:23307   */\n      mstore\n        /* \"#utility.yul\":23324:23455   */\n      tag_616\n        /* \"#utility.yul\":23450:23454   */\n      dup2\n        /* \"#utility.yul\":23324:23455   */\n      tag_408\n      jump\t// in\n    tag_616:\n        /* \"#utility.yul\":23316:23455   */\n      swap1\n      pop\n        /* \"#utility.yul\":23043:23462   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23468:23647   */\n    tag_409:\n        /* \"#utility.yul\":23608:23639   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":23604:23605   */\n      0x00\n        /* \"#utility.yul\":23596:23602   */\n      dup3\n        /* \"#utility.yul\":23592:23606   */\n      add\n        /* \"#utility.yul\":23585:23640   */\n      mstore\n        /* \"#utility.yul\":23468:23647   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23653:24019   */\n    tag_410:\n        /* \"#utility.yul\":23795:23798   */\n      0x00\n        /* \"#utility.yul\":23816:23883   */\n      tag_619\n        /* \"#utility.yul\":23880:23882   */\n      0x1d\n        /* \"#utility.yul\":23875:23878   */\n      dup4\n        /* \"#utility.yul\":23816:23883   */\n      tag_370\n      jump\t// in\n    tag_619:\n        /* \"#utility.yul\":23809:23883   */\n      swap2\n      pop\n        /* \"#utility.yul\":23892:23985   */\n      tag_620\n        /* \"#utility.yul\":23981:23984   */\n      dup3\n        /* \"#utility.yul\":23892:23985   */\n      tag_409\n      jump\t// in\n    tag_620:\n        /* \"#utility.yul\":24010:24012   */\n      0x20\n        /* \"#utility.yul\":24005:24008   */\n      dup3\n        /* \"#utility.yul\":24001:24013   */\n      add\n        /* \"#utility.yul\":23994:24013   */\n      swap1\n      pop\n        /* \"#utility.yul\":23653:24019   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24025:24444   */\n    tag_337:\n        /* \"#utility.yul\":24191:24195   */\n      0x00\n        /* \"#utility.yul\":24229:24231   */\n      0x20\n        /* \"#utility.yul\":24218:24227   */\n      dup3\n        /* \"#utility.yul\":24214:24232   */\n      add\n        /* \"#utility.yul\":24206:24232   */\n      swap1\n      pop\n        /* \"#utility.yul\":24278:24287   */\n      dup2\n        /* \"#utility.yul\":24272:24276   */\n      dup2\n        /* \"#utility.yul\":24268:24288   */\n      sub\n        /* \"#utility.yul\":24264:24265   */\n      0x00\n        /* \"#utility.yul\":24253:24262   */\n      dup4\n        /* \"#utility.yul\":24249:24266   */\n      add\n        /* \"#utility.yul\":24242:24289   */\n      mstore\n        /* \"#utility.yul\":24306:24437   */\n      tag_622\n        /* \"#utility.yul\":24432:24436   */\n      dup2\n        /* \"#utility.yul\":24306:24437   */\n      tag_410\n      jump\t// in\n    tag_622:\n        /* \"#utility.yul\":24298:24437   */\n      swap1\n      pop\n        /* \"#utility.yul\":24025:24444   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24450:24548   */\n    tag_411:\n        /* \"#utility.yul\":24501:24507   */\n      0x00\n        /* \"#utility.yul\":24535:24540   */\n      dup2\n        /* \"#utility.yul\":24529:24541   */\n      mload\n        /* \"#utility.yul\":24519:24541   */\n      swap1\n      pop\n        /* \"#utility.yul\":24450:24548   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24554:24701   */\n    tag_412:\n        /* \"#utility.yul\":24655:24666   */\n      0x00\n        /* \"#utility.yul\":24692:24695   */\n      dup2\n        /* \"#utility.yul\":24677:24695   */\n      swap1\n      pop\n        /* \"#utility.yul\":24554:24701   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24707:25014   */\n    tag_413:\n        /* \"#utility.yul\":24775:24776   */\n      0x00\n        /* \"#utility.yul\":24785:24898   */\n    tag_626:\n        /* \"#utility.yul\":24799:24805   */\n      dup4\n        /* \"#utility.yul\":24796:24797   */\n      dup2\n        /* \"#utility.yul\":24793:24806   */\n      lt\n        /* \"#utility.yul\":24785:24898   */\n      iszero\n      tag_628\n      jumpi\n        /* \"#utility.yul\":24884:24885   */\n      dup1\n        /* \"#utility.yul\":24879:24882   */\n      dup3\n        /* \"#utility.yul\":24875:24886   */\n      add\n        /* \"#utility.yul\":24869:24887   */\n      mload\n        /* \"#utility.yul\":24865:24866   */\n      dup2\n        /* \"#utility.yul\":24860:24863   */\n      dup5\n        /* \"#utility.yul\":24856:24867   */\n      add\n        /* \"#utility.yul\":24849:24888   */\n      mstore\n        /* \"#utility.yul\":24821:24823   */\n      0x20\n        /* \"#utility.yul\":24818:24819   */\n      dup2\n        /* \"#utility.yul\":24814:24824   */\n      add\n        /* \"#utility.yul\":24809:24824   */\n      swap1\n      pop\n        /* \"#utility.yul\":24785:24898   */\n      jump(tag_626)\n    tag_628:\n        /* \"#utility.yul\":24916:24922   */\n      dup4\n        /* \"#utility.yul\":24913:24914   */\n      dup2\n        /* \"#utility.yul\":24910:24923   */\n      gt\n        /* \"#utility.yul\":24907:25008   */\n      iszero\n      tag_629\n      jumpi\n        /* \"#utility.yul\":24996:24997   */\n      0x00\n        /* \"#utility.yul\":24987:24993   */\n      dup5\n        /* \"#utility.yul\":24982:24985   */\n      dup5\n        /* \"#utility.yul\":24978:24994   */\n      add\n        /* \"#utility.yul\":24971:24998   */\n      mstore\n        /* \"#utility.yul\":24907:25008   */\n    tag_629:\n        /* \"#utility.yul\":24756:25014   */\n      pop\n        /* \"#utility.yul\":24707:25014   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25020:25393   */\n    tag_414:\n        /* \"#utility.yul\":25124:25127   */\n      0x00\n        /* \"#utility.yul\":25152:25190   */\n      tag_631\n        /* \"#utility.yul\":25184:25189   */\n      dup3\n        /* \"#utility.yul\":25152:25190   */\n      tag_411\n      jump\t// in\n    tag_631:\n        /* \"#utility.yul\":25206:25294   */\n      tag_632\n        /* \"#utility.yul\":25287:25293   */\n      dup2\n        /* \"#utility.yul\":25282:25285   */\n      dup6\n        /* \"#utility.yul\":25206:25294   */\n      tag_412\n      jump\t// in\n    tag_632:\n        /* \"#utility.yul\":25199:25294   */\n      swap4\n      pop\n        /* \"#utility.yul\":25303:25355   */\n      tag_633\n        /* \"#utility.yul\":25348:25354   */\n      dup2\n        /* \"#utility.yul\":25343:25346   */\n      dup6\n        /* \"#utility.yul\":25336:25340   */\n      0x20\n        /* \"#utility.yul\":25329:25334   */\n      dup7\n        /* \"#utility.yul\":25325:25341   */\n      add\n        /* \"#utility.yul\":25303:25355   */\n      tag_413\n      jump\t// in\n    tag_633:\n        /* \"#utility.yul\":25380:25386   */\n      dup1\n        /* \"#utility.yul\":25375:25378   */\n      dup5\n        /* \"#utility.yul\":25371:25387   */\n      add\n        /* \"#utility.yul\":25364:25387   */\n      swap2\n      pop\n        /* \"#utility.yul\":25128:25393   */\n      pop\n        /* \"#utility.yul\":25020:25393   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25399:25670   */\n    tag_339:\n        /* \"#utility.yul\":25529:25532   */\n      0x00\n        /* \"#utility.yul\":25551:25644   */\n      tag_635\n        /* \"#utility.yul\":25640:25643   */\n      dup3\n        /* \"#utility.yul\":25631:25637   */\n      dup5\n        /* \"#utility.yul\":25551:25644   */\n      tag_414\n      jump\t// in\n    tag_635:\n        /* \"#utility.yul\":25544:25644   */\n      swap2\n      pop\n        /* \"#utility.yul\":25661:25664   */\n      dup2\n        /* \"#utility.yul\":25654:25664   */\n      swap1\n      pop\n        /* \"#utility.yul\":25399:25670   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25676:25775   */\n    tag_415:\n        /* \"#utility.yul\":25728:25734   */\n      0x00\n        /* \"#utility.yul\":25762:25767   */\n      dup2\n        /* \"#utility.yul\":25756:25768   */\n      mload\n        /* \"#utility.yul\":25746:25768   */\n      swap1\n      pop\n        /* \"#utility.yul\":25676:25775   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25781:25883   */\n    tag_416:\n        /* \"#utility.yul\":25822:25828   */\n      0x00\n        /* \"#utility.yul\":25873:25875   */\n      0x1f\n        /* \"#utility.yul\":25869:25876   */\n      not\n        /* \"#utility.yul\":25864:25866   */\n      0x1f\n        /* \"#utility.yul\":25857:25862   */\n      dup4\n        /* \"#utility.yul\":25853:25867   */\n      add\n        /* \"#utility.yul\":25849:25877   */\n      and\n        /* \"#utility.yul\":25839:25877   */\n      swap1\n      pop\n        /* \"#utility.yul\":25781:25883   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25889:26253   */\n    tag_417:\n        /* \"#utility.yul\":25977:25980   */\n      0x00\n        /* \"#utility.yul\":26005:26044   */\n      tag_639\n        /* \"#utility.yul\":26038:26043   */\n      dup3\n        /* \"#utility.yul\":26005:26044   */\n      tag_415\n      jump\t// in\n    tag_639:\n        /* \"#utility.yul\":26060:26131   */\n      tag_640\n        /* \"#utility.yul\":26124:26130   */\n      dup2\n        /* \"#utility.yul\":26119:26122   */\n      dup6\n        /* \"#utility.yul\":26060:26131   */\n      tag_370\n      jump\t// in\n    tag_640:\n        /* \"#utility.yul\":26053:26131   */\n      swap4\n      pop\n        /* \"#utility.yul\":26140:26192   */\n      tag_641\n        /* \"#utility.yul\":26185:26191   */\n      dup2\n        /* \"#utility.yul\":26180:26183   */\n      dup6\n        /* \"#utility.yul\":26173:26177   */\n      0x20\n        /* \"#utility.yul\":26166:26171   */\n      dup7\n        /* \"#utility.yul\":26162:26178   */\n      add\n        /* \"#utility.yul\":26140:26192   */\n      tag_413\n      jump\t// in\n    tag_641:\n        /* \"#utility.yul\":26217:26246   */\n      tag_642\n        /* \"#utility.yul\":26239:26245   */\n      dup2\n        /* \"#utility.yul\":26217:26246   */\n      tag_416\n      jump\t// in\n    tag_642:\n        /* \"#utility.yul\":26212:26215   */\n      dup5\n        /* \"#utility.yul\":26208:26247   */\n      add\n        /* \"#utility.yul\":26201:26247   */\n      swap2\n      pop\n        /* \"#utility.yul\":25981:26253   */\n      pop\n        /* \"#utility.yul\":25889:26253   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26259:26572   */\n    tag_352:\n        /* \"#utility.yul\":26372:26376   */\n      0x00\n        /* \"#utility.yul\":26410:26412   */\n      0x20\n        /* \"#utility.yul\":26399:26408   */\n      dup3\n        /* \"#utility.yul\":26395:26413   */\n      add\n        /* \"#utility.yul\":26387:26413   */\n      swap1\n      pop\n        /* \"#utility.yul\":26459:26468   */\n      dup2\n        /* \"#utility.yul\":26453:26457   */\n      dup2\n        /* \"#utility.yul\":26449:26469   */\n      sub\n        /* \"#utility.yul\":26445:26446   */\n      0x00\n        /* \"#utility.yul\":26434:26443   */\n      dup4\n        /* \"#utility.yul\":26430:26447   */\n      add\n        /* \"#utility.yul\":26423:26470   */\n      mstore\n        /* \"#utility.yul\":26487:26565   */\n      tag_644\n        /* \"#utility.yul\":26560:26564   */\n      dup2\n        /* \"#utility.yul\":26551:26557   */\n      dup5\n        /* \"#utility.yul\":26487:26565   */\n      tag_417\n      jump\t// in\n    tag_644:\n        /* \"#utility.yul\":26479:26565   */\n      swap1\n      pop\n        /* \"#utility.yul\":26259:26572   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212204d039a1c5a4a325d703b8688b0371029b64eebcc5176d22c651867d62310f95f64736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@Init_1272": {
									"entryPoint": 379,
									"id": 1272,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_1232": {
									"entryPoint": null,
									"id": 1232,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_489": {
									"entryPoint": 175,
									"id": 489,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_103": {
									"entryPoint": 183,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 562,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 585,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 516,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 484,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 479,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 536,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1199:8",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:8",
														"type": ""
													}
												],
												"src": "7:75:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:8",
														"type": ""
													}
												],
												"src": "334:126:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:8",
														"type": ""
													}
												],
												"src": "466:96:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:8"
															},
															"nodeType": "YulIf",
															"src": "621:63:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:8",
														"type": ""
													}
												],
												"src": "568:122:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:8"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:8",
														"type": ""
													}
												],
												"src": "696:143:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "922:274:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "968:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "964:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "935:32:8"
															},
															"nodeType": "YulIf",
															"src": "932:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "1061:128:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1105:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "892:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "903:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "915:6:8",
														"type": ""
													}
												],
												"src": "845:351:8"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506040516200318938038062003189833981810160405281019062000037919062000249565b620000576200004b620000af60201b60201c565b620000b760201b60201c565b620000676200017b60201b60201c565b80600c60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200027b565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60c86003819055506105dc600181905550606460048190555062093a806002819055506276a70060058190555069d3c21bcecceda10000006008819055506a027b46536c66c8e30000006007819055506a05ca4ec2a79a7f67000000600681905550565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200021182620001e4565b9050919050565b620002238162000204565b81146200022f57600080fd5b50565b600081519050620002438162000218565b92915050565b600060208284031215620002625762000261620001df565b5b6000620002728482850162000232565b91505092915050565b612efe806200028b6000396000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c80637e1a3786116100b8578063a694fc3a1161007c578063a694fc3a14610317578063aedf562b14610333578063f2fde38b14610363578063f99318551461037f578063fc0c546a146103af578063fe600f84146103cd57610142565b80637e1a378614610285578063817b1cd2146102a35780638da5cb5b146102c157806391e07e7a146102df5780639e447fc6146102fb57610142565b80634b77dd9e1161010a5780634b77dd9e146101d75780635715ec11146101f35780635d2ec65d14610211578063645a8a561461022f578063692642e71461025f578063715018a61461027b57610142565b80630917e776146101475780632e1a7d4d146101655780634641257d146101815780634a4fbeec1461018b5780634b62b70b146101bb575b600080fd5b61014f6103fd565b60405161015c919061217e565b60405180910390f35b61017f600480360381019061017a91906121ca565b610407565b005b6101896107a4565b005b6101a560048036038101906101a09190612255565b610ac5565b6040516101b2919061217e565b60405180910390f35b6101d560048036038101906101d091906121ca565b610c55565b005b6101f160048036038101906101ec9190612282565b610d1e565b005b6101fb611165565b604051610208919061217e565b60405180910390f35b610219611172565b604051610226919061217e565b60405180910390f35b61024960048036038101906102449190612255565b6111bc565b604051610256919061217e565b60405180910390f35b610279600480360381019061027491906121ca565b611208565b005b61028361131d565b005b61028d6113a5565b60405161029a919061217e565b60405180910390f35b6102ab6113af565b6040516102b8919061217e565b60405180910390f35b6102c96113b5565b6040516102d691906122d1565b60405180910390f35b6102f960048036038101906102f491906121ca565b6113de565b005b610315600480360381019061031091906121ca565b6114de565b005b610331600480360381019061032c91906121ca565b6115de565b005b61034d60048036038101906103489190612255565b6118cc565b60405161035a919061217e565b60405180910390f35b61037d60048036038101906103789190612255565b61192b565b005b61039960048036038101906103949190612255565b611a23565b6040516103a6919061217e565b60405180910390f35b6103b7611a6f565b6040516103c4919061234b565b60405180910390f35b6103e760048036038101906103e29190612255565b611a95565b6040516103f4919061217e565b60405180910390f35b6000600b54905090565b6000811161044a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610441906123c3565b60405180910390fd5b600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101548111156104cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104c69061242f565b60405180910390fd5b6104d7611ae1565b600081905060006105486201518061053a600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003015442611cb590919063ffffffff16565b611ccb90919063ffffffff16565b9050600060649050600080600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002015414156105fb576105f3600554600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030154611ce190919063ffffffff16565b421015610619565b60006002548461060b919061247e565b1480156106185750600083115b5b9050806106265760015491505b61065f6106506127106106428588611cf790919063ffffffff16565b611ccb90919063ffffffff16565b85611cb590919063ffffffff16565b935061067684600b54611cb590919063ffffffff16565b600b819055506106d184600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154611cb590919063ffffffff16565b600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055506107643385600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611d0d9092919063ffffffff16565b7f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a942436433856040516107959291906124af565b60405180910390a15050505050565b6107ac611ae1565b600061086d61081c61271061080e600454600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154611cf790919063ffffffff16565b611ccb90919063ffffffff16565b600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154611cb590919063ffffffff16565b9050600081116108b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108a990612524565b60405180910390fd5b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161090d91906122d1565b602060405180830381865afa15801561092a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061094e9190612559565b8111156109f457600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016109b091906122d1565b602060405180830381865afa1580156109cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109f19190612559565b90505b610a413382600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611d0d9092919063ffffffff16565b6000600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055507fc9695243a805adb74c91f28311176c65b417e842d5699893cef56d18bfa48cba3382604051610aba9291906124af565b60405180910390a150565b60006055600a60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206005015414610b1a5760019050610c50565b6000600a60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002015414610be257600062093a80610bbf600a60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003015442611cb590919063ffffffff16565b610bc9919061247e565b14610bd5576001610bd8565b60005b60ff169050610c50565b600554610c3a600a60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003015442611cb590919063ffffffff16565b1015610c47576001610c4a565b60005b60ff1690505b919050565b610c5d611d93565b73ffffffffffffffffffffffffffffffffffffffff16610c7b6113b5565b73ffffffffffffffffffffffffffffffffffffffff1614610cd1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cc8906125d2565b60405180910390fd5b60008111610d14576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d0b9061263e565b60405180910390fd5b8060058190555050565b60008211610d61576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d58906123c3565b60405180910390fd5b81600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401610dbd91906122d1565b602060405180830381865afa158015610dda573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dfe9190612559565b11610e3e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e35906126aa565b60405180910390fd5b6055600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600501541415610ec4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ebb90612716565b60405180910390fd5b6000811415610edf5760008211610eda57600080fd5b61101f565b6001811415610f3257600854821015610f2d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f2490612782565b60405180910390fd5b61101e565b6002811415610f8557600754821015610f80576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f7790612782565b60405180910390fd5b61101d565b6003811415610fd857600654821015610fd3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fca90612782565b60405180910390fd5b61101c565b6000821061101b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611012906127ee565b60405180910390fd5b5b5b5b5b80600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018190555042600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301819055506055600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600501819055506009339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611161826115de565b5050565b6000600980549050905090565b6000600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154905090565b6000600a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001549050919050565b611210611d93565b73ffffffffffffffffffffffffffffffffffffffff1661122e6113b5565b73ffffffffffffffffffffffffffffffffffffffff1614611284576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161127b906125d2565b60405180910390fd5b600081116112c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112be9061285a565b60405180910390fd5b6112dd6201518082611cf790919063ffffffff16565b6002819055507f189bda9782663c67a3f95c0aa5455924c711210b00281c60ead2f0dd8dbc924c81604051611312919061217e565b60405180910390a150565b611325611d93565b73ffffffffffffffffffffffffffffffffffffffff166113436113b5565b73ffffffffffffffffffffffffffffffffffffffff1614611399576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611390906125d2565b60405180910390fd5b6113a36000611d9b565b565b6000600354905090565b600b5481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6113e6611d93565b73ffffffffffffffffffffffffffffffffffffffff166114046113b5565b73ffffffffffffffffffffffffffffffffffffffff161461145a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611451906125d2565b60405180910390fd5b6000811161149d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611494906128c6565b60405180910390fd5b806001819055507f150c688dd7595bf7862b8ab1fe46756450eb7d731037942b3bbc46f3f0e21b81816040516114d3919061217e565b60405180910390a150565b6114e6611d93565b73ffffffffffffffffffffffffffffffffffffffff166115046113b5565b73ffffffffffffffffffffffffffffffffffffffff161461155a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611551906125d2565b60405180910390fd5b6000811161159d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161159490612932565b60405180910390fd5b806003819055507f1946fb78c7ca778b54d82cabaac5ba67cf446f58d0ff1f8ceaebb6150e54e44f816040516115d3919061217e565b60405180910390a150565b60008111611621576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611618906123c3565b60405180910390fd5b80600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b815260040161167d91906122d1565b602060405180830381865afa15801561169a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116be9190612559565b116116fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116f5906126aa565b60405180910390fd5b6055600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206005015414611783576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161177a9061299e565b60405180910390fd5b61178b611ae1565b6117da333083600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611e5f909392919063ffffffff16565b61182f81600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154611ce190919063ffffffff16565b600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018190555061188a81600b54611ce190919063ffffffff16565b600b819055507f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d33826040516118c19291906124af565b60405180910390a150565b600080600a60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201541461191e576001611921565b60005b60ff169050919050565b611933611d93565b73ffffffffffffffffffffffffffffffffffffffff166119516113b5565b73ffffffffffffffffffffffffffffffffffffffff16146119a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161199e906125d2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611a17576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a0e90612a30565b60405180910390fd5b611a2081611d9b565b50565b6000600a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101549050919050565b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600501549050919050565b6000600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015490506000611bcd612710611bbf600354611bb1611ba26121c0611b94600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206004015443611cb590919063ffffffff16565b611ccb90919063ffffffff16565b87611cf790919063ffffffff16565b611cf790919063ffffffff16565b611ccb90919063ffffffff16565b9050611c2481600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154611ce190919063ffffffff16565b600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190555043600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600401819055505050565b60008183611cc39190612a7f565b905092915050565b60008183611cd99190612ab3565b905092915050565b60008183611cef9190612ae4565b905092915050565b60008183611d059190612b3a565b905092915050565b611d8e8363a9059cbb60e01b8484604051602401611d2c9291906124af565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611ee8565b505050565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b611ee2846323b872dd60e01b858585604051602401611e8093929190612b94565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611ee8565b50505050565b6000611f4a826040518060400160405280602081526020017f5361666542455032303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16611faf9092919063ffffffff16565b9050600081511115611faa5780806020019051810190611f6a9190612c03565b611fa9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611fa090612ca2565b60405180910390fd5b5b505050565b6060611fbe8484600085611fc7565b90509392505050565b60608247101561200c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161200390612d34565b60405180910390fd5b612015856120db565b612054576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161204b90612da0565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff16858760405161207d9190612e3a565b60006040518083038185875af1925050503d80600081146120ba576040519150601f19603f3d011682016040523d82523d6000602084013e6120bf565b606091505b50915091506120cf8282866120fe565b92505050949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6060831561210e5782905061215e565b6000835111156121215782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121559190612ea6565b60405180910390fd5b9392505050565b6000819050919050565b61217881612165565b82525050565b6000602082019050612193600083018461216f565b92915050565b600080fd5b6121a781612165565b81146121b257600080fd5b50565b6000813590506121c48161219e565b92915050565b6000602082840312156121e0576121df612199565b5b60006121ee848285016121b5565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000612222826121f7565b9050919050565b61223281612217565b811461223d57600080fd5b50565b60008135905061224f81612229565b92915050565b60006020828403121561226b5761226a612199565b5b600061227984828501612240565b91505092915050565b6000806040838503121561229957612298612199565b5b60006122a7858286016121b5565b92505060206122b8858286016121b5565b9150509250929050565b6122cb81612217565b82525050565b60006020820190506122e660008301846122c2565b92915050565b6000819050919050565b600061231161230c612307846121f7565b6122ec565b6121f7565b9050919050565b6000612323826122f6565b9050919050565b600061233582612318565b9050919050565b6123458161232a565b82525050565b6000602082019050612360600083018461233c565b92915050565b600082825260208201905092915050565b7f416d6f756e742073686f756c642062652067726561746572207468616e203000600082015250565b60006123ad601f83612366565b91506123b882612377565b602082019050919050565b600060208201905081810360008301526123dc816123a0565b9050919050565b7f496e76616c696420616d6f756e74000000000000000000000000000000000000600082015250565b6000612419600e83612366565b9150612424826123e3565b602082019050919050565b600060208201905081810360008301526124488161240c565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061248982612165565b915061249483612165565b9250826124a4576124a361244f565b5b828206905092915050565b60006040820190506124c460008301856122c2565b6124d1602083018461216f565b9392505050565b7f4e6f7468696e6720746f20636c61696d00000000000000000000000000000000600082015250565b600061250e601083612366565b9150612519826124d8565b602082019050919050565b6000602082019050818103600083015261253d81612501565b9050919050565b6000815190506125538161219e565b92915050565b60006020828403121561256f5761256e612199565b5b600061257d84828501612544565b91505092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006125bc602083612366565b91506125c782612586565b602082019050919050565b600060208201905081810360008301526125eb816125af565b9050919050565b7f43616e2774206265207a65726f00000000000000000000000000000000000000600082015250565b6000612628600d83612366565b9150612633826125f2565b602082019050919050565b600060208201905081810360008301526126578161261b565b9050919050565b7f496e73756666696369656e742100000000000000000000000000000000000000600082015250565b6000612694600d83612366565b915061269f8261265e565b602082019050919050565b600060208201905081810360008301526126c381612687565b9050919050565b7f416c726561647920737461727465640000000000000000000000000000000000600082015250565b6000612700600f83612366565b915061270b826126ca565b602082019050919050565b6000602082019050818103600083015261272f816126f3565b9050919050565b7f496e73756666696369656e740000000000000000000000000000000000000000600082015250565b600061276c600c83612366565b915061277782612736565b602082019050919050565b6000602082019050818103600083015261279b8161275f565b9050919050565b7f496e76616c6964204d6f64650000000000000000000000000000000000000000600082015250565b60006127d8600c83612366565b91506127e3826127a2565b602082019050919050565b60006020820190508181036000830152612807816127cb565b9050919050565b7f496e76616c6964204c6f636b7570204475726174696f6e000000000000000000600082015250565b6000612844601783612366565b915061284f8261280e565b602082019050919050565b6000602082019050818103600083015261287381612837565b9050919050565b7f496e76616c696420556e7374616b696e67204665652052617465000000000000600082015250565b60006128b0601a83612366565b91506128bb8261287a565b602082019050919050565b600060208201905081810360008301526128df816128a3565b9050919050565b7f496e76616c69642076616c756500000000000000000000000000000000000000600082015250565b600061291c600d83612366565b9150612927826128e6565b602082019050919050565b6000602082019050818103600083015261294b8161290f565b9050919050565b7f4572726f723a20696e76616c6964207374616b65720000000000000000000000600082015250565b6000612988601583612366565b915061299382612952565b602082019050919050565b600060208201905081810360008301526129b78161297b565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000612a1a602683612366565b9150612a25826129be565b604082019050919050565b60006020820190508181036000830152612a4981612a0d565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612a8a82612165565b9150612a9583612165565b925082821015612aa857612aa7612a50565b5b828203905092915050565b6000612abe82612165565b9150612ac983612165565b925082612ad957612ad861244f565b5b828204905092915050565b6000612aef82612165565b9150612afa83612165565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115612b2f57612b2e612a50565b5b828201905092915050565b6000612b4582612165565b9150612b5083612165565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615612b8957612b88612a50565b5b828202905092915050565b6000606082019050612ba960008301866122c2565b612bb660208301856122c2565b612bc3604083018461216f565b949350505050565b60008115159050919050565b612be081612bcb565b8114612beb57600080fd5b50565b600081519050612bfd81612bd7565b92915050565b600060208284031215612c1957612c18612199565b5b6000612c2784828501612bee565b91505092915050565b7f5361666542455032303a204245503230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b6000612c8c602a83612366565b9150612c9782612c30565b604082019050919050565b60006020820190508181036000830152612cbb81612c7f565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b6000612d1e602683612366565b9150612d2982612cc2565b604082019050919050565b60006020820190508181036000830152612d4d81612d11565b9050919050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b6000612d8a601d83612366565b9150612d9582612d54565b602082019050919050565b60006020820190508181036000830152612db981612d7d565b9050919050565b600081519050919050565b600081905092915050565b60005b83811015612df4578082015181840152602081019050612dd9565b83811115612e03576000848401525b50505050565b6000612e1482612dc0565b612e1e8185612dcb565b9350612e2e818560208601612dd6565b80840191505092915050565b6000612e468284612e09565b915081905092915050565b600081519050919050565b6000601f19601f8301169050919050565b6000612e7882612e51565b612e828185612366565b9350612e92818560208601612dd6565b612e9b81612e5c565b840191505092915050565b60006020820190508181036000830152612ec08184612e6d565b90509291505056fea26469706673582212204d039a1c5a4a325d703b8688b0371029b64eebcc5176d22c651867d62310f95f64736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x3189 CODESIZE SUB DUP1 PUSH3 0x3189 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x249 JUMP JUMPDEST PUSH3 0x57 PUSH3 0x4B PUSH3 0xAF PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xB7 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x67 PUSH3 0x17B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP1 PUSH1 0xC PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH3 0x27B JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0xC8 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x5DC PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x64 PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH3 0x93A80 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH3 0x76A700 PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH10 0xD3C21BCECCEDA1000000 PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH11 0x27B46536C66C8E3000000 PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH11 0x5CA4EC2A79A7F67000000 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x211 DUP3 PUSH3 0x1E4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x223 DUP2 PUSH3 0x204 JUMP JUMPDEST DUP2 EQ PUSH3 0x22F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x243 DUP2 PUSH3 0x218 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x262 JUMPI PUSH3 0x261 PUSH3 0x1DF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x272 DUP5 DUP3 DUP6 ADD PUSH3 0x232 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2EFE DUP1 PUSH3 0x28B PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x142 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7E1A3786 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xA694FC3A GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x317 JUMPI DUP1 PUSH4 0xAEDF562B EQ PUSH2 0x333 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x363 JUMPI DUP1 PUSH4 0xF9931855 EQ PUSH2 0x37F JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x3AF JUMPI DUP1 PUSH4 0xFE600F84 EQ PUSH2 0x3CD JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x7E1A3786 EQ PUSH2 0x285 JUMPI DUP1 PUSH4 0x817B1CD2 EQ PUSH2 0x2A3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2C1 JUMPI DUP1 PUSH4 0x91E07E7A EQ PUSH2 0x2DF JUMPI DUP1 PUSH4 0x9E447FC6 EQ PUSH2 0x2FB JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x4B77DD9E GT PUSH2 0x10A JUMPI DUP1 PUSH4 0x4B77DD9E EQ PUSH2 0x1D7 JUMPI DUP1 PUSH4 0x5715EC11 EQ PUSH2 0x1F3 JUMPI DUP1 PUSH4 0x5D2EC65D EQ PUSH2 0x211 JUMPI DUP1 PUSH4 0x645A8A56 EQ PUSH2 0x22F JUMPI DUP1 PUSH4 0x692642E7 EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x27B JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x917E776 EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0x4641257D EQ PUSH2 0x181 JUMPI DUP1 PUSH4 0x4A4FBEEC EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0x4B62B70B EQ PUSH2 0x1BB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14F PUSH2 0x3FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15C SWAP2 SWAP1 PUSH2 0x217E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17A SWAP2 SWAP1 PUSH2 0x21CA JUMP JUMPDEST PUSH2 0x407 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x189 PUSH2 0x7A4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0x2255 JUMP JUMPDEST PUSH2 0xAC5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0x217E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D0 SWAP2 SWAP1 PUSH2 0x21CA JUMP JUMPDEST PUSH2 0xC55 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EC SWAP2 SWAP1 PUSH2 0x2282 JUMP JUMPDEST PUSH2 0xD1E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1FB PUSH2 0x1165 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x208 SWAP2 SWAP1 PUSH2 0x217E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x219 PUSH2 0x1172 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x226 SWAP2 SWAP1 PUSH2 0x217E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x249 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x244 SWAP2 SWAP1 PUSH2 0x2255 JUMP JUMPDEST PUSH2 0x11BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x256 SWAP2 SWAP1 PUSH2 0x217E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x279 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x274 SWAP2 SWAP1 PUSH2 0x21CA JUMP JUMPDEST PUSH2 0x1208 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x283 PUSH2 0x131D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x28D PUSH2 0x13A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29A SWAP2 SWAP1 PUSH2 0x217E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AB PUSH2 0x13AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B8 SWAP2 SWAP1 PUSH2 0x217E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C9 PUSH2 0x13B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D6 SWAP2 SWAP1 PUSH2 0x22D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F4 SWAP2 SWAP1 PUSH2 0x21CA JUMP JUMPDEST PUSH2 0x13DE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x315 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x310 SWAP2 SWAP1 PUSH2 0x21CA JUMP JUMPDEST PUSH2 0x14DE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x331 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32C SWAP2 SWAP1 PUSH2 0x21CA JUMP JUMPDEST PUSH2 0x15DE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x34D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x348 SWAP2 SWAP1 PUSH2 0x2255 JUMP JUMPDEST PUSH2 0x18CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35A SWAP2 SWAP1 PUSH2 0x217E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x37D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x378 SWAP2 SWAP1 PUSH2 0x2255 JUMP JUMPDEST PUSH2 0x192B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x399 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x394 SWAP2 SWAP1 PUSH2 0x2255 JUMP JUMPDEST PUSH2 0x1A23 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A6 SWAP2 SWAP1 PUSH2 0x217E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B7 PUSH2 0x1A6F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C4 SWAP2 SWAP1 PUSH2 0x234B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E2 SWAP2 SWAP1 PUSH2 0x2255 JUMP JUMPDEST PUSH2 0x1A95 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F4 SWAP2 SWAP1 PUSH2 0x217E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0xB SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x44A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x441 SWAP1 PUSH2 0x23C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD DUP2 GT ISZERO PUSH2 0x4CF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C6 SWAP1 PUSH2 0x242F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4D7 PUSH2 0x1AE1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x0 PUSH2 0x548 PUSH3 0x15180 PUSH2 0x53A PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD TIMESTAMP PUSH2 0x1CB5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1CCB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x64 SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD EQ ISZERO PUSH2 0x5FB JUMPI PUSH2 0x5F3 PUSH1 0x5 SLOAD PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x1CE1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x619 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD DUP5 PUSH2 0x60B SWAP2 SWAP1 PUSH2 0x247E JUMP JUMPDEST EQ DUP1 ISZERO PUSH2 0x618 JUMPI POP PUSH1 0x0 DUP4 GT JUMPDEST JUMPDEST SWAP1 POP DUP1 PUSH2 0x626 JUMPI PUSH1 0x1 SLOAD SWAP2 POP JUMPDEST PUSH2 0x65F PUSH2 0x650 PUSH2 0x2710 PUSH2 0x642 DUP6 DUP9 PUSH2 0x1CF7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1CCB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 PUSH2 0x1CB5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP4 POP PUSH2 0x676 DUP5 PUSH1 0xB SLOAD PUSH2 0x1CB5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP PUSH2 0x6D1 DUP5 PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x1CB5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x764 CALLER DUP6 PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1D0D SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH32 0x884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364 CALLER DUP6 PUSH1 0x40 MLOAD PUSH2 0x795 SWAP3 SWAP2 SWAP1 PUSH2 0x24AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x7AC PUSH2 0x1AE1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x86D PUSH2 0x81C PUSH2 0x2710 PUSH2 0x80E PUSH1 0x4 SLOAD PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH2 0x1CF7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1CCB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH2 0x1CB5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x8B2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A9 SWAP1 PUSH2 0x2524 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x90D SWAP2 SWAP1 PUSH2 0x22D1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x92A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x94E SWAP2 SWAP1 PUSH2 0x2559 JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x9F4 JUMPI PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9B0 SWAP2 SWAP1 PUSH2 0x22D1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9CD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9F1 SWAP2 SWAP1 PUSH2 0x2559 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0xA41 CALLER DUP3 PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1D0D SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH32 0xC9695243A805ADB74C91F28311176C65B417E842D5699893CEF56D18BFA48CBA CALLER DUP3 PUSH1 0x40 MLOAD PUSH2 0xABA SWAP3 SWAP2 SWAP1 PUSH2 0x24AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x55 PUSH1 0xA PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD EQ PUSH2 0xB1A JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0xC50 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD EQ PUSH2 0xBE2 JUMPI PUSH1 0x0 PUSH3 0x93A80 PUSH2 0xBBF PUSH1 0xA PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD TIMESTAMP PUSH2 0x1CB5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xBC9 SWAP2 SWAP1 PUSH2 0x247E JUMP JUMPDEST EQ PUSH2 0xBD5 JUMPI PUSH1 0x1 PUSH2 0xBD8 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH2 0xC50 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0xC3A PUSH1 0xA PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD TIMESTAMP PUSH2 0x1CB5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST LT ISZERO PUSH2 0xC47 JUMPI PUSH1 0x1 PUSH2 0xC4A JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0xFF AND SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC5D PUSH2 0x1D93 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC7B PUSH2 0x13B5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCD1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCC8 SWAP1 PUSH2 0x25D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xD14 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD0B SWAP1 PUSH2 0x263E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0xD61 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD58 SWAP1 PUSH2 0x23C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDBD SWAP2 SWAP1 PUSH2 0x22D1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDDA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDFE SWAP2 SWAP1 PUSH2 0x2559 JUMP JUMPDEST GT PUSH2 0xE3E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE35 SWAP1 PUSH2 0x26AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x55 PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD EQ ISZERO PUSH2 0xEC4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEBB SWAP1 PUSH2 0x2716 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0xEDF JUMPI PUSH1 0x0 DUP3 GT PUSH2 0xEDA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x101F JUMP JUMPDEST PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0xF32 JUMPI PUSH1 0x8 SLOAD DUP3 LT ISZERO PUSH2 0xF2D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF24 SWAP1 PUSH2 0x2782 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x101E JUMP JUMPDEST PUSH1 0x2 DUP2 EQ ISZERO PUSH2 0xF85 JUMPI PUSH1 0x7 SLOAD DUP3 LT ISZERO PUSH2 0xF80 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF77 SWAP1 PUSH2 0x2782 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x101D JUMP JUMPDEST PUSH1 0x3 DUP2 EQ ISZERO PUSH2 0xFD8 JUMPI PUSH1 0x6 SLOAD DUP3 LT ISZERO PUSH2 0xFD3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFCA SWAP1 PUSH2 0x2782 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x101C JUMP JUMPDEST PUSH1 0x0 DUP3 LT PUSH2 0x101B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1012 SWAP1 PUSH2 0x27EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST JUMPDEST JUMPDEST JUMPDEST DUP1 PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x55 PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x9 CALLER SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x1161 DUP3 PUSH2 0x15DE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1210 PUSH2 0x1D93 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x122E PUSH2 0x13B5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1284 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x127B SWAP1 PUSH2 0x25D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x12C7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12BE SWAP1 PUSH2 0x285A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12DD PUSH3 0x15180 DUP3 PUSH2 0x1CF7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH32 0x189BDA9782663C67A3F95C0AA5455924C711210B00281C60EAD2F0DD8DBC924C DUP2 PUSH1 0x40 MLOAD PUSH2 0x1312 SWAP2 SWAP1 PUSH2 0x217E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x1325 PUSH2 0x1D93 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1343 PUSH2 0x13B5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1399 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1390 SWAP1 PUSH2 0x25D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13A3 PUSH1 0x0 PUSH2 0x1D9B JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x13E6 PUSH2 0x1D93 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1404 PUSH2 0x13B5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x145A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1451 SWAP1 PUSH2 0x25D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x149D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1494 SWAP1 PUSH2 0x28C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH32 0x150C688DD7595BF7862B8AB1FE46756450EB7D731037942B3BBC46F3F0E21B81 DUP2 PUSH1 0x40 MLOAD PUSH2 0x14D3 SWAP2 SWAP1 PUSH2 0x217E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x14E6 PUSH2 0x1D93 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1504 PUSH2 0x13B5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x155A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1551 SWAP1 PUSH2 0x25D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x159D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1594 SWAP1 PUSH2 0x2932 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH32 0x1946FB78C7CA778B54D82CABAAC5BA67CF446F58D0FF1F8CEAEBB6150E54E44F DUP2 PUSH1 0x40 MLOAD PUSH2 0x15D3 SWAP2 SWAP1 PUSH2 0x217E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x1621 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1618 SWAP1 PUSH2 0x23C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x167D SWAP2 SWAP1 PUSH2 0x22D1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x169A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x16BE SWAP2 SWAP1 PUSH2 0x2559 JUMP JUMPDEST GT PUSH2 0x16FE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16F5 SWAP1 PUSH2 0x26AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x55 PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD EQ PUSH2 0x1783 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x177A SWAP1 PUSH2 0x299E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x178B PUSH2 0x1AE1 JUMP JUMPDEST PUSH2 0x17DA CALLER ADDRESS DUP4 PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1E5F SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x182F DUP2 PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x1CE1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x188A DUP2 PUSH1 0xB SLOAD PUSH2 0x1CE1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D CALLER DUP3 PUSH1 0x40 MLOAD PUSH2 0x18C1 SWAP3 SWAP2 SWAP1 PUSH2 0x24AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xA PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD EQ PUSH2 0x191E JUMPI PUSH1 0x1 PUSH2 0x1921 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1933 PUSH2 0x1D93 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1951 PUSH2 0x13B5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x19A7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x199E SWAP1 PUSH2 0x25D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1A17 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A0E SWAP1 PUSH2 0x2A30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A20 DUP2 PUSH2 0x1D9B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP PUSH1 0x0 PUSH2 0x1BCD PUSH2 0x2710 PUSH2 0x1BBF PUSH1 0x3 SLOAD PUSH2 0x1BB1 PUSH2 0x1BA2 PUSH2 0x21C0 PUSH2 0x1B94 PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD SLOAD NUMBER PUSH2 0x1CB5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1CCB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP8 PUSH2 0x1CF7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1CF7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1CCB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x1C24 DUP2 PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH2 0x1CE1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP NUMBER PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1CC3 SWAP2 SWAP1 PUSH2 0x2A7F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1CD9 SWAP2 SWAP1 PUSH2 0x2AB3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1CEF SWAP2 SWAP1 PUSH2 0x2AE4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1D05 SWAP2 SWAP1 PUSH2 0x2B3A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D8E DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1D2C SWAP3 SWAP2 SWAP1 PUSH2 0x24AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1EE8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1EE2 DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1E80 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2B94 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1EE8 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F4A DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666542455032303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1FAF SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x1FAA JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1F6A SWAP2 SWAP1 PUSH2 0x2C03 JUMP JUMPDEST PUSH2 0x1FA9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FA0 SWAP1 PUSH2 0x2CA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1FBE DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x1FC7 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x200C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2003 SWAP1 PUSH2 0x2D34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2015 DUP6 PUSH2 0x20DB JUMP JUMPDEST PUSH2 0x2054 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x204B SWAP1 PUSH2 0x2DA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x207D SWAP2 SWAP1 PUSH2 0x2E3A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x20BA JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x20BF JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x20CF DUP3 DUP3 DUP7 PUSH2 0x20FE JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x210E JUMPI DUP3 SWAP1 POP PUSH2 0x215E JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0x2121 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2155 SWAP2 SWAP1 PUSH2 0x2EA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2178 DUP2 PUSH2 0x2165 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2193 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x216F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x21A7 DUP2 PUSH2 0x2165 JUMP JUMPDEST DUP2 EQ PUSH2 0x21B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x21C4 DUP2 PUSH2 0x219E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21E0 JUMPI PUSH2 0x21DF PUSH2 0x2199 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x21EE DUP5 DUP3 DUP6 ADD PUSH2 0x21B5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2222 DUP3 PUSH2 0x21F7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2232 DUP2 PUSH2 0x2217 JUMP JUMPDEST DUP2 EQ PUSH2 0x223D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x224F DUP2 PUSH2 0x2229 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x226B JUMPI PUSH2 0x226A PUSH2 0x2199 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2279 DUP5 DUP3 DUP6 ADD PUSH2 0x2240 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2299 JUMPI PUSH2 0x2298 PUSH2 0x2199 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x22A7 DUP6 DUP3 DUP7 ADD PUSH2 0x21B5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x22B8 DUP6 DUP3 DUP7 ADD PUSH2 0x21B5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x22CB DUP2 PUSH2 0x2217 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x22E6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x22C2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2311 PUSH2 0x230C PUSH2 0x2307 DUP5 PUSH2 0x21F7 JUMP JUMPDEST PUSH2 0x22EC JUMP JUMPDEST PUSH2 0x21F7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2323 DUP3 PUSH2 0x22F6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2335 DUP3 PUSH2 0x2318 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2345 DUP2 PUSH2 0x232A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2360 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x233C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416D6F756E742073686F756C642062652067726561746572207468616E203000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23AD PUSH1 0x1F DUP4 PUSH2 0x2366 JUMP JUMPDEST SWAP2 POP PUSH2 0x23B8 DUP3 PUSH2 0x2377 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x23DC DUP2 PUSH2 0x23A0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420616D6F756E74000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2419 PUSH1 0xE DUP4 PUSH2 0x2366 JUMP JUMPDEST SWAP2 POP PUSH2 0x2424 DUP3 PUSH2 0x23E3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2448 DUP2 PUSH2 0x240C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2489 DUP3 PUSH2 0x2165 JUMP JUMPDEST SWAP2 POP PUSH2 0x2494 DUP4 PUSH2 0x2165 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x24A4 JUMPI PUSH2 0x24A3 PUSH2 0x244F JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x24C4 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x22C2 JUMP JUMPDEST PUSH2 0x24D1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x216F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E6F7468696E6720746F20636C61696D00000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x250E PUSH1 0x10 DUP4 PUSH2 0x2366 JUMP JUMPDEST SWAP2 POP PUSH2 0x2519 DUP3 PUSH2 0x24D8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x253D DUP2 PUSH2 0x2501 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2553 DUP2 PUSH2 0x219E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x256F JUMPI PUSH2 0x256E PUSH2 0x2199 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x257D DUP5 DUP3 DUP6 ADD PUSH2 0x2544 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25BC PUSH1 0x20 DUP4 PUSH2 0x2366 JUMP JUMPDEST SWAP2 POP PUSH2 0x25C7 DUP3 PUSH2 0x2586 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x25EB DUP2 PUSH2 0x25AF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E2774206265207A65726F00000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2628 PUSH1 0xD DUP4 PUSH2 0x2366 JUMP JUMPDEST SWAP2 POP PUSH2 0x2633 DUP3 PUSH2 0x25F2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2657 DUP2 PUSH2 0x261B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742100000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2694 PUSH1 0xD DUP4 PUSH2 0x2366 JUMP JUMPDEST SWAP2 POP PUSH2 0x269F DUP3 PUSH2 0x265E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x26C3 DUP2 PUSH2 0x2687 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416C726561647920737461727465640000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2700 PUSH1 0xF DUP4 PUSH2 0x2366 JUMP JUMPDEST SWAP2 POP PUSH2 0x270B DUP3 PUSH2 0x26CA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x272F DUP2 PUSH2 0x26F3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E740000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x276C PUSH1 0xC DUP4 PUSH2 0x2366 JUMP JUMPDEST SWAP2 POP PUSH2 0x2777 DUP3 PUSH2 0x2736 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x279B DUP2 PUSH2 0x275F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C6964204D6F64650000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27D8 PUSH1 0xC DUP4 PUSH2 0x2366 JUMP JUMPDEST SWAP2 POP PUSH2 0x27E3 DUP3 PUSH2 0x27A2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2807 DUP2 PUSH2 0x27CB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C6964204C6F636B7570204475726174696F6E000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2844 PUSH1 0x17 DUP4 PUSH2 0x2366 JUMP JUMPDEST SWAP2 POP PUSH2 0x284F DUP3 PUSH2 0x280E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2873 DUP2 PUSH2 0x2837 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420556E7374616B696E67204665652052617465000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28B0 PUSH1 0x1A DUP4 PUSH2 0x2366 JUMP JUMPDEST SWAP2 POP PUSH2 0x28BB DUP3 PUSH2 0x287A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x28DF DUP2 PUSH2 0x28A3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C69642076616C756500000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x291C PUSH1 0xD DUP4 PUSH2 0x2366 JUMP JUMPDEST SWAP2 POP PUSH2 0x2927 DUP3 PUSH2 0x28E6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x294B DUP2 PUSH2 0x290F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4572726F723A20696E76616C6964207374616B65720000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2988 PUSH1 0x15 DUP4 PUSH2 0x2366 JUMP JUMPDEST SWAP2 POP PUSH2 0x2993 DUP3 PUSH2 0x2952 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x29B7 DUP2 PUSH2 0x297B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A1A PUSH1 0x26 DUP4 PUSH2 0x2366 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A25 DUP3 PUSH2 0x29BE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2A49 DUP2 PUSH2 0x2A0D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2A8A DUP3 PUSH2 0x2165 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A95 DUP4 PUSH2 0x2165 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x2AA8 JUMPI PUSH2 0x2AA7 PUSH2 0x2A50 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2ABE DUP3 PUSH2 0x2165 JUMP JUMPDEST SWAP2 POP PUSH2 0x2AC9 DUP4 PUSH2 0x2165 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2AD9 JUMPI PUSH2 0x2AD8 PUSH2 0x244F JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AEF DUP3 PUSH2 0x2165 JUMP JUMPDEST SWAP2 POP PUSH2 0x2AFA DUP4 PUSH2 0x2165 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x2B2F JUMPI PUSH2 0x2B2E PUSH2 0x2A50 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B45 DUP3 PUSH2 0x2165 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B50 DUP4 PUSH2 0x2165 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2B89 JUMPI PUSH2 0x2B88 PUSH2 0x2A50 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2BA9 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x22C2 JUMP JUMPDEST PUSH2 0x2BB6 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x22C2 JUMP JUMPDEST PUSH2 0x2BC3 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x216F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2BE0 DUP2 PUSH2 0x2BCB JUMP JUMPDEST DUP2 EQ PUSH2 0x2BEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2BFD DUP2 PUSH2 0x2BD7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2C19 JUMPI PUSH2 0x2C18 PUSH2 0x2199 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2C27 DUP5 DUP3 DUP6 ADD PUSH2 0x2BEE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5361666542455032303A204245503230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C8C PUSH1 0x2A DUP4 PUSH2 0x2366 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C97 DUP3 PUSH2 0x2C30 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2CBB DUP2 PUSH2 0x2C7F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D1E PUSH1 0x26 DUP4 PUSH2 0x2366 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D29 DUP3 PUSH2 0x2CC2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2D4D DUP2 PUSH2 0x2D11 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D8A PUSH1 0x1D DUP4 PUSH2 0x2366 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D95 DUP3 PUSH2 0x2D54 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2DB9 DUP2 PUSH2 0x2D7D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2DF4 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2DD9 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x2E03 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E14 DUP3 PUSH2 0x2DC0 JUMP JUMPDEST PUSH2 0x2E1E DUP2 DUP6 PUSH2 0x2DCB JUMP JUMPDEST SWAP4 POP PUSH2 0x2E2E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2DD6 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E46 DUP3 DUP5 PUSH2 0x2E09 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E78 DUP3 PUSH2 0x2E51 JUMP JUMPDEST PUSH2 0x2E82 DUP2 DUP6 PUSH2 0x2366 JUMP JUMPDEST SWAP4 POP PUSH2 0x2E92 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2DD6 JUMP JUMPDEST PUSH2 0x2E9B DUP2 PUSH2 0x2E5C JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2EC0 DUP2 DUP5 PUSH2 0x2E6D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4D SUB SWAP11 SHR GAS 0x4A ORIGIN 0x5D PUSH17 0x3B8688B0371029B64EEBCC5176D22C6518 PUSH8 0xD62310F95F64736F PUSH13 0x634300080A0033000000000000 ",
							"sourceMap": "260:8276:7:-:0;;;1633:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;921:32:0;940:12;:10;;;:12;;:::i;:::-;921:18;;;:32;;:::i;:::-;1682:6:7;:4;;;:6;;:::i;:::-;1714;1699:5;;:22;;;;;;;;;;;;;;;;;;1633:96;260:8276;;640:96:3;693:7;719:10;712:17;;640:96;:::o;2270:187:0:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;1737:323:7:-;1797:3;1783:11;:17;;;;1842:4;1822:17;:24;;;;1874:3;1857:14;:20;;;;1903:6;1888:12;:21;;;;1936:7;1920:13;:23;;;;1974:4;1954:17;:24;;;;2009:6;1989:17;:26;;;;2046:6;2026:17;:26;;;;1737:323::o;88:117:8:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;260:8276:7:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_callOptionalReturn_1129": {
									"entryPoint": 7912,
									"id": 1129,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_489": {
									"entryPoint": 7571,
									"id": 489,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_103": {
									"entryPoint": 7579,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@add_675": {
									"entryPoint": 7393,
									"id": 675,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@div_720": {
									"entryPoint": 7371,
									"id": 720,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@functionCallWithValue_341": {
									"entryPoint": 8135,
									"id": 341,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@functionCall_271": {
									"entryPoint": 8111,
									"id": 271,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getNumberofStakers_1563": {
									"entryPoint": 4453,
									"id": 1563,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getRewardRate_1683": {
									"entryPoint": 5029,
									"id": 1683,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getStakerMode_1581": {
									"entryPoint": 6348,
									"id": 1581,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getTotalStaked_1554": {
									"entryPoint": 1021,
									"id": 1554,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@harvest_2001": {
									"entryPoint": 1956,
									"id": 2001,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isContract_200": {
									"entryPoint": 8411,
									"id": 200,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isLocked_1649": {
									"entryPoint": 2757,
									"id": 1649,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isStartStaking_1594": {
									"entryPoint": 6805,
									"id": 1594,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mul_705": {
									"entryPoint": 7415,
									"id": 705,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@owner_32": {
									"entryPoint": 5045,
									"id": 32,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_60": {
									"entryPoint": 4893,
									"id": 60,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardAmount_1675": {
									"entryPoint": 4540,
									"id": 1675,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@rewardToHarvest_1924": {
									"entryPoint": 4466,
									"id": 1924,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@safeTransferFrom_972": {
									"entryPoint": 7775,
									"id": 972,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_946": {
									"entryPoint": 7437,
									"id": 946,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@setEventPeriod_1870": {
									"entryPoint": 4616,
									"id": 1870,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setLockupTime_1912": {
									"entryPoint": 3157,
									"id": 1912,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setRewardRate_1844": {
									"entryPoint": 5342,
									"id": 1844,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setUnstakingFeeRate_1893": {
									"entryPoint": 5086,
									"id": 1893,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stake_1546": {
									"entryPoint": 5598,
									"id": 1546,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stakedAmount_1662": {
									"entryPoint": 6691,
									"id": 1662,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@startStaking_1468": {
									"entryPoint": 3358,
									"id": 1468,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@sub_690": {
									"entryPoint": 7349,
									"id": 690,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@token_1187": {
									"entryPoint": 6767,
									"id": 1187,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalStaked_1184": {
									"entryPoint": 5039,
									"id": 1184,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_83": {
									"entryPoint": 6443,
									"id": 83,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateReward_1345": {
									"entryPoint": 6881,
									"id": 1345,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@verifyCallResult_476": {
									"entryPoint": 8446,
									"id": 476,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@withdraw_1821": {
									"entryPoint": 1031,
									"id": 1821,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 8768,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 11246,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 8629,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 9540,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 8789,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 11267,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 8650,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 9561,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 8834,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 8898,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 11785,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_contract$_IBEP20_$912_to_t_address_fromStack": {
									"entryPoint": 9020,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11885,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0d617be88096c346284999e0c326580edf46a27365999d8d83893f396c546e11_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10079,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9473,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10619,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11391,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10765,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9228,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9971,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11537,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9120,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9647,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10511,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11645,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10403,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10295,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9755,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_deac108a7d54cf66b12f6e883ab8551f52667d7b9815f115365cc11ce5c44062_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10187,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9863,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 8559,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 11834,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 8913,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 11156,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 9391,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IBEP20_$912__to_t_address__fromStack_reversed": {
									"entryPoint": 9035,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11942,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0d617be88096c346284999e0c326580edf46a27365999d8d83893f396c546e11__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10114,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9508,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10654,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11426,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10800,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9263,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10006,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11572,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9155,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9682,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10546,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11680,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10438,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10330,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9790,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_deac108a7d54cf66b12f6e883ab8551f52667d7b9815f115365cc11ce5c44062__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10222,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9898,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 8574,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 11712,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 11857,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 11723,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 9062,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 10980,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 10931,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 11066,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 10879,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 8727,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 11211,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 8695,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 8549,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IBEP20_$912_to_t_address": {
									"entryPoint": 9002,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 8984,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 8950,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 11734,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 8940,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mod_t_uint256": {
									"entryPoint": 9342,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 10832,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 9295,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 8601,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 11868,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_0d617be88096c346284999e0c326580edf46a27365999d8d83893f396c546e11": {
									"entryPoint": 10038,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3": {
									"entryPoint": 9432,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684": {
									"entryPoint": 10578,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082": {
									"entryPoint": 11312,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 10686,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1": {
									"entryPoint": 9187,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6": {
									"entryPoint": 9930,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c": {
									"entryPoint": 11458,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580": {
									"entryPoint": 9079,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 9606,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6": {
									"entryPoint": 10470,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad": {
									"entryPoint": 11604,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3": {
									"entryPoint": 10362,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561": {
									"entryPoint": 10254,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2": {
									"entryPoint": 9714,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_deac108a7d54cf66b12f6e883ab8551f52667d7b9815f115365cc11ce5c44062": {
									"entryPoint": 10146,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811": {
									"entryPoint": 9822,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 8745,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 11223,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 8606,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:26575:8",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:32:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:16:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "73:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:8",
														"type": ""
													}
												],
												"src": "7:77:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "155:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "165:37:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "165:37:8"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "143:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "150:3:8",
														"type": ""
													}
												],
												"src": "90:118:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "312:124:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "322:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "345:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "330:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "426:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "358:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "358:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "284:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "296:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "307:4:8",
														"type": ""
													}
												],
												"src": "214:222:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "482:35:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "492:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "508:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "502:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "502:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "492:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "475:6:8",
														"type": ""
													}
												],
												"src": "442:75:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "612:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "629:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "632:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "622:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "622:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "622:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "523:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "735:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "752:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "755:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "745:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "745:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "745:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "646:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "812:79:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "869:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "878:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "881:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "871:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "871:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "871:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "835:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "860:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "842:17:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "842:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "832:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "832:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "825:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "825:43:8"
															},
															"nodeType": "YulIf",
															"src": "822:63:8"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "805:5:8",
														"type": ""
													}
												],
												"src": "769:122:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "949:87:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "959:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "981:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "968:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "968:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "959:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1024:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "997:26:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "997:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "997:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "927:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "935:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "943:5:8",
														"type": ""
													}
												],
												"src": "897:139:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1108:263:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1154:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1156:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1156:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1156:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1129:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1138:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1125:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1125:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1150:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1121:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1121:32:8"
															},
															"nodeType": "YulIf",
															"src": "1118:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "1247:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1262:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1276:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1266:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1291:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1326:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1337:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1322:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1322:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1346:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1301:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1301:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1291:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1078:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1089:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1101:6:8",
														"type": ""
													}
												],
												"src": "1042:329:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1422:81:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1432:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1447:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1454:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1443:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1443:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1432:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1404:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1414:7:8",
														"type": ""
													}
												],
												"src": "1377:126:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1554:51:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1564:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1593:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1575:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1575:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1564:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1536:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1546:7:8",
														"type": ""
													}
												],
												"src": "1509:96:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1654:79:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1711:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1720:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1723:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1713:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1713:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1713:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1677:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1702:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1684:17:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1684:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1674:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1674:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1667:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1667:43:8"
															},
															"nodeType": "YulIf",
															"src": "1664:63:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1647:5:8",
														"type": ""
													}
												],
												"src": "1611:122:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1791:87:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1801:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1823:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1810:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1810:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1801:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1866:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1839:26:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1839:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1839:33:8"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1769:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1777:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1785:5:8",
														"type": ""
													}
												],
												"src": "1739:139:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1950:263:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1996:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1998:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1998:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1998:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1971:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1980:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1967:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1967:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1992:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1963:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1963:32:8"
															},
															"nodeType": "YulIf",
															"src": "1960:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "2089:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2104:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2118:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2108:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2133:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2168:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2179:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2164:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2164:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2188:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2143:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2143:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2133:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1920:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1931:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1943:6:8",
														"type": ""
													}
												],
												"src": "1884:329:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2302:391:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2348:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2350:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2350:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2350:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2323:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2332:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2319:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2319:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2344:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2315:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2315:32:8"
															},
															"nodeType": "YulIf",
															"src": "2312:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "2441:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2456:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2470:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2460:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2485:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2520:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2531:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2516:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2516:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2540:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2495:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2495:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2485:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2568:118:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2583:16:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2597:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2587:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2613:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2648:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2659:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2644:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2644:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2668:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2623:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2623:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2613:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2264:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2275:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2287:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2295:6:8",
														"type": ""
													}
												],
												"src": "2219:474:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2764:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2781:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2804:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2786:17:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2786:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2774:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2774:37:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2774:37:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2752:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2759:3:8",
														"type": ""
													}
												],
												"src": "2699:118:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2921:124:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2931:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2943:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2954:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2939:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2939:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2931:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3011:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3024:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3035:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3020:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3020:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2967:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2967:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2967:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2893:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2905:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2916:4:8",
														"type": ""
													}
												],
												"src": "2823:222:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3083:28:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3093:12:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3100:5:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "3093:3:8"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3069:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "3079:3:8",
														"type": ""
													}
												],
												"src": "3051:60:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3177:82:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3187:66:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3245:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nodeType": "YulIdentifier",
																					"src": "3227:17:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3227:24:8"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "3218:8:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3218:34:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "3200:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3200:53:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "3187:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3157:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "3167:9:8",
														"type": ""
													}
												],
												"src": "3117:142:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3325:66:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3335:50:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3379:5:8"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "3348:30:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3348:37:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "3335:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3305:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "3315:9:8",
														"type": ""
													}
												],
												"src": "3265:126:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3471:66:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3481:50:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3525:5:8"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "3494:30:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3494:37:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "3481:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IBEP20_$912_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3451:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "3461:9:8",
														"type": ""
													}
												],
												"src": "3397:140:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3622:80:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3639:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3689:5:8"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IBEP20_$912_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3644:44:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3644:51:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3632:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3632:64:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3632:64:8"
														}
													]
												},
												"name": "abi_encode_t_contract$_IBEP20_$912_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3610:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3617:3:8",
														"type": ""
													}
												],
												"src": "3543:159:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3820:138:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3830:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3842:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3853:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3838:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3838:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3830:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3924:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3937:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3948:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3933:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3933:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IBEP20_$912_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3866:57:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3866:85:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3866:85:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IBEP20_$912__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3792:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3804:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3815:4:8",
														"type": ""
													}
												],
												"src": "3708:250:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4060:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4077:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4082:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4070:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4070:19:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4070:19:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4098:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4117:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4122:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4113:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4113:14:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "4098:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4032:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4037:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "4048:11:8",
														"type": ""
													}
												],
												"src": "3964:169:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4245:75:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4267:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4275:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4263:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4263:14:8"
																	},
																	{
																		"hexValue": "416d6f756e742073686f756c642062652067726561746572207468616e2030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4279:33:8",
																		"type": "",
																		"value": "Amount should be greater than 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4256:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4256:57:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4256:57:8"
														}
													]
												},
												"name": "store_literal_in_memory_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "4237:6:8",
														"type": ""
													}
												],
												"src": "4139:181:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4472:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4482:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4548:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4553:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4489:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4489:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4482:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4654:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580",
																	"nodeType": "YulIdentifier",
																	"src": "4565:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4565:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4565:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4667:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4678:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4683:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4674:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4674:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4667:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4460:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4468:3:8",
														"type": ""
													}
												],
												"src": "4326:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4869:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4879:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4891:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4902:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4887:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4887:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4879:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4926:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4937:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4922:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4922:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4945:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4951:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4941:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4941:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4915:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4915:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4915:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4971:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "5105:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4979:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4979:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4971:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4849:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4864:4:8",
														"type": ""
													}
												],
												"src": "4698:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5229:58:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5251:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5259:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5247:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5247:14:8"
																	},
																	{
																		"hexValue": "496e76616c696420616d6f756e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5263:16:8",
																		"type": "",
																		"value": "Invalid amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5240:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5240:40:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5240:40:8"
														}
													]
												},
												"name": "store_literal_in_memory_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5221:6:8",
														"type": ""
													}
												],
												"src": "5123:164:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5439:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5449:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5515:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5520:2:8",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5456:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5456:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5449:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5621:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1",
																	"nodeType": "YulIdentifier",
																	"src": "5532:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5532:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5532:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5634:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5645:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5650:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5641:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5641:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5634:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5427:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5435:3:8",
														"type": ""
													}
												],
												"src": "5293:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5836:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5846:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5858:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5869:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5854:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5854:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5846:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5893:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5904:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5889:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5889:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "5912:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5918:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5908:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5908:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5882:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5882:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5882:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5938:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6072:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5946:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5946:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5938:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5816:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5831:4:8",
														"type": ""
													}
												],
												"src": "5665:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6118:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6135:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6138:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6128:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6128:88:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6128:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6232:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6235:4:8",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6225:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6225:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6225:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6256:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6259:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6249:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6249:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6249:15:8"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "6090:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6310:142:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6320:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6343:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6325:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6325:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "6320:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6354:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6377:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6359:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6359:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "6354:1:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6401:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "6403:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6403:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6403:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6398:1:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6391:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6391:9:8"
															},
															"nodeType": "YulIf",
															"src": "6388:35:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6432:14:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6441:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6444:1:8"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nodeType": "YulIdentifier",
																	"src": "6437:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6437:9:8"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6432:1:8"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6299:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6302:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "6308:1:8",
														"type": ""
													}
												],
												"src": "6276:176:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6584:206:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6594:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6606:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6617:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6602:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6602:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6594:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6674:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6687:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6698:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6683:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6683:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6630:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6630:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6630:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6755:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6768:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6779:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6764:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6764:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6711:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6711:72:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6711:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6548:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6560:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6568:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6579:4:8",
														"type": ""
													}
												],
												"src": "6458:332:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6902:60:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6924:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6932:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6920:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6920:14:8"
																	},
																	{
																		"hexValue": "4e6f7468696e6720746f20636c61696d",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6936:18:8",
																		"type": "",
																		"value": "Nothing to claim"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6913:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6913:42:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6913:42:8"
														}
													]
												},
												"name": "store_literal_in_memory_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6894:6:8",
														"type": ""
													}
												],
												"src": "6796:166:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7114:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7124:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7190:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7195:2:8",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7131:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7131:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7124:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7296:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3",
																	"nodeType": "YulIdentifier",
																	"src": "7207:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7207:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7207:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7309:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7320:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7325:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7316:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7316:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7309:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7102:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7110:3:8",
														"type": ""
													}
												],
												"src": "6968:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7511:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7521:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7533:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7544:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7529:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7529:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7521:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7568:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7579:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7564:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7564:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7587:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7593:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7583:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7583:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7557:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7557:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7557:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7613:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7747:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7621:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7621:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7613:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7491:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7506:4:8",
														"type": ""
													}
												],
												"src": "7340:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7828:80:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7838:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "7853:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7847:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7847:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "7838:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7896:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7869:26:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7869:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7869:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "7806:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7814:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7822:5:8",
														"type": ""
													}
												],
												"src": "7765:143:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7991:274:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8037:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "8039:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8039:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8039:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8012:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8021:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8008:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8008:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8033:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8004:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8004:32:8"
															},
															"nodeType": "YulIf",
															"src": "8001:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "8130:128:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8145:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8159:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8149:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8174:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8220:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8231:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8216:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8216:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8240:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "8184:31:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8184:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "8174:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7961:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7972:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7984:6:8",
														"type": ""
													}
												],
												"src": "7914:351:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8377:76:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8399:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8407:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8395:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8395:14:8"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8411:34:8",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8388:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8388:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8388:58:8"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8369:6:8",
														"type": ""
													}
												],
												"src": "8271:182:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8605:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8615:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8681:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8686:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8622:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8622:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8615:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8787:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "8698:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8698:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8698:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8800:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8811:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8816:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8807:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8807:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8800:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8593:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8601:3:8",
														"type": ""
													}
												],
												"src": "8459:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9002:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9012:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9024:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9035:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9020:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9020:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9012:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9059:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9070:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9055:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9055:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9078:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9084:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9074:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9074:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9048:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9048:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9048:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9104:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9238:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9112:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9112:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9104:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8982:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8997:4:8",
														"type": ""
													}
												],
												"src": "8831:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9362:57:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9384:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9392:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9380:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9380:14:8"
																	},
																	{
																		"hexValue": "43616e2774206265207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9396:15:8",
																		"type": "",
																		"value": "Can't be zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9373:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9373:39:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9373:39:8"
														}
													]
												},
												"name": "store_literal_in_memory_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9354:6:8",
														"type": ""
													}
												],
												"src": "9256:163:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9571:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9581:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9647:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9652:2:8",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9588:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9588:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9581:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9753:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2",
																	"nodeType": "YulIdentifier",
																	"src": "9664:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9664:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9664:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9766:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9777:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9782:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9773:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9773:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9766:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9559:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9567:3:8",
														"type": ""
													}
												],
												"src": "9425:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9968:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9978:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9990:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10001:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9986:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9986:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9978:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10025:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10036:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10021:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10021:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10044:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10050:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10040:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10040:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10014:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10014:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10014:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10070:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10204:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10078:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10078:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10070:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9948:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9963:4:8",
														"type": ""
													}
												],
												"src": "9797:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10328:57:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10350:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10358:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10346:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10346:14:8"
																	},
																	{
																		"hexValue": "496e73756666696369656e7421",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10362:15:8",
																		"type": "",
																		"value": "Insufficient!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10339:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10339:39:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10339:39:8"
														}
													]
												},
												"name": "store_literal_in_memory_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10320:6:8",
														"type": ""
													}
												],
												"src": "10222:163:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10537:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10547:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10613:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10618:2:8",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10554:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10554:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10547:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10719:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811",
																	"nodeType": "YulIdentifier",
																	"src": "10630:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10630:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10630:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10732:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10743:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10748:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10739:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10739:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10732:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10525:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10533:3:8",
														"type": ""
													}
												],
												"src": "10391:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10934:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10944:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10956:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10967:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10952:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10952:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10944:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10991:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11002:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10987:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10987:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11010:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11016:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11006:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11006:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10980:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10980:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10980:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11036:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11170:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11044:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11044:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11036:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10914:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10929:4:8",
														"type": ""
													}
												],
												"src": "10763:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11294:59:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11316:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11324:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11312:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11312:14:8"
																	},
																	{
																		"hexValue": "416c72656164792073746172746564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11328:17:8",
																		"type": "",
																		"value": "Already started"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11305:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11305:41:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11305:41:8"
														}
													]
												},
												"name": "store_literal_in_memory_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11286:6:8",
														"type": ""
													}
												],
												"src": "11188:165:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11505:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11515:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11581:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11586:2:8",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11522:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11522:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11515:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11687:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6",
																	"nodeType": "YulIdentifier",
																	"src": "11598:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11598:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11598:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11700:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11711:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11716:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11707:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11707:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11700:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11493:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11501:3:8",
														"type": ""
													}
												],
												"src": "11359:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11902:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11912:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11924:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11935:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11920:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11920:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11912:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11959:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11970:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11955:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11955:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11978:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11984:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11974:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11974:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11948:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11948:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11948:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12004:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12138:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12012:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12012:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12004:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11882:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11897:4:8",
														"type": ""
													}
												],
												"src": "11731:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12262:56:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12284:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12292:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12280:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12280:14:8"
																	},
																	{
																		"hexValue": "496e73756666696369656e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12296:14:8",
																		"type": "",
																		"value": "Insufficient"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12273:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12273:38:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12273:38:8"
														}
													]
												},
												"name": "store_literal_in_memory_0d617be88096c346284999e0c326580edf46a27365999d8d83893f396c546e11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12254:6:8",
														"type": ""
													}
												],
												"src": "12156:162:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12470:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12480:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12546:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12551:2:8",
																		"type": "",
																		"value": "12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12487:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12487:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12480:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12652:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0d617be88096c346284999e0c326580edf46a27365999d8d83893f396c546e11",
																	"nodeType": "YulIdentifier",
																	"src": "12563:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12563:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12563:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12665:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12676:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12681:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12672:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12672:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12665:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0d617be88096c346284999e0c326580edf46a27365999d8d83893f396c546e11_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12458:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12466:3:8",
														"type": ""
													}
												],
												"src": "12324:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12867:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12877:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12889:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12900:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12885:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12885:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12877:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12924:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12935:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12920:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12920:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12943:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12949:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12939:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12939:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12913:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12913:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12913:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12969:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13103:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0d617be88096c346284999e0c326580edf46a27365999d8d83893f396c546e11_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12977:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12977:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12969:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0d617be88096c346284999e0c326580edf46a27365999d8d83893f396c546e11__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12847:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12862:4:8",
														"type": ""
													}
												],
												"src": "12696:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13227:56:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13249:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13257:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13245:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13245:14:8"
																	},
																	{
																		"hexValue": "496e76616c6964204d6f6465",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13261:14:8",
																		"type": "",
																		"value": "Invalid Mode"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13238:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13238:38:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13238:38:8"
														}
													]
												},
												"name": "store_literal_in_memory_deac108a7d54cf66b12f6e883ab8551f52667d7b9815f115365cc11ce5c44062",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13219:6:8",
														"type": ""
													}
												],
												"src": "13121:162:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13435:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13445:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13511:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13516:2:8",
																		"type": "",
																		"value": "12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13452:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13452:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13445:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13617:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_deac108a7d54cf66b12f6e883ab8551f52667d7b9815f115365cc11ce5c44062",
																	"nodeType": "YulIdentifier",
																	"src": "13528:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13528:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13528:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13630:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13641:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13646:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13637:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13637:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13630:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_deac108a7d54cf66b12f6e883ab8551f52667d7b9815f115365cc11ce5c44062_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13423:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13431:3:8",
														"type": ""
													}
												],
												"src": "13289:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13832:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13842:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13854:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13865:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13850:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13850:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13842:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13889:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13900:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13885:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13885:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13908:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13914:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13904:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13904:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13878:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13878:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13878:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13934:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14068:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_deac108a7d54cf66b12f6e883ab8551f52667d7b9815f115365cc11ce5c44062_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13942:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13942:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13934:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_deac108a7d54cf66b12f6e883ab8551f52667d7b9815f115365cc11ce5c44062__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13812:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13827:4:8",
														"type": ""
													}
												],
												"src": "13661:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14192:67:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14214:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14222:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14210:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14210:14:8"
																	},
																	{
																		"hexValue": "496e76616c6964204c6f636b7570204475726174696f6e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14226:25:8",
																		"type": "",
																		"value": "Invalid Lockup Duration"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14203:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14203:49:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14203:49:8"
														}
													]
												},
												"name": "store_literal_in_memory_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14184:6:8",
														"type": ""
													}
												],
												"src": "14086:173:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14411:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14421:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14487:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14492:2:8",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14428:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14428:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14421:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14593:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561",
																	"nodeType": "YulIdentifier",
																	"src": "14504:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14504:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14504:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14606:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14617:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14622:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14613:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14613:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14606:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14399:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14407:3:8",
														"type": ""
													}
												],
												"src": "14265:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14808:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14818:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14830:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14841:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14826:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14826:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14818:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14865:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14876:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14861:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14861:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14884:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14890:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14880:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14880:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14854:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14854:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14854:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14910:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15044:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14918:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14918:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14910:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14788:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14803:4:8",
														"type": ""
													}
												],
												"src": "14637:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15168:70:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15190:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15198:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15186:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15186:14:8"
																	},
																	{
																		"hexValue": "496e76616c696420556e7374616b696e67204665652052617465",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15202:28:8",
																		"type": "",
																		"value": "Invalid Unstaking Fee Rate"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15179:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15179:52:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15179:52:8"
														}
													]
												},
												"name": "store_literal_in_memory_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "15160:6:8",
														"type": ""
													}
												],
												"src": "15062:176:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15390:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15400:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15466:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15471:2:8",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15407:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15407:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "15400:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15572:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3",
																	"nodeType": "YulIdentifier",
																	"src": "15483:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15483:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15483:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15585:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15596:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15601:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15592:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15592:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "15585:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15378:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "15386:3:8",
														"type": ""
													}
												],
												"src": "15244:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15787:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15797:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15809:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15820:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15805:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15805:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15797:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15844:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15855:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15840:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15840:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15863:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15869:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15859:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15859:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15833:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15833:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15833:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15889:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16023:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15897:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15897:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15889:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15767:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15782:4:8",
														"type": ""
													}
												],
												"src": "15616:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16147:57:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16169:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16177:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16165:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16165:14:8"
																	},
																	{
																		"hexValue": "496e76616c69642076616c7565",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16181:15:8",
																		"type": "",
																		"value": "Invalid value"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16158:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16158:39:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16158:39:8"
														}
													]
												},
												"name": "store_literal_in_memory_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "16139:6:8",
														"type": ""
													}
												],
												"src": "16041:163:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16356:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16366:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16432:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16437:2:8",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16373:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16373:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16366:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16538:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6",
																	"nodeType": "YulIdentifier",
																	"src": "16449:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16449:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16449:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16551:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16562:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16567:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16558:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16558:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "16551:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16344:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16352:3:8",
														"type": ""
													}
												],
												"src": "16210:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16753:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16763:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16775:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16786:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16771:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16771:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16763:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16810:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16821:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16806:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16806:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "16829:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16835:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16825:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16825:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16799:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16799:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16799:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16855:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16989:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16863:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16863:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16855:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16733:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16748:4:8",
														"type": ""
													}
												],
												"src": "16582:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17113:65:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17135:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17143:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17131:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17131:14:8"
																	},
																	{
																		"hexValue": "4572726f723a20696e76616c6964207374616b6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17147:23:8",
																		"type": "",
																		"value": "Error: invalid staker"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17124:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17124:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17124:47:8"
														}
													]
												},
												"name": "store_literal_in_memory_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "17105:6:8",
														"type": ""
													}
												],
												"src": "17007:171:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17330:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17340:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17406:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17411:2:8",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17347:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17347:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "17340:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17512:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684",
																	"nodeType": "YulIdentifier",
																	"src": "17423:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17423:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17423:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17525:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17536:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17541:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17532:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17532:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "17525:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "17318:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "17326:3:8",
														"type": ""
													}
												],
												"src": "17184:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17727:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17737:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17749:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17760:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17745:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17745:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17737:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17784:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17795:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17780:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17780:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "17803:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17809:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17799:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17799:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17773:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17773:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17773:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17829:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "17963:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17837:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17837:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17829:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17707:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17722:4:8",
														"type": ""
													}
												],
												"src": "17556:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18087:119:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "18109:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18117:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18105:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18105:14:8"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18121:34:8",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18098:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18098:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18098:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "18177:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18185:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18173:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18173:15:8"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18190:8:8",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18166:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18166:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18166:33:8"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "18079:6:8",
														"type": ""
													}
												],
												"src": "17981:225:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18358:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18368:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18434:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18439:2:8",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18375:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18375:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "18368:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18540:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "18451:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18451:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18451:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18553:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18564:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18569:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18560:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18560:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "18553:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "18346:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "18354:3:8",
														"type": ""
													}
												],
												"src": "18212:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18755:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18765:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18777:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18788:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18773:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18773:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18765:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18812:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18823:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18808:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18808:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "18831:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18837:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18827:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18827:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18801:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18801:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18801:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18857:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "18991:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18865:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18865:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18857:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18735:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18750:4:8",
														"type": ""
													}
												],
												"src": "18584:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19037:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19054:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19057:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19047:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19047:88:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19047:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19151:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19154:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19144:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19144:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19144:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19175:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19178:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "19168:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19168:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19168:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "19009:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19240:146:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19250:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19273:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "19255:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19255:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "19250:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "19284:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19307:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "19289:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19289:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "19284:1:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19331:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "19333:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19333:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19333:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19325:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19328:1:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "19322:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19322:8:8"
															},
															"nodeType": "YulIf",
															"src": "19319:34:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19363:17:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19375:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19378:1:8"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "19371:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19371:9:8"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "19363:4:8"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "19226:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "19229:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "19235:4:8",
														"type": ""
													}
												],
												"src": "19195:191:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19434:143:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19444:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19467:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "19449:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19449:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "19444:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "19478:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19501:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "19483:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19483:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "19478:1:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19525:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "19527:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19527:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19527:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19522:1:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "19515:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19515:9:8"
															},
															"nodeType": "YulIf",
															"src": "19512:35:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19557:14:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19566:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19569:1:8"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "19562:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19562:9:8"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "19557:1:8"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "19423:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "19426:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "19432:1:8",
														"type": ""
													}
												],
												"src": "19392:185:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19627:261:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19637:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19660:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "19642:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19642:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "19637:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "19671:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19694:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "19676:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19676:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "19671:1:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19834:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "19836:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19836:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19836:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19755:1:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19762:66:8",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "19830:1:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19758:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19758:74:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "19752:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19752:81:8"
															},
															"nodeType": "YulIf",
															"src": "19749:107:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19866:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19877:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19880:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19873:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19873:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "19866:3:8"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "19614:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "19617:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "19623:3:8",
														"type": ""
													}
												],
												"src": "19583:305:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19942:300:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19952:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19975:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "19957:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19957:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "19952:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "19986:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "20009:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "19991:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19991:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "19986:1:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20184:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "20186:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20186:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20186:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "20096:1:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "20089:6:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20089:9:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "20082:6:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20082:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "20104:1:8"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "20111:66:8",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "20179:1:8"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "20107:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20107:74:8"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "20101:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20101:81:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "20078:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20078:105:8"
															},
															"nodeType": "YulIf",
															"src": "20075:131:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20216:20:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "20231:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "20234:1:8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "20227:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20227:9:8"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "20216:7:8"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "19925:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "19928:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "19934:7:8",
														"type": ""
													}
												],
												"src": "19894:348:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20402:288:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20412:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20424:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20435:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20420:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20420:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20412:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "20492:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20505:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20516:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20501:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20501:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20448:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20448:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20448:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "20573:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20586:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20597:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20582:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20582:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20529:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20529:72:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20529:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "20655:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20668:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20679:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20664:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20664:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20611:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20611:72:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20611:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20358:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "20370:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "20378:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "20386:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20397:4:8",
														"type": ""
													}
												],
												"src": "20248:442:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20738:48:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20748:32:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "20773:5:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "20766:6:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20766:13:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "20759:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20759:21:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "20748:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20720:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "20730:7:8",
														"type": ""
													}
												],
												"src": "20696:90:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20832:76:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20886:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "20895:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "20898:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "20888:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20888:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20888:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "20855:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "20877:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "20862:14:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20862:21:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "20852:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20852:32:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "20845:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20845:40:8"
															},
															"nodeType": "YulIf",
															"src": "20842:60:8"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20825:5:8",
														"type": ""
													}
												],
												"src": "20792:116:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20974:77:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20984:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "20999:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "20993:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20993:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "20984:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "21039:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "21015:23:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21015:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21015:30:8"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "20952:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "20960:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20968:5:8",
														"type": ""
													}
												],
												"src": "20914:137:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21131:271:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "21177:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "21179:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21179:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "21179:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "21152:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21161:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "21148:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21148:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21173:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "21144:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21144:32:8"
															},
															"nodeType": "YulIf",
															"src": "21141:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "21270:125:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "21285:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21299:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "21289:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "21314:71:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "21357:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "21368:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "21353:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "21353:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "21377:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "21324:28:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21324:61:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "21314:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21101:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "21112:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "21124:6:8",
														"type": ""
													}
												],
												"src": "21057:345:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21514:123:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "21536:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21544:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21532:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21532:14:8"
																	},
																	{
																		"hexValue": "5361666542455032303a204245503230206f7065726174696f6e20646964206e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21548:34:8",
																		"type": "",
																		"value": "SafeBEP20: BEP20 operation did n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21525:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21525:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21525:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "21604:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21612:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21600:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21600:15:8"
																	},
																	{
																		"hexValue": "6f742073756363656564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21617:12:8",
																		"type": "",
																		"value": "ot succeed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21593:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21593:37:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21593:37:8"
														}
													]
												},
												"name": "store_literal_in_memory_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "21506:6:8",
														"type": ""
													}
												],
												"src": "21408:229:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21789:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21799:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21865:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21870:2:8",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21806:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21806:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "21799:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21971:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082",
																	"nodeType": "YulIdentifier",
																	"src": "21882:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21882:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21882:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21984:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21995:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22000:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21991:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21991:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "21984:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "21777:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "21785:3:8",
														"type": ""
													}
												],
												"src": "21643:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22186:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22196:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22208:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22219:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22204:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22204:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22196:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22243:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22254:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22239:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22239:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "22262:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22268:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "22258:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22258:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22232:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22232:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22232:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22288:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "22422:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22296:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22296:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22288:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "22166:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "22181:4:8",
														"type": ""
													}
												],
												"src": "22015:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22546:119:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "22568:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22576:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22564:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22564:14:8"
																	},
																	{
																		"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22580:34:8",
																		"type": "",
																		"value": "Address: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22557:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22557:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22557:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "22636:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22644:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22632:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22632:15:8"
																	},
																	{
																		"hexValue": "722063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22649:8:8",
																		"type": "",
																		"value": "r call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22625:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22625:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22625:33:8"
														}
													]
												},
												"name": "store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "22538:6:8",
														"type": ""
													}
												],
												"src": "22440:225:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22817:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22827:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22893:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22898:2:8",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22834:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22834:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "22827:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22999:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																	"nodeType": "YulIdentifier",
																	"src": "22910:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22910:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22910:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23012:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23023:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23028:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23019:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "23019:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "23012:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "22805:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "22813:3:8",
														"type": ""
													}
												],
												"src": "22671:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23214:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23224:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "23236:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23247:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23232:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "23232:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23224:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23271:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23282:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23267:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23267:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "23290:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23296:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "23286:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23286:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23260:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "23260:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23260:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23316:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "23450:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23324:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "23324:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23316:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "23194:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "23209:4:8",
														"type": ""
													}
												],
												"src": "23043:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23574:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "23596:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23604:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23592:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23592:14:8"
																	},
																	{
																		"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "23608:31:8",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23585:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "23585:55:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23585:55:8"
														}
													]
												},
												"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "23566:6:8",
														"type": ""
													}
												],
												"src": "23468:179:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23799:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23809:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23875:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23880:2:8",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23816:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "23816:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "23809:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23981:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																	"nodeType": "YulIdentifier",
																	"src": "23892:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "23892:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23892:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23994:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24005:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24010:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24001:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "24001:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "23994:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "23787:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "23795:3:8",
														"type": ""
													}
												],
												"src": "23653:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24196:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24206:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "24218:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24229:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24214:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "24214:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24206:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24253:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24264:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24249:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24249:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "24272:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24278:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "24268:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24268:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24242:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "24242:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24242:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24298:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "24432:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24306:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "24306:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24298:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "24176:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "24191:4:8",
														"type": ""
													}
												],
												"src": "24025:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24508:40:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24519:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "24535:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "24529:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "24529:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "24519:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "24491:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "24501:6:8",
														"type": ""
													}
												],
												"src": "24450:98:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24667:34:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24677:18:8",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "24692:3:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "24677:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "24639:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "24644:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "24655:11:8",
														"type": ""
													}
												],
												"src": "24554:147:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24756:258:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "24766:10:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "24775:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "24770:1:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "24835:63:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "24860:3:8"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "24865:1:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "24856:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "24856:11:8"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "24879:3:8"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "24884:1:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "24875:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "24875:11:8"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "24869:5:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "24869:18:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "24849:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "24849:39:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "24849:39:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "24796:1:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "24799:6:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "24793:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "24793:13:8"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "24807:19:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "24809:15:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "24818:1:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "24821:2:8",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "24814:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "24814:10:8"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "24809:1:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "24789:3:8",
																"statements": []
															},
															"src": "24785:113:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "24932:76:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "24982:3:8"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "24987:6:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "24978:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "24978:16:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "24996:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "24971:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "24971:27:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "24971:27:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "24913:1:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "24916:6:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "24910:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "24910:13:8"
															},
															"nodeType": "YulIf",
															"src": "24907:101:8"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "24738:3:8",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "24743:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "24748:6:8",
														"type": ""
													}
												],
												"src": "24707:307:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25128:265:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "25138:52:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "25184:5:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "25152:31:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "25152:38:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "25142:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "25199:95:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25282:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "25287:6:8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "25206:75:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "25206:88:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "25199:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "25329:5:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25336:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25325:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25325:16:8"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25343:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "25348:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "25303:21:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "25303:52:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25303:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25364:23:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25375:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "25380:6:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25371:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "25371:16:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "25364:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "25109:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "25116:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "25124:3:8",
														"type": ""
													}
												],
												"src": "25020:373:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25533:137:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25544:100:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "25631:6:8"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25640:3:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "25551:79:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "25551:93:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "25544:3:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "25654:10:8",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "25661:3:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "25654:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "25512:3:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "25518:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "25529:3:8",
														"type": ""
													}
												],
												"src": "25399:271:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25735:40:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25746:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "25762:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "25756:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "25756:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "25746:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "25718:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "25728:6:8",
														"type": ""
													}
												],
												"src": "25676:99:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25829:54:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25839:38:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "25857:5:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25864:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25853:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25853:14:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25873:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "25869:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25869:7:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "25849:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "25849:28:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "25839:6:8"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "25812:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "25822:6:8",
														"type": ""
													}
												],
												"src": "25781:102:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25981:272:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "25991:53:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "26038:5:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "26005:32:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "26005:39:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "25995:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "26053:78:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26119:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "26124:6:8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "26060:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "26060:71:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "26053:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "26166:5:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26173:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26162:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26162:16:8"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26180:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "26185:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "26140:21:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "26140:52:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26140:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "26201:46:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26212:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "26239:6:8"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "26217:21:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26217:29:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "26208:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "26208:39:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "26201:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "25962:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "25969:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "25977:3:8",
														"type": ""
													}
												],
												"src": "25889:364:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26377:195:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26387:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "26399:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26410:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "26395:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "26395:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "26387:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "26434:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26445:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26430:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26430:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "26453:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "26459:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "26449:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26449:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26423:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "26423:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26423:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "26479:86:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "26551:6:8"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "26560:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "26487:63:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "26487:78:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "26479:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "26349:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "26361:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "26372:4:8",
														"type": ""
													}
												],
												"src": "26259:313:8"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IBEP20_$912_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IBEP20_$912_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IBEP20_$912_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IBEP20_$912__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IBEP20_$912_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580(memPtr) {\n\n        mstore(add(memPtr, 0), \"Amount should be greater than 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid amount\")\n\n    }\n\n    function abi_encode_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Nothing to claim\")\n\n    }\n\n    function abi_encode_t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Can't be zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient!\")\n\n    }\n\n    function abi_encode_t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6(memPtr) {\n\n        mstore(add(memPtr, 0), \"Already started\")\n\n    }\n\n    function abi_encode_t_stringliteral_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0d617be88096c346284999e0c326580edf46a27365999d8d83893f396c546e11(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient\")\n\n    }\n\n    function abi_encode_t_stringliteral_0d617be88096c346284999e0c326580edf46a27365999d8d83893f396c546e11_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 12)\n        store_literal_in_memory_0d617be88096c346284999e0c326580edf46a27365999d8d83893f396c546e11(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0d617be88096c346284999e0c326580edf46a27365999d8d83893f396c546e11__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0d617be88096c346284999e0c326580edf46a27365999d8d83893f396c546e11_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_deac108a7d54cf66b12f6e883ab8551f52667d7b9815f115365cc11ce5c44062(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid Mode\")\n\n    }\n\n    function abi_encode_t_stringliteral_deac108a7d54cf66b12f6e883ab8551f52667d7b9815f115365cc11ce5c44062_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 12)\n        store_literal_in_memory_deac108a7d54cf66b12f6e883ab8551f52667d7b9815f115365cc11ce5c44062(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_deac108a7d54cf66b12f6e883ab8551f52667d7b9815f115365cc11ce5c44062__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_deac108a7d54cf66b12f6e883ab8551f52667d7b9815f115365cc11ce5c44062_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid Lockup Duration\")\n\n    }\n\n    function abi_encode_t_stringliteral_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid Unstaking Fee Rate\")\n\n    }\n\n    function abi_encode_t_stringliteral_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid value\")\n\n    }\n\n    function abi_encode_t_stringliteral_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684(memPtr) {\n\n        mstore(add(memPtr, 0), \"Error: invalid staker\")\n\n    }\n\n    function abi_encode_t_stringliteral_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeBEP20: BEP20 operation did n\")\n\n        mstore(add(memPtr, 32), \"ot succeed\")\n\n    }\n\n    function abi_encode_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: insufficient balance fo\")\n\n        mstore(add(memPtr, 32), \"r call\")\n\n    }\n\n    function abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: call to non-contract\")\n\n    }\n\n    function abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101425760003560e01c80637e1a3786116100b8578063a694fc3a1161007c578063a694fc3a14610317578063aedf562b14610333578063f2fde38b14610363578063f99318551461037f578063fc0c546a146103af578063fe600f84146103cd57610142565b80637e1a378614610285578063817b1cd2146102a35780638da5cb5b146102c157806391e07e7a146102df5780639e447fc6146102fb57610142565b80634b77dd9e1161010a5780634b77dd9e146101d75780635715ec11146101f35780635d2ec65d14610211578063645a8a561461022f578063692642e71461025f578063715018a61461027b57610142565b80630917e776146101475780632e1a7d4d146101655780634641257d146101815780634a4fbeec1461018b5780634b62b70b146101bb575b600080fd5b61014f6103fd565b60405161015c919061217e565b60405180910390f35b61017f600480360381019061017a91906121ca565b610407565b005b6101896107a4565b005b6101a560048036038101906101a09190612255565b610ac5565b6040516101b2919061217e565b60405180910390f35b6101d560048036038101906101d091906121ca565b610c55565b005b6101f160048036038101906101ec9190612282565b610d1e565b005b6101fb611165565b604051610208919061217e565b60405180910390f35b610219611172565b604051610226919061217e565b60405180910390f35b61024960048036038101906102449190612255565b6111bc565b604051610256919061217e565b60405180910390f35b610279600480360381019061027491906121ca565b611208565b005b61028361131d565b005b61028d6113a5565b60405161029a919061217e565b60405180910390f35b6102ab6113af565b6040516102b8919061217e565b60405180910390f35b6102c96113b5565b6040516102d691906122d1565b60405180910390f35b6102f960048036038101906102f491906121ca565b6113de565b005b610315600480360381019061031091906121ca565b6114de565b005b610331600480360381019061032c91906121ca565b6115de565b005b61034d60048036038101906103489190612255565b6118cc565b60405161035a919061217e565b60405180910390f35b61037d60048036038101906103789190612255565b61192b565b005b61039960048036038101906103949190612255565b611a23565b6040516103a6919061217e565b60405180910390f35b6103b7611a6f565b6040516103c4919061234b565b60405180910390f35b6103e760048036038101906103e29190612255565b611a95565b6040516103f4919061217e565b60405180910390f35b6000600b54905090565b6000811161044a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610441906123c3565b60405180910390fd5b600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101548111156104cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104c69061242f565b60405180910390fd5b6104d7611ae1565b600081905060006105486201518061053a600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003015442611cb590919063ffffffff16565b611ccb90919063ffffffff16565b9050600060649050600080600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002015414156105fb576105f3600554600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030154611ce190919063ffffffff16565b421015610619565b60006002548461060b919061247e565b1480156106185750600083115b5b9050806106265760015491505b61065f6106506127106106428588611cf790919063ffffffff16565b611ccb90919063ffffffff16565b85611cb590919063ffffffff16565b935061067684600b54611cb590919063ffffffff16565b600b819055506106d184600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154611cb590919063ffffffff16565b600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055506107643385600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611d0d9092919063ffffffff16565b7f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a942436433856040516107959291906124af565b60405180910390a15050505050565b6107ac611ae1565b600061086d61081c61271061080e600454600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154611cf790919063ffffffff16565b611ccb90919063ffffffff16565b600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154611cb590919063ffffffff16565b9050600081116108b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108a990612524565b60405180910390fd5b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161090d91906122d1565b602060405180830381865afa15801561092a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061094e9190612559565b8111156109f457600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016109b091906122d1565b602060405180830381865afa1580156109cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109f19190612559565b90505b610a413382600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611d0d9092919063ffffffff16565b6000600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055507fc9695243a805adb74c91f28311176c65b417e842d5699893cef56d18bfa48cba3382604051610aba9291906124af565b60405180910390a150565b60006055600a60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206005015414610b1a5760019050610c50565b6000600a60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002015414610be257600062093a80610bbf600a60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003015442611cb590919063ffffffff16565b610bc9919061247e565b14610bd5576001610bd8565b60005b60ff169050610c50565b600554610c3a600a60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003015442611cb590919063ffffffff16565b1015610c47576001610c4a565b60005b60ff1690505b919050565b610c5d611d93565b73ffffffffffffffffffffffffffffffffffffffff16610c7b6113b5565b73ffffffffffffffffffffffffffffffffffffffff1614610cd1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cc8906125d2565b60405180910390fd5b60008111610d14576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d0b9061263e565b60405180910390fd5b8060058190555050565b60008211610d61576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d58906123c3565b60405180910390fd5b81600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401610dbd91906122d1565b602060405180830381865afa158015610dda573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dfe9190612559565b11610e3e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e35906126aa565b60405180910390fd5b6055600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600501541415610ec4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ebb90612716565b60405180910390fd5b6000811415610edf5760008211610eda57600080fd5b61101f565b6001811415610f3257600854821015610f2d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f2490612782565b60405180910390fd5b61101e565b6002811415610f8557600754821015610f80576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f7790612782565b60405180910390fd5b61101d565b6003811415610fd857600654821015610fd3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fca90612782565b60405180910390fd5b61101c565b6000821061101b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611012906127ee565b60405180910390fd5b5b5b5b5b80600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018190555042600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301819055506055600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600501819055506009339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611161826115de565b5050565b6000600980549050905090565b6000600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154905090565b6000600a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001549050919050565b611210611d93565b73ffffffffffffffffffffffffffffffffffffffff1661122e6113b5565b73ffffffffffffffffffffffffffffffffffffffff1614611284576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161127b906125d2565b60405180910390fd5b600081116112c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112be9061285a565b60405180910390fd5b6112dd6201518082611cf790919063ffffffff16565b6002819055507f189bda9782663c67a3f95c0aa5455924c711210b00281c60ead2f0dd8dbc924c81604051611312919061217e565b60405180910390a150565b611325611d93565b73ffffffffffffffffffffffffffffffffffffffff166113436113b5565b73ffffffffffffffffffffffffffffffffffffffff1614611399576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611390906125d2565b60405180910390fd5b6113a36000611d9b565b565b6000600354905090565b600b5481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6113e6611d93565b73ffffffffffffffffffffffffffffffffffffffff166114046113b5565b73ffffffffffffffffffffffffffffffffffffffff161461145a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611451906125d2565b60405180910390fd5b6000811161149d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611494906128c6565b60405180910390fd5b806001819055507f150c688dd7595bf7862b8ab1fe46756450eb7d731037942b3bbc46f3f0e21b81816040516114d3919061217e565b60405180910390a150565b6114e6611d93565b73ffffffffffffffffffffffffffffffffffffffff166115046113b5565b73ffffffffffffffffffffffffffffffffffffffff161461155a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611551906125d2565b60405180910390fd5b6000811161159d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161159490612932565b60405180910390fd5b806003819055507f1946fb78c7ca778b54d82cabaac5ba67cf446f58d0ff1f8ceaebb6150e54e44f816040516115d3919061217e565b60405180910390a150565b60008111611621576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611618906123c3565b60405180910390fd5b80600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b815260040161167d91906122d1565b602060405180830381865afa15801561169a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116be9190612559565b116116fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116f5906126aa565b60405180910390fd5b6055600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206005015414611783576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161177a9061299e565b60405180910390fd5b61178b611ae1565b6117da333083600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611e5f909392919063ffffffff16565b61182f81600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154611ce190919063ffffffff16565b600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018190555061188a81600b54611ce190919063ffffffff16565b600b819055507f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d33826040516118c19291906124af565b60405180910390a150565b600080600a60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201541461191e576001611921565b60005b60ff169050919050565b611933611d93565b73ffffffffffffffffffffffffffffffffffffffff166119516113b5565b73ffffffffffffffffffffffffffffffffffffffff16146119a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161199e906125d2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611a17576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a0e90612a30565b60405180910390fd5b611a2081611d9b565b50565b6000600a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101549050919050565b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600501549050919050565b6000600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015490506000611bcd612710611bbf600354611bb1611ba26121c0611b94600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206004015443611cb590919063ffffffff16565b611ccb90919063ffffffff16565b87611cf790919063ffffffff16565b611cf790919063ffffffff16565b611ccb90919063ffffffff16565b9050611c2481600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154611ce190919063ffffffff16565b600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190555043600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600401819055505050565b60008183611cc39190612a7f565b905092915050565b60008183611cd99190612ab3565b905092915050565b60008183611cef9190612ae4565b905092915050565b60008183611d059190612b3a565b905092915050565b611d8e8363a9059cbb60e01b8484604051602401611d2c9291906124af565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611ee8565b505050565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b611ee2846323b872dd60e01b858585604051602401611e8093929190612b94565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611ee8565b50505050565b6000611f4a826040518060400160405280602081526020017f5361666542455032303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16611faf9092919063ffffffff16565b9050600081511115611faa5780806020019051810190611f6a9190612c03565b611fa9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611fa090612ca2565b60405180910390fd5b5b505050565b6060611fbe8484600085611fc7565b90509392505050565b60608247101561200c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161200390612d34565b60405180910390fd5b612015856120db565b612054576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161204b90612da0565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff16858760405161207d9190612e3a565b60006040518083038185875af1925050503d80600081146120ba576040519150601f19603f3d011682016040523d82523d6000602084013e6120bf565b606091505b50915091506120cf8282866120fe565b92505050949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6060831561210e5782905061215e565b6000835111156121215782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121559190612ea6565b60405180910390fd5b9392505050565b6000819050919050565b61217881612165565b82525050565b6000602082019050612193600083018461216f565b92915050565b600080fd5b6121a781612165565b81146121b257600080fd5b50565b6000813590506121c48161219e565b92915050565b6000602082840312156121e0576121df612199565b5b60006121ee848285016121b5565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000612222826121f7565b9050919050565b61223281612217565b811461223d57600080fd5b50565b60008135905061224f81612229565b92915050565b60006020828403121561226b5761226a612199565b5b600061227984828501612240565b91505092915050565b6000806040838503121561229957612298612199565b5b60006122a7858286016121b5565b92505060206122b8858286016121b5565b9150509250929050565b6122cb81612217565b82525050565b60006020820190506122e660008301846122c2565b92915050565b6000819050919050565b600061231161230c612307846121f7565b6122ec565b6121f7565b9050919050565b6000612323826122f6565b9050919050565b600061233582612318565b9050919050565b6123458161232a565b82525050565b6000602082019050612360600083018461233c565b92915050565b600082825260208201905092915050565b7f416d6f756e742073686f756c642062652067726561746572207468616e203000600082015250565b60006123ad601f83612366565b91506123b882612377565b602082019050919050565b600060208201905081810360008301526123dc816123a0565b9050919050565b7f496e76616c696420616d6f756e74000000000000000000000000000000000000600082015250565b6000612419600e83612366565b9150612424826123e3565b602082019050919050565b600060208201905081810360008301526124488161240c565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061248982612165565b915061249483612165565b9250826124a4576124a361244f565b5b828206905092915050565b60006040820190506124c460008301856122c2565b6124d1602083018461216f565b9392505050565b7f4e6f7468696e6720746f20636c61696d00000000000000000000000000000000600082015250565b600061250e601083612366565b9150612519826124d8565b602082019050919050565b6000602082019050818103600083015261253d81612501565b9050919050565b6000815190506125538161219e565b92915050565b60006020828403121561256f5761256e612199565b5b600061257d84828501612544565b91505092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006125bc602083612366565b91506125c782612586565b602082019050919050565b600060208201905081810360008301526125eb816125af565b9050919050565b7f43616e2774206265207a65726f00000000000000000000000000000000000000600082015250565b6000612628600d83612366565b9150612633826125f2565b602082019050919050565b600060208201905081810360008301526126578161261b565b9050919050565b7f496e73756666696369656e742100000000000000000000000000000000000000600082015250565b6000612694600d83612366565b915061269f8261265e565b602082019050919050565b600060208201905081810360008301526126c381612687565b9050919050565b7f416c726561647920737461727465640000000000000000000000000000000000600082015250565b6000612700600f83612366565b915061270b826126ca565b602082019050919050565b6000602082019050818103600083015261272f816126f3565b9050919050565b7f496e73756666696369656e740000000000000000000000000000000000000000600082015250565b600061276c600c83612366565b915061277782612736565b602082019050919050565b6000602082019050818103600083015261279b8161275f565b9050919050565b7f496e76616c6964204d6f64650000000000000000000000000000000000000000600082015250565b60006127d8600c83612366565b91506127e3826127a2565b602082019050919050565b60006020820190508181036000830152612807816127cb565b9050919050565b7f496e76616c6964204c6f636b7570204475726174696f6e000000000000000000600082015250565b6000612844601783612366565b915061284f8261280e565b602082019050919050565b6000602082019050818103600083015261287381612837565b9050919050565b7f496e76616c696420556e7374616b696e67204665652052617465000000000000600082015250565b60006128b0601a83612366565b91506128bb8261287a565b602082019050919050565b600060208201905081810360008301526128df816128a3565b9050919050565b7f496e76616c69642076616c756500000000000000000000000000000000000000600082015250565b600061291c600d83612366565b9150612927826128e6565b602082019050919050565b6000602082019050818103600083015261294b8161290f565b9050919050565b7f4572726f723a20696e76616c6964207374616b65720000000000000000000000600082015250565b6000612988601583612366565b915061299382612952565b602082019050919050565b600060208201905081810360008301526129b78161297b565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000612a1a602683612366565b9150612a25826129be565b604082019050919050565b60006020820190508181036000830152612a4981612a0d565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612a8a82612165565b9150612a9583612165565b925082821015612aa857612aa7612a50565b5b828203905092915050565b6000612abe82612165565b9150612ac983612165565b925082612ad957612ad861244f565b5b828204905092915050565b6000612aef82612165565b9150612afa83612165565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115612b2f57612b2e612a50565b5b828201905092915050565b6000612b4582612165565b9150612b5083612165565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615612b8957612b88612a50565b5b828202905092915050565b6000606082019050612ba960008301866122c2565b612bb660208301856122c2565b612bc3604083018461216f565b949350505050565b60008115159050919050565b612be081612bcb565b8114612beb57600080fd5b50565b600081519050612bfd81612bd7565b92915050565b600060208284031215612c1957612c18612199565b5b6000612c2784828501612bee565b91505092915050565b7f5361666542455032303a204245503230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b6000612c8c602a83612366565b9150612c9782612c30565b604082019050919050565b60006020820190508181036000830152612cbb81612c7f565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b6000612d1e602683612366565b9150612d2982612cc2565b604082019050919050565b60006020820190508181036000830152612d4d81612d11565b9050919050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b6000612d8a601d83612366565b9150612d9582612d54565b602082019050919050565b60006020820190508181036000830152612db981612d7d565b9050919050565b600081519050919050565b600081905092915050565b60005b83811015612df4578082015181840152602081019050612dd9565b83811115612e03576000848401525b50505050565b6000612e1482612dc0565b612e1e8185612dcb565b9350612e2e818560208601612dd6565b80840191505092915050565b6000612e468284612e09565b915081905092915050565b600081519050919050565b6000601f19601f8301169050919050565b6000612e7882612e51565b612e828185612366565b9350612e92818560208601612dd6565b612e9b81612e5c565b840191505092915050565b60006020820190508181036000830152612ec08184612e6d565b90509291505056fea26469706673582212204d039a1c5a4a325d703b8688b0371029b64eebcc5176d22c651867d62310f95f64736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x142 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7E1A3786 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xA694FC3A GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x317 JUMPI DUP1 PUSH4 0xAEDF562B EQ PUSH2 0x333 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x363 JUMPI DUP1 PUSH4 0xF9931855 EQ PUSH2 0x37F JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x3AF JUMPI DUP1 PUSH4 0xFE600F84 EQ PUSH2 0x3CD JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x7E1A3786 EQ PUSH2 0x285 JUMPI DUP1 PUSH4 0x817B1CD2 EQ PUSH2 0x2A3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2C1 JUMPI DUP1 PUSH4 0x91E07E7A EQ PUSH2 0x2DF JUMPI DUP1 PUSH4 0x9E447FC6 EQ PUSH2 0x2FB JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x4B77DD9E GT PUSH2 0x10A JUMPI DUP1 PUSH4 0x4B77DD9E EQ PUSH2 0x1D7 JUMPI DUP1 PUSH4 0x5715EC11 EQ PUSH2 0x1F3 JUMPI DUP1 PUSH4 0x5D2EC65D EQ PUSH2 0x211 JUMPI DUP1 PUSH4 0x645A8A56 EQ PUSH2 0x22F JUMPI DUP1 PUSH4 0x692642E7 EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x27B JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x917E776 EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0x4641257D EQ PUSH2 0x181 JUMPI DUP1 PUSH4 0x4A4FBEEC EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0x4B62B70B EQ PUSH2 0x1BB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14F PUSH2 0x3FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15C SWAP2 SWAP1 PUSH2 0x217E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17A SWAP2 SWAP1 PUSH2 0x21CA JUMP JUMPDEST PUSH2 0x407 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x189 PUSH2 0x7A4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0x2255 JUMP JUMPDEST PUSH2 0xAC5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0x217E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D0 SWAP2 SWAP1 PUSH2 0x21CA JUMP JUMPDEST PUSH2 0xC55 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EC SWAP2 SWAP1 PUSH2 0x2282 JUMP JUMPDEST PUSH2 0xD1E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1FB PUSH2 0x1165 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x208 SWAP2 SWAP1 PUSH2 0x217E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x219 PUSH2 0x1172 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x226 SWAP2 SWAP1 PUSH2 0x217E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x249 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x244 SWAP2 SWAP1 PUSH2 0x2255 JUMP JUMPDEST PUSH2 0x11BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x256 SWAP2 SWAP1 PUSH2 0x217E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x279 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x274 SWAP2 SWAP1 PUSH2 0x21CA JUMP JUMPDEST PUSH2 0x1208 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x283 PUSH2 0x131D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x28D PUSH2 0x13A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29A SWAP2 SWAP1 PUSH2 0x217E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AB PUSH2 0x13AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B8 SWAP2 SWAP1 PUSH2 0x217E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C9 PUSH2 0x13B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D6 SWAP2 SWAP1 PUSH2 0x22D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F4 SWAP2 SWAP1 PUSH2 0x21CA JUMP JUMPDEST PUSH2 0x13DE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x315 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x310 SWAP2 SWAP1 PUSH2 0x21CA JUMP JUMPDEST PUSH2 0x14DE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x331 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32C SWAP2 SWAP1 PUSH2 0x21CA JUMP JUMPDEST PUSH2 0x15DE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x34D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x348 SWAP2 SWAP1 PUSH2 0x2255 JUMP JUMPDEST PUSH2 0x18CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35A SWAP2 SWAP1 PUSH2 0x217E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x37D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x378 SWAP2 SWAP1 PUSH2 0x2255 JUMP JUMPDEST PUSH2 0x192B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x399 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x394 SWAP2 SWAP1 PUSH2 0x2255 JUMP JUMPDEST PUSH2 0x1A23 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A6 SWAP2 SWAP1 PUSH2 0x217E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B7 PUSH2 0x1A6F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C4 SWAP2 SWAP1 PUSH2 0x234B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E2 SWAP2 SWAP1 PUSH2 0x2255 JUMP JUMPDEST PUSH2 0x1A95 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F4 SWAP2 SWAP1 PUSH2 0x217E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0xB SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x44A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x441 SWAP1 PUSH2 0x23C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD DUP2 GT ISZERO PUSH2 0x4CF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C6 SWAP1 PUSH2 0x242F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4D7 PUSH2 0x1AE1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x0 PUSH2 0x548 PUSH3 0x15180 PUSH2 0x53A PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD TIMESTAMP PUSH2 0x1CB5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1CCB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x64 SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD EQ ISZERO PUSH2 0x5FB JUMPI PUSH2 0x5F3 PUSH1 0x5 SLOAD PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x1CE1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x619 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD DUP5 PUSH2 0x60B SWAP2 SWAP1 PUSH2 0x247E JUMP JUMPDEST EQ DUP1 ISZERO PUSH2 0x618 JUMPI POP PUSH1 0x0 DUP4 GT JUMPDEST JUMPDEST SWAP1 POP DUP1 PUSH2 0x626 JUMPI PUSH1 0x1 SLOAD SWAP2 POP JUMPDEST PUSH2 0x65F PUSH2 0x650 PUSH2 0x2710 PUSH2 0x642 DUP6 DUP9 PUSH2 0x1CF7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1CCB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 PUSH2 0x1CB5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP4 POP PUSH2 0x676 DUP5 PUSH1 0xB SLOAD PUSH2 0x1CB5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP PUSH2 0x6D1 DUP5 PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x1CB5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x764 CALLER DUP6 PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1D0D SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH32 0x884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364 CALLER DUP6 PUSH1 0x40 MLOAD PUSH2 0x795 SWAP3 SWAP2 SWAP1 PUSH2 0x24AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x7AC PUSH2 0x1AE1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x86D PUSH2 0x81C PUSH2 0x2710 PUSH2 0x80E PUSH1 0x4 SLOAD PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH2 0x1CF7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1CCB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH2 0x1CB5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x8B2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A9 SWAP1 PUSH2 0x2524 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x90D SWAP2 SWAP1 PUSH2 0x22D1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x92A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x94E SWAP2 SWAP1 PUSH2 0x2559 JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x9F4 JUMPI PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9B0 SWAP2 SWAP1 PUSH2 0x22D1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9CD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9F1 SWAP2 SWAP1 PUSH2 0x2559 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0xA41 CALLER DUP3 PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1D0D SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH32 0xC9695243A805ADB74C91F28311176C65B417E842D5699893CEF56D18BFA48CBA CALLER DUP3 PUSH1 0x40 MLOAD PUSH2 0xABA SWAP3 SWAP2 SWAP1 PUSH2 0x24AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x55 PUSH1 0xA PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD EQ PUSH2 0xB1A JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0xC50 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD EQ PUSH2 0xBE2 JUMPI PUSH1 0x0 PUSH3 0x93A80 PUSH2 0xBBF PUSH1 0xA PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD TIMESTAMP PUSH2 0x1CB5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xBC9 SWAP2 SWAP1 PUSH2 0x247E JUMP JUMPDEST EQ PUSH2 0xBD5 JUMPI PUSH1 0x1 PUSH2 0xBD8 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH2 0xC50 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0xC3A PUSH1 0xA PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD TIMESTAMP PUSH2 0x1CB5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST LT ISZERO PUSH2 0xC47 JUMPI PUSH1 0x1 PUSH2 0xC4A JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0xFF AND SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC5D PUSH2 0x1D93 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC7B PUSH2 0x13B5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCD1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCC8 SWAP1 PUSH2 0x25D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xD14 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD0B SWAP1 PUSH2 0x263E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0xD61 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD58 SWAP1 PUSH2 0x23C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDBD SWAP2 SWAP1 PUSH2 0x22D1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDDA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDFE SWAP2 SWAP1 PUSH2 0x2559 JUMP JUMPDEST GT PUSH2 0xE3E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE35 SWAP1 PUSH2 0x26AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x55 PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD EQ ISZERO PUSH2 0xEC4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEBB SWAP1 PUSH2 0x2716 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0xEDF JUMPI PUSH1 0x0 DUP3 GT PUSH2 0xEDA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x101F JUMP JUMPDEST PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0xF32 JUMPI PUSH1 0x8 SLOAD DUP3 LT ISZERO PUSH2 0xF2D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF24 SWAP1 PUSH2 0x2782 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x101E JUMP JUMPDEST PUSH1 0x2 DUP2 EQ ISZERO PUSH2 0xF85 JUMPI PUSH1 0x7 SLOAD DUP3 LT ISZERO PUSH2 0xF80 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF77 SWAP1 PUSH2 0x2782 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x101D JUMP JUMPDEST PUSH1 0x3 DUP2 EQ ISZERO PUSH2 0xFD8 JUMPI PUSH1 0x6 SLOAD DUP3 LT ISZERO PUSH2 0xFD3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFCA SWAP1 PUSH2 0x2782 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x101C JUMP JUMPDEST PUSH1 0x0 DUP3 LT PUSH2 0x101B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1012 SWAP1 PUSH2 0x27EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST JUMPDEST JUMPDEST JUMPDEST DUP1 PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x55 PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x9 CALLER SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x1161 DUP3 PUSH2 0x15DE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1210 PUSH2 0x1D93 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x122E PUSH2 0x13B5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1284 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x127B SWAP1 PUSH2 0x25D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x12C7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12BE SWAP1 PUSH2 0x285A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12DD PUSH3 0x15180 DUP3 PUSH2 0x1CF7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH32 0x189BDA9782663C67A3F95C0AA5455924C711210B00281C60EAD2F0DD8DBC924C DUP2 PUSH1 0x40 MLOAD PUSH2 0x1312 SWAP2 SWAP1 PUSH2 0x217E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x1325 PUSH2 0x1D93 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1343 PUSH2 0x13B5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1399 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1390 SWAP1 PUSH2 0x25D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13A3 PUSH1 0x0 PUSH2 0x1D9B JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x13E6 PUSH2 0x1D93 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1404 PUSH2 0x13B5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x145A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1451 SWAP1 PUSH2 0x25D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x149D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1494 SWAP1 PUSH2 0x28C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH32 0x150C688DD7595BF7862B8AB1FE46756450EB7D731037942B3BBC46F3F0E21B81 DUP2 PUSH1 0x40 MLOAD PUSH2 0x14D3 SWAP2 SWAP1 PUSH2 0x217E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x14E6 PUSH2 0x1D93 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1504 PUSH2 0x13B5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x155A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1551 SWAP1 PUSH2 0x25D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x159D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1594 SWAP1 PUSH2 0x2932 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH32 0x1946FB78C7CA778B54D82CABAAC5BA67CF446F58D0FF1F8CEAEBB6150E54E44F DUP2 PUSH1 0x40 MLOAD PUSH2 0x15D3 SWAP2 SWAP1 PUSH2 0x217E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x1621 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1618 SWAP1 PUSH2 0x23C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x167D SWAP2 SWAP1 PUSH2 0x22D1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x169A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x16BE SWAP2 SWAP1 PUSH2 0x2559 JUMP JUMPDEST GT PUSH2 0x16FE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16F5 SWAP1 PUSH2 0x26AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x55 PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD EQ PUSH2 0x1783 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x177A SWAP1 PUSH2 0x299E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x178B PUSH2 0x1AE1 JUMP JUMPDEST PUSH2 0x17DA CALLER ADDRESS DUP4 PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1E5F SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x182F DUP2 PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x1CE1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x188A DUP2 PUSH1 0xB SLOAD PUSH2 0x1CE1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D CALLER DUP3 PUSH1 0x40 MLOAD PUSH2 0x18C1 SWAP3 SWAP2 SWAP1 PUSH2 0x24AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xA PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD EQ PUSH2 0x191E JUMPI PUSH1 0x1 PUSH2 0x1921 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1933 PUSH2 0x1D93 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1951 PUSH2 0x13B5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x19A7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x199E SWAP1 PUSH2 0x25D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1A17 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A0E SWAP1 PUSH2 0x2A30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A20 DUP2 PUSH2 0x1D9B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP PUSH1 0x0 PUSH2 0x1BCD PUSH2 0x2710 PUSH2 0x1BBF PUSH1 0x3 SLOAD PUSH2 0x1BB1 PUSH2 0x1BA2 PUSH2 0x21C0 PUSH2 0x1B94 PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD SLOAD NUMBER PUSH2 0x1CB5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1CCB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP8 PUSH2 0x1CF7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1CF7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1CCB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x1C24 DUP2 PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH2 0x1CE1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP NUMBER PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1CC3 SWAP2 SWAP1 PUSH2 0x2A7F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1CD9 SWAP2 SWAP1 PUSH2 0x2AB3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1CEF SWAP2 SWAP1 PUSH2 0x2AE4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1D05 SWAP2 SWAP1 PUSH2 0x2B3A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D8E DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1D2C SWAP3 SWAP2 SWAP1 PUSH2 0x24AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1EE8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1EE2 DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1E80 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2B94 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1EE8 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F4A DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666542455032303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1FAF SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x1FAA JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1F6A SWAP2 SWAP1 PUSH2 0x2C03 JUMP JUMPDEST PUSH2 0x1FA9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FA0 SWAP1 PUSH2 0x2CA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1FBE DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x1FC7 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x200C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2003 SWAP1 PUSH2 0x2D34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2015 DUP6 PUSH2 0x20DB JUMP JUMPDEST PUSH2 0x2054 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x204B SWAP1 PUSH2 0x2DA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x207D SWAP2 SWAP1 PUSH2 0x2E3A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x20BA JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x20BF JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x20CF DUP3 DUP3 DUP7 PUSH2 0x20FE JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x210E JUMPI DUP3 SWAP1 POP PUSH2 0x215E JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0x2121 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2155 SWAP2 SWAP1 PUSH2 0x2EA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2178 DUP2 PUSH2 0x2165 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2193 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x216F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x21A7 DUP2 PUSH2 0x2165 JUMP JUMPDEST DUP2 EQ PUSH2 0x21B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x21C4 DUP2 PUSH2 0x219E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21E0 JUMPI PUSH2 0x21DF PUSH2 0x2199 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x21EE DUP5 DUP3 DUP6 ADD PUSH2 0x21B5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2222 DUP3 PUSH2 0x21F7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2232 DUP2 PUSH2 0x2217 JUMP JUMPDEST DUP2 EQ PUSH2 0x223D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x224F DUP2 PUSH2 0x2229 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x226B JUMPI PUSH2 0x226A PUSH2 0x2199 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2279 DUP5 DUP3 DUP6 ADD PUSH2 0x2240 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2299 JUMPI PUSH2 0x2298 PUSH2 0x2199 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x22A7 DUP6 DUP3 DUP7 ADD PUSH2 0x21B5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x22B8 DUP6 DUP3 DUP7 ADD PUSH2 0x21B5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x22CB DUP2 PUSH2 0x2217 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x22E6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x22C2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2311 PUSH2 0x230C PUSH2 0x2307 DUP5 PUSH2 0x21F7 JUMP JUMPDEST PUSH2 0x22EC JUMP JUMPDEST PUSH2 0x21F7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2323 DUP3 PUSH2 0x22F6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2335 DUP3 PUSH2 0x2318 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2345 DUP2 PUSH2 0x232A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2360 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x233C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416D6F756E742073686F756C642062652067726561746572207468616E203000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23AD PUSH1 0x1F DUP4 PUSH2 0x2366 JUMP JUMPDEST SWAP2 POP PUSH2 0x23B8 DUP3 PUSH2 0x2377 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x23DC DUP2 PUSH2 0x23A0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420616D6F756E74000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2419 PUSH1 0xE DUP4 PUSH2 0x2366 JUMP JUMPDEST SWAP2 POP PUSH2 0x2424 DUP3 PUSH2 0x23E3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2448 DUP2 PUSH2 0x240C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2489 DUP3 PUSH2 0x2165 JUMP JUMPDEST SWAP2 POP PUSH2 0x2494 DUP4 PUSH2 0x2165 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x24A4 JUMPI PUSH2 0x24A3 PUSH2 0x244F JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x24C4 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x22C2 JUMP JUMPDEST PUSH2 0x24D1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x216F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E6F7468696E6720746F20636C61696D00000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x250E PUSH1 0x10 DUP4 PUSH2 0x2366 JUMP JUMPDEST SWAP2 POP PUSH2 0x2519 DUP3 PUSH2 0x24D8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x253D DUP2 PUSH2 0x2501 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2553 DUP2 PUSH2 0x219E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x256F JUMPI PUSH2 0x256E PUSH2 0x2199 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x257D DUP5 DUP3 DUP6 ADD PUSH2 0x2544 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25BC PUSH1 0x20 DUP4 PUSH2 0x2366 JUMP JUMPDEST SWAP2 POP PUSH2 0x25C7 DUP3 PUSH2 0x2586 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x25EB DUP2 PUSH2 0x25AF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E2774206265207A65726F00000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2628 PUSH1 0xD DUP4 PUSH2 0x2366 JUMP JUMPDEST SWAP2 POP PUSH2 0x2633 DUP3 PUSH2 0x25F2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2657 DUP2 PUSH2 0x261B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742100000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2694 PUSH1 0xD DUP4 PUSH2 0x2366 JUMP JUMPDEST SWAP2 POP PUSH2 0x269F DUP3 PUSH2 0x265E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x26C3 DUP2 PUSH2 0x2687 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416C726561647920737461727465640000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2700 PUSH1 0xF DUP4 PUSH2 0x2366 JUMP JUMPDEST SWAP2 POP PUSH2 0x270B DUP3 PUSH2 0x26CA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x272F DUP2 PUSH2 0x26F3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E740000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x276C PUSH1 0xC DUP4 PUSH2 0x2366 JUMP JUMPDEST SWAP2 POP PUSH2 0x2777 DUP3 PUSH2 0x2736 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x279B DUP2 PUSH2 0x275F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C6964204D6F64650000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27D8 PUSH1 0xC DUP4 PUSH2 0x2366 JUMP JUMPDEST SWAP2 POP PUSH2 0x27E3 DUP3 PUSH2 0x27A2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2807 DUP2 PUSH2 0x27CB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C6964204C6F636B7570204475726174696F6E000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2844 PUSH1 0x17 DUP4 PUSH2 0x2366 JUMP JUMPDEST SWAP2 POP PUSH2 0x284F DUP3 PUSH2 0x280E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2873 DUP2 PUSH2 0x2837 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420556E7374616B696E67204665652052617465000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28B0 PUSH1 0x1A DUP4 PUSH2 0x2366 JUMP JUMPDEST SWAP2 POP PUSH2 0x28BB DUP3 PUSH2 0x287A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x28DF DUP2 PUSH2 0x28A3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C69642076616C756500000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x291C PUSH1 0xD DUP4 PUSH2 0x2366 JUMP JUMPDEST SWAP2 POP PUSH2 0x2927 DUP3 PUSH2 0x28E6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x294B DUP2 PUSH2 0x290F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4572726F723A20696E76616C6964207374616B65720000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2988 PUSH1 0x15 DUP4 PUSH2 0x2366 JUMP JUMPDEST SWAP2 POP PUSH2 0x2993 DUP3 PUSH2 0x2952 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x29B7 DUP2 PUSH2 0x297B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A1A PUSH1 0x26 DUP4 PUSH2 0x2366 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A25 DUP3 PUSH2 0x29BE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2A49 DUP2 PUSH2 0x2A0D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2A8A DUP3 PUSH2 0x2165 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A95 DUP4 PUSH2 0x2165 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x2AA8 JUMPI PUSH2 0x2AA7 PUSH2 0x2A50 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2ABE DUP3 PUSH2 0x2165 JUMP JUMPDEST SWAP2 POP PUSH2 0x2AC9 DUP4 PUSH2 0x2165 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2AD9 JUMPI PUSH2 0x2AD8 PUSH2 0x244F JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AEF DUP3 PUSH2 0x2165 JUMP JUMPDEST SWAP2 POP PUSH2 0x2AFA DUP4 PUSH2 0x2165 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x2B2F JUMPI PUSH2 0x2B2E PUSH2 0x2A50 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B45 DUP3 PUSH2 0x2165 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B50 DUP4 PUSH2 0x2165 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2B89 JUMPI PUSH2 0x2B88 PUSH2 0x2A50 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2BA9 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x22C2 JUMP JUMPDEST PUSH2 0x2BB6 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x22C2 JUMP JUMPDEST PUSH2 0x2BC3 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x216F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2BE0 DUP2 PUSH2 0x2BCB JUMP JUMPDEST DUP2 EQ PUSH2 0x2BEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2BFD DUP2 PUSH2 0x2BD7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2C19 JUMPI PUSH2 0x2C18 PUSH2 0x2199 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2C27 DUP5 DUP3 DUP6 ADD PUSH2 0x2BEE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5361666542455032303A204245503230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C8C PUSH1 0x2A DUP4 PUSH2 0x2366 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C97 DUP3 PUSH2 0x2C30 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2CBB DUP2 PUSH2 0x2C7F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D1E PUSH1 0x26 DUP4 PUSH2 0x2366 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D29 DUP3 PUSH2 0x2CC2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2D4D DUP2 PUSH2 0x2D11 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D8A PUSH1 0x1D DUP4 PUSH2 0x2366 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D95 DUP3 PUSH2 0x2D54 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2DB9 DUP2 PUSH2 0x2D7D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2DF4 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2DD9 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x2E03 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E14 DUP3 PUSH2 0x2DC0 JUMP JUMPDEST PUSH2 0x2E1E DUP2 DUP6 PUSH2 0x2DCB JUMP JUMPDEST SWAP4 POP PUSH2 0x2E2E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2DD6 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E46 DUP3 DUP5 PUSH2 0x2E09 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E78 DUP3 PUSH2 0x2E51 JUMP JUMPDEST PUSH2 0x2E82 DUP2 DUP6 PUSH2 0x2366 JUMP JUMPDEST SWAP4 POP PUSH2 0x2E92 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2DD6 JUMP JUMPDEST PUSH2 0x2E9B DUP2 PUSH2 0x2E5C JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2EC0 DUP2 DUP5 PUSH2 0x2E6D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4D SUB SWAP11 SHR GAS 0x4A ORIGIN 0x5D PUSH17 0x3B8688B0371029B64EEBCC5176D22C6518 PUSH8 0xD62310F95F64736F PUSH13 0x634300080A0033000000000000 ",
							"sourceMap": "260:8276:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4283:95;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5617:1123;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7958:575;;;:::i;:::-;;4771:402;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7525:170;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2746:879;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4386:103;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7758:159;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5333:135;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6987:248;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1668:101:0;;;:::i;:::-;;5476:94:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1173:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1036:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7243:274:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6752:227;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3693:582;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4497:134;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1918:198:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5185:136:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1206:19;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4639:124;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4283:95;4330:7;4359:11;;4352:18;;4283:95;:::o;5617:1123::-;5697:1;5688:6;:10;5680:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;5763:7;:19;5771:10;5763:19;;;;;;;;;;;;;;;:32;;;5753:6;:42;;5745:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;5827:14;:12;:14::i;:::-;5852:27;5882:6;5852:36;;5899:14;5916:67;5976:6;5916:55;5936:7;:19;5944:10;5936:19;;;;;;;;;;;;;;;:34;;;5916:15;:19;;:55;;;;:::i;:::-;:59;;:67;;;;:::i;:::-;5899:84;;5994:11;6008:3;5994:17;;6022:21;6074:1;6046:7;:19;6054:10;6046:19;;;;;;;;;;;;;;;:24;;;:29;;:160;;6153:53;6192:13;;6153:7;:19;6161:10;6153:19;;;;;;;;;;;;;;;:34;;;:38;;:53;;;;:::i;:::-;6134:15;:72;;6046:160;;;6103:1;6087:12;;6078:6;:21;;;;:::i;:::-;:26;:40;;;;;6117:1;6108:6;:10;6078:40;6046:160;6022:184;;6222:16;6217:73;;6261:17;;6255:23;;6217:73;6322:62;6346:37;6379:3;6346:28;6370:3;6346:19;:23;;:28;;;;:::i;:::-;:32;;:37;;;;:::i;:::-;6322:19;:23;;:62;;;;:::i;:::-;6300:84;;6409:36;6425:19;6409:11;;:15;;:36;;;;:::i;:::-;6395:11;:50;;;;6491:57;6528:19;6491:7;:19;6499:10;6491:19;;;;;;;;;;;;;;;:32;;;:36;;:57;;;;:::i;:::-;6456:7;:19;6464:10;6456:19;;;;;;;;;;;;;;;:32;;:92;;;;6559:51;6578:10;6590:19;6559:5;;;;;;;;;;;:18;;;;:51;;;;;:::i;:::-;6628:41;6637:10;6649:19;6628:41;;;;;;;:::i;:::-;;;;;;;;5659:1081;;;;5617:1123;:::o;7958:575::-;8004:14;:12;:14::i;:::-;8029:21;8053:113;8097:68;8161:3;8097:59;8141:14;;8097:7;:19;8105:10;8097:19;;;;;;;;;;;;;;;:39;;;:43;;:59;;;;:::i;:::-;:63;;:68;;;;:::i;:::-;8053:7;:19;8061:10;8053:19;;;;;;;;;;;;;;;:39;;;:43;;:113;;;;:::i;:::-;8029:137;;8211:1;8195:13;:17;8187:46;;;;;;;;;;;;:::i;:::-;;;;;;;;;8264:5;;;;;;;;;;;:15;;;8288:4;8264:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8248:13;:46;8244:111;;;8325:5;;;;;;;;;;;:15;;;8349:4;8325:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8309:46;;8244:111;8366:45;8385:10;8397:13;8366:5;;;;;;;;;;;:18;;;;:45;;;;;:::i;:::-;8464:1;8422:7;:19;8430:10;8422:19;;;;;;;;;;;;;;;:39;;:43;;;;8491:34;8499:10;8511:13;8491:34;;;;;;;:::i;:::-;;;;;;;;7983:550;7958:575::o;4771:402::-;4828:7;4882:4;4854:7;:17;4862:8;4854:17;;;;;;;;;;;;;;;:24;;;:32;4850:59;;4908:1;4901:8;;;;4850:59;4950:1;4924:7;:17;4932:8;4924:17;;;;;;;;;;;;;;;:22;;;:27;4920:245;;5041:1;5030:6;4973:53;4993:7;:17;5001:8;4993:17;;;;;;;;;;;;;;;:32;;;4973:15;:19;;:53;;;;:::i;:::-;:64;;;;:::i;:::-;:69;:77;;5049:1;4973:77;;;5045:1;4973:77;4966:84;;;;;;4920:245;5144:13;;5087:53;5107:7;:17;5115:8;5107:17;;;;;;;;;;;;;;;:32;;;5087:15;:19;;:53;;;;:::i;:::-;:70;;:78;;5164:1;5087:78;;;5160:1;5087:78;5080:85;;;;4771:402;;;;:::o;7525:170::-;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;7621:1:7::1;7608:10;:14;7600:40;;;;;;;;;;;;:::i;:::-;;;;;;;;;7677:10;7661:13;:26;;;;7525:170:::0;:::o;2746:879::-;2848:1;2838:7;:11;2830:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;2934:7;2904:5;;;;;;;;;;;:15;;;2920:10;2904:27;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:37;2896:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;3008:4;2978:7;:19;2986:10;2978:19;;;;;;;;;;;;;;;:26;;;:34;;2970:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;3066:1;3057:5;:10;3053:343;;;3087:1;3077:7;:11;3069:20;;;;;;3053:343;;;3118:1;3109:5;:10;3105:291;;;3140:17;;3129:7;:28;;3121:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;3105:291;;;3203:1;3194:5;:10;3190:206;;;3225:17;;3214:7;:28;;3206:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;3190:206;;;3288:1;3279:5;:10;3275:121;;;3310:17;;3299:7;:28;;3291:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;3275:121;;;3378:1;3368:7;:11;3360:36;;;;;;;;;;;;:::i;:::-;;;;;;;;;3275:121;3190:206;3105:291;3053:343;3444:5;3417:7;:19;3425:10;3417:19;;;;;;;;;;;;;;;:24;;:32;;;;3497:15;3460:7;:19;3468:10;3460:19;;;;;;;;;;;;;;;:34;;:52;;;;3552:4;3523:7;:19;3531:10;3523:19;;;;;;;;;;;;;;;:26;;:33;;;;3567:8;3581:10;3567:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3603:14;3609:7;3603:5;:14::i;:::-;2746:879;;:::o;4386:103::-;4437:7;4466:8;:15;;;;4459:22;;4386:103;:::o;7758:159::-;7806:7;7870;:19;7878:10;7870:19;;;;;;;;;;;;;;;:39;;;7863:46;;7758:159;:::o;5333:135::-;5394:7;5423;:17;5431:8;5423:17;;;;;;;;;;;;;;;:37;;;5416:44;;5333:135;;;:::o;6987:248::-;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;7098:1:7::1;7082:13;:17;7074:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;7155:25;7173:6;7155:13;:17;;:25;;;;:::i;:::-;7140:12;:40;;;;7198:29;7213:13;7198:29;;;;;;:::i;:::-;;;;;;;;6987:248:::0;:::o;1668:101:0:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;5476:94:7:-;5522:7;5551:11;;5544:18;;5476:94;:::o;1173:26::-;;;;:::o;1036:85:0:-;1082:7;1108:6;;;;;;;;;;;1101:13;;1036:85;:::o;7243:274:7:-;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;7369:1:7::1;7348:18;:22;7340:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;7434:18;7414:17;:38;;;;7470:39;7490:18;7470:39;;;;;;:::i;:::-;;;;;;;;7243:274:::0;:::o;6752:227::-;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;6860:1:7::1;6845:12;:16;6837:42;;;;;;;;;;;;:::i;:::-;;;;;;;;;6914:12;6900:11;:26;;;;6944:27;6958:12;6944:27;;;;;;:::i;:::-;;;;;;;;6752:227:::0;:::o;3693:582::-;3770:1;3760:7;:11;3752:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;3856:7;3826:5;;;;;;;;;;;:15;;;3842:10;3826:27;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:37;3818:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;3930:4;3900:7;:19;3908:10;3900:19;;;;;;;;;;;;;;;:26;;;:34;3892:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;3981:14;:12;:14::i;:::-;4016:58;4039:10;4059:4;4066:7;4016:5;;;;;;;;;;;:22;;;;:58;;;;;;:::i;:::-;4120:45;4157:7;4120;:19;4128:10;4120:19;;;;;;;;;;;;;;;:32;;;:36;;:45;;;;:::i;:::-;4085:7;:19;4093:10;4085:19;;;;;;;;;;;;;;;:32;;:80;;;;4190:24;4206:7;4190:11;;:15;;:24;;;;:::i;:::-;4176:11;:38;;;;4240:27;4247:10;4259:7;4240:27;;;;;;;:::i;:::-;;;;;;;;3693:582;:::o;4497:134::-;4559:7;4614:1;4588:7;:17;4596:8;4588:17;;;;;;;;;;;;;;;:22;;;:27;:35;;4622:1;4588:35;;;4618:1;4588:35;4581:42;;;;4497:134;;;:::o;1918:198:0:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2026:1:::1;2006:22;;:8;:22;;;;1998:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;5185:136:7:-;5246:7;5283;:17;5291:8;5283:17;;;;;;;;;;;;;;;:30;;;5276:37;;5185:136;;;:::o;1206:19::-;;;;;;;;;;;;;:::o;4639:124::-;4702:7;4731;:17;4739:8;4731:17;;;;;;;;;;;;;;;:24;;;4724:31;;4639:124;;;:::o;2277:457::-;2329:26;2358:7;:19;2366:10;2358:19;;;;;;;;;;;;;;;:32;;;2329:61;;2411:17;2431:120;2547:3;2431:111;2530:11;;2431:94;2454:70;2519:4;2454:60;2471:7;:19;2479:10;2471:19;;;;;;;;;;;;;;;:42;;;2454:12;:16;;:60;;;;:::i;:::-;:64;;:70;;;;:::i;:::-;2431:18;:22;;:94;;;;:::i;:::-;:98;;:111;;;;:::i;:::-;:115;;:120;;;;:::i;:::-;2411:140;;2604:54;2648:9;2604:7;:19;2612:10;2604:19;;;;;;;;;;;;;;;:39;;;:43;;:54;;;;:::i;:::-;2562:7;:19;2570:10;2562:19;;;;;;;;;;;;;;;:39;;:96;;;;2714:12;2669:7;:19;2677:10;2669:19;;;;;;;;;;;;;;;:42;;:57;;;;2308:426;;2277:457::o;3108:96:4:-;3166:7;3196:1;3192;:5;;;;:::i;:::-;3185:12;;3108:96;;;;:::o;3836:::-;3894:7;3924:1;3920;:5;;;;:::i;:::-;3913:12;;3836:96;;;;:::o;2741:::-;2799:7;2829:1;2825;:5;;;;:::i;:::-;2818:12;;2741:96;;;;:::o;3451:::-;3509:7;3539:1;3535;:5;;;;:::i;:::-;3528:12;;3451:96;;;;:::o;290:177:6:-;373:86;393:5;423:23;;;448:2;452:5;400:58;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;373:19;:86::i;:::-;290:177;;;:::o;640:96:3:-;693:7;719:10;712:17;;640:96;:::o;2270:187:0:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;475:205:6:-;576:96;596:5;626:27;;;655:4;661:2;665:5;603:68;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;576:19;:96::i;:::-;475:205;;;;:::o;2599:769::-;3031:23;3057:69;3085:4;3057:69;;;;;;;;;;;;;;;;;3065:5;3057:27;;;;:69;;;;;:::i;:::-;3031:95;;3161:1;3141:10;:17;:21;3137:224;;;3283:10;3272:30;;;;;;;;;;;;:::i;:::-;3264:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;3137:224;2669:699;2599:769;;:::o;3861:223:2:-;3994:12;4025:52;4047:6;4055:4;4061:1;4064:12;4025:21;:52::i;:::-;4018:59;;3861:223;;;;;:::o;4948:499::-;5113:12;5170:5;5145:21;:30;;5137:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;5236:18;5247:6;5236:10;:18::i;:::-;5228:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;5300:12;5314:23;5341:6;:11;;5360:5;5367:4;5341:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5299:73;;;;5389:51;5406:7;5415:10;5427:12;5389:16;:51::i;:::-;5382:58;;;;4948:499;;;;;;:::o;1175:320::-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;7561:692::-;7707:12;7735:7;7731:516;;;7765:10;7758:17;;;;7731:516;7896:1;7876:10;:17;:21;7872:365;;;8070:10;8064:17;8130:15;8117:10;8113:2;8109:19;8102:44;7872:365;8209:12;8202:20;;;;;;;;;;;:::i;:::-;;;;;;;;7561:692;;;;;;:::o;7:77:8:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;523:117::-;632:1;629;622:12;769:122;842:24;860:5;842:24;:::i;:::-;835:5;832:35;822:63;;881:1;878;871:12;822:63;769:122;:::o;897:139::-;943:5;981:6;968:20;959:29;;997:33;1024:5;997:33;:::i;:::-;897:139;;;;:::o;1042:329::-;1101:6;1150:2;1138:9;1129:7;1125:23;1121:32;1118:119;;;1156:79;;:::i;:::-;1118:119;1276:1;1301:53;1346:7;1337:6;1326:9;1322:22;1301:53;:::i;:::-;1291:63;;1247:117;1042:329;;;;:::o;1377:126::-;1414:7;1454:42;1447:5;1443:54;1432:65;;1377:126;;;:::o;1509:96::-;1546:7;1575:24;1593:5;1575:24;:::i;:::-;1564:35;;1509:96;;;:::o;1611:122::-;1684:24;1702:5;1684:24;:::i;:::-;1677:5;1674:35;1664:63;;1723:1;1720;1713:12;1664:63;1611:122;:::o;1739:139::-;1785:5;1823:6;1810:20;1801:29;;1839:33;1866:5;1839:33;:::i;:::-;1739:139;;;;:::o;1884:329::-;1943:6;1992:2;1980:9;1971:7;1967:23;1963:32;1960:119;;;1998:79;;:::i;:::-;1960:119;2118:1;2143:53;2188:7;2179:6;2168:9;2164:22;2143:53;:::i;:::-;2133:63;;2089:117;1884:329;;;;:::o;2219:474::-;2287:6;2295;2344:2;2332:9;2323:7;2319:23;2315:32;2312:119;;;2350:79;;:::i;:::-;2312:119;2470:1;2495:53;2540:7;2531:6;2520:9;2516:22;2495:53;:::i;:::-;2485:63;;2441:117;2597:2;2623:53;2668:7;2659:6;2648:9;2644:22;2623:53;:::i;:::-;2613:63;;2568:118;2219:474;;;;;:::o;2699:118::-;2786:24;2804:5;2786:24;:::i;:::-;2781:3;2774:37;2699:118;;:::o;2823:222::-;2916:4;2954:2;2943:9;2939:18;2931:26;;2967:71;3035:1;3024:9;3020:17;3011:6;2967:71;:::i;:::-;2823:222;;;;:::o;3051:60::-;3079:3;3100:5;3093:12;;3051:60;;;:::o;3117:142::-;3167:9;3200:53;3218:34;3227:24;3245:5;3227:24;:::i;:::-;3218:34;:::i;:::-;3200:53;:::i;:::-;3187:66;;3117:142;;;:::o;3265:126::-;3315:9;3348:37;3379:5;3348:37;:::i;:::-;3335:50;;3265:126;;;:::o;3397:140::-;3461:9;3494:37;3525:5;3494:37;:::i;:::-;3481:50;;3397:140;;;:::o;3543:159::-;3644:51;3689:5;3644:51;:::i;:::-;3639:3;3632:64;3543:159;;:::o;3708:250::-;3815:4;3853:2;3842:9;3838:18;3830:26;;3866:85;3948:1;3937:9;3933:17;3924:6;3866:85;:::i;:::-;3708:250;;;;:::o;3964:169::-;4048:11;4082:6;4077:3;4070:19;4122:4;4117:3;4113:14;4098:29;;3964:169;;;;:::o;4139:181::-;4279:33;4275:1;4267:6;4263:14;4256:57;4139:181;:::o;4326:366::-;4468:3;4489:67;4553:2;4548:3;4489:67;:::i;:::-;4482:74;;4565:93;4654:3;4565:93;:::i;:::-;4683:2;4678:3;4674:12;4667:19;;4326:366;;;:::o;4698:419::-;4864:4;4902:2;4891:9;4887:18;4879:26;;4951:9;4945:4;4941:20;4937:1;4926:9;4922:17;4915:47;4979:131;5105:4;4979:131;:::i;:::-;4971:139;;4698:419;;;:::o;5123:164::-;5263:16;5259:1;5251:6;5247:14;5240:40;5123:164;:::o;5293:366::-;5435:3;5456:67;5520:2;5515:3;5456:67;:::i;:::-;5449:74;;5532:93;5621:3;5532:93;:::i;:::-;5650:2;5645:3;5641:12;5634:19;;5293:366;;;:::o;5665:419::-;5831:4;5869:2;5858:9;5854:18;5846:26;;5918:9;5912:4;5908:20;5904:1;5893:9;5889:17;5882:47;5946:131;6072:4;5946:131;:::i;:::-;5938:139;;5665:419;;;:::o;6090:180::-;6138:77;6135:1;6128:88;6235:4;6232:1;6225:15;6259:4;6256:1;6249:15;6276:176;6308:1;6325:20;6343:1;6325:20;:::i;:::-;6320:25;;6359:20;6377:1;6359:20;:::i;:::-;6354:25;;6398:1;6388:35;;6403:18;;:::i;:::-;6388:35;6444:1;6441;6437:9;6432:14;;6276:176;;;;:::o;6458:332::-;6579:4;6617:2;6606:9;6602:18;6594:26;;6630:71;6698:1;6687:9;6683:17;6674:6;6630:71;:::i;:::-;6711:72;6779:2;6768:9;6764:18;6755:6;6711:72;:::i;:::-;6458:332;;;;;:::o;6796:166::-;6936:18;6932:1;6924:6;6920:14;6913:42;6796:166;:::o;6968:366::-;7110:3;7131:67;7195:2;7190:3;7131:67;:::i;:::-;7124:74;;7207:93;7296:3;7207:93;:::i;:::-;7325:2;7320:3;7316:12;7309:19;;6968:366;;;:::o;7340:419::-;7506:4;7544:2;7533:9;7529:18;7521:26;;7593:9;7587:4;7583:20;7579:1;7568:9;7564:17;7557:47;7621:131;7747:4;7621:131;:::i;:::-;7613:139;;7340:419;;;:::o;7765:143::-;7822:5;7853:6;7847:13;7838:22;;7869:33;7896:5;7869:33;:::i;:::-;7765:143;;;;:::o;7914:351::-;7984:6;8033:2;8021:9;8012:7;8008:23;8004:32;8001:119;;;8039:79;;:::i;:::-;8001:119;8159:1;8184:64;8240:7;8231:6;8220:9;8216:22;8184:64;:::i;:::-;8174:74;;8130:128;7914:351;;;;:::o;8271:182::-;8411:34;8407:1;8399:6;8395:14;8388:58;8271:182;:::o;8459:366::-;8601:3;8622:67;8686:2;8681:3;8622:67;:::i;:::-;8615:74;;8698:93;8787:3;8698:93;:::i;:::-;8816:2;8811:3;8807:12;8800:19;;8459:366;;;:::o;8831:419::-;8997:4;9035:2;9024:9;9020:18;9012:26;;9084:9;9078:4;9074:20;9070:1;9059:9;9055:17;9048:47;9112:131;9238:4;9112:131;:::i;:::-;9104:139;;8831:419;;;:::o;9256:163::-;9396:15;9392:1;9384:6;9380:14;9373:39;9256:163;:::o;9425:366::-;9567:3;9588:67;9652:2;9647:3;9588:67;:::i;:::-;9581:74;;9664:93;9753:3;9664:93;:::i;:::-;9782:2;9777:3;9773:12;9766:19;;9425:366;;;:::o;9797:419::-;9963:4;10001:2;9990:9;9986:18;9978:26;;10050:9;10044:4;10040:20;10036:1;10025:9;10021:17;10014:47;10078:131;10204:4;10078:131;:::i;:::-;10070:139;;9797:419;;;:::o;10222:163::-;10362:15;10358:1;10350:6;10346:14;10339:39;10222:163;:::o;10391:366::-;10533:3;10554:67;10618:2;10613:3;10554:67;:::i;:::-;10547:74;;10630:93;10719:3;10630:93;:::i;:::-;10748:2;10743:3;10739:12;10732:19;;10391:366;;;:::o;10763:419::-;10929:4;10967:2;10956:9;10952:18;10944:26;;11016:9;11010:4;11006:20;11002:1;10991:9;10987:17;10980:47;11044:131;11170:4;11044:131;:::i;:::-;11036:139;;10763:419;;;:::o;11188:165::-;11328:17;11324:1;11316:6;11312:14;11305:41;11188:165;:::o;11359:366::-;11501:3;11522:67;11586:2;11581:3;11522:67;:::i;:::-;11515:74;;11598:93;11687:3;11598:93;:::i;:::-;11716:2;11711:3;11707:12;11700:19;;11359:366;;;:::o;11731:419::-;11897:4;11935:2;11924:9;11920:18;11912:26;;11984:9;11978:4;11974:20;11970:1;11959:9;11955:17;11948:47;12012:131;12138:4;12012:131;:::i;:::-;12004:139;;11731:419;;;:::o;12156:162::-;12296:14;12292:1;12284:6;12280:14;12273:38;12156:162;:::o;12324:366::-;12466:3;12487:67;12551:2;12546:3;12487:67;:::i;:::-;12480:74;;12563:93;12652:3;12563:93;:::i;:::-;12681:2;12676:3;12672:12;12665:19;;12324:366;;;:::o;12696:419::-;12862:4;12900:2;12889:9;12885:18;12877:26;;12949:9;12943:4;12939:20;12935:1;12924:9;12920:17;12913:47;12977:131;13103:4;12977:131;:::i;:::-;12969:139;;12696:419;;;:::o;13121:162::-;13261:14;13257:1;13249:6;13245:14;13238:38;13121:162;:::o;13289:366::-;13431:3;13452:67;13516:2;13511:3;13452:67;:::i;:::-;13445:74;;13528:93;13617:3;13528:93;:::i;:::-;13646:2;13641:3;13637:12;13630:19;;13289:366;;;:::o;13661:419::-;13827:4;13865:2;13854:9;13850:18;13842:26;;13914:9;13908:4;13904:20;13900:1;13889:9;13885:17;13878:47;13942:131;14068:4;13942:131;:::i;:::-;13934:139;;13661:419;;;:::o;14086:173::-;14226:25;14222:1;14214:6;14210:14;14203:49;14086:173;:::o;14265:366::-;14407:3;14428:67;14492:2;14487:3;14428:67;:::i;:::-;14421:74;;14504:93;14593:3;14504:93;:::i;:::-;14622:2;14617:3;14613:12;14606:19;;14265:366;;;:::o;14637:419::-;14803:4;14841:2;14830:9;14826:18;14818:26;;14890:9;14884:4;14880:20;14876:1;14865:9;14861:17;14854:47;14918:131;15044:4;14918:131;:::i;:::-;14910:139;;14637:419;;;:::o;15062:176::-;15202:28;15198:1;15190:6;15186:14;15179:52;15062:176;:::o;15244:366::-;15386:3;15407:67;15471:2;15466:3;15407:67;:::i;:::-;15400:74;;15483:93;15572:3;15483:93;:::i;:::-;15601:2;15596:3;15592:12;15585:19;;15244:366;;;:::o;15616:419::-;15782:4;15820:2;15809:9;15805:18;15797:26;;15869:9;15863:4;15859:20;15855:1;15844:9;15840:17;15833:47;15897:131;16023:4;15897:131;:::i;:::-;15889:139;;15616:419;;;:::o;16041:163::-;16181:15;16177:1;16169:6;16165:14;16158:39;16041:163;:::o;16210:366::-;16352:3;16373:67;16437:2;16432:3;16373:67;:::i;:::-;16366:74;;16449:93;16538:3;16449:93;:::i;:::-;16567:2;16562:3;16558:12;16551:19;;16210:366;;;:::o;16582:419::-;16748:4;16786:2;16775:9;16771:18;16763:26;;16835:9;16829:4;16825:20;16821:1;16810:9;16806:17;16799:47;16863:131;16989:4;16863:131;:::i;:::-;16855:139;;16582:419;;;:::o;17007:171::-;17147:23;17143:1;17135:6;17131:14;17124:47;17007:171;:::o;17184:366::-;17326:3;17347:67;17411:2;17406:3;17347:67;:::i;:::-;17340:74;;17423:93;17512:3;17423:93;:::i;:::-;17541:2;17536:3;17532:12;17525:19;;17184:366;;;:::o;17556:419::-;17722:4;17760:2;17749:9;17745:18;17737:26;;17809:9;17803:4;17799:20;17795:1;17784:9;17780:17;17773:47;17837:131;17963:4;17837:131;:::i;:::-;17829:139;;17556:419;;;:::o;17981:225::-;18121:34;18117:1;18109:6;18105:14;18098:58;18190:8;18185:2;18177:6;18173:15;18166:33;17981:225;:::o;18212:366::-;18354:3;18375:67;18439:2;18434:3;18375:67;:::i;:::-;18368:74;;18451:93;18540:3;18451:93;:::i;:::-;18569:2;18564:3;18560:12;18553:19;;18212:366;;;:::o;18584:419::-;18750:4;18788:2;18777:9;18773:18;18765:26;;18837:9;18831:4;18827:20;18823:1;18812:9;18808:17;18801:47;18865:131;18991:4;18865:131;:::i;:::-;18857:139;;18584:419;;;:::o;19009:180::-;19057:77;19054:1;19047:88;19154:4;19151:1;19144:15;19178:4;19175:1;19168:15;19195:191;19235:4;19255:20;19273:1;19255:20;:::i;:::-;19250:25;;19289:20;19307:1;19289:20;:::i;:::-;19284:25;;19328:1;19325;19322:8;19319:34;;;19333:18;;:::i;:::-;19319:34;19378:1;19375;19371:9;19363:17;;19195:191;;;;:::o;19392:185::-;19432:1;19449:20;19467:1;19449:20;:::i;:::-;19444:25;;19483:20;19501:1;19483:20;:::i;:::-;19478:25;;19522:1;19512:35;;19527:18;;:::i;:::-;19512:35;19569:1;19566;19562:9;19557:14;;19392:185;;;;:::o;19583:305::-;19623:3;19642:20;19660:1;19642:20;:::i;:::-;19637:25;;19676:20;19694:1;19676:20;:::i;:::-;19671:25;;19830:1;19762:66;19758:74;19755:1;19752:81;19749:107;;;19836:18;;:::i;:::-;19749:107;19880:1;19877;19873:9;19866:16;;19583:305;;;;:::o;19894:348::-;19934:7;19957:20;19975:1;19957:20;:::i;:::-;19952:25;;19991:20;20009:1;19991:20;:::i;:::-;19986:25;;20179:1;20111:66;20107:74;20104:1;20101:81;20096:1;20089:9;20082:17;20078:105;20075:131;;;20186:18;;:::i;:::-;20075:131;20234:1;20231;20227:9;20216:20;;19894:348;;;;:::o;20248:442::-;20397:4;20435:2;20424:9;20420:18;20412:26;;20448:71;20516:1;20505:9;20501:17;20492:6;20448:71;:::i;:::-;20529:72;20597:2;20586:9;20582:18;20573:6;20529:72;:::i;:::-;20611;20679:2;20668:9;20664:18;20655:6;20611:72;:::i;:::-;20248:442;;;;;;:::o;20696:90::-;20730:7;20773:5;20766:13;20759:21;20748:32;;20696:90;;;:::o;20792:116::-;20862:21;20877:5;20862:21;:::i;:::-;20855:5;20852:32;20842:60;;20898:1;20895;20888:12;20842:60;20792:116;:::o;20914:137::-;20968:5;20999:6;20993:13;20984:22;;21015:30;21039:5;21015:30;:::i;:::-;20914:137;;;;:::o;21057:345::-;21124:6;21173:2;21161:9;21152:7;21148:23;21144:32;21141:119;;;21179:79;;:::i;:::-;21141:119;21299:1;21324:61;21377:7;21368:6;21357:9;21353:22;21324:61;:::i;:::-;21314:71;;21270:125;21057:345;;;;:::o;21408:229::-;21548:34;21544:1;21536:6;21532:14;21525:58;21617:12;21612:2;21604:6;21600:15;21593:37;21408:229;:::o;21643:366::-;21785:3;21806:67;21870:2;21865:3;21806:67;:::i;:::-;21799:74;;21882:93;21971:3;21882:93;:::i;:::-;22000:2;21995:3;21991:12;21984:19;;21643:366;;;:::o;22015:419::-;22181:4;22219:2;22208:9;22204:18;22196:26;;22268:9;22262:4;22258:20;22254:1;22243:9;22239:17;22232:47;22296:131;22422:4;22296:131;:::i;:::-;22288:139;;22015:419;;;:::o;22440:225::-;22580:34;22576:1;22568:6;22564:14;22557:58;22649:8;22644:2;22636:6;22632:15;22625:33;22440:225;:::o;22671:366::-;22813:3;22834:67;22898:2;22893:3;22834:67;:::i;:::-;22827:74;;22910:93;22999:3;22910:93;:::i;:::-;23028:2;23023:3;23019:12;23012:19;;22671:366;;;:::o;23043:419::-;23209:4;23247:2;23236:9;23232:18;23224:26;;23296:9;23290:4;23286:20;23282:1;23271:9;23267:17;23260:47;23324:131;23450:4;23324:131;:::i;:::-;23316:139;;23043:419;;;:::o;23468:179::-;23608:31;23604:1;23596:6;23592:14;23585:55;23468:179;:::o;23653:366::-;23795:3;23816:67;23880:2;23875:3;23816:67;:::i;:::-;23809:74;;23892:93;23981:3;23892:93;:::i;:::-;24010:2;24005:3;24001:12;23994:19;;23653:366;;;:::o;24025:419::-;24191:4;24229:2;24218:9;24214:18;24206:26;;24278:9;24272:4;24268:20;24264:1;24253:9;24249:17;24242:47;24306:131;24432:4;24306:131;:::i;:::-;24298:139;;24025:419;;;:::o;24450:98::-;24501:6;24535:5;24529:12;24519:22;;24450:98;;;:::o;24554:147::-;24655:11;24692:3;24677:18;;24554:147;;;;:::o;24707:307::-;24775:1;24785:113;24799:6;24796:1;24793:13;24785:113;;;24884:1;24879:3;24875:11;24869:18;24865:1;24860:3;24856:11;24849:39;24821:2;24818:1;24814:10;24809:15;;24785:113;;;24916:6;24913:1;24910:13;24907:101;;;24996:1;24987:6;24982:3;24978:16;24971:27;24907:101;24756:258;24707:307;;;:::o;25020:373::-;25124:3;25152:38;25184:5;25152:38;:::i;:::-;25206:88;25287:6;25282:3;25206:88;:::i;:::-;25199:95;;25303:52;25348:6;25343:3;25336:4;25329:5;25325:16;25303:52;:::i;:::-;25380:6;25375:3;25371:16;25364:23;;25128:265;25020:373;;;;:::o;25399:271::-;25529:3;25551:93;25640:3;25631:6;25551:93;:::i;:::-;25544:100;;25661:3;25654:10;;25399:271;;;;:::o;25676:99::-;25728:6;25762:5;25756:12;25746:22;;25676:99;;;:::o;25781:102::-;25822:6;25873:2;25869:7;25864:2;25857:5;25853:14;25849:28;25839:38;;25781:102;;;:::o;25889:364::-;25977:3;26005:39;26038:5;26005:39;:::i;:::-;26060:71;26124:6;26119:3;26060:71;:::i;:::-;26053:78;;26140:52;26185:6;26180:3;26173:4;26166:5;26162:16;26140:52;:::i;:::-;26217:29;26239:6;26217:29;:::i;:::-;26212:3;26208:39;26201:46;;25981:272;25889:364;;;;:::o;26259:313::-;26372:4;26410:2;26399:9;26395:18;26387:26;;26459:9;26453:4;26449:20;26445:1;26434:9;26430:17;26423:47;26487:78;26560:4;26551:6;26487:78;:::i;:::-;26479:86;;26259:313;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2406000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"getNumberofStakers()": "2490",
								"getRewardRate()": "2460",
								"getStakerMode(address)": "2931",
								"getTotalStaked()": "2461",
								"harvest()": "infinite",
								"isLocked(address)": "infinite",
								"isStartStaking(address)": "2979",
								"owner()": "2589",
								"renounceOwnership()": "30507",
								"rewardAmount(address)": "2936",
								"rewardToHarvest()": "2599",
								"setEventPeriod(uint256)": "infinite",
								"setLockupTime(uint256)": "24895",
								"setRewardRate(uint256)": "infinite",
								"setUnstakingFeeRate(uint256)": "infinite",
								"stake(uint256)": "infinite",
								"stakedAmount(address)": "2935",
								"startStaking(uint256,uint256)": "infinite",
								"token()": "infinite",
								"totalStaked()": "2474",
								"transferOwnership(address)": "30789",
								"withdraw(uint256)": "infinite"
							},
							"internal": {
								"Init()": "infinite",
								"calDaysFromTimestamp(uint256)": "infinite",
								"updateReward()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 260,
									"end": 8536,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 260,
									"end": 8536,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 260,
									"end": 8536,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1633,
									"end": 1729,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 1633,
									"end": 1729,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1633,
									"end": 1729,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1633,
									"end": 1729,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1633,
									"end": 1729,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1633,
									"end": 1729,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1633,
									"end": 1729,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1633,
									"end": 1729,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1633,
									"end": 1729,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1633,
									"end": 1729,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1633,
									"end": 1729,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1633,
									"end": 1729,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1633,
									"end": 1729,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1633,
									"end": 1729,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 1633,
									"end": 1729,
									"name": "CODESIZE",
									"source": 7
								},
								{
									"begin": 1633,
									"end": 1729,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 1633,
									"end": 1729,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1633,
									"end": 1729,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 1633,
									"end": 1729,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1633,
									"end": 1729,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 1633,
									"end": 1729,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1633,
									"end": 1729,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1633,
									"end": 1729,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1633,
									"end": 1729,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1633,
									"end": 1729,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1633,
									"end": 1729,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1633,
									"end": 1729,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1633,
									"end": 1729,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1633,
									"end": 1729,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 1633,
									"end": 1729,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1633,
									"end": 1729,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1633,
									"end": 1729,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 1633,
									"end": 1729,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 1633,
									"end": 1729,
									"name": "tag",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 1633,
									"end": 1729,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 921,
									"end": 953,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 940,
									"end": 952,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 940,
									"end": 952,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 921,
									"end": 939,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 921,
									"end": 953,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1682,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 1682,
									"end": 1686,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 1682,
									"end": 1686,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1682,
									"end": 1686,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 1682,
									"end": 1688,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1682,
									"end": 1688,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 1682,
									"end": 1688,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 1682,
									"end": 1688,
									"name": "tag",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 1682,
									"end": 1688,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1714,
									"end": 1720,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1699,
									"end": 1704,
									"name": "PUSH",
									"source": 7,
									"value": "C"
								},
								{
									"begin": 1699,
									"end": 1704,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1699,
									"end": 1721,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 1699,
									"end": 1721,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 1699,
									"end": 1721,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1699,
									"end": 1721,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 1699,
									"end": 1721,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1699,
									"end": 1721,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1699,
									"end": 1721,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1699,
									"end": 1721,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 1699,
									"end": 1721,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1699,
									"end": 1721,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1699,
									"end": 1721,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1699,
									"end": 1721,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1699,
									"end": 1721,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1699,
									"end": 1721,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1699,
									"end": 1721,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1699,
									"end": 1721,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1699,
									"end": 1721,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1699,
									"end": 1721,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1633,
									"end": 1729,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 260,
									"end": 8536,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 260,
									"end": 8536,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2368,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2387,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2384,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2378,
									"end": 2384,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2441,
									"end": 2449,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2431,
									"end": 2439,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2333,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 1737,
									"end": 2060,
									"name": "tag",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 1737,
									"end": 2060,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1797,
									"end": 1800,
									"name": "PUSH",
									"source": 7,
									"value": "C8"
								},
								{
									"begin": 1783,
									"end": 1794,
									"name": "PUSH",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 1783,
									"end": 1800,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1783,
									"end": 1800,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1783,
									"end": 1800,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1783,
									"end": 1800,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1842,
									"end": 1846,
									"name": "PUSH",
									"source": 7,
									"value": "5DC"
								},
								{
									"begin": 1822,
									"end": 1839,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1822,
									"end": 1846,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1822,
									"end": 1846,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1822,
									"end": 1846,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1822,
									"end": 1846,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1874,
									"end": 1877,
									"name": "PUSH",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 1857,
									"end": 1871,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1857,
									"end": 1877,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1857,
									"end": 1877,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1857,
									"end": 1877,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1857,
									"end": 1877,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1903,
									"end": 1909,
									"name": "PUSH",
									"source": 7,
									"value": "93A80"
								},
								{
									"begin": 1888,
									"end": 1900,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 1888,
									"end": 1909,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1888,
									"end": 1909,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1888,
									"end": 1909,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1888,
									"end": 1909,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1936,
									"end": 1943,
									"name": "PUSH",
									"source": 7,
									"value": "76A700"
								},
								{
									"begin": 1920,
									"end": 1933,
									"name": "PUSH",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 1920,
									"end": 1943,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1920,
									"end": 1943,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1920,
									"end": 1943,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1920,
									"end": 1943,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1974,
									"end": 1978,
									"name": "PUSH",
									"source": 7,
									"value": "D3C21BCECCEDA1000000"
								},
								{
									"begin": 1954,
									"end": 1971,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 1954,
									"end": 1978,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1954,
									"end": 1978,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1954,
									"end": 1978,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1954,
									"end": 1978,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2009,
									"end": 2015,
									"name": "PUSH",
									"source": 7,
									"value": "27B46536C66C8E3000000"
								},
								{
									"begin": 1989,
									"end": 2006,
									"name": "PUSH",
									"source": 7,
									"value": "7"
								},
								{
									"begin": 1989,
									"end": 2015,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1989,
									"end": 2015,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1989,
									"end": 2015,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1989,
									"end": 2015,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2046,
									"end": 2052,
									"name": "PUSH",
									"source": 7,
									"value": "5CA4EC2A79A7F67000000"
								},
								{
									"begin": 2026,
									"end": 2043,
									"name": "PUSH",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 2026,
									"end": 2052,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2026,
									"end": 2052,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2026,
									"end": 2052,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2026,
									"end": 2052,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1737,
									"end": 2060,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 8,
									"value": "19"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "31"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 8,
									"value": "31"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 8,
									"value": "23"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "33"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 8,
									"value": "33"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "34"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 8,
									"value": "34"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "36"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "23"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 8,
									"value": "36"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "19"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 260,
									"end": 8536,
									"name": "tag",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 260,
									"end": 8536,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 260,
									"end": 8536,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 260,
									"end": 8536,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 260,
									"end": 8536,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 260,
									"end": 8536,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 260,
									"end": 8536,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 260,
									"end": 8536,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 260,
									"end": 8536,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204d039a1c5a4a325d703b8688b0371029b64eebcc5176d22c651867d62310f95f64736f6c634300080a0033",
									".code": [
										{
											"begin": 260,
											"end": 8536,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "PUSH",
											"source": 7,
											"value": "7E1A3786"
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "PUSH",
											"source": 7,
											"value": "A694FC3A"
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "PUSH",
											"source": 7,
											"value": "A694FC3A"
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "PUSH",
											"source": 7,
											"value": "AEDF562B"
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "PUSH",
											"source": 7,
											"value": "F2FDE38B"
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "PUSH",
											"source": 7,
											"value": "F9931855"
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "PUSH",
											"source": 7,
											"value": "FC0C546A"
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "PUSH",
											"source": 7,
											"value": "FE600F84"
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "tag",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "PUSH",
											"source": 7,
											"value": "7E1A3786"
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "PUSH",
											"source": 7,
											"value": "817B1CD2"
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "PUSH",
											"source": 7,
											"value": "8DA5CB5B"
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "PUSH",
											"source": 7,
											"value": "91E07E7A"
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "PUSH",
											"source": 7,
											"value": "9E447FC6"
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "tag",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "PUSH",
											"source": 7,
											"value": "4B77DD9E"
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "PUSH",
											"source": 7,
											"value": "4B77DD9E"
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "PUSH",
											"source": 7,
											"value": "5715EC11"
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "PUSH",
											"source": 7,
											"value": "5D2EC65D"
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "PUSH",
											"source": 7,
											"value": "645A8A56"
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "PUSH",
											"source": 7,
											"value": "692642E7"
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "PUSH",
											"source": 7,
											"value": "715018A6"
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "tag",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "PUSH",
											"source": 7,
											"value": "917E776"
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "PUSH",
											"source": 7,
											"value": "2E1A7D4D"
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "PUSH",
											"source": 7,
											"value": "4641257D"
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "PUSH",
											"source": 7,
											"value": "4A4FBEEC"
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "PUSH",
											"source": 7,
											"value": "4B62B70B"
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "tag",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8536,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4283,
											"end": 4378,
											"name": "tag",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 4283,
											"end": 4378,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4283,
											"end": 4378,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 4283,
											"end": 4378,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 4283,
											"end": 4378,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4283,
											"end": 4378,
											"name": "tag",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 4283,
											"end": 4378,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4283,
											"end": 4378,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4283,
											"end": 4378,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4283,
											"end": 4378,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 4283,
											"end": 4378,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4283,
											"end": 4378,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4283,
											"end": 4378,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 4283,
											"end": 4378,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4283,
											"end": 4378,
											"name": "tag",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 4283,
											"end": 4378,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4283,
											"end": 4378,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4283,
											"end": 4378,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4283,
											"end": 4378,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4283,
											"end": 4378,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4283,
											"end": 4378,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4283,
											"end": 4378,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4283,
											"end": 4378,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 5617,
											"end": 6740,
											"name": "tag",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5617,
											"end": 6740,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5617,
											"end": 6740,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 5617,
											"end": 6740,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5617,
											"end": 6740,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5617,
											"end": 6740,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 5617,
											"end": 6740,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5617,
											"end": 6740,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5617,
											"end": 6740,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5617,
											"end": 6740,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5617,
											"end": 6740,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 5617,
											"end": 6740,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5617,
											"end": 6740,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5617,
											"end": 6740,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 5617,
											"end": 6740,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5617,
											"end": 6740,
											"name": "tag",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 5617,
											"end": 6740,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5617,
											"end": 6740,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 5617,
											"end": 6740,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5617,
											"end": 6740,
											"name": "tag",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 5617,
											"end": 6740,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5617,
											"end": 6740,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 7958,
											"end": 8533,
											"name": "tag",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 7958,
											"end": 8533,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7958,
											"end": 8533,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 7958,
											"end": 8533,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 7958,
											"end": 8533,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7958,
											"end": 8533,
											"name": "tag",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 7958,
											"end": 8533,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7958,
											"end": 8533,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 4771,
											"end": 5173,
											"name": "tag",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 4771,
											"end": 5173,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4771,
											"end": 5173,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 4771,
											"end": 5173,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4771,
											"end": 5173,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4771,
											"end": 5173,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 4771,
											"end": 5173,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4771,
											"end": 5173,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4771,
											"end": 5173,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4771,
											"end": 5173,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4771,
											"end": 5173,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 4771,
											"end": 5173,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4771,
											"end": 5173,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4771,
											"end": 5173,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4771,
											"end": 5173,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4771,
											"end": 5173,
											"name": "tag",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 4771,
											"end": 5173,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4771,
											"end": 5173,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 4771,
											"end": 5173,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4771,
											"end": 5173,
											"name": "tag",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 4771,
											"end": 5173,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4771,
											"end": 5173,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4771,
											"end": 5173,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4771,
											"end": 5173,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 4771,
											"end": 5173,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4771,
											"end": 5173,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4771,
											"end": 5173,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 4771,
											"end": 5173,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4771,
											"end": 5173,
											"name": "tag",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 4771,
											"end": 5173,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4771,
											"end": 5173,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4771,
											"end": 5173,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4771,
											"end": 5173,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4771,
											"end": 5173,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4771,
											"end": 5173,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4771,
											"end": 5173,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4771,
											"end": 5173,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 7525,
											"end": 7695,
											"name": "tag",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 7525,
											"end": 7695,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7525,
											"end": 7695,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 7525,
											"end": 7695,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7525,
											"end": 7695,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7525,
											"end": 7695,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 7525,
											"end": 7695,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7525,
											"end": 7695,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7525,
											"end": 7695,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7525,
											"end": 7695,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7525,
											"end": 7695,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 7525,
											"end": 7695,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7525,
											"end": 7695,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7525,
											"end": 7695,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 7525,
											"end": 7695,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7525,
											"end": 7695,
											"name": "tag",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 7525,
											"end": 7695,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7525,
											"end": 7695,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 7525,
											"end": 7695,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7525,
											"end": 7695,
											"name": "tag",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 7525,
											"end": 7695,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7525,
											"end": 7695,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 2746,
											"end": 3625,
											"name": "tag",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 2746,
											"end": 3625,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2746,
											"end": 3625,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 2746,
											"end": 3625,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2746,
											"end": 3625,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2746,
											"end": 3625,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2746,
											"end": 3625,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2746,
											"end": 3625,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2746,
											"end": 3625,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2746,
											"end": 3625,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2746,
											"end": 3625,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 2746,
											"end": 3625,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2746,
											"end": 3625,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2746,
											"end": 3625,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 2746,
											"end": 3625,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2746,
											"end": 3625,
											"name": "tag",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 2746,
											"end": 3625,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2746,
											"end": 3625,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 2746,
											"end": 3625,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2746,
											"end": 3625,
											"name": "tag",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 2746,
											"end": 3625,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2746,
											"end": 3625,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 4386,
											"end": 4489,
											"name": "tag",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 4386,
											"end": 4489,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4386,
											"end": 4489,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 4386,
											"end": 4489,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 4386,
											"end": 4489,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4386,
											"end": 4489,
											"name": "tag",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 4386,
											"end": 4489,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4386,
											"end": 4489,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4386,
											"end": 4489,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4386,
											"end": 4489,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 4386,
											"end": 4489,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4386,
											"end": 4489,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4386,
											"end": 4489,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 4386,
											"end": 4489,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4386,
											"end": 4489,
											"name": "tag",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 4386,
											"end": 4489,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4386,
											"end": 4489,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4386,
											"end": 4489,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4386,
											"end": 4489,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4386,
											"end": 4489,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4386,
											"end": 4489,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4386,
											"end": 4489,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4386,
											"end": 4489,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 7758,
											"end": 7917,
											"name": "tag",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 7758,
											"end": 7917,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7758,
											"end": 7917,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 7758,
											"end": 7917,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 7758,
											"end": 7917,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7758,
											"end": 7917,
											"name": "tag",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 7758,
											"end": 7917,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7758,
											"end": 7917,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7758,
											"end": 7917,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7758,
											"end": 7917,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 7758,
											"end": 7917,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7758,
											"end": 7917,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7758,
											"end": 7917,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 7758,
											"end": 7917,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7758,
											"end": 7917,
											"name": "tag",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 7758,
											"end": 7917,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7758,
											"end": 7917,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7758,
											"end": 7917,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7758,
											"end": 7917,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7758,
											"end": 7917,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7758,
											"end": 7917,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7758,
											"end": 7917,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7758,
											"end": 7917,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 5333,
											"end": 5468,
											"name": "tag",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 5333,
											"end": 5468,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5333,
											"end": 5468,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 5333,
											"end": 5468,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5333,
											"end": 5468,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5333,
											"end": 5468,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 5333,
											"end": 5468,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5333,
											"end": 5468,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5333,
											"end": 5468,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5333,
											"end": 5468,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5333,
											"end": 5468,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 5333,
											"end": 5468,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5333,
											"end": 5468,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5333,
											"end": 5468,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5333,
											"end": 5468,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5333,
											"end": 5468,
											"name": "tag",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 5333,
											"end": 5468,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5333,
											"end": 5468,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 5333,
											"end": 5468,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5333,
											"end": 5468,
											"name": "tag",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 5333,
											"end": 5468,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5333,
											"end": 5468,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5333,
											"end": 5468,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5333,
											"end": 5468,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 5333,
											"end": 5468,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5333,
											"end": 5468,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5333,
											"end": 5468,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 5333,
											"end": 5468,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5333,
											"end": 5468,
											"name": "tag",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 5333,
											"end": 5468,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5333,
											"end": 5468,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5333,
											"end": 5468,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5333,
											"end": 5468,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5333,
											"end": 5468,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5333,
											"end": 5468,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5333,
											"end": 5468,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5333,
											"end": 5468,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 6987,
											"end": 7235,
											"name": "tag",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 6987,
											"end": 7235,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6987,
											"end": 7235,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 6987,
											"end": 7235,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6987,
											"end": 7235,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6987,
											"end": 7235,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 6987,
											"end": 7235,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6987,
											"end": 7235,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6987,
											"end": 7235,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6987,
											"end": 7235,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6987,
											"end": 7235,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 6987,
											"end": 7235,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6987,
											"end": 7235,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6987,
											"end": 7235,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 6987,
											"end": 7235,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6987,
											"end": 7235,
											"name": "tag",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 6987,
											"end": 7235,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6987,
											"end": 7235,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 6987,
											"end": 7235,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6987,
											"end": 7235,
											"name": "tag",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 6987,
											"end": 7235,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6987,
											"end": 7235,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 5476,
											"end": 5570,
											"name": "tag",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 5476,
											"end": 5570,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5476,
											"end": 5570,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 5476,
											"end": 5570,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 5476,
											"end": 5570,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5476,
											"end": 5570,
											"name": "tag",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 5476,
											"end": 5570,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5476,
											"end": 5570,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5476,
											"end": 5570,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5476,
											"end": 5570,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 5476,
											"end": 5570,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5476,
											"end": 5570,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5476,
											"end": 5570,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 5476,
											"end": 5570,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5476,
											"end": 5570,
											"name": "tag",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 5476,
											"end": 5570,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5476,
											"end": 5570,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5476,
											"end": 5570,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5476,
											"end": 5570,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5476,
											"end": 5570,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5476,
											"end": 5570,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5476,
											"end": 5570,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5476,
											"end": 5570,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1173,
											"end": 1199,
											"name": "tag",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 1173,
											"end": 1199,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1173,
											"end": 1199,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 1173,
											"end": 1199,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 1173,
											"end": 1199,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1173,
											"end": 1199,
											"name": "tag",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 1173,
											"end": 1199,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1173,
											"end": 1199,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1173,
											"end": 1199,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1173,
											"end": 1199,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 1173,
											"end": 1199,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1173,
											"end": 1199,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1173,
											"end": 1199,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 1173,
											"end": 1199,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1173,
											"end": 1199,
											"name": "tag",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 1173,
											"end": 1199,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1173,
											"end": 1199,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1173,
											"end": 1199,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1173,
											"end": 1199,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1173,
											"end": 1199,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1173,
											"end": 1199,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1173,
											"end": 1199,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1173,
											"end": 1199,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 7243,
											"end": 7517,
											"name": "tag",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 7243,
											"end": 7517,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7243,
											"end": 7517,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 7243,
											"end": 7517,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7243,
											"end": 7517,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7243,
											"end": 7517,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 7243,
											"end": 7517,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7243,
											"end": 7517,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7243,
											"end": 7517,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7243,
											"end": 7517,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7243,
											"end": 7517,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 7243,
											"end": 7517,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7243,
											"end": 7517,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7243,
											"end": 7517,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 7243,
											"end": 7517,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7243,
											"end": 7517,
											"name": "tag",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 7243,
											"end": 7517,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7243,
											"end": 7517,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 7243,
											"end": 7517,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7243,
											"end": 7517,
											"name": "tag",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 7243,
											"end": 7517,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7243,
											"end": 7517,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 6752,
											"end": 6979,
											"name": "tag",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 6752,
											"end": 6979,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6752,
											"end": 6979,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 6752,
											"end": 6979,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6752,
											"end": 6979,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6752,
											"end": 6979,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 6752,
											"end": 6979,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6752,
											"end": 6979,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6752,
											"end": 6979,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6752,
											"end": 6979,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6752,
											"end": 6979,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 6752,
											"end": 6979,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6752,
											"end": 6979,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6752,
											"end": 6979,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 6752,
											"end": 6979,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6752,
											"end": 6979,
											"name": "tag",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 6752,
											"end": 6979,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6752,
											"end": 6979,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 6752,
											"end": 6979,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6752,
											"end": 6979,
											"name": "tag",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 6752,
											"end": 6979,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6752,
											"end": 6979,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 3693,
											"end": 4275,
											"name": "tag",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 3693,
											"end": 4275,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3693,
											"end": 4275,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 3693,
											"end": 4275,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3693,
											"end": 4275,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3693,
											"end": 4275,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 3693,
											"end": 4275,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3693,
											"end": 4275,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3693,
											"end": 4275,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3693,
											"end": 4275,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3693,
											"end": 4275,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 3693,
											"end": 4275,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3693,
											"end": 4275,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3693,
											"end": 4275,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 3693,
											"end": 4275,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3693,
											"end": 4275,
											"name": "tag",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 3693,
											"end": 4275,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3693,
											"end": 4275,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 3693,
											"end": 4275,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3693,
											"end": 4275,
											"name": "tag",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 3693,
											"end": 4275,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3693,
											"end": 4275,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 4497,
											"end": 4631,
											"name": "tag",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4497,
											"end": 4631,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4497,
											"end": 4631,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 4497,
											"end": 4631,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4497,
											"end": 4631,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4497,
											"end": 4631,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 4497,
											"end": 4631,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4497,
											"end": 4631,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4497,
											"end": 4631,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4497,
											"end": 4631,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4497,
											"end": 4631,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 4497,
											"end": 4631,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4497,
											"end": 4631,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4497,
											"end": 4631,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4497,
											"end": 4631,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4497,
											"end": 4631,
											"name": "tag",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 4497,
											"end": 4631,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4497,
											"end": 4631,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 4497,
											"end": 4631,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4497,
											"end": 4631,
											"name": "tag",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 4497,
											"end": 4631,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4497,
											"end": 4631,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4497,
											"end": 4631,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4497,
											"end": 4631,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 4497,
											"end": 4631,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4497,
											"end": 4631,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4497,
											"end": 4631,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 4497,
											"end": 4631,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4497,
											"end": 4631,
											"name": "tag",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 4497,
											"end": 4631,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4497,
											"end": 4631,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4497,
											"end": 4631,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4497,
											"end": 4631,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4497,
											"end": 4631,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4497,
											"end": 4631,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4497,
											"end": 4631,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4497,
											"end": 4631,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 5185,
											"end": 5321,
											"name": "tag",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 5185,
											"end": 5321,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5185,
											"end": 5321,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 5185,
											"end": 5321,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5185,
											"end": 5321,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5185,
											"end": 5321,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 5185,
											"end": 5321,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5185,
											"end": 5321,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5185,
											"end": 5321,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5185,
											"end": 5321,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5185,
											"end": 5321,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 5185,
											"end": 5321,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5185,
											"end": 5321,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5185,
											"end": 5321,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5185,
											"end": 5321,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5185,
											"end": 5321,
											"name": "tag",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 5185,
											"end": 5321,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5185,
											"end": 5321,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 5185,
											"end": 5321,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5185,
											"end": 5321,
											"name": "tag",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 5185,
											"end": 5321,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5185,
											"end": 5321,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5185,
											"end": 5321,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5185,
											"end": 5321,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 5185,
											"end": 5321,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5185,
											"end": 5321,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5185,
											"end": 5321,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 5185,
											"end": 5321,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5185,
											"end": 5321,
											"name": "tag",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 5185,
											"end": 5321,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5185,
											"end": 5321,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5185,
											"end": 5321,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5185,
											"end": 5321,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5185,
											"end": 5321,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5185,
											"end": 5321,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5185,
											"end": 5321,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5185,
											"end": 5321,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1206,
											"end": 1225,
											"name": "tag",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 1206,
											"end": 1225,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1206,
											"end": 1225,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 1206,
											"end": 1225,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 1206,
											"end": 1225,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1206,
											"end": 1225,
											"name": "tag",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 1206,
											"end": 1225,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1206,
											"end": 1225,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1206,
											"end": 1225,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1206,
											"end": 1225,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 1206,
											"end": 1225,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1206,
											"end": 1225,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1206,
											"end": 1225,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 1206,
											"end": 1225,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1206,
											"end": 1225,
											"name": "tag",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 1206,
											"end": 1225,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1206,
											"end": 1225,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1206,
											"end": 1225,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1206,
											"end": 1225,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1206,
											"end": 1225,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1206,
											"end": 1225,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1206,
											"end": 1225,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1206,
											"end": 1225,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 4639,
											"end": 4763,
											"name": "tag",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4639,
											"end": 4763,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4639,
											"end": 4763,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 4639,
											"end": 4763,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4639,
											"end": 4763,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4639,
											"end": 4763,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 4639,
											"end": 4763,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4639,
											"end": 4763,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4639,
											"end": 4763,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4639,
											"end": 4763,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4639,
											"end": 4763,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 4639,
											"end": 4763,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4639,
											"end": 4763,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4639,
											"end": 4763,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4639,
											"end": 4763,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4639,
											"end": 4763,
											"name": "tag",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 4639,
											"end": 4763,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4639,
											"end": 4763,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 4639,
											"end": 4763,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4639,
											"end": 4763,
											"name": "tag",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 4639,
											"end": 4763,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4639,
											"end": 4763,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4639,
											"end": 4763,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4639,
											"end": 4763,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 4639,
											"end": 4763,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4639,
											"end": 4763,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4639,
											"end": 4763,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 4639,
											"end": 4763,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4639,
											"end": 4763,
											"name": "tag",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 4639,
											"end": 4763,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4639,
											"end": 4763,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4639,
											"end": 4763,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4639,
											"end": 4763,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4639,
											"end": 4763,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4639,
											"end": 4763,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4639,
											"end": 4763,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4639,
											"end": 4763,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 4283,
											"end": 4378,
											"name": "tag",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 4283,
											"end": 4378,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4330,
											"end": 4337,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4359,
											"end": 4370,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 4359,
											"end": 4370,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4352,
											"end": 4370,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4352,
											"end": 4370,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4283,
											"end": 4378,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4283,
											"end": 4378,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 5617,
											"end": 6740,
											"name": "tag",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 5617,
											"end": 6740,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5697,
											"end": 5698,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5688,
											"end": 5694,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5688,
											"end": 5698,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5680,
											"end": 5734,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 5680,
											"end": 5734,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5680,
											"end": 5734,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5680,
											"end": 5734,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5680,
											"end": 5734,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5680,
											"end": 5734,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5680,
											"end": 5734,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5680,
											"end": 5734,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5680,
											"end": 5734,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5680,
											"end": 5734,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 5680,
											"end": 5734,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5680,
											"end": 5734,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 5680,
											"end": 5734,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5680,
											"end": 5734,
											"name": "tag",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 5680,
											"end": 5734,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5680,
											"end": 5734,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5680,
											"end": 5734,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5680,
											"end": 5734,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5680,
											"end": 5734,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5680,
											"end": 5734,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5680,
											"end": 5734,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5680,
											"end": 5734,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5680,
											"end": 5734,
											"name": "tag",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 5680,
											"end": 5734,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5763,
											"end": 5770,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 5763,
											"end": 5782,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5771,
											"end": 5781,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 5763,
											"end": 5782,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5763,
											"end": 5782,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5763,
											"end": 5782,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5763,
											"end": 5782,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5763,
											"end": 5782,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5763,
											"end": 5782,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5763,
											"end": 5782,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5763,
											"end": 5782,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5763,
											"end": 5782,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5763,
											"end": 5782,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5763,
											"end": 5782,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5763,
											"end": 5782,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5763,
											"end": 5782,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5763,
											"end": 5782,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5763,
											"end": 5782,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 5763,
											"end": 5795,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 5763,
											"end": 5795,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5763,
											"end": 5795,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5753,
											"end": 5759,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5753,
											"end": 5795,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5753,
											"end": 5795,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5745,
											"end": 5814,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 5745,
											"end": 5814,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5745,
											"end": 5814,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5745,
											"end": 5814,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5745,
											"end": 5814,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5745,
											"end": 5814,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5745,
											"end": 5814,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5745,
											"end": 5814,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5745,
											"end": 5814,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5745,
											"end": 5814,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 5745,
											"end": 5814,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5745,
											"end": 5814,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 5745,
											"end": 5814,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5745,
											"end": 5814,
											"name": "tag",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 5745,
											"end": 5814,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5745,
											"end": 5814,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5745,
											"end": 5814,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5745,
											"end": 5814,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5745,
											"end": 5814,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5745,
											"end": 5814,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5745,
											"end": 5814,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5745,
											"end": 5814,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5745,
											"end": 5814,
											"name": "tag",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 5745,
											"end": 5814,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5827,
											"end": 5841,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 5827,
											"end": 5839,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 5827,
											"end": 5841,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5827,
											"end": 5841,
											"name": "tag",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 5827,
											"end": 5841,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5852,
											"end": 5879,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5882,
											"end": 5888,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5852,
											"end": 5888,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5852,
											"end": 5888,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5899,
											"end": 5913,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5916,
											"end": 5983,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 5976,
											"end": 5982,
											"name": "PUSH",
											"source": 7,
											"value": "15180"
										},
										{
											"begin": 5916,
											"end": 5971,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 5936,
											"end": 5943,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 5936,
											"end": 5955,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5944,
											"end": 5954,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 5936,
											"end": 5955,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5936,
											"end": 5955,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5936,
											"end": 5955,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5936,
											"end": 5955,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5936,
											"end": 5955,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5936,
											"end": 5955,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5936,
											"end": 5955,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5936,
											"end": 5955,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5936,
											"end": 5955,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5936,
											"end": 5955,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5936,
											"end": 5955,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5936,
											"end": 5955,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5936,
											"end": 5955,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5936,
											"end": 5955,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5936,
											"end": 5955,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 5936,
											"end": 5970,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 5936,
											"end": 5970,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5936,
											"end": 5970,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5916,
											"end": 5931,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 5916,
											"end": 5935,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 5916,
											"end": 5935,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5916,
											"end": 5971,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5916,
											"end": 5971,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5916,
											"end": 5971,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5916,
											"end": 5971,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5916,
											"end": 5971,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5916,
											"end": 5971,
											"name": "tag",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 5916,
											"end": 5971,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5916,
											"end": 5975,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 5916,
											"end": 5975,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5916,
											"end": 5983,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5916,
											"end": 5983,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5916,
											"end": 5983,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5916,
											"end": 5983,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5916,
											"end": 5983,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5916,
											"end": 5983,
											"name": "tag",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 5916,
											"end": 5983,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5899,
											"end": 5983,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5899,
											"end": 5983,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5994,
											"end": 6005,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6008,
											"end": 6011,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 5994,
											"end": 6011,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5994,
											"end": 6011,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6022,
											"end": 6043,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6074,
											"end": 6075,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6046,
											"end": 6053,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 6046,
											"end": 6065,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6054,
											"end": 6064,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 6046,
											"end": 6065,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6046,
											"end": 6065,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6046,
											"end": 6065,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6046,
											"end": 6065,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6046,
											"end": 6065,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6046,
											"end": 6065,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6046,
											"end": 6065,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6046,
											"end": 6065,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6046,
											"end": 6065,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6046,
											"end": 6065,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6046,
											"end": 6065,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6046,
											"end": 6065,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6046,
											"end": 6065,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6046,
											"end": 6065,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6046,
											"end": 6065,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 6046,
											"end": 6070,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 6046,
											"end": 6070,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6046,
											"end": 6070,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6046,
											"end": 6075,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 6046,
											"end": 6075,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6046,
											"end": 6206,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 6046,
											"end": 6206,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6153,
											"end": 6206,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 6192,
											"end": 6205,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 6192,
											"end": 6205,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6153,
											"end": 6160,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 6153,
											"end": 6172,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6161,
											"end": 6171,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 6153,
											"end": 6172,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6153,
											"end": 6172,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6153,
											"end": 6172,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6153,
											"end": 6172,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6153,
											"end": 6172,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6153,
											"end": 6172,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6153,
											"end": 6172,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6153,
											"end": 6172,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6153,
											"end": 6172,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6153,
											"end": 6172,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6153,
											"end": 6172,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6153,
											"end": 6172,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6153,
											"end": 6172,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6153,
											"end": 6172,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6153,
											"end": 6172,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 6153,
											"end": 6187,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 6153,
											"end": 6187,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6153,
											"end": 6187,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6153,
											"end": 6191,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 6153,
											"end": 6191,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6153,
											"end": 6206,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6153,
											"end": 6206,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6153,
											"end": 6206,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6153,
											"end": 6206,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6153,
											"end": 6206,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6153,
											"end": 6206,
											"name": "tag",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 6153,
											"end": 6206,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6134,
											"end": 6149,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 6134,
											"end": 6206,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 6134,
											"end": 6206,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6046,
											"end": 6206,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 6046,
											"end": 6206,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6046,
											"end": 6206,
											"name": "tag",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 6046,
											"end": 6206,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6103,
											"end": 6104,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6087,
											"end": 6099,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 6087,
											"end": 6099,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6078,
											"end": 6084,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6078,
											"end": 6099,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 6078,
											"end": 6099,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6078,
											"end": 6099,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6078,
											"end": 6099,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 6078,
											"end": 6099,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6078,
											"end": 6099,
											"name": "tag",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 6078,
											"end": 6099,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6078,
											"end": 6104,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 6078,
											"end": 6118,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6078,
											"end": 6118,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6078,
											"end": 6118,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 6078,
											"end": 6118,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6078,
											"end": 6118,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6117,
											"end": 6118,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6108,
											"end": 6114,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6108,
											"end": 6118,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 6078,
											"end": 6118,
											"name": "tag",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 6078,
											"end": 6118,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6046,
											"end": 6206,
											"name": "tag",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 6046,
											"end": 6206,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6022,
											"end": 6206,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6022,
											"end": 6206,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6222,
											"end": 6238,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6217,
											"end": 6290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 6217,
											"end": 6290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6261,
											"end": 6278,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 6261,
											"end": 6278,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6255,
											"end": 6278,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6255,
											"end": 6278,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6217,
											"end": 6290,
											"name": "tag",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 6217,
											"end": 6290,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6322,
											"end": 6384,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 6346,
											"end": 6383,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 6379,
											"end": 6382,
											"name": "PUSH",
											"source": 7,
											"value": "2710"
										},
										{
											"begin": 6346,
											"end": 6374,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 6370,
											"end": 6373,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6346,
											"end": 6365,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 6346,
											"end": 6369,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 6346,
											"end": 6369,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6346,
											"end": 6374,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6346,
											"end": 6374,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6346,
											"end": 6374,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6346,
											"end": 6374,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6346,
											"end": 6374,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6346,
											"end": 6374,
											"name": "tag",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 6346,
											"end": 6374,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6346,
											"end": 6378,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 6346,
											"end": 6378,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6346,
											"end": 6383,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6346,
											"end": 6383,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6346,
											"end": 6383,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6346,
											"end": 6383,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6346,
											"end": 6383,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6346,
											"end": 6383,
											"name": "tag",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 6346,
											"end": 6383,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6322,
											"end": 6341,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6322,
											"end": 6345,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 6322,
											"end": 6345,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6322,
											"end": 6384,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6322,
											"end": 6384,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6322,
											"end": 6384,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6322,
											"end": 6384,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6322,
											"end": 6384,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6322,
											"end": 6384,
											"name": "tag",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 6322,
											"end": 6384,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6300,
											"end": 6384,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 6300,
											"end": 6384,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6409,
											"end": 6445,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 6425,
											"end": 6444,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6409,
											"end": 6420,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 6409,
											"end": 6420,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6409,
											"end": 6424,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 6409,
											"end": 6424,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6409,
											"end": 6445,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6409,
											"end": 6445,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6409,
											"end": 6445,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6409,
											"end": 6445,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6409,
											"end": 6445,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6409,
											"end": 6445,
											"name": "tag",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 6409,
											"end": 6445,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6395,
											"end": 6406,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 6395,
											"end": 6445,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6395,
											"end": 6445,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6395,
											"end": 6445,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 6395,
											"end": 6445,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6491,
											"end": 6548,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 6528,
											"end": 6547,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6491,
											"end": 6498,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 6491,
											"end": 6510,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6499,
											"end": 6509,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 6491,
											"end": 6510,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6491,
											"end": 6510,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6491,
											"end": 6510,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6491,
											"end": 6510,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6491,
											"end": 6510,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6491,
											"end": 6510,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6491,
											"end": 6510,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6491,
											"end": 6510,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6491,
											"end": 6510,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6491,
											"end": 6510,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6491,
											"end": 6510,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6491,
											"end": 6510,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6491,
											"end": 6510,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6491,
											"end": 6510,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6491,
											"end": 6510,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 6491,
											"end": 6523,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 6491,
											"end": 6523,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6491,
											"end": 6523,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6491,
											"end": 6527,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 6491,
											"end": 6527,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6491,
											"end": 6548,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6491,
											"end": 6548,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6491,
											"end": 6548,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6491,
											"end": 6548,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6491,
											"end": 6548,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6491,
											"end": 6548,
											"name": "tag",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 6491,
											"end": 6548,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6456,
											"end": 6463,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 6456,
											"end": 6475,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6464,
											"end": 6474,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 6456,
											"end": 6475,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6456,
											"end": 6475,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6456,
											"end": 6475,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6456,
											"end": 6475,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6456,
											"end": 6475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6456,
											"end": 6475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6456,
											"end": 6475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6456,
											"end": 6475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6456,
											"end": 6475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6456,
											"end": 6475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6456,
											"end": 6475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6456,
											"end": 6475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6456,
											"end": 6475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6456,
											"end": 6475,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6456,
											"end": 6475,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 6456,
											"end": 6488,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 6456,
											"end": 6488,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6456,
											"end": 6548,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6456,
											"end": 6548,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6456,
											"end": 6548,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 6456,
											"end": 6548,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6559,
											"end": 6610,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 6578,
											"end": 6588,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 6590,
											"end": 6609,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6559,
											"end": 6564,
											"name": "PUSH",
											"source": 7,
											"value": "C"
										},
										{
											"begin": 6559,
											"end": 6564,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6559,
											"end": 6564,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6559,
											"end": 6564,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6559,
											"end": 6564,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6559,
											"end": 6564,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 6559,
											"end": 6564,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 6559,
											"end": 6564,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6559,
											"end": 6564,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 6559,
											"end": 6564,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6559,
											"end": 6564,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6559,
											"end": 6577,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6559,
											"end": 6577,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6559,
											"end": 6577,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 6559,
											"end": 6577,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6559,
											"end": 6610,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6559,
											"end": 6610,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6559,
											"end": 6610,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6559,
											"end": 6610,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6559,
											"end": 6610,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6559,
											"end": 6610,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6559,
											"end": 6610,
											"name": "tag",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 6559,
											"end": 6610,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6628,
											"end": 6669,
											"name": "PUSH",
											"source": 7,
											"value": "884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364"
										},
										{
											"begin": 6637,
											"end": 6647,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 6649,
											"end": 6668,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6628,
											"end": 6669,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6628,
											"end": 6669,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6628,
											"end": 6669,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 6628,
											"end": 6669,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6628,
											"end": 6669,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6628,
											"end": 6669,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6628,
											"end": 6669,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 6628,
											"end": 6669,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6628,
											"end": 6669,
											"name": "tag",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 6628,
											"end": 6669,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6628,
											"end": 6669,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6628,
											"end": 6669,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6628,
											"end": 6669,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6628,
											"end": 6669,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6628,
											"end": 6669,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6628,
											"end": 6669,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6628,
											"end": 6669,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 5659,
											"end": 6740,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5659,
											"end": 6740,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5659,
											"end": 6740,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5659,
											"end": 6740,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5617,
											"end": 6740,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5617,
											"end": 6740,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 7958,
											"end": 8533,
											"name": "tag",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 7958,
											"end": 8533,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8004,
											"end": 8018,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 8004,
											"end": 8016,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 8004,
											"end": 8018,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8004,
											"end": 8018,
											"name": "tag",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 8004,
											"end": 8018,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8029,
											"end": 8050,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8053,
											"end": 8166,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 8097,
											"end": 8165,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 8161,
											"end": 8164,
											"name": "PUSH",
											"source": 7,
											"value": "2710"
										},
										{
											"begin": 8097,
											"end": 8156,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 8141,
											"end": 8155,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8141,
											"end": 8155,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8097,
											"end": 8104,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 8097,
											"end": 8116,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8105,
											"end": 8115,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 8097,
											"end": 8116,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8097,
											"end": 8116,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8097,
											"end": 8116,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8097,
											"end": 8116,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8097,
											"end": 8116,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8097,
											"end": 8116,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8097,
											"end": 8116,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8097,
											"end": 8116,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8097,
											"end": 8116,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8097,
											"end": 8116,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8097,
											"end": 8116,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8097,
											"end": 8116,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8097,
											"end": 8116,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8097,
											"end": 8116,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8097,
											"end": 8116,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 8097,
											"end": 8136,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8097,
											"end": 8136,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8097,
											"end": 8136,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8097,
											"end": 8140,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 8097,
											"end": 8140,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8097,
											"end": 8156,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8097,
											"end": 8156,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8097,
											"end": 8156,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8097,
											"end": 8156,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8097,
											"end": 8156,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8097,
											"end": 8156,
											"name": "tag",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 8097,
											"end": 8156,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8097,
											"end": 8160,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 8097,
											"end": 8160,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8097,
											"end": 8165,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8097,
											"end": 8165,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8097,
											"end": 8165,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8097,
											"end": 8165,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8097,
											"end": 8165,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8097,
											"end": 8165,
											"name": "tag",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 8097,
											"end": 8165,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8053,
											"end": 8060,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 8053,
											"end": 8072,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8061,
											"end": 8071,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 8053,
											"end": 8072,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8053,
											"end": 8072,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8053,
											"end": 8072,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8053,
											"end": 8072,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8053,
											"end": 8072,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8053,
											"end": 8072,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8053,
											"end": 8072,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8053,
											"end": 8072,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8053,
											"end": 8072,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8053,
											"end": 8072,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8053,
											"end": 8072,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8053,
											"end": 8072,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8053,
											"end": 8072,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8053,
											"end": 8072,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8053,
											"end": 8072,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 8053,
											"end": 8092,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8053,
											"end": 8092,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8053,
											"end": 8092,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8053,
											"end": 8096,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 8053,
											"end": 8096,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8053,
											"end": 8166,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8053,
											"end": 8166,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8053,
											"end": 8166,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8053,
											"end": 8166,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8053,
											"end": 8166,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8053,
											"end": 8166,
											"name": "tag",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 8053,
											"end": 8166,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8029,
											"end": 8166,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8029,
											"end": 8166,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8211,
											"end": 8212,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8195,
											"end": 8208,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8195,
											"end": 8212,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 8187,
											"end": 8233,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 8187,
											"end": 8233,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8187,
											"end": 8233,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8187,
											"end": 8233,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8187,
											"end": 8233,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8187,
											"end": 8233,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8187,
											"end": 8233,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8187,
											"end": 8233,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8187,
											"end": 8233,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8187,
											"end": 8233,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 8187,
											"end": 8233,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8187,
											"end": 8233,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 8187,
											"end": 8233,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8187,
											"end": 8233,
											"name": "tag",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 8187,
											"end": 8233,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8187,
											"end": 8233,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8187,
											"end": 8233,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8187,
											"end": 8233,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8187,
											"end": 8233,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8187,
											"end": 8233,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8187,
											"end": 8233,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8187,
											"end": 8233,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8187,
											"end": 8233,
											"name": "tag",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 8187,
											"end": 8233,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8264,
											"end": 8269,
											"name": "PUSH",
											"source": 7,
											"value": "C"
										},
										{
											"begin": 8264,
											"end": 8269,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8264,
											"end": 8269,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8264,
											"end": 8269,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8264,
											"end": 8269,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8264,
											"end": 8269,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 8264,
											"end": 8269,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 8264,
											"end": 8269,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8264,
											"end": 8269,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 8264,
											"end": 8269,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8264,
											"end": 8269,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8264,
											"end": 8279,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8264,
											"end": 8279,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8264,
											"end": 8279,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 8288,
											"end": 8292,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 8264,
											"end": 8294,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8264,
											"end": 8294,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8264,
											"end": 8294,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8264,
											"end": 8294,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8264,
											"end": 8294,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8264,
											"end": 8294,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 8264,
											"end": 8294,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 8264,
											"end": 8294,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8264,
											"end": 8294,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8264,
											"end": 8294,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8264,
											"end": 8294,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8264,
											"end": 8294,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 8264,
											"end": 8294,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8264,
											"end": 8294,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8264,
											"end": 8294,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 8264,
											"end": 8294,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8264,
											"end": 8294,
											"name": "tag",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 8264,
											"end": 8294,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8264,
											"end": 8294,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8264,
											"end": 8294,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8264,
											"end": 8294,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8264,
											"end": 8294,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8264,
											"end": 8294,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8264,
											"end": 8294,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8264,
											"end": 8294,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8264,
											"end": 8294,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 8264,
											"end": 8294,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 8264,
											"end": 8294,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 8264,
											"end": 8294,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8264,
											"end": 8294,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8264,
											"end": 8294,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8264,
											"end": 8294,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 8264,
											"end": 8294,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8264,
											"end": 8294,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 8264,
											"end": 8294,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8264,
											"end": 8294,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8264,
											"end": 8294,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 8264,
											"end": 8294,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 8264,
											"end": 8294,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8264,
											"end": 8294,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8264,
											"end": 8294,
											"name": "tag",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 8264,
											"end": 8294,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8264,
											"end": 8294,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8264,
											"end": 8294,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8264,
											"end": 8294,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8264,
											"end": 8294,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8264,
											"end": 8294,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8264,
											"end": 8294,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8264,
											"end": 8294,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 8264,
											"end": 8294,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 8264,
											"end": 8294,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 8264,
											"end": 8294,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 8264,
											"end": 8294,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8264,
											"end": 8294,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8264,
											"end": 8294,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8264,
											"end": 8294,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8264,
											"end": 8294,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8264,
											"end": 8294,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8264,
											"end": 8294,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8264,
											"end": 8294,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8264,
											"end": 8294,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8264,
											"end": 8294,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8264,
											"end": 8294,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8264,
											"end": 8294,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8264,
											"end": 8294,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 8264,
											"end": 8294,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8264,
											"end": 8294,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8264,
											"end": 8294,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 8264,
											"end": 8294,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8264,
											"end": 8294,
											"name": "tag",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 8264,
											"end": 8294,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8248,
											"end": 8261,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8248,
											"end": 8294,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 8244,
											"end": 8355,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8244,
											"end": 8355,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 8244,
											"end": 8355,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8325,
											"end": 8330,
											"name": "PUSH",
											"source": 7,
											"value": "C"
										},
										{
											"begin": 8325,
											"end": 8330,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8325,
											"end": 8330,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8325,
											"end": 8330,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8325,
											"end": 8330,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8325,
											"end": 8330,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 8325,
											"end": 8330,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 8325,
											"end": 8330,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8325,
											"end": 8330,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 8325,
											"end": 8330,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8325,
											"end": 8330,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8325,
											"end": 8340,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8325,
											"end": 8340,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8325,
											"end": 8340,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 8349,
											"end": 8353,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 8325,
											"end": 8355,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8325,
											"end": 8355,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8325,
											"end": 8355,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8325,
											"end": 8355,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8325,
											"end": 8355,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8325,
											"end": 8355,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 8325,
											"end": 8355,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 8325,
											"end": 8355,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8325,
											"end": 8355,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8325,
											"end": 8355,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8325,
											"end": 8355,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8325,
											"end": 8355,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 8325,
											"end": 8355,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8325,
											"end": 8355,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8325,
											"end": 8355,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 8325,
											"end": 8355,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8325,
											"end": 8355,
											"name": "tag",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 8325,
											"end": 8355,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8325,
											"end": 8355,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8325,
											"end": 8355,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8325,
											"end": 8355,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8325,
											"end": 8355,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8325,
											"end": 8355,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8325,
											"end": 8355,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8325,
											"end": 8355,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8325,
											"end": 8355,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 8325,
											"end": 8355,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 8325,
											"end": 8355,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 8325,
											"end": 8355,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8325,
											"end": 8355,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8325,
											"end": 8355,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8325,
											"end": 8355,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 8325,
											"end": 8355,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8325,
											"end": 8355,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 8325,
											"end": 8355,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8325,
											"end": 8355,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8325,
											"end": 8355,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 8325,
											"end": 8355,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 8325,
											"end": 8355,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8325,
											"end": 8355,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8325,
											"end": 8355,
											"name": "tag",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 8325,
											"end": 8355,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8325,
											"end": 8355,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8325,
											"end": 8355,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8325,
											"end": 8355,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8325,
											"end": 8355,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8325,
											"end": 8355,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8325,
											"end": 8355,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8325,
											"end": 8355,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 8325,
											"end": 8355,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 8325,
											"end": 8355,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 8325,
											"end": 8355,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 8325,
											"end": 8355,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8325,
											"end": 8355,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8325,
											"end": 8355,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8325,
											"end": 8355,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8325,
											"end": 8355,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8325,
											"end": 8355,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8325,
											"end": 8355,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8325,
											"end": 8355,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8325,
											"end": 8355,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8325,
											"end": 8355,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8325,
											"end": 8355,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8325,
											"end": 8355,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8325,
											"end": 8355,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 8325,
											"end": 8355,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8325,
											"end": 8355,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8325,
											"end": 8355,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 8325,
											"end": 8355,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8325,
											"end": 8355,
											"name": "tag",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 8325,
											"end": 8355,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8309,
											"end": 8355,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8309,
											"end": 8355,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8244,
											"end": 8355,
											"name": "tag",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 8244,
											"end": 8355,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8366,
											"end": 8411,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 8385,
											"end": 8395,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 8397,
											"end": 8410,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8366,
											"end": 8371,
											"name": "PUSH",
											"source": 7,
											"value": "C"
										},
										{
											"begin": 8366,
											"end": 8371,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8366,
											"end": 8371,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8366,
											"end": 8371,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8366,
											"end": 8371,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8366,
											"end": 8371,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 8366,
											"end": 8371,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 8366,
											"end": 8371,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8366,
											"end": 8371,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 8366,
											"end": 8371,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8366,
											"end": 8371,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8366,
											"end": 8384,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8366,
											"end": 8384,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8366,
											"end": 8384,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 8366,
											"end": 8384,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8366,
											"end": 8411,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8366,
											"end": 8411,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8366,
											"end": 8411,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8366,
											"end": 8411,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8366,
											"end": 8411,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8366,
											"end": 8411,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8366,
											"end": 8411,
											"name": "tag",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 8366,
											"end": 8411,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8464,
											"end": 8465,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8422,
											"end": 8429,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 8422,
											"end": 8441,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8430,
											"end": 8440,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 8422,
											"end": 8441,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8422,
											"end": 8441,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8422,
											"end": 8441,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8422,
											"end": 8441,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8422,
											"end": 8441,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8422,
											"end": 8441,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8422,
											"end": 8441,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8422,
											"end": 8441,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8422,
											"end": 8441,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8422,
											"end": 8441,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8422,
											"end": 8441,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8422,
											"end": 8441,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8422,
											"end": 8441,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8422,
											"end": 8441,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8422,
											"end": 8441,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 8422,
											"end": 8461,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8422,
											"end": 8461,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8422,
											"end": 8465,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8422,
											"end": 8465,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8422,
											"end": 8465,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 8422,
											"end": 8465,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8491,
											"end": 8525,
											"name": "PUSH",
											"source": 7,
											"value": "C9695243A805ADB74C91F28311176C65B417E842D5699893CEF56D18BFA48CBA"
										},
										{
											"begin": 8499,
											"end": 8509,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 8511,
											"end": 8524,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8491,
											"end": 8525,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8491,
											"end": 8525,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8491,
											"end": 8525,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 8491,
											"end": 8525,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8491,
											"end": 8525,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8491,
											"end": 8525,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8491,
											"end": 8525,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 8491,
											"end": 8525,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8491,
											"end": 8525,
											"name": "tag",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 8491,
											"end": 8525,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8491,
											"end": 8525,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8491,
											"end": 8525,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8491,
											"end": 8525,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8491,
											"end": 8525,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8491,
											"end": 8525,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8491,
											"end": 8525,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8491,
											"end": 8525,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 7983,
											"end": 8533,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7958,
											"end": 8533,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 4771,
											"end": 5173,
											"name": "tag",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 4771,
											"end": 5173,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4828,
											"end": 4835,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4882,
											"end": 4886,
											"name": "PUSH",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 4854,
											"end": 4861,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 4854,
											"end": 4871,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4862,
											"end": 4870,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4854,
											"end": 4871,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4854,
											"end": 4871,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4854,
											"end": 4871,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4854,
											"end": 4871,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4854,
											"end": 4871,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4854,
											"end": 4871,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4854,
											"end": 4871,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4854,
											"end": 4871,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4854,
											"end": 4871,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4854,
											"end": 4871,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4854,
											"end": 4871,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4854,
											"end": 4871,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4854,
											"end": 4871,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4854,
											"end": 4871,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4854,
											"end": 4871,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4854,
											"end": 4878,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 4854,
											"end": 4878,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4854,
											"end": 4878,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4854,
											"end": 4886,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4850,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 4850,
											"end": 4909,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4908,
											"end": 4909,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4901,
											"end": 4909,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4901,
											"end": 4909,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4901,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 4901,
											"end": 4909,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4850,
											"end": 4909,
											"name": "tag",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 4850,
											"end": 4909,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4950,
											"end": 4951,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4924,
											"end": 4931,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 4924,
											"end": 4941,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4932,
											"end": 4940,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4924,
											"end": 4941,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4924,
											"end": 4941,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4924,
											"end": 4941,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4924,
											"end": 4941,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4924,
											"end": 4941,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4924,
											"end": 4941,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4924,
											"end": 4941,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4924,
											"end": 4941,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4924,
											"end": 4941,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4924,
											"end": 4941,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4924,
											"end": 4941,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4924,
											"end": 4941,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4924,
											"end": 4941,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4924,
											"end": 4941,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4924,
											"end": 4941,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4924,
											"end": 4946,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 4924,
											"end": 4946,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4924,
											"end": 4946,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4924,
											"end": 4951,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4920,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 4920,
											"end": 5165,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5041,
											"end": 5042,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5030,
											"end": 5036,
											"name": "PUSH",
											"source": 7,
											"value": "93A80"
										},
										{
											"begin": 4973,
											"end": 5026,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 4993,
											"end": 5000,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 4993,
											"end": 5010,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5001,
											"end": 5009,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4993,
											"end": 5010,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4993,
											"end": 5010,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4993,
											"end": 5010,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4993,
											"end": 5010,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4993,
											"end": 5010,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4993,
											"end": 5010,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4993,
											"end": 5010,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4993,
											"end": 5010,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4993,
											"end": 5010,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4993,
											"end": 5010,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4993,
											"end": 5010,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4993,
											"end": 5010,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4993,
											"end": 5010,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4993,
											"end": 5010,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4993,
											"end": 5010,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4993,
											"end": 5025,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 4993,
											"end": 5025,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4993,
											"end": 5025,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4973,
											"end": 4988,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 4973,
											"end": 4992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 4973,
											"end": 4992,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4973,
											"end": 5026,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4973,
											"end": 5026,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4973,
											"end": 5026,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4973,
											"end": 5026,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4973,
											"end": 5026,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4973,
											"end": 5026,
											"name": "tag",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 4973,
											"end": 5026,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4973,
											"end": 5037,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 4973,
											"end": 5037,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4973,
											"end": 5037,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4973,
											"end": 5037,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 4973,
											"end": 5037,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4973,
											"end": 5037,
											"name": "tag",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 4973,
											"end": 5037,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4973,
											"end": 5042,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4973,
											"end": 5050,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 4973,
											"end": 5050,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5049,
											"end": 5050,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4973,
											"end": 5050,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 4973,
											"end": 5050,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4973,
											"end": 5050,
											"name": "tag",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 4973,
											"end": 5050,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5045,
											"end": 5046,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4973,
											"end": 5050,
											"name": "tag",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 4973,
											"end": 5050,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4966,
											"end": 5050,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 4966,
											"end": 5050,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4966,
											"end": 5050,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4966,
											"end": 5050,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4966,
											"end": 5050,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 4966,
											"end": 5050,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4920,
											"end": 5165,
											"name": "tag",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 4920,
											"end": 5165,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5144,
											"end": 5157,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 5144,
											"end": 5157,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5087,
											"end": 5140,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 5107,
											"end": 5114,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 5107,
											"end": 5124,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5115,
											"end": 5123,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5107,
											"end": 5124,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5107,
											"end": 5124,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5107,
											"end": 5124,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5107,
											"end": 5124,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5107,
											"end": 5124,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5107,
											"end": 5124,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5107,
											"end": 5124,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5107,
											"end": 5124,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5107,
											"end": 5124,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5107,
											"end": 5124,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5107,
											"end": 5124,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5107,
											"end": 5124,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5107,
											"end": 5124,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5107,
											"end": 5124,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5107,
											"end": 5124,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 5107,
											"end": 5139,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 5107,
											"end": 5139,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5107,
											"end": 5139,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5087,
											"end": 5102,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 5087,
											"end": 5106,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 5087,
											"end": 5106,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5087,
											"end": 5140,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5087,
											"end": 5140,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5087,
											"end": 5140,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5087,
											"end": 5140,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5087,
											"end": 5140,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5087,
											"end": 5140,
											"name": "tag",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 5087,
											"end": 5140,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5087,
											"end": 5157,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 5087,
											"end": 5157,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5087,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 5087,
											"end": 5165,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5164,
											"end": 5165,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 5087,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 5087,
											"end": 5165,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5087,
											"end": 5165,
											"name": "tag",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 5087,
											"end": 5165,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5160,
											"end": 5161,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5087,
											"end": 5165,
											"name": "tag",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 5087,
											"end": 5165,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5080,
											"end": 5165,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 5080,
											"end": 5165,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5080,
											"end": 5165,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5080,
											"end": 5165,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4771,
											"end": 5173,
											"name": "tag",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 4771,
											"end": 5173,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4771,
											"end": 5173,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4771,
											"end": 5173,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4771,
											"end": 5173,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4771,
											"end": 5173,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 7525,
											"end": 7695,
											"name": "tag",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 7525,
											"end": 7695,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7621,
											"end": 7622,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7608,
											"end": 7618,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7608,
											"end": 7622,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 7600,
											"end": 7640,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 7600,
											"end": 7640,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7600,
											"end": 7640,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7600,
											"end": 7640,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7600,
											"end": 7640,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7600,
											"end": 7640,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7600,
											"end": 7640,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7600,
											"end": 7640,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7600,
											"end": 7640,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7600,
											"end": 7640,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 7600,
											"end": 7640,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7600,
											"end": 7640,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 7600,
											"end": 7640,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7600,
											"end": 7640,
											"name": "tag",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 7600,
											"end": 7640,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7600,
											"end": 7640,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7600,
											"end": 7640,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7600,
											"end": 7640,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7600,
											"end": 7640,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7600,
											"end": 7640,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7600,
											"end": 7640,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7600,
											"end": 7640,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7600,
											"end": 7640,
											"name": "tag",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 7600,
											"end": 7640,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7677,
											"end": 7687,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7661,
											"end": 7674,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 7661,
											"end": 7687,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7661,
											"end": 7687,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7661,
											"end": 7687,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 7661,
											"end": 7687,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7525,
											"end": 7695,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7525,
											"end": 7695,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2746,
											"end": 3625,
											"name": "tag",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 2746,
											"end": 3625,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2848,
											"end": 2849,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2838,
											"end": 2845,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2838,
											"end": 2849,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2830,
											"end": 2885,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 2830,
											"end": 2885,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2830,
											"end": 2885,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2885,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2830,
											"end": 2885,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2830,
											"end": 2885,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2830,
											"end": 2885,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2830,
											"end": 2885,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2830,
											"end": 2885,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2830,
											"end": 2885,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 2830,
											"end": 2885,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2830,
											"end": 2885,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 2830,
											"end": 2885,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2830,
											"end": 2885,
											"name": "tag",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 2830,
											"end": 2885,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2830,
											"end": 2885,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2885,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2830,
											"end": 2885,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2830,
											"end": 2885,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2830,
											"end": 2885,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2830,
											"end": 2885,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2830,
											"end": 2885,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2830,
											"end": 2885,
											"name": "tag",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 2830,
											"end": 2885,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2934,
											"end": 2941,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2904,
											"end": 2909,
											"name": "PUSH",
											"source": 7,
											"value": "C"
										},
										{
											"begin": 2904,
											"end": 2909,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2904,
											"end": 2909,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2904,
											"end": 2909,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2904,
											"end": 2909,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2904,
											"end": 2909,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2904,
											"end": 2909,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2904,
											"end": 2909,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2904,
											"end": 2909,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 2904,
											"end": 2909,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2904,
											"end": 2909,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2904,
											"end": 2919,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2904,
											"end": 2919,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2904,
											"end": 2919,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 2920,
											"end": 2930,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2904,
											"end": 2931,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2904,
											"end": 2931,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2904,
											"end": 2931,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2904,
											"end": 2931,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2904,
											"end": 2931,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2904,
											"end": 2931,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 2904,
											"end": 2931,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 2904,
											"end": 2931,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2904,
											"end": 2931,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2904,
											"end": 2931,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2904,
											"end": 2931,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2904,
											"end": 2931,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 2904,
											"end": 2931,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2904,
											"end": 2931,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2904,
											"end": 2931,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 2904,
											"end": 2931,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2904,
											"end": 2931,
											"name": "tag",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 2904,
											"end": 2931,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2904,
											"end": 2931,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2904,
											"end": 2931,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2904,
											"end": 2931,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2904,
											"end": 2931,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2904,
											"end": 2931,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2904,
											"end": 2931,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2904,
											"end": 2931,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2904,
											"end": 2931,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2904,
											"end": 2931,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 2904,
											"end": 2931,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 2904,
											"end": 2931,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2904,
											"end": 2931,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2904,
											"end": 2931,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2904,
											"end": 2931,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 2904,
											"end": 2931,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2904,
											"end": 2931,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2904,
											"end": 2931,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2904,
											"end": 2931,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2904,
											"end": 2931,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 2904,
											"end": 2931,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2904,
											"end": 2931,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2904,
											"end": 2931,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2904,
											"end": 2931,
											"name": "tag",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 2904,
											"end": 2931,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2904,
											"end": 2931,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2904,
											"end": 2931,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2904,
											"end": 2931,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2904,
											"end": 2931,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2904,
											"end": 2931,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2904,
											"end": 2931,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2904,
											"end": 2931,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2904,
											"end": 2931,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 2904,
											"end": 2931,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 2904,
											"end": 2931,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 2904,
											"end": 2931,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2904,
											"end": 2931,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2904,
											"end": 2931,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2904,
											"end": 2931,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2904,
											"end": 2931,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2904,
											"end": 2931,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2904,
											"end": 2931,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2904,
											"end": 2931,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2904,
											"end": 2931,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2904,
											"end": 2931,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2904,
											"end": 2931,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2904,
											"end": 2931,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2904,
											"end": 2931,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 2904,
											"end": 2931,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2904,
											"end": 2931,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2904,
											"end": 2931,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 2904,
											"end": 2931,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2904,
											"end": 2931,
											"name": "tag",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 2904,
											"end": 2931,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2904,
											"end": 2941,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2896,
											"end": 2959,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 2896,
											"end": 2959,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2896,
											"end": 2959,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2896,
											"end": 2959,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2896,
											"end": 2959,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2896,
											"end": 2959,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2896,
											"end": 2959,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2896,
											"end": 2959,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2896,
											"end": 2959,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2896,
											"end": 2959,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 2896,
											"end": 2959,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2896,
											"end": 2959,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 2896,
											"end": 2959,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2896,
											"end": 2959,
											"name": "tag",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 2896,
											"end": 2959,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2896,
											"end": 2959,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2896,
											"end": 2959,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2896,
											"end": 2959,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2896,
											"end": 2959,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2896,
											"end": 2959,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2896,
											"end": 2959,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2896,
											"end": 2959,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2896,
											"end": 2959,
											"name": "tag",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 2896,
											"end": 2959,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3008,
											"end": 3012,
											"name": "PUSH",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 2978,
											"end": 2985,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 2978,
											"end": 2997,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2986,
											"end": 2996,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2978,
											"end": 2997,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2978,
											"end": 2997,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2978,
											"end": 2997,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2978,
											"end": 2997,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2978,
											"end": 2997,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2978,
											"end": 2997,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2978,
											"end": 2997,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2978,
											"end": 2997,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2978,
											"end": 2997,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2978,
											"end": 2997,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2978,
											"end": 2997,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2978,
											"end": 2997,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2978,
											"end": 2997,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2978,
											"end": 2997,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2978,
											"end": 2997,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2978,
											"end": 3004,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 2978,
											"end": 3004,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2978,
											"end": 3004,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2978,
											"end": 3012,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2978,
											"end": 3012,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2970,
											"end": 3032,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 2970,
											"end": 3032,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2970,
											"end": 3032,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2970,
											"end": 3032,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2970,
											"end": 3032,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2970,
											"end": 3032,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2970,
											"end": 3032,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2970,
											"end": 3032,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2970,
											"end": 3032,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2970,
											"end": 3032,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 2970,
											"end": 3032,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2970,
											"end": 3032,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 2970,
											"end": 3032,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2970,
											"end": 3032,
											"name": "tag",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 2970,
											"end": 3032,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2970,
											"end": 3032,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2970,
											"end": 3032,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2970,
											"end": 3032,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2970,
											"end": 3032,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2970,
											"end": 3032,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2970,
											"end": 3032,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2970,
											"end": 3032,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2970,
											"end": 3032,
											"name": "tag",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 2970,
											"end": 3032,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3066,
											"end": 3067,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3057,
											"end": 3062,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3057,
											"end": 3067,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 3053,
											"end": 3396,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3053,
											"end": 3396,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 3053,
											"end": 3396,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3087,
											"end": 3088,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3077,
											"end": 3084,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3077,
											"end": 3088,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3069,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 3069,
											"end": 3089,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3069,
											"end": 3089,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3069,
											"end": 3089,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3069,
											"end": 3089,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3069,
											"end": 3089,
											"name": "tag",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 3069,
											"end": 3089,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3053,
											"end": 3396,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 3053,
											"end": 3396,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3053,
											"end": 3396,
											"name": "tag",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 3053,
											"end": 3396,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3118,
											"end": 3119,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3109,
											"end": 3114,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3109,
											"end": 3119,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 3105,
											"end": 3396,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3105,
											"end": 3396,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 3105,
											"end": 3396,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3140,
											"end": 3157,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 3140,
											"end": 3157,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3129,
											"end": 3136,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3129,
											"end": 3157,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3129,
											"end": 3157,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3121,
											"end": 3174,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 3121,
											"end": 3174,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3121,
											"end": 3174,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3121,
											"end": 3174,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3121,
											"end": 3174,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3121,
											"end": 3174,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3121,
											"end": 3174,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3121,
											"end": 3174,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3121,
											"end": 3174,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3121,
											"end": 3174,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 3121,
											"end": 3174,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3121,
											"end": 3174,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 3121,
											"end": 3174,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3121,
											"end": 3174,
											"name": "tag",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 3121,
											"end": 3174,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3121,
											"end": 3174,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3121,
											"end": 3174,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3121,
											"end": 3174,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3121,
											"end": 3174,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3121,
											"end": 3174,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3121,
											"end": 3174,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3121,
											"end": 3174,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3121,
											"end": 3174,
											"name": "tag",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 3121,
											"end": 3174,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3105,
											"end": 3396,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 3105,
											"end": 3396,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3105,
											"end": 3396,
											"name": "tag",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 3105,
											"end": 3396,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3203,
											"end": 3204,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 3194,
											"end": 3199,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3194,
											"end": 3204,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 3190,
											"end": 3396,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3190,
											"end": 3396,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 3190,
											"end": 3396,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3225,
											"end": 3242,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 3225,
											"end": 3242,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3214,
											"end": 3221,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3214,
											"end": 3242,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3214,
											"end": 3242,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3206,
											"end": 3259,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 3206,
											"end": 3259,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3206,
											"end": 3259,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3206,
											"end": 3259,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3206,
											"end": 3259,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3206,
											"end": 3259,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3206,
											"end": 3259,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3206,
											"end": 3259,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3206,
											"end": 3259,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3206,
											"end": 3259,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 3206,
											"end": 3259,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3206,
											"end": 3259,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 3206,
											"end": 3259,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3206,
											"end": 3259,
											"name": "tag",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 3206,
											"end": 3259,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3206,
											"end": 3259,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3206,
											"end": 3259,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3206,
											"end": 3259,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3206,
											"end": 3259,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3206,
											"end": 3259,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3206,
											"end": 3259,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3206,
											"end": 3259,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3206,
											"end": 3259,
											"name": "tag",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 3206,
											"end": 3259,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3190,
											"end": 3396,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 3190,
											"end": 3396,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3190,
											"end": 3396,
											"name": "tag",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 3190,
											"end": 3396,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3288,
											"end": 3289,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 3279,
											"end": 3284,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3279,
											"end": 3289,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 3275,
											"end": 3396,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3275,
											"end": 3396,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 3275,
											"end": 3396,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3310,
											"end": 3327,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 3310,
											"end": 3327,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3299,
											"end": 3306,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3299,
											"end": 3327,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3299,
											"end": 3327,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3291,
											"end": 3344,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 3291,
											"end": 3344,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3291,
											"end": 3344,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3291,
											"end": 3344,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3291,
											"end": 3344,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3291,
											"end": 3344,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3291,
											"end": 3344,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3291,
											"end": 3344,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3291,
											"end": 3344,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3291,
											"end": 3344,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 3291,
											"end": 3344,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3291,
											"end": 3344,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 3291,
											"end": 3344,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3291,
											"end": 3344,
											"name": "tag",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 3291,
											"end": 3344,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3291,
											"end": 3344,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3291,
											"end": 3344,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3291,
											"end": 3344,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3291,
											"end": 3344,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3291,
											"end": 3344,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3291,
											"end": 3344,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3291,
											"end": 3344,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3291,
											"end": 3344,
											"name": "tag",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 3291,
											"end": 3344,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3275,
											"end": 3396,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 3275,
											"end": 3396,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3275,
											"end": 3396,
											"name": "tag",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 3275,
											"end": 3396,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3378,
											"end": 3379,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3368,
											"end": 3375,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3368,
											"end": 3379,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3360,
											"end": 3396,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 3360,
											"end": 3396,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3360,
											"end": 3396,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3360,
											"end": 3396,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3360,
											"end": 3396,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3360,
											"end": 3396,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3360,
											"end": 3396,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3360,
											"end": 3396,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3360,
											"end": 3396,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3360,
											"end": 3396,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 3360,
											"end": 3396,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3360,
											"end": 3396,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 3360,
											"end": 3396,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3360,
											"end": 3396,
											"name": "tag",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 3360,
											"end": 3396,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3360,
											"end": 3396,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3360,
											"end": 3396,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3360,
											"end": 3396,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3360,
											"end": 3396,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3360,
											"end": 3396,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3360,
											"end": 3396,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3360,
											"end": 3396,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3360,
											"end": 3396,
											"name": "tag",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 3360,
											"end": 3396,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3275,
											"end": 3396,
											"name": "tag",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 3275,
											"end": 3396,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3190,
											"end": 3396,
											"name": "tag",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 3190,
											"end": 3396,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3105,
											"end": 3396,
											"name": "tag",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 3105,
											"end": 3396,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3053,
											"end": 3396,
											"name": "tag",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 3053,
											"end": 3396,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3444,
											"end": 3449,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3417,
											"end": 3424,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 3417,
											"end": 3436,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3425,
											"end": 3435,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3417,
											"end": 3436,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3417,
											"end": 3436,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3417,
											"end": 3436,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3417,
											"end": 3436,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3417,
											"end": 3436,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3417,
											"end": 3436,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3417,
											"end": 3436,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3417,
											"end": 3436,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3417,
											"end": 3436,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3417,
											"end": 3436,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3417,
											"end": 3436,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3417,
											"end": 3436,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3417,
											"end": 3436,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3417,
											"end": 3436,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3417,
											"end": 3436,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3417,
											"end": 3441,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 3417,
											"end": 3441,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3417,
											"end": 3449,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3417,
											"end": 3449,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3417,
											"end": 3449,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3417,
											"end": 3449,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3497,
											"end": 3512,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 3460,
											"end": 3467,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 3460,
											"end": 3479,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3468,
											"end": 3478,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3460,
											"end": 3479,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3460,
											"end": 3479,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3460,
											"end": 3479,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3460,
											"end": 3479,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3460,
											"end": 3479,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3460,
											"end": 3479,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3460,
											"end": 3479,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3460,
											"end": 3479,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3460,
											"end": 3479,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3460,
											"end": 3479,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3460,
											"end": 3479,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3460,
											"end": 3479,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3460,
											"end": 3479,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3460,
											"end": 3479,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3460,
											"end": 3479,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3460,
											"end": 3494,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 3460,
											"end": 3494,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3460,
											"end": 3512,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3460,
											"end": 3512,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3460,
											"end": 3512,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3460,
											"end": 3512,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3552,
											"end": 3556,
											"name": "PUSH",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 3523,
											"end": 3530,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 3523,
											"end": 3542,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3531,
											"end": 3541,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3523,
											"end": 3542,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3523,
											"end": 3542,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3523,
											"end": 3542,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3523,
											"end": 3542,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3523,
											"end": 3542,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3523,
											"end": 3542,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3523,
											"end": 3542,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3523,
											"end": 3542,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3523,
											"end": 3542,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3523,
											"end": 3542,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3523,
											"end": 3542,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3523,
											"end": 3542,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3523,
											"end": 3542,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3523,
											"end": 3542,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3523,
											"end": 3542,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3523,
											"end": 3549,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 3523,
											"end": 3549,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3523,
											"end": 3556,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3523,
											"end": 3556,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3523,
											"end": 3556,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3523,
											"end": 3556,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3567,
											"end": 3575,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 3581,
											"end": 3591,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3567,
											"end": 3592,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3567,
											"end": 3592,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3567,
											"end": 3592,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3567,
											"end": 3592,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3567,
											"end": 3592,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3567,
											"end": 3592,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3567,
											"end": 3592,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3567,
											"end": 3592,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3567,
											"end": 3592,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3567,
											"end": 3592,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3567,
											"end": 3592,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3567,
											"end": 3592,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3567,
											"end": 3592,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3567,
											"end": 3592,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3567,
											"end": 3592,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3567,
											"end": 3592,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3567,
											"end": 3592,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3567,
											"end": 3592,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3567,
											"end": 3592,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3567,
											"end": 3592,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3567,
											"end": 3592,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3567,
											"end": 3592,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3567,
											"end": 3592,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3567,
											"end": 3592,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3567,
											"end": 3592,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3567,
											"end": 3592,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3567,
											"end": 3592,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3567,
											"end": 3592,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3567,
											"end": 3592,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3567,
											"end": 3592,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3567,
											"end": 3592,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 3567,
											"end": 3592,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 3567,
											"end": 3592,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3567,
											"end": 3592,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3567,
											"end": 3592,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3567,
											"end": 3592,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3567,
											"end": 3592,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3567,
											"end": 3592,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 3567,
											"end": 3592,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3567,
											"end": 3592,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3567,
											"end": 3592,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3567,
											"end": 3592,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3567,
											"end": 3592,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3567,
											"end": 3592,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3567,
											"end": 3592,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 3567,
											"end": 3592,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3567,
											"end": 3592,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3567,
											"end": 3592,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3603,
											"end": 3617,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 3609,
											"end": 3616,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3603,
											"end": 3608,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 3603,
											"end": 3617,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3603,
											"end": 3617,
											"name": "tag",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 3603,
											"end": 3617,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2746,
											"end": 3625,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2746,
											"end": 3625,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2746,
											"end": 3625,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 4386,
											"end": 4489,
											"name": "tag",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 4386,
											"end": 4489,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4437,
											"end": 4444,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4466,
											"end": 4474,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 4466,
											"end": 4481,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4466,
											"end": 4481,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4466,
											"end": 4481,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4466,
											"end": 4481,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4459,
											"end": 4481,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4459,
											"end": 4481,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4386,
											"end": 4489,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4386,
											"end": 4489,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 7758,
											"end": 7917,
											"name": "tag",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 7758,
											"end": 7917,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7806,
											"end": 7813,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7870,
											"end": 7877,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 7870,
											"end": 7889,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7878,
											"end": 7888,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 7870,
											"end": 7889,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7870,
											"end": 7889,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7870,
											"end": 7889,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7870,
											"end": 7889,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7870,
											"end": 7889,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7870,
											"end": 7889,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7870,
											"end": 7889,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7870,
											"end": 7889,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7870,
											"end": 7889,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7870,
											"end": 7889,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7870,
											"end": 7889,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7870,
											"end": 7889,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7870,
											"end": 7889,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7870,
											"end": 7889,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7870,
											"end": 7889,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 7870,
											"end": 7909,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7870,
											"end": 7909,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7870,
											"end": 7909,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7863,
											"end": 7909,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7863,
											"end": 7909,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7758,
											"end": 7917,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7758,
											"end": 7917,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 5333,
											"end": 5468,
											"name": "tag",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 5333,
											"end": 5468,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5394,
											"end": 5401,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5423,
											"end": 5430,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 5423,
											"end": 5440,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5431,
											"end": 5439,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5423,
											"end": 5440,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5423,
											"end": 5440,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5423,
											"end": 5440,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5423,
											"end": 5440,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5423,
											"end": 5440,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5423,
											"end": 5440,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5423,
											"end": 5440,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5423,
											"end": 5440,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5423,
											"end": 5440,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5423,
											"end": 5440,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5423,
											"end": 5440,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5423,
											"end": 5440,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5423,
											"end": 5440,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5423,
											"end": 5440,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5423,
											"end": 5440,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 5423,
											"end": 5460,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5423,
											"end": 5460,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5423,
											"end": 5460,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5416,
											"end": 5460,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5416,
											"end": 5460,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5333,
											"end": 5468,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5333,
											"end": 5468,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5333,
											"end": 5468,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5333,
											"end": 5468,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 6987,
											"end": 7235,
											"name": "tag",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 6987,
											"end": 7235,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7098,
											"end": 7099,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7082,
											"end": 7095,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7082,
											"end": 7099,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 7074,
											"end": 7127,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 7074,
											"end": 7127,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7074,
											"end": 7127,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7074,
											"end": 7127,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7074,
											"end": 7127,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7074,
											"end": 7127,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7074,
											"end": 7127,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7074,
											"end": 7127,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7074,
											"end": 7127,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7074,
											"end": 7127,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 7074,
											"end": 7127,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7074,
											"end": 7127,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 7074,
											"end": 7127,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7074,
											"end": 7127,
											"name": "tag",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 7074,
											"end": 7127,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7074,
											"end": 7127,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7074,
											"end": 7127,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7074,
											"end": 7127,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7074,
											"end": 7127,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7074,
											"end": 7127,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7074,
											"end": 7127,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7074,
											"end": 7127,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7074,
											"end": 7127,
											"name": "tag",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 7074,
											"end": 7127,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7155,
											"end": 7180,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 7173,
											"end": 7179,
											"name": "PUSH",
											"source": 7,
											"value": "15180"
										},
										{
											"begin": 7155,
											"end": 7168,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7155,
											"end": 7172,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 7155,
											"end": 7172,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7155,
											"end": 7180,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7155,
											"end": 7180,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7155,
											"end": 7180,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7155,
											"end": 7180,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7155,
											"end": 7180,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7155,
											"end": 7180,
											"name": "tag",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 7155,
											"end": 7180,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7140,
											"end": 7152,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 7140,
											"end": 7180,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7140,
											"end": 7180,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7140,
											"end": 7180,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 7140,
											"end": 7180,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7198,
											"end": 7227,
											"name": "PUSH",
											"source": 7,
											"value": "189BDA9782663C67A3F95C0AA5455924C711210B00281C60EAD2F0DD8DBC924C"
										},
										{
											"begin": 7213,
											"end": 7226,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7198,
											"end": 7227,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7198,
											"end": 7227,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7198,
											"end": 7227,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 7198,
											"end": 7227,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7198,
											"end": 7227,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7198,
											"end": 7227,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 7198,
											"end": 7227,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7198,
											"end": 7227,
											"name": "tag",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 7198,
											"end": 7227,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7198,
											"end": 7227,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7198,
											"end": 7227,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7198,
											"end": 7227,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7198,
											"end": 7227,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7198,
											"end": 7227,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7198,
											"end": 7227,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7198,
											"end": 7227,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 6987,
											"end": 7235,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6987,
											"end": 7235,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5476,
											"end": 5570,
											"name": "tag",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 5476,
											"end": 5570,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5522,
											"end": 5529,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5551,
											"end": 5562,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 5551,
											"end": 5562,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5544,
											"end": 5562,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5544,
											"end": 5562,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5476,
											"end": 5570,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5476,
											"end": 5570,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1173,
											"end": 1199,
											"name": "tag",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 1173,
											"end": 1199,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1173,
											"end": 1199,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 1173,
											"end": 1199,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1173,
											"end": 1199,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1173,
											"end": 1199,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1114,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7243,
											"end": 7517,
											"name": "tag",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 7243,
											"end": 7517,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7369,
											"end": 7370,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7348,
											"end": 7366,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7348,
											"end": 7370,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 7340,
											"end": 7401,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 7340,
											"end": 7401,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7340,
											"end": 7401,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7340,
											"end": 7401,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7340,
											"end": 7401,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7340,
											"end": 7401,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7340,
											"end": 7401,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7340,
											"end": 7401,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7340,
											"end": 7401,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7340,
											"end": 7401,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 7340,
											"end": 7401,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7340,
											"end": 7401,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 7340,
											"end": 7401,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7340,
											"end": 7401,
											"name": "tag",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 7340,
											"end": 7401,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7340,
											"end": 7401,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7340,
											"end": 7401,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7340,
											"end": 7401,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7340,
											"end": 7401,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7340,
											"end": 7401,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7340,
											"end": 7401,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7340,
											"end": 7401,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7340,
											"end": 7401,
											"name": "tag",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 7340,
											"end": 7401,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7434,
											"end": 7452,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7414,
											"end": 7431,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 7414,
											"end": 7452,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7414,
											"end": 7452,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7414,
											"end": 7452,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 7414,
											"end": 7452,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7470,
											"end": 7509,
											"name": "PUSH",
											"source": 7,
											"value": "150C688DD7595BF7862B8AB1FE46756450EB7D731037942B3BBC46F3F0E21B81"
										},
										{
											"begin": 7490,
											"end": 7508,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7470,
											"end": 7509,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7470,
											"end": 7509,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7470,
											"end": 7509,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 7470,
											"end": 7509,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7470,
											"end": 7509,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7470,
											"end": 7509,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 7470,
											"end": 7509,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7470,
											"end": 7509,
											"name": "tag",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 7470,
											"end": 7509,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7470,
											"end": 7509,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7470,
											"end": 7509,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7470,
											"end": 7509,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7470,
											"end": 7509,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7470,
											"end": 7509,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7470,
											"end": 7509,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7470,
											"end": 7509,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 7243,
											"end": 7517,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7243,
											"end": 7517,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 6752,
											"end": 6979,
											"name": "tag",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 6752,
											"end": 6979,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6860,
											"end": 6861,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6845,
											"end": 6857,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6845,
											"end": 6861,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 6837,
											"end": 6879,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 6837,
											"end": 6879,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6837,
											"end": 6879,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6837,
											"end": 6879,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6837,
											"end": 6879,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6837,
											"end": 6879,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6837,
											"end": 6879,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6837,
											"end": 6879,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6837,
											"end": 6879,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6837,
											"end": 6879,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 6837,
											"end": 6879,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6837,
											"end": 6879,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 6837,
											"end": 6879,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6837,
											"end": 6879,
											"name": "tag",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 6837,
											"end": 6879,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6837,
											"end": 6879,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6837,
											"end": 6879,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6837,
											"end": 6879,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6837,
											"end": 6879,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6837,
											"end": 6879,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6837,
											"end": 6879,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6837,
											"end": 6879,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6837,
											"end": 6879,
											"name": "tag",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 6837,
											"end": 6879,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6914,
											"end": 6926,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6900,
											"end": 6911,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 6900,
											"end": 6926,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6900,
											"end": 6926,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6900,
											"end": 6926,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 6900,
											"end": 6926,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6944,
											"end": 6971,
											"name": "PUSH",
											"source": 7,
											"value": "1946FB78C7CA778B54D82CABAAC5BA67CF446F58D0FF1F8CEAEBB6150E54E44F"
										},
										{
											"begin": 6958,
											"end": 6970,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6944,
											"end": 6971,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6944,
											"end": 6971,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6944,
											"end": 6971,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 6944,
											"end": 6971,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6944,
											"end": 6971,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6944,
											"end": 6971,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 6944,
											"end": 6971,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6944,
											"end": 6971,
											"name": "tag",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 6944,
											"end": 6971,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6944,
											"end": 6971,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6944,
											"end": 6971,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6944,
											"end": 6971,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6944,
											"end": 6971,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6944,
											"end": 6971,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6944,
											"end": 6971,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6944,
											"end": 6971,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 6752,
											"end": 6979,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6752,
											"end": 6979,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 3693,
											"end": 4275,
											"name": "tag",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 3693,
											"end": 4275,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3770,
											"end": 3771,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3760,
											"end": 3767,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3760,
											"end": 3771,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3752,
											"end": 3807,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 3752,
											"end": 3807,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3752,
											"end": 3807,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3752,
											"end": 3807,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3752,
											"end": 3807,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3752,
											"end": 3807,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3752,
											"end": 3807,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3752,
											"end": 3807,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3752,
											"end": 3807,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3752,
											"end": 3807,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 3752,
											"end": 3807,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3752,
											"end": 3807,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 3752,
											"end": 3807,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3752,
											"end": 3807,
											"name": "tag",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 3752,
											"end": 3807,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3752,
											"end": 3807,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3752,
											"end": 3807,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3752,
											"end": 3807,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3752,
											"end": 3807,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3752,
											"end": 3807,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3752,
											"end": 3807,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3752,
											"end": 3807,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3752,
											"end": 3807,
											"name": "tag",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 3752,
											"end": 3807,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3856,
											"end": 3863,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3826,
											"end": 3831,
											"name": "PUSH",
											"source": 7,
											"value": "C"
										},
										{
											"begin": 3826,
											"end": 3831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3826,
											"end": 3831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3826,
											"end": 3831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3826,
											"end": 3831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3826,
											"end": 3831,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 3826,
											"end": 3831,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 3826,
											"end": 3831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3826,
											"end": 3831,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 3826,
											"end": 3831,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3826,
											"end": 3831,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3826,
											"end": 3841,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3826,
											"end": 3841,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3826,
											"end": 3841,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 3842,
											"end": 3852,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3826,
											"end": 3853,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3826,
											"end": 3853,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3826,
											"end": 3853,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3826,
											"end": 3853,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3826,
											"end": 3853,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3826,
											"end": 3853,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 3826,
											"end": 3853,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 3826,
											"end": 3853,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3826,
											"end": 3853,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3826,
											"end": 3853,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3826,
											"end": 3853,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3826,
											"end": 3853,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 3826,
											"end": 3853,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3826,
											"end": 3853,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3826,
											"end": 3853,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 3826,
											"end": 3853,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3826,
											"end": 3853,
											"name": "tag",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 3826,
											"end": 3853,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3826,
											"end": 3853,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3826,
											"end": 3853,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3826,
											"end": 3853,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3826,
											"end": 3853,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3826,
											"end": 3853,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3826,
											"end": 3853,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3826,
											"end": 3853,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3826,
											"end": 3853,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3826,
											"end": 3853,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 3826,
											"end": 3853,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 3826,
											"end": 3853,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3826,
											"end": 3853,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3826,
											"end": 3853,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3826,
											"end": 3853,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 3826,
											"end": 3853,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3826,
											"end": 3853,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3826,
											"end": 3853,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3826,
											"end": 3853,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3826,
											"end": 3853,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 3826,
											"end": 3853,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3826,
											"end": 3853,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3826,
											"end": 3853,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3826,
											"end": 3853,
											"name": "tag",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 3826,
											"end": 3853,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3826,
											"end": 3853,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3826,
											"end": 3853,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3826,
											"end": 3853,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3826,
											"end": 3853,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3826,
											"end": 3853,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3826,
											"end": 3853,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3826,
											"end": 3853,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3826,
											"end": 3853,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3826,
											"end": 3853,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 3826,
											"end": 3853,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3826,
											"end": 3853,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3826,
											"end": 3853,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3826,
											"end": 3853,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3826,
											"end": 3853,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3826,
											"end": 3853,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3826,
											"end": 3853,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3826,
											"end": 3853,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3826,
											"end": 3853,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3826,
											"end": 3853,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3826,
											"end": 3853,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3826,
											"end": 3853,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3826,
											"end": 3853,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3826,
											"end": 3853,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 3826,
											"end": 3853,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3826,
											"end": 3853,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3826,
											"end": 3853,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 3826,
											"end": 3853,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3826,
											"end": 3853,
											"name": "tag",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 3826,
											"end": 3853,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3826,
											"end": 3863,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3818,
											"end": 3881,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 3818,
											"end": 3881,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3818,
											"end": 3881,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3818,
											"end": 3881,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3818,
											"end": 3881,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3818,
											"end": 3881,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3818,
											"end": 3881,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3818,
											"end": 3881,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3818,
											"end": 3881,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3818,
											"end": 3881,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 3818,
											"end": 3881,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3818,
											"end": 3881,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 3818,
											"end": 3881,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3818,
											"end": 3881,
											"name": "tag",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 3818,
											"end": 3881,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3818,
											"end": 3881,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3818,
											"end": 3881,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3818,
											"end": 3881,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3818,
											"end": 3881,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3818,
											"end": 3881,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3818,
											"end": 3881,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3818,
											"end": 3881,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3818,
											"end": 3881,
											"name": "tag",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 3818,
											"end": 3881,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3930,
											"end": 3934,
											"name": "PUSH",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 3900,
											"end": 3907,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 3900,
											"end": 3919,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3908,
											"end": 3918,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3900,
											"end": 3919,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3900,
											"end": 3919,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3900,
											"end": 3919,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3900,
											"end": 3919,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3900,
											"end": 3919,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3900,
											"end": 3919,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3900,
											"end": 3919,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3900,
											"end": 3919,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3900,
											"end": 3919,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3900,
											"end": 3919,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3900,
											"end": 3919,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3900,
											"end": 3919,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3900,
											"end": 3919,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3900,
											"end": 3919,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3900,
											"end": 3919,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3900,
											"end": 3926,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 3900,
											"end": 3926,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3900,
											"end": 3926,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3900,
											"end": 3934,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 3892,
											"end": 3960,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 3892,
											"end": 3960,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3892,
											"end": 3960,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3892,
											"end": 3960,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3892,
											"end": 3960,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3892,
											"end": 3960,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3892,
											"end": 3960,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3892,
											"end": 3960,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3892,
											"end": 3960,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3892,
											"end": 3960,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 3892,
											"end": 3960,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3892,
											"end": 3960,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 3892,
											"end": 3960,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3892,
											"end": 3960,
											"name": "tag",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 3892,
											"end": 3960,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3892,
											"end": 3960,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3892,
											"end": 3960,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3892,
											"end": 3960,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3892,
											"end": 3960,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3892,
											"end": 3960,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3892,
											"end": 3960,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3892,
											"end": 3960,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3892,
											"end": 3960,
											"name": "tag",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 3892,
											"end": 3960,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3981,
											"end": 3995,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 3981,
											"end": 3993,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 3981,
											"end": 3995,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3981,
											"end": 3995,
											"name": "tag",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 3981,
											"end": 3995,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4016,
											"end": 4074,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 4039,
											"end": 4049,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4059,
											"end": 4063,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 4066,
											"end": 4073,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4016,
											"end": 4021,
											"name": "PUSH",
											"source": 7,
											"value": "C"
										},
										{
											"begin": 4016,
											"end": 4021,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4016,
											"end": 4021,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4016,
											"end": 4021,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4016,
											"end": 4021,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4016,
											"end": 4021,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 4016,
											"end": 4021,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 4016,
											"end": 4021,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4016,
											"end": 4021,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 4016,
											"end": 4021,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4016,
											"end": 4021,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4016,
											"end": 4038,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4016,
											"end": 4038,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4016,
											"end": 4038,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 4016,
											"end": 4038,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4016,
											"end": 4074,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 4016,
											"end": 4074,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4016,
											"end": 4074,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4016,
											"end": 4074,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4016,
											"end": 4074,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4016,
											"end": 4074,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4016,
											"end": 4074,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4016,
											"end": 4074,
											"name": "tag",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 4016,
											"end": 4074,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4120,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 4157,
											"end": 4164,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4120,
											"end": 4127,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 4120,
											"end": 4139,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4128,
											"end": 4138,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4120,
											"end": 4139,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4120,
											"end": 4139,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4120,
											"end": 4139,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4120,
											"end": 4139,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4120,
											"end": 4139,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4120,
											"end": 4139,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4120,
											"end": 4139,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4120,
											"end": 4139,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4120,
											"end": 4139,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4120,
											"end": 4139,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4120,
											"end": 4139,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4120,
											"end": 4139,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4120,
											"end": 4139,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4120,
											"end": 4139,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4120,
											"end": 4139,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4120,
											"end": 4152,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4120,
											"end": 4152,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4120,
											"end": 4152,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4120,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 4120,
											"end": 4156,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4120,
											"end": 4165,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4120,
											"end": 4165,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4120,
											"end": 4165,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4120,
											"end": 4165,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4120,
											"end": 4165,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4120,
											"end": 4165,
											"name": "tag",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 4120,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4085,
											"end": 4092,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 4085,
											"end": 4104,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4093,
											"end": 4103,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4085,
											"end": 4104,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4085,
											"end": 4104,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4085,
											"end": 4104,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4085,
											"end": 4104,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4085,
											"end": 4104,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4085,
											"end": 4104,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4085,
											"end": 4104,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4085,
											"end": 4104,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4085,
											"end": 4104,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4085,
											"end": 4104,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4085,
											"end": 4104,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4085,
											"end": 4104,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4085,
											"end": 4104,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4085,
											"end": 4104,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4085,
											"end": 4104,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4085,
											"end": 4117,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4085,
											"end": 4117,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4085,
											"end": 4165,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4085,
											"end": 4165,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4085,
											"end": 4165,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 4085,
											"end": 4165,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4190,
											"end": 4214,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 4206,
											"end": 4213,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4190,
											"end": 4201,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 4190,
											"end": 4201,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4190,
											"end": 4205,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 4190,
											"end": 4205,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4190,
											"end": 4214,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4190,
											"end": 4214,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4190,
											"end": 4214,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4190,
											"end": 4214,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4190,
											"end": 4214,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4190,
											"end": 4214,
											"name": "tag",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 4190,
											"end": 4214,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4176,
											"end": 4187,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 4176,
											"end": 4214,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4176,
											"end": 4214,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4176,
											"end": 4214,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 4176,
											"end": 4214,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4240,
											"end": 4267,
											"name": "PUSH",
											"source": 7,
											"value": "9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D"
										},
										{
											"begin": 4247,
											"end": 4257,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4259,
											"end": 4266,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4240,
											"end": 4267,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4240,
											"end": 4267,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4240,
											"end": 4267,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 4240,
											"end": 4267,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4240,
											"end": 4267,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4240,
											"end": 4267,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4240,
											"end": 4267,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 4240,
											"end": 4267,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4240,
											"end": 4267,
											"name": "tag",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 4240,
											"end": 4267,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4240,
											"end": 4267,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4240,
											"end": 4267,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4240,
											"end": 4267,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4240,
											"end": 4267,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4240,
											"end": 4267,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4240,
											"end": 4267,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4240,
											"end": 4267,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 3693,
											"end": 4275,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3693,
											"end": 4275,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 4497,
											"end": 4631,
											"name": "tag",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 4497,
											"end": 4631,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4559,
											"end": 4566,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4614,
											"end": 4615,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4588,
											"end": 4595,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 4588,
											"end": 4605,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4596,
											"end": 4604,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4588,
											"end": 4605,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4588,
											"end": 4605,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4588,
											"end": 4605,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4588,
											"end": 4605,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4588,
											"end": 4605,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4588,
											"end": 4605,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4588,
											"end": 4605,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4588,
											"end": 4605,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4588,
											"end": 4605,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4588,
											"end": 4605,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4588,
											"end": 4605,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4588,
											"end": 4605,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4588,
											"end": 4605,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4588,
											"end": 4605,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4588,
											"end": 4605,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4588,
											"end": 4610,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 4588,
											"end": 4610,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4588,
											"end": 4610,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4588,
											"end": 4615,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4588,
											"end": 4623,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 4588,
											"end": 4623,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4622,
											"end": 4623,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4588,
											"end": 4623,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 4588,
											"end": 4623,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4588,
											"end": 4623,
											"name": "tag",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 4588,
											"end": 4623,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4618,
											"end": 4619,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4588,
											"end": 4623,
											"name": "tag",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 4588,
											"end": 4623,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4581,
											"end": 4623,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 4581,
											"end": 4623,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4581,
											"end": 4623,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4581,
											"end": 4623,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4497,
											"end": 4631,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4497,
											"end": 4631,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4497,
											"end": 4631,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4497,
											"end": 4631,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2026,
											"end": 2027,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2014,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "tag",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "tag",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 2100,
											"end": 2108,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2099,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "tag",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5185,
											"end": 5321,
											"name": "tag",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 5185,
											"end": 5321,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5246,
											"end": 5253,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5283,
											"end": 5290,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 5283,
											"end": 5300,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5291,
											"end": 5299,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5283,
											"end": 5300,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5283,
											"end": 5300,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5283,
											"end": 5300,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5283,
											"end": 5300,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5283,
											"end": 5300,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5283,
											"end": 5300,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5283,
											"end": 5300,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5283,
											"end": 5300,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5283,
											"end": 5300,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5283,
											"end": 5300,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5283,
											"end": 5300,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5283,
											"end": 5300,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5283,
											"end": 5300,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5283,
											"end": 5300,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5283,
											"end": 5300,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 5283,
											"end": 5313,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 5283,
											"end": 5313,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5283,
											"end": 5313,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5276,
											"end": 5313,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5276,
											"end": 5313,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5185,
											"end": 5321,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5185,
											"end": 5321,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5185,
											"end": 5321,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5185,
											"end": 5321,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1206,
											"end": 1225,
											"name": "tag",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 1206,
											"end": 1225,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1206,
											"end": 1225,
											"name": "PUSH",
											"source": 7,
											"value": "C"
										},
										{
											"begin": 1206,
											"end": 1225,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1206,
											"end": 1225,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1206,
											"end": 1225,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1206,
											"end": 1225,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1206,
											"end": 1225,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1206,
											"end": 1225,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 1206,
											"end": 1225,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1206,
											"end": 1225,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1206,
											"end": 1225,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1206,
											"end": 1225,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1206,
											"end": 1225,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1206,
											"end": 1225,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 4639,
											"end": 4763,
											"name": "tag",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 4639,
											"end": 4763,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4702,
											"end": 4709,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4731,
											"end": 4738,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 4731,
											"end": 4748,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4739,
											"end": 4747,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4731,
											"end": 4748,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4731,
											"end": 4748,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4731,
											"end": 4748,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4731,
											"end": 4748,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4731,
											"end": 4748,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4731,
											"end": 4748,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4731,
											"end": 4748,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4731,
											"end": 4748,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4731,
											"end": 4748,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4731,
											"end": 4748,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4731,
											"end": 4748,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4731,
											"end": 4748,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4731,
											"end": 4748,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4731,
											"end": 4748,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4731,
											"end": 4748,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4731,
											"end": 4755,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 4731,
											"end": 4755,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4731,
											"end": 4755,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4724,
											"end": 4755,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4724,
											"end": 4755,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4639,
											"end": 4763,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4639,
											"end": 4763,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4639,
											"end": 4763,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4639,
											"end": 4763,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2277,
											"end": 2734,
											"name": "tag",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 2277,
											"end": 2734,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2329,
											"end": 2355,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2358,
											"end": 2365,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 2358,
											"end": 2377,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2366,
											"end": 2376,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2358,
											"end": 2377,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2358,
											"end": 2377,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2358,
											"end": 2377,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2358,
											"end": 2377,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2358,
											"end": 2377,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2358,
											"end": 2377,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2358,
											"end": 2377,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2358,
											"end": 2377,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2358,
											"end": 2377,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2358,
											"end": 2377,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2358,
											"end": 2377,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2358,
											"end": 2377,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2358,
											"end": 2377,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2358,
											"end": 2377,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2358,
											"end": 2377,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2358,
											"end": 2390,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2358,
											"end": 2390,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2358,
											"end": 2390,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2329,
											"end": 2390,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2329,
											"end": 2390,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2411,
											"end": 2428,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2431,
											"end": 2551,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 2547,
											"end": 2550,
											"name": "PUSH",
											"source": 7,
											"value": "2710"
										},
										{
											"begin": 2431,
											"end": 2542,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 2530,
											"end": 2541,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 2530,
											"end": 2541,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2431,
											"end": 2525,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 2454,
											"end": 2524,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 2519,
											"end": 2523,
											"name": "PUSH",
											"source": 7,
											"value": "21C0"
										},
										{
											"begin": 2454,
											"end": 2514,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 2471,
											"end": 2478,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 2471,
											"end": 2490,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2479,
											"end": 2489,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2471,
											"end": 2490,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2471,
											"end": 2490,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2471,
											"end": 2490,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2471,
											"end": 2490,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2471,
											"end": 2490,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2471,
											"end": 2490,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2471,
											"end": 2490,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2471,
											"end": 2490,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2471,
											"end": 2490,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2471,
											"end": 2490,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2471,
											"end": 2490,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2471,
											"end": 2490,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2471,
											"end": 2490,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2471,
											"end": 2490,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2471,
											"end": 2490,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2471,
											"end": 2513,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2471,
											"end": 2513,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2471,
											"end": 2513,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2454,
											"end": 2466,
											"name": "NUMBER",
											"source": 7
										},
										{
											"begin": 2454,
											"end": 2470,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 2454,
											"end": 2470,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2454,
											"end": 2514,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2454,
											"end": 2514,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2454,
											"end": 2514,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2454,
											"end": 2514,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2454,
											"end": 2514,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2454,
											"end": 2514,
											"name": "tag",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 2454,
											"end": 2514,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2454,
											"end": 2518,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 2454,
											"end": 2518,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2454,
											"end": 2524,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2454,
											"end": 2524,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2454,
											"end": 2524,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2454,
											"end": 2524,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2454,
											"end": 2524,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2454,
											"end": 2524,
											"name": "tag",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 2454,
											"end": 2524,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2431,
											"end": 2449,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 2431,
											"end": 2453,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 2431,
											"end": 2453,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2431,
											"end": 2525,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2431,
											"end": 2525,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2431,
											"end": 2525,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2431,
											"end": 2525,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2431,
											"end": 2525,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2431,
											"end": 2525,
											"name": "tag",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 2431,
											"end": 2525,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2431,
											"end": 2529,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 2431,
											"end": 2529,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2431,
											"end": 2542,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2431,
											"end": 2542,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2431,
											"end": 2542,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2431,
											"end": 2542,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2431,
											"end": 2542,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2431,
											"end": 2542,
											"name": "tag",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 2431,
											"end": 2542,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2431,
											"end": 2546,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 2431,
											"end": 2546,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2431,
											"end": 2551,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2431,
											"end": 2551,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2431,
											"end": 2551,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2431,
											"end": 2551,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2431,
											"end": 2551,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2431,
											"end": 2551,
											"name": "tag",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 2431,
											"end": 2551,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2411,
											"end": 2551,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2411,
											"end": 2551,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2604,
											"end": 2658,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 2648,
											"end": 2657,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2604,
											"end": 2611,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 2604,
											"end": 2623,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2612,
											"end": 2622,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2604,
											"end": 2623,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2604,
											"end": 2623,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2604,
											"end": 2623,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2604,
											"end": 2623,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2604,
											"end": 2623,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2604,
											"end": 2623,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2604,
											"end": 2623,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2604,
											"end": 2623,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2604,
											"end": 2623,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2604,
											"end": 2623,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2604,
											"end": 2623,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2604,
											"end": 2623,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2604,
											"end": 2623,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2604,
											"end": 2623,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2604,
											"end": 2623,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2604,
											"end": 2643,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2604,
											"end": 2643,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2604,
											"end": 2643,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2604,
											"end": 2647,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 2604,
											"end": 2647,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2604,
											"end": 2658,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2604,
											"end": 2658,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2604,
											"end": 2658,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2604,
											"end": 2658,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2604,
											"end": 2658,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2604,
											"end": 2658,
											"name": "tag",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 2604,
											"end": 2658,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2562,
											"end": 2569,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 2562,
											"end": 2581,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2570,
											"end": 2580,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2562,
											"end": 2581,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2562,
											"end": 2581,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2562,
											"end": 2581,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2562,
											"end": 2581,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2562,
											"end": 2581,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2562,
											"end": 2581,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2562,
											"end": 2581,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2562,
											"end": 2581,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2562,
											"end": 2581,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2562,
											"end": 2581,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2562,
											"end": 2581,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2562,
											"end": 2581,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2562,
											"end": 2581,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2562,
											"end": 2581,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2562,
											"end": 2581,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2562,
											"end": 2601,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2562,
											"end": 2601,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2562,
											"end": 2658,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2562,
											"end": 2658,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2562,
											"end": 2658,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2562,
											"end": 2658,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2714,
											"end": 2726,
											"name": "NUMBER",
											"source": 7
										},
										{
											"begin": 2669,
											"end": 2676,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 2669,
											"end": 2688,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2677,
											"end": 2687,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2669,
											"end": 2688,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2669,
											"end": 2688,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2669,
											"end": 2688,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2669,
											"end": 2688,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2669,
											"end": 2688,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2669,
											"end": 2688,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2669,
											"end": 2688,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2669,
											"end": 2688,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2669,
											"end": 2688,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2669,
											"end": 2688,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2669,
											"end": 2688,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2669,
											"end": 2688,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2669,
											"end": 2688,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2669,
											"end": 2688,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2669,
											"end": 2688,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2669,
											"end": 2711,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2669,
											"end": 2711,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2669,
											"end": 2726,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2669,
											"end": 2726,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2669,
											"end": 2726,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2669,
											"end": 2726,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2308,
											"end": 2734,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2308,
											"end": 2734,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2277,
											"end": 2734,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "tag",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3166,
											"end": 3173,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3196,
											"end": 3197,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3192,
											"end": 3193,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "296"
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "297"
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "tag",
											"source": 4,
											"value": "296"
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3185,
											"end": 3197,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3185,
											"end": 3197,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "tag",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3894,
											"end": 3901,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3924,
											"end": 3925,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3920,
											"end": 3921,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "299"
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "300"
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "tag",
											"source": 4,
											"value": "299"
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3913,
											"end": 3925,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3913,
											"end": 3925,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "tag",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2799,
											"end": 2806,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2829,
											"end": 2830,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2825,
											"end": 2826,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "302"
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "303"
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "tag",
											"source": 4,
											"value": "302"
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2818,
											"end": 2830,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2818,
											"end": 2830,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "tag",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3509,
											"end": 3516,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3539,
											"end": 3540,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3535,
											"end": 3536,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "305"
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "306"
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "tag",
											"source": 4,
											"value": "305"
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3528,
											"end": 3540,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3528,
											"end": 3540,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 290,
											"end": 467,
											"name": "tag",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 290,
											"end": 467,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 373,
											"end": 459,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "308"
										},
										{
											"begin": 393,
											"end": 398,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 423,
											"end": 446,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 423,
											"end": 446,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 423,
											"end": 446,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 448,
											"end": 450,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 452,
											"end": 457,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "309"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "tag",
											"source": 6,
											"value": "309"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 373,
											"end": 392,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "310"
										},
										{
											"begin": 373,
											"end": 459,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 373,
											"end": 459,
											"name": "tag",
											"source": 6,
											"value": "308"
										},
										{
											"begin": 373,
											"end": 459,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 290,
											"end": 467,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 290,
											"end": 467,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 290,
											"end": 467,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 290,
											"end": 467,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2368,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2387,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2384,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2378,
											"end": 2384,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2449,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2431,
											"end": 2439,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2333,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 475,
											"end": 680,
											"name": "tag",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 475,
											"end": 680,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 576,
											"end": 672,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "314"
										},
										{
											"begin": 596,
											"end": 601,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 626,
											"end": 653,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 626,
											"end": 653,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 626,
											"end": 653,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 655,
											"end": 659,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 661,
											"end": 663,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 665,
											"end": 670,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "316"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "tag",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 576,
											"end": 595,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "310"
										},
										{
											"begin": 576,
											"end": 672,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 576,
											"end": 672,
											"name": "tag",
											"source": 6,
											"value": "314"
										},
										{
											"begin": 576,
											"end": 672,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 475,
											"end": 680,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 475,
											"end": 680,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 475,
											"end": 680,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 475,
											"end": 680,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 475,
											"end": 680,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2599,
											"end": 3368,
											"name": "tag",
											"source": 6,
											"value": "310"
										},
										{
											"begin": 2599,
											"end": 3368,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3031,
											"end": 3054,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 3085,
											"end": 3089,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "PUSH",
											"source": 6,
											"value": "5361666542455032303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3065,
											"end": 3070,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3084,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3057,
											"end": 3084,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 3057,
											"end": 3084,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "tag",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3031,
											"end": 3126,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3031,
											"end": 3126,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3161,
											"end": 3162,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3141,
											"end": 3151,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 3158,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 3162,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3361,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 3137,
											"end": 3361,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3283,
											"end": 3293,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "321"
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "tag",
											"source": 6,
											"value": "321"
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "323"
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "324"
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "325"
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "tag",
											"source": 6,
											"value": "324"
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "tag",
											"source": 6,
											"value": "323"
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3361,
											"name": "tag",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 3137,
											"end": 3361,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2669,
											"end": 3368,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2599,
											"end": 3368,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2599,
											"end": 3368,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2599,
											"end": 3368,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "tag",
											"source": 2,
											"value": "319"
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3994,
											"end": 4006,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "327"
										},
										{
											"begin": 4047,
											"end": 4053,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4055,
											"end": 4059,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4061,
											"end": 4062,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4064,
											"end": 4076,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4025,
											"end": 4046,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "328"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "tag",
											"source": 2,
											"value": "327"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4018,
											"end": 4077,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4018,
											"end": 4077,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "tag",
											"source": 2,
											"value": "328"
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5113,
											"end": 5125,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 5170,
											"end": 5175,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5145,
											"end": 5166,
											"name": "SELFBALANCE",
											"source": 2
										},
										{
											"begin": 5145,
											"end": 5175,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 5145,
											"end": 5175,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "330"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "331"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "332"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "tag",
											"source": 2,
											"value": "331"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "tag",
											"source": 2,
											"value": "330"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5236,
											"end": 5254,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "333"
										},
										{
											"begin": 5247,
											"end": 5253,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5236,
											"end": 5246,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "334"
										},
										{
											"begin": 5236,
											"end": 5254,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5236,
											"end": 5254,
											"name": "tag",
											"source": 2,
											"value": "333"
										},
										{
											"begin": 5236,
											"end": 5254,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "335"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "336"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "337"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "tag",
											"source": 2,
											"value": "336"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "tag",
											"source": 2,
											"value": "335"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5300,
											"end": 5312,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5314,
											"end": 5337,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5347,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5352,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5341,
											"end": 5352,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5360,
											"end": 5365,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5367,
											"end": 5371,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "338"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "339"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "tag",
											"source": 2,
											"value": "338"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "342"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "3F"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "341"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "tag",
											"source": 2,
											"value": "342"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "tag",
											"source": 2,
											"value": "341"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "343"
										},
										{
											"begin": 5406,
											"end": 5413,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5415,
											"end": 5425,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5427,
											"end": 5439,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5389,
											"end": 5405,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "344"
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "tag",
											"source": 2,
											"value": "343"
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5382,
											"end": 5440,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5382,
											"end": 5440,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5382,
											"end": 5440,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5382,
											"end": 5440,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "tag",
											"source": 2,
											"value": "334"
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1235,
											"end": 1239,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1487,
											"end": 1488,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1465,
											"end": 1472,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1458,
											"end": 1488,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1458,
											"end": 1488,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "tag",
											"source": 2,
											"value": "344"
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7707,
											"end": 7719,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 7735,
											"end": 7742,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7731,
											"end": 8247,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7731,
											"end": 8247,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "347"
										},
										{
											"begin": 7731,
											"end": 8247,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7765,
											"end": 7775,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7758,
											"end": 7775,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7758,
											"end": 7775,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7758,
											"end": 7775,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "346"
										},
										{
											"begin": 7758,
											"end": 7775,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7731,
											"end": 8247,
											"name": "tag",
											"source": 2,
											"value": "347"
										},
										{
											"begin": 7731,
											"end": 8247,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7896,
											"end": 7897,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7876,
											"end": 7886,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7876,
											"end": 7893,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7876,
											"end": 7897,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 7872,
											"end": 8237,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7872,
											"end": 8237,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "349"
										},
										{
											"begin": 7872,
											"end": 8237,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8070,
											"end": 8080,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8064,
											"end": 8081,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8130,
											"end": 8145,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8117,
											"end": 8127,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8113,
											"end": 8115,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8109,
											"end": 8128,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8102,
											"end": 8146,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7872,
											"end": 8237,
											"name": "tag",
											"source": 2,
											"value": "349"
										},
										{
											"begin": 7872,
											"end": 8237,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8209,
											"end": 8221,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "351"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "352"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "tag",
											"source": 2,
											"value": "351"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "tag",
											"source": 2,
											"value": "346"
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 8,
											"value": "353"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 8,
											"value": "354"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "421"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "353"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 8,
											"value": "421"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "423"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "354"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 8,
											"value": "423"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 523,
											"end": 640,
											"name": "tag",
											"source": 8,
											"value": "356"
										},
										{
											"begin": 523,
											"end": 640,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 632,
											"end": 633,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 630,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 622,
											"end": 634,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 769,
											"end": 891,
											"name": "tag",
											"source": 8,
											"value": "358"
										},
										{
											"begin": 769,
											"end": 891,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 842,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "428"
										},
										{
											"begin": 860,
											"end": 865,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 842,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "353"
										},
										{
											"begin": 842,
											"end": 866,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 842,
											"end": 866,
											"name": "tag",
											"source": 8,
											"value": "428"
										},
										{
											"begin": 842,
											"end": 866,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 835,
											"end": 840,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 832,
											"end": 867,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 822,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "429"
										},
										{
											"begin": 822,
											"end": 885,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 881,
											"end": 882,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 878,
											"end": 879,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 871,
											"end": 883,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 822,
											"end": 885,
											"name": "tag",
											"source": 8,
											"value": "429"
										},
										{
											"begin": 822,
											"end": 885,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 769,
											"end": 891,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 769,
											"end": 891,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "tag",
											"source": 8,
											"value": "359"
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 943,
											"end": 948,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 981,
											"end": 987,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 968,
											"end": 988,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 959,
											"end": 988,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 959,
											"end": 988,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "431"
										},
										{
											"begin": 1024,
											"end": 1029,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "358"
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "tag",
											"source": 8,
											"value": "431"
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "tag",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1150,
											"end": 1152,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1138,
											"end": 1147,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1129,
											"end": 1136,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1125,
											"end": 1148,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1121,
											"end": 1153,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "433"
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "434"
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "356"
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "tag",
											"source": 8,
											"value": "434"
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "tag",
											"source": 8,
											"value": "433"
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1276,
											"end": 1277,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "435"
										},
										{
											"begin": 1346,
											"end": 1353,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1337,
											"end": 1343,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1326,
											"end": 1335,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1322,
											"end": 1344,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "359"
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "tag",
											"source": 8,
											"value": "435"
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1291,
											"end": 1354,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1291,
											"end": 1354,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1247,
											"end": 1364,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "tag",
											"source": 8,
											"value": "360"
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1414,
											"end": 1421,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1454,
											"end": 1496,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1447,
											"end": 1452,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1443,
											"end": 1497,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1432,
											"end": 1497,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1432,
											"end": 1497,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "tag",
											"source": 8,
											"value": "361"
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1546,
											"end": 1553,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "438"
										},
										{
											"begin": 1593,
											"end": 1598,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "360"
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "tag",
											"source": 8,
											"value": "438"
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1564,
											"end": 1599,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1564,
											"end": 1599,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "tag",
											"source": 8,
											"value": "362"
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "440"
										},
										{
											"begin": 1702,
											"end": 1707,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "361"
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "tag",
											"source": 8,
											"value": "440"
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1677,
											"end": 1682,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "441"
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1724,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1720,
											"end": 1721,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1713,
											"end": 1725,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "tag",
											"source": 8,
											"value": "441"
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "tag",
											"source": 8,
											"value": "363"
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1823,
											"end": 1829,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1810,
											"end": 1830,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "443"
										},
										{
											"begin": 1866,
											"end": 1871,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "362"
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "tag",
											"source": 8,
											"value": "443"
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "tag",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1943,
											"end": 1949,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1992,
											"end": 1994,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1980,
											"end": 1989,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1971,
											"end": 1978,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1967,
											"end": 1990,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1963,
											"end": 1995,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "445"
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "446"
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "356"
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "tag",
											"source": 8,
											"value": "446"
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "tag",
											"source": 8,
											"value": "445"
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2118,
											"end": 2119,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "447"
										},
										{
											"begin": 2188,
											"end": 2195,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2179,
											"end": 2185,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2168,
											"end": 2177,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2164,
											"end": 2186,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "363"
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "tag",
											"source": 8,
											"value": "447"
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2196,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2196,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2089,
											"end": 2206,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2219,
											"end": 2693,
											"name": "tag",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 2219,
											"end": 2693,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2293,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2295,
											"end": 2301,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2344,
											"end": 2346,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2332,
											"end": 2341,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2323,
											"end": 2330,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2319,
											"end": 2342,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2315,
											"end": 2347,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2312,
											"end": 2431,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2312,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "449"
										},
										{
											"begin": 2312,
											"end": 2431,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2350,
											"end": 2429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "450"
										},
										{
											"begin": 2350,
											"end": 2429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "356"
										},
										{
											"begin": 2350,
											"end": 2429,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2350,
											"end": 2429,
											"name": "tag",
											"source": 8,
											"value": "450"
										},
										{
											"begin": 2350,
											"end": 2429,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2312,
											"end": 2431,
											"name": "tag",
											"source": 8,
											"value": "449"
										},
										{
											"begin": 2312,
											"end": 2431,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2470,
											"end": 2471,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2495,
											"end": 2548,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "451"
										},
										{
											"begin": 2540,
											"end": 2547,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2531,
											"end": 2537,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2520,
											"end": 2529,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2516,
											"end": 2538,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2495,
											"end": 2548,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "359"
										},
										{
											"begin": 2495,
											"end": 2548,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2495,
											"end": 2548,
											"name": "tag",
											"source": 8,
											"value": "451"
										},
										{
											"begin": 2495,
											"end": 2548,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2548,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2548,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2441,
											"end": 2558,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2597,
											"end": 2599,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2623,
											"end": 2676,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "452"
										},
										{
											"begin": 2668,
											"end": 2675,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2659,
											"end": 2665,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2648,
											"end": 2657,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2644,
											"end": 2666,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2623,
											"end": 2676,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "359"
										},
										{
											"begin": 2623,
											"end": 2676,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2623,
											"end": 2676,
											"name": "tag",
											"source": 8,
											"value": "452"
										},
										{
											"begin": 2623,
											"end": 2676,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2613,
											"end": 2676,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2613,
											"end": 2676,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2568,
											"end": 2686,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2219,
											"end": 2693,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2219,
											"end": 2693,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2219,
											"end": 2693,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2219,
											"end": 2693,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2219,
											"end": 2693,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2219,
											"end": 2693,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2699,
											"end": 2817,
											"name": "tag",
											"source": 8,
											"value": "364"
										},
										{
											"begin": 2699,
											"end": 2817,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2786,
											"end": 2810,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "454"
										},
										{
											"begin": 2804,
											"end": 2809,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2786,
											"end": 2810,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "361"
										},
										{
											"begin": 2786,
											"end": 2810,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2786,
											"end": 2810,
											"name": "tag",
											"source": 8,
											"value": "454"
										},
										{
											"begin": 2786,
											"end": 2810,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2781,
											"end": 2784,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2774,
											"end": 2811,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2699,
											"end": 2817,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2699,
											"end": 2817,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2699,
											"end": 2817,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2823,
											"end": 3045,
											"name": "tag",
											"source": 8,
											"value": "74"
										},
										{
											"begin": 2823,
											"end": 3045,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2916,
											"end": 2920,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2956,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2943,
											"end": 2952,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2939,
											"end": 2957,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2931,
											"end": 2957,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2931,
											"end": 2957,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2967,
											"end": 3038,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "456"
										},
										{
											"begin": 3035,
											"end": 3036,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3024,
											"end": 3033,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3011,
											"end": 3017,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2967,
											"end": 3038,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "364"
										},
										{
											"begin": 2967,
											"end": 3038,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2967,
											"end": 3038,
											"name": "tag",
											"source": 8,
											"value": "456"
										},
										{
											"begin": 2967,
											"end": 3038,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2823,
											"end": 3045,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2823,
											"end": 3045,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2823,
											"end": 3045,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2823,
											"end": 3045,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2823,
											"end": 3045,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3051,
											"end": 3111,
											"name": "tag",
											"source": 8,
											"value": "365"
										},
										{
											"begin": 3051,
											"end": 3111,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3079,
											"end": 3082,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3100,
											"end": 3105,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3093,
											"end": 3105,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3093,
											"end": 3105,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3051,
											"end": 3111,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3051,
											"end": 3111,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3051,
											"end": 3111,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3051,
											"end": 3111,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3117,
											"end": 3259,
											"name": "tag",
											"source": 8,
											"value": "366"
										},
										{
											"begin": 3117,
											"end": 3259,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3167,
											"end": 3176,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3200,
											"end": 3253,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "459"
										},
										{
											"begin": 3218,
											"end": 3252,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "460"
										},
										{
											"begin": 3227,
											"end": 3251,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "461"
										},
										{
											"begin": 3245,
											"end": 3250,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3227,
											"end": 3251,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "360"
										},
										{
											"begin": 3227,
											"end": 3251,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3227,
											"end": 3251,
											"name": "tag",
											"source": 8,
											"value": "461"
										},
										{
											"begin": 3227,
											"end": 3251,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3218,
											"end": 3252,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "365"
										},
										{
											"begin": 3218,
											"end": 3252,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3218,
											"end": 3252,
											"name": "tag",
											"source": 8,
											"value": "460"
										},
										{
											"begin": 3218,
											"end": 3252,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3200,
											"end": 3253,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "360"
										},
										{
											"begin": 3200,
											"end": 3253,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3200,
											"end": 3253,
											"name": "tag",
											"source": 8,
											"value": "459"
										},
										{
											"begin": 3200,
											"end": 3253,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3187,
											"end": 3253,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3187,
											"end": 3253,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3117,
											"end": 3259,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3117,
											"end": 3259,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3117,
											"end": 3259,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3117,
											"end": 3259,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3265,
											"end": 3391,
											"name": "tag",
											"source": 8,
											"value": "367"
										},
										{
											"begin": 3265,
											"end": 3391,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3315,
											"end": 3324,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3348,
											"end": 3385,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "463"
										},
										{
											"begin": 3379,
											"end": 3384,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3348,
											"end": 3385,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "366"
										},
										{
											"begin": 3348,
											"end": 3385,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3348,
											"end": 3385,
											"name": "tag",
											"source": 8,
											"value": "463"
										},
										{
											"begin": 3348,
											"end": 3385,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3335,
											"end": 3385,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3335,
											"end": 3385,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3265,
											"end": 3391,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3265,
											"end": 3391,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3265,
											"end": 3391,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3265,
											"end": 3391,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3397,
											"end": 3537,
											"name": "tag",
											"source": 8,
											"value": "368"
										},
										{
											"begin": 3397,
											"end": 3537,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3461,
											"end": 3470,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3494,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "465"
										},
										{
											"begin": 3525,
											"end": 3530,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3494,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "367"
										},
										{
											"begin": 3494,
											"end": 3531,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3494,
											"end": 3531,
											"name": "tag",
											"source": 8,
											"value": "465"
										},
										{
											"begin": 3494,
											"end": 3531,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3481,
											"end": 3531,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3481,
											"end": 3531,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3397,
											"end": 3537,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3397,
											"end": 3537,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3397,
											"end": 3537,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3397,
											"end": 3537,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3543,
											"end": 3702,
											"name": "tag",
											"source": 8,
											"value": "369"
										},
										{
											"begin": 3543,
											"end": 3702,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3644,
											"end": 3695,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "467"
										},
										{
											"begin": 3689,
											"end": 3694,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3644,
											"end": 3695,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "368"
										},
										{
											"begin": 3644,
											"end": 3695,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3644,
											"end": 3695,
											"name": "tag",
											"source": 8,
											"value": "467"
										},
										{
											"begin": 3644,
											"end": 3695,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3639,
											"end": 3642,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3632,
											"end": 3696,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3543,
											"end": 3702,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3543,
											"end": 3702,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3543,
											"end": 3702,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3708,
											"end": 3958,
											"name": "tag",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 3708,
											"end": 3958,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3815,
											"end": 3819,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3853,
											"end": 3855,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3842,
											"end": 3851,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3838,
											"end": 3856,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3830,
											"end": 3856,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3830,
											"end": 3856,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3866,
											"end": 3951,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "469"
										},
										{
											"begin": 3948,
											"end": 3949,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3937,
											"end": 3946,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3933,
											"end": 3950,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3924,
											"end": 3930,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3866,
											"end": 3951,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "369"
										},
										{
											"begin": 3866,
											"end": 3951,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3866,
											"end": 3951,
											"name": "tag",
											"source": 8,
											"value": "469"
										},
										{
											"begin": 3866,
											"end": 3951,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3708,
											"end": 3958,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3708,
											"end": 3958,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3708,
											"end": 3958,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3708,
											"end": 3958,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3708,
											"end": 3958,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3964,
											"end": 4133,
											"name": "tag",
											"source": 8,
											"value": "370"
										},
										{
											"begin": 3964,
											"end": 4133,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4048,
											"end": 4059,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4082,
											"end": 4088,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4077,
											"end": 4080,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4070,
											"end": 4089,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4122,
											"end": 4126,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4117,
											"end": 4120,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4113,
											"end": 4127,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4098,
											"end": 4127,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4098,
											"end": 4127,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3964,
											"end": 4133,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3964,
											"end": 4133,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3964,
											"end": 4133,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3964,
											"end": 4133,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3964,
											"end": 4133,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 4139,
											"end": 4320,
											"name": "tag",
											"source": 8,
											"value": "371"
										},
										{
											"begin": 4139,
											"end": 4320,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4279,
											"end": 4312,
											"name": "PUSH",
											"source": 8,
											"value": "416D6F756E742073686F756C642062652067726561746572207468616E203000"
										},
										{
											"begin": 4275,
											"end": 4276,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4267,
											"end": 4273,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4263,
											"end": 4277,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4256,
											"end": 4313,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4139,
											"end": 4320,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4139,
											"end": 4320,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 4326,
											"end": 4692,
											"name": "tag",
											"source": 8,
											"value": "372"
										},
										{
											"begin": 4326,
											"end": 4692,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4468,
											"end": 4471,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4489,
											"end": 4556,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "473"
										},
										{
											"begin": 4553,
											"end": 4555,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 4548,
											"end": 4551,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4489,
											"end": 4556,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "370"
										},
										{
											"begin": 4489,
											"end": 4556,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4489,
											"end": 4556,
											"name": "tag",
											"source": 8,
											"value": "473"
										},
										{
											"begin": 4489,
											"end": 4556,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4482,
											"end": 4556,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4482,
											"end": 4556,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4565,
											"end": 4658,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "474"
										},
										{
											"begin": 4654,
											"end": 4657,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4565,
											"end": 4658,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "371"
										},
										{
											"begin": 4565,
											"end": 4658,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4565,
											"end": 4658,
											"name": "tag",
											"source": 8,
											"value": "474"
										},
										{
											"begin": 4565,
											"end": 4658,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4683,
											"end": 4685,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4678,
											"end": 4681,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4674,
											"end": 4686,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4667,
											"end": 4686,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4667,
											"end": 4686,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4326,
											"end": 4692,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4326,
											"end": 4692,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4326,
											"end": 4692,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4326,
											"end": 4692,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 4698,
											"end": 5117,
											"name": "tag",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 4698,
											"end": 5117,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4864,
											"end": 4868,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4902,
											"end": 4904,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4891,
											"end": 4900,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4887,
											"end": 4905,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4879,
											"end": 4905,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4879,
											"end": 4905,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4951,
											"end": 4960,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4945,
											"end": 4949,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4941,
											"end": 4961,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4937,
											"end": 4938,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4926,
											"end": 4935,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4922,
											"end": 4939,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4915,
											"end": 4962,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4979,
											"end": 5110,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "476"
										},
										{
											"begin": 5105,
											"end": 5109,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4979,
											"end": 5110,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "372"
										},
										{
											"begin": 4979,
											"end": 5110,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4979,
											"end": 5110,
											"name": "tag",
											"source": 8,
											"value": "476"
										},
										{
											"begin": 4979,
											"end": 5110,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4971,
											"end": 5110,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4971,
											"end": 5110,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4698,
											"end": 5117,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4698,
											"end": 5117,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4698,
											"end": 5117,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4698,
											"end": 5117,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 5123,
											"end": 5287,
											"name": "tag",
											"source": 8,
											"value": "373"
										},
										{
											"begin": 5123,
											"end": 5287,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5263,
											"end": 5279,
											"name": "PUSH",
											"source": 8,
											"value": "496E76616C696420616D6F756E74000000000000000000000000000000000000"
										},
										{
											"begin": 5259,
											"end": 5260,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5251,
											"end": 5257,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5247,
											"end": 5261,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5240,
											"end": 5280,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5123,
											"end": 5287,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5123,
											"end": 5287,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 5293,
											"end": 5659,
											"name": "tag",
											"source": 8,
											"value": "374"
										},
										{
											"begin": 5293,
											"end": 5659,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5435,
											"end": 5438,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5456,
											"end": 5523,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "479"
										},
										{
											"begin": 5520,
											"end": 5522,
											"name": "PUSH",
											"source": 8,
											"value": "E"
										},
										{
											"begin": 5515,
											"end": 5518,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5456,
											"end": 5523,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "370"
										},
										{
											"begin": 5456,
											"end": 5523,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5456,
											"end": 5523,
											"name": "tag",
											"source": 8,
											"value": "479"
										},
										{
											"begin": 5456,
											"end": 5523,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5449,
											"end": 5523,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5449,
											"end": 5523,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5532,
											"end": 5625,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "480"
										},
										{
											"begin": 5621,
											"end": 5624,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5532,
											"end": 5625,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "373"
										},
										{
											"begin": 5532,
											"end": 5625,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5532,
											"end": 5625,
											"name": "tag",
											"source": 8,
											"value": "480"
										},
										{
											"begin": 5532,
											"end": 5625,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5650,
											"end": 5652,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5645,
											"end": 5648,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5641,
											"end": 5653,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5634,
											"end": 5653,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5634,
											"end": 5653,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5293,
											"end": 5659,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5293,
											"end": 5659,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5293,
											"end": 5659,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5293,
											"end": 5659,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 5665,
											"end": 6084,
											"name": "tag",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 5665,
											"end": 6084,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5831,
											"end": 5835,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5869,
											"end": 5871,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5858,
											"end": 5867,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5854,
											"end": 5872,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5846,
											"end": 5872,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5846,
											"end": 5872,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5918,
											"end": 5927,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5912,
											"end": 5916,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5908,
											"end": 5928,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5904,
											"end": 5905,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5893,
											"end": 5902,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5889,
											"end": 5906,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5882,
											"end": 5929,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5946,
											"end": 6077,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "482"
										},
										{
											"begin": 6072,
											"end": 6076,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5946,
											"end": 6077,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "374"
										},
										{
											"begin": 5946,
											"end": 6077,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5946,
											"end": 6077,
											"name": "tag",
											"source": 8,
											"value": "482"
										},
										{
											"begin": 5946,
											"end": 6077,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5938,
											"end": 6077,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5938,
											"end": 6077,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5665,
											"end": 6084,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5665,
											"end": 6084,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5665,
											"end": 6084,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5665,
											"end": 6084,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 6090,
											"end": 6270,
											"name": "tag",
											"source": 8,
											"value": "375"
										},
										{
											"begin": 6090,
											"end": 6270,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6138,
											"end": 6215,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6135,
											"end": 6136,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6128,
											"end": 6216,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6235,
											"end": 6239,
											"name": "PUSH",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 6232,
											"end": 6233,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6225,
											"end": 6240,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6259,
											"end": 6263,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 6256,
											"end": 6257,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6249,
											"end": 6264,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6276,
											"end": 6452,
											"name": "tag",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 6276,
											"end": 6452,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6308,
											"end": 6309,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6325,
											"end": 6345,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "485"
										},
										{
											"begin": 6343,
											"end": 6344,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6325,
											"end": 6345,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "353"
										},
										{
											"begin": 6325,
											"end": 6345,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6325,
											"end": 6345,
											"name": "tag",
											"source": 8,
											"value": "485"
										},
										{
											"begin": 6325,
											"end": 6345,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6320,
											"end": 6345,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6320,
											"end": 6345,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6359,
											"end": 6379,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "486"
										},
										{
											"begin": 6377,
											"end": 6378,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6359,
											"end": 6379,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "353"
										},
										{
											"begin": 6359,
											"end": 6379,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6359,
											"end": 6379,
											"name": "tag",
											"source": 8,
											"value": "486"
										},
										{
											"begin": 6359,
											"end": 6379,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6354,
											"end": 6379,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6354,
											"end": 6379,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6398,
											"end": 6399,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6388,
											"end": 6423,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "487"
										},
										{
											"begin": 6388,
											"end": 6423,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6403,
											"end": 6421,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "488"
										},
										{
											"begin": 6403,
											"end": 6421,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "375"
										},
										{
											"begin": 6403,
											"end": 6421,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6403,
											"end": 6421,
											"name": "tag",
											"source": 8,
											"value": "488"
										},
										{
											"begin": 6403,
											"end": 6421,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6388,
											"end": 6423,
											"name": "tag",
											"source": 8,
											"value": "487"
										},
										{
											"begin": 6388,
											"end": 6423,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6444,
											"end": 6445,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6441,
											"end": 6442,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6437,
											"end": 6446,
											"name": "MOD",
											"source": 8
										},
										{
											"begin": 6432,
											"end": 6446,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6432,
											"end": 6446,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6276,
											"end": 6452,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6276,
											"end": 6452,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6276,
											"end": 6452,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6276,
											"end": 6452,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6276,
											"end": 6452,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 6458,
											"end": 6790,
											"name": "tag",
											"source": 8,
											"value": "134"
										},
										{
											"begin": 6458,
											"end": 6790,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6579,
											"end": 6583,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6617,
											"end": 6619,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6606,
											"end": 6615,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6602,
											"end": 6620,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6594,
											"end": 6620,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6594,
											"end": 6620,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6630,
											"end": 6701,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "490"
										},
										{
											"begin": 6698,
											"end": 6699,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6687,
											"end": 6696,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6683,
											"end": 6700,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6674,
											"end": 6680,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6630,
											"end": 6701,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "364"
										},
										{
											"begin": 6630,
											"end": 6701,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6630,
											"end": 6701,
											"name": "tag",
											"source": 8,
											"value": "490"
										},
										{
											"begin": 6630,
											"end": 6701,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6711,
											"end": 6783,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "491"
										},
										{
											"begin": 6779,
											"end": 6781,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6768,
											"end": 6777,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6764,
											"end": 6782,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6755,
											"end": 6761,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6711,
											"end": 6783,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "354"
										},
										{
											"begin": 6711,
											"end": 6783,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6711,
											"end": 6783,
											"name": "tag",
											"source": 8,
											"value": "491"
										},
										{
											"begin": 6711,
											"end": 6783,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6458,
											"end": 6790,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 6458,
											"end": 6790,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6458,
											"end": 6790,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6458,
											"end": 6790,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6458,
											"end": 6790,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6458,
											"end": 6790,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 6796,
											"end": 6962,
											"name": "tag",
											"source": 8,
											"value": "376"
										},
										{
											"begin": 6796,
											"end": 6962,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6936,
											"end": 6954,
											"name": "PUSH",
											"source": 8,
											"value": "4E6F7468696E6720746F20636C61696D00000000000000000000000000000000"
										},
										{
											"begin": 6932,
											"end": 6933,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6924,
											"end": 6930,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6920,
											"end": 6934,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6913,
											"end": 6955,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6796,
											"end": 6962,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6796,
											"end": 6962,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 6968,
											"end": 7334,
											"name": "tag",
											"source": 8,
											"value": "377"
										},
										{
											"begin": 6968,
											"end": 7334,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7110,
											"end": 7113,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7131,
											"end": 7198,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "494"
										},
										{
											"begin": 7195,
											"end": 7197,
											"name": "PUSH",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 7190,
											"end": 7193,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7131,
											"end": 7198,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "370"
										},
										{
											"begin": 7131,
											"end": 7198,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 7131,
											"end": 7198,
											"name": "tag",
											"source": 8,
											"value": "494"
										},
										{
											"begin": 7131,
											"end": 7198,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7124,
											"end": 7198,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7124,
											"end": 7198,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7207,
											"end": 7300,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "495"
										},
										{
											"begin": 7296,
											"end": 7299,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7207,
											"end": 7300,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "376"
										},
										{
											"begin": 7207,
											"end": 7300,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 7207,
											"end": 7300,
											"name": "tag",
											"source": 8,
											"value": "495"
										},
										{
											"begin": 7207,
											"end": 7300,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7325,
											"end": 7327,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7320,
											"end": 7323,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7316,
											"end": 7328,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7309,
											"end": 7328,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7309,
											"end": 7328,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6968,
											"end": 7334,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6968,
											"end": 7334,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6968,
											"end": 7334,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6968,
											"end": 7334,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 7340,
											"end": 7759,
											"name": "tag",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 7340,
											"end": 7759,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7506,
											"end": 7510,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7544,
											"end": 7546,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7533,
											"end": 7542,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7529,
											"end": 7547,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7521,
											"end": 7547,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7521,
											"end": 7547,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7593,
											"end": 7602,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7587,
											"end": 7591,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7583,
											"end": 7603,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7579,
											"end": 7580,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7568,
											"end": 7577,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7564,
											"end": 7581,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7557,
											"end": 7604,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7621,
											"end": 7752,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "497"
										},
										{
											"begin": 7747,
											"end": 7751,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7621,
											"end": 7752,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "377"
										},
										{
											"begin": 7621,
											"end": 7752,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 7621,
											"end": 7752,
											"name": "tag",
											"source": 8,
											"value": "497"
										},
										{
											"begin": 7621,
											"end": 7752,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7613,
											"end": 7752,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7613,
											"end": 7752,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7340,
											"end": 7759,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7340,
											"end": 7759,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7340,
											"end": 7759,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7340,
											"end": 7759,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 7765,
											"end": 7908,
											"name": "tag",
											"source": 8,
											"value": "378"
										},
										{
											"begin": 7765,
											"end": 7908,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7822,
											"end": 7827,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7853,
											"end": 7859,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7847,
											"end": 7860,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7838,
											"end": 7860,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7838,
											"end": 7860,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7869,
											"end": 7902,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "499"
										},
										{
											"begin": 7896,
											"end": 7901,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7869,
											"end": 7902,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "358"
										},
										{
											"begin": 7869,
											"end": 7902,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 7869,
											"end": 7902,
											"name": "tag",
											"source": 8,
											"value": "499"
										},
										{
											"begin": 7869,
											"end": 7902,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7765,
											"end": 7908,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7765,
											"end": 7908,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7765,
											"end": 7908,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7765,
											"end": 7908,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7765,
											"end": 7908,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 7914,
											"end": 8265,
											"name": "tag",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 7914,
											"end": 8265,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7984,
											"end": 7990,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8033,
											"end": 8035,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8021,
											"end": 8030,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8012,
											"end": 8019,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8008,
											"end": 8031,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8004,
											"end": 8036,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 8001,
											"end": 8120,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8001,
											"end": 8120,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "501"
										},
										{
											"begin": 8001,
											"end": 8120,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8039,
											"end": 8118,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "502"
										},
										{
											"begin": 8039,
											"end": 8118,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "356"
										},
										{
											"begin": 8039,
											"end": 8118,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8039,
											"end": 8118,
											"name": "tag",
											"source": 8,
											"value": "502"
										},
										{
											"begin": 8039,
											"end": 8118,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8001,
											"end": 8120,
											"name": "tag",
											"source": 8,
											"value": "501"
										},
										{
											"begin": 8001,
											"end": 8120,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8159,
											"end": 8160,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8184,
											"end": 8248,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "503"
										},
										{
											"begin": 8240,
											"end": 8247,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8231,
											"end": 8237,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8220,
											"end": 8229,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 8216,
											"end": 8238,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8184,
											"end": 8248,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "378"
										},
										{
											"begin": 8184,
											"end": 8248,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8184,
											"end": 8248,
											"name": "tag",
											"source": 8,
											"value": "503"
										},
										{
											"begin": 8184,
											"end": 8248,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8174,
											"end": 8248,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8174,
											"end": 8248,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8130,
											"end": 8258,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7914,
											"end": 8265,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7914,
											"end": 8265,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7914,
											"end": 8265,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7914,
											"end": 8265,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7914,
											"end": 8265,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 8271,
											"end": 8453,
											"name": "tag",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 8271,
											"end": 8453,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8411,
											"end": 8445,
											"name": "PUSH",
											"source": 8,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 8407,
											"end": 8408,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8399,
											"end": 8405,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8395,
											"end": 8409,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8388,
											"end": 8446,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8271,
											"end": 8453,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8271,
											"end": 8453,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 8459,
											"end": 8825,
											"name": "tag",
											"source": 8,
											"value": "380"
										},
										{
											"begin": 8459,
											"end": 8825,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8601,
											"end": 8604,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8622,
											"end": 8689,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "506"
										},
										{
											"begin": 8686,
											"end": 8688,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8681,
											"end": 8684,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8622,
											"end": 8689,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "370"
										},
										{
											"begin": 8622,
											"end": 8689,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8622,
											"end": 8689,
											"name": "tag",
											"source": 8,
											"value": "506"
										},
										{
											"begin": 8622,
											"end": 8689,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8615,
											"end": 8689,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8615,
											"end": 8689,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8698,
											"end": 8791,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "507"
										},
										{
											"begin": 8787,
											"end": 8790,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8698,
											"end": 8791,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 8698,
											"end": 8791,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8698,
											"end": 8791,
											"name": "tag",
											"source": 8,
											"value": "507"
										},
										{
											"begin": 8698,
											"end": 8791,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8816,
											"end": 8818,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8811,
											"end": 8814,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8807,
											"end": 8819,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8800,
											"end": 8819,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8800,
											"end": 8819,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8459,
											"end": 8825,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8459,
											"end": 8825,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8459,
											"end": 8825,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8459,
											"end": 8825,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 8831,
											"end": 9250,
											"name": "tag",
											"source": 8,
											"value": "172"
										},
										{
											"begin": 8831,
											"end": 9250,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8997,
											"end": 9001,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9035,
											"end": 9037,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9024,
											"end": 9033,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9020,
											"end": 9038,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9012,
											"end": 9038,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9012,
											"end": 9038,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9084,
											"end": 9093,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9078,
											"end": 9082,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9074,
											"end": 9094,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9070,
											"end": 9071,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9059,
											"end": 9068,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9055,
											"end": 9072,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9048,
											"end": 9095,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9112,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "509"
										},
										{
											"begin": 9238,
											"end": 9242,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9112,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "380"
										},
										{
											"begin": 9112,
											"end": 9243,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 9112,
											"end": 9243,
											"name": "tag",
											"source": 8,
											"value": "509"
										},
										{
											"begin": 9112,
											"end": 9243,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9104,
											"end": 9243,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9104,
											"end": 9243,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8831,
											"end": 9250,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8831,
											"end": 9250,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8831,
											"end": 9250,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8831,
											"end": 9250,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 9256,
											"end": 9419,
											"name": "tag",
											"source": 8,
											"value": "381"
										},
										{
											"begin": 9256,
											"end": 9419,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9396,
											"end": 9411,
											"name": "PUSH",
											"source": 8,
											"value": "43616E2774206265207A65726F00000000000000000000000000000000000000"
										},
										{
											"begin": 9392,
											"end": 9393,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9384,
											"end": 9390,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9380,
											"end": 9394,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9373,
											"end": 9412,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9256,
											"end": 9419,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9256,
											"end": 9419,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 9425,
											"end": 9791,
											"name": "tag",
											"source": 8,
											"value": "382"
										},
										{
											"begin": 9425,
											"end": 9791,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9567,
											"end": 9570,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9588,
											"end": 9655,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "512"
										},
										{
											"begin": 9652,
											"end": 9654,
											"name": "PUSH",
											"source": 8,
											"value": "D"
										},
										{
											"begin": 9647,
											"end": 9650,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9588,
											"end": 9655,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "370"
										},
										{
											"begin": 9588,
											"end": 9655,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 9588,
											"end": 9655,
											"name": "tag",
											"source": 8,
											"value": "512"
										},
										{
											"begin": 9588,
											"end": 9655,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9581,
											"end": 9655,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9581,
											"end": 9655,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9664,
											"end": 9757,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "513"
										},
										{
											"begin": 9753,
											"end": 9756,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9664,
											"end": 9757,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "381"
										},
										{
											"begin": 9664,
											"end": 9757,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 9664,
											"end": 9757,
											"name": "tag",
											"source": 8,
											"value": "513"
										},
										{
											"begin": 9664,
											"end": 9757,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9782,
											"end": 9784,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9777,
											"end": 9780,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9773,
											"end": 9785,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9766,
											"end": 9785,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9766,
											"end": 9785,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9425,
											"end": 9791,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9425,
											"end": 9791,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9425,
											"end": 9791,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9425,
											"end": 9791,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 9797,
											"end": 10216,
											"name": "tag",
											"source": 8,
											"value": "176"
										},
										{
											"begin": 9797,
											"end": 10216,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9963,
											"end": 9967,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10001,
											"end": 10003,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9990,
											"end": 9999,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9986,
											"end": 10004,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9978,
											"end": 10004,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9978,
											"end": 10004,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10050,
											"end": 10059,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10044,
											"end": 10048,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10040,
											"end": 10060,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 10036,
											"end": 10037,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10025,
											"end": 10034,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10021,
											"end": 10038,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10014,
											"end": 10061,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10078,
											"end": 10209,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "515"
										},
										{
											"begin": 10204,
											"end": 10208,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10078,
											"end": 10209,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "382"
										},
										{
											"begin": 10078,
											"end": 10209,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 10078,
											"end": 10209,
											"name": "tag",
											"source": 8,
											"value": "515"
										},
										{
											"begin": 10078,
											"end": 10209,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10070,
											"end": 10209,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10070,
											"end": 10209,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9797,
											"end": 10216,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9797,
											"end": 10216,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9797,
											"end": 10216,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9797,
											"end": 10216,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 10222,
											"end": 10385,
											"name": "tag",
											"source": 8,
											"value": "383"
										},
										{
											"begin": 10222,
											"end": 10385,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10362,
											"end": 10377,
											"name": "PUSH",
											"source": 8,
											"value": "496E73756666696369656E742100000000000000000000000000000000000000"
										},
										{
											"begin": 10358,
											"end": 10359,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10350,
											"end": 10356,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10346,
											"end": 10360,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10339,
											"end": 10378,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10222,
											"end": 10385,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10222,
											"end": 10385,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 10391,
											"end": 10757,
											"name": "tag",
											"source": 8,
											"value": "384"
										},
										{
											"begin": 10391,
											"end": 10757,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10533,
											"end": 10536,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10554,
											"end": 10621,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "518"
										},
										{
											"begin": 10618,
											"end": 10620,
											"name": "PUSH",
											"source": 8,
											"value": "D"
										},
										{
											"begin": 10613,
											"end": 10616,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10554,
											"end": 10621,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "370"
										},
										{
											"begin": 10554,
											"end": 10621,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 10554,
											"end": 10621,
											"name": "tag",
											"source": 8,
											"value": "518"
										},
										{
											"begin": 10554,
											"end": 10621,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10547,
											"end": 10621,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10547,
											"end": 10621,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10630,
											"end": 10723,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "519"
										},
										{
											"begin": 10719,
											"end": 10722,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10630,
											"end": 10723,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "383"
										},
										{
											"begin": 10630,
											"end": 10723,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 10630,
											"end": 10723,
											"name": "tag",
											"source": 8,
											"value": "519"
										},
										{
											"begin": 10630,
											"end": 10723,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10748,
											"end": 10750,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10743,
											"end": 10746,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10739,
											"end": 10751,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10732,
											"end": 10751,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10732,
											"end": 10751,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10391,
											"end": 10757,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10391,
											"end": 10757,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10391,
											"end": 10757,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10391,
											"end": 10757,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 10763,
											"end": 11182,
											"name": "tag",
											"source": 8,
											"value": "186"
										},
										{
											"begin": 10763,
											"end": 11182,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10929,
											"end": 10933,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10967,
											"end": 10969,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10956,
											"end": 10965,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10952,
											"end": 10970,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10944,
											"end": 10970,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10944,
											"end": 10970,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11016,
											"end": 11025,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11010,
											"end": 11014,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11006,
											"end": 11026,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 11002,
											"end": 11003,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10991,
											"end": 11000,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10987,
											"end": 11004,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10980,
											"end": 11027,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11044,
											"end": 11175,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "521"
										},
										{
											"begin": 11170,
											"end": 11174,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11044,
											"end": 11175,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "384"
										},
										{
											"begin": 11044,
											"end": 11175,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 11044,
											"end": 11175,
											"name": "tag",
											"source": 8,
											"value": "521"
										},
										{
											"begin": 11044,
											"end": 11175,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11036,
											"end": 11175,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11036,
											"end": 11175,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10763,
											"end": 11182,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10763,
											"end": 11182,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10763,
											"end": 11182,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10763,
											"end": 11182,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 11188,
											"end": 11353,
											"name": "tag",
											"source": 8,
											"value": "385"
										},
										{
											"begin": 11188,
											"end": 11353,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11328,
											"end": 11345,
											"name": "PUSH",
											"source": 8,
											"value": "416C726561647920737461727465640000000000000000000000000000000000"
										},
										{
											"begin": 11324,
											"end": 11325,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11316,
											"end": 11322,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11312,
											"end": 11326,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11305,
											"end": 11346,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11188,
											"end": 11353,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11188,
											"end": 11353,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 11359,
											"end": 11725,
											"name": "tag",
											"source": 8,
											"value": "386"
										},
										{
											"begin": 11359,
											"end": 11725,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11501,
											"end": 11504,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11522,
											"end": 11589,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "524"
										},
										{
											"begin": 11586,
											"end": 11588,
											"name": "PUSH",
											"source": 8,
											"value": "F"
										},
										{
											"begin": 11581,
											"end": 11584,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11522,
											"end": 11589,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "370"
										},
										{
											"begin": 11522,
											"end": 11589,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 11522,
											"end": 11589,
											"name": "tag",
											"source": 8,
											"value": "524"
										},
										{
											"begin": 11522,
											"end": 11589,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11515,
											"end": 11589,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11515,
											"end": 11589,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11598,
											"end": 11691,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "525"
										},
										{
											"begin": 11687,
											"end": 11690,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11598,
											"end": 11691,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "385"
										},
										{
											"begin": 11598,
											"end": 11691,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 11598,
											"end": 11691,
											"name": "tag",
											"source": 8,
											"value": "525"
										},
										{
											"begin": 11598,
											"end": 11691,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11716,
											"end": 11718,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11711,
											"end": 11714,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11707,
											"end": 11719,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11700,
											"end": 11719,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11700,
											"end": 11719,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11359,
											"end": 11725,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11359,
											"end": 11725,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11359,
											"end": 11725,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11359,
											"end": 11725,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 11731,
											"end": 12150,
											"name": "tag",
											"source": 8,
											"value": "189"
										},
										{
											"begin": 11731,
											"end": 12150,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11897,
											"end": 11901,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11935,
											"end": 11937,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11924,
											"end": 11933,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11920,
											"end": 11938,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11912,
											"end": 11938,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11912,
											"end": 11938,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11984,
											"end": 11993,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11978,
											"end": 11982,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11974,
											"end": 11994,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 11970,
											"end": 11971,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11959,
											"end": 11968,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11955,
											"end": 11972,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11948,
											"end": 11995,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12012,
											"end": 12143,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "527"
										},
										{
											"begin": 12138,
											"end": 12142,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12012,
											"end": 12143,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "386"
										},
										{
											"begin": 12012,
											"end": 12143,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 12012,
											"end": 12143,
											"name": "tag",
											"source": 8,
											"value": "527"
										},
										{
											"begin": 12012,
											"end": 12143,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12004,
											"end": 12143,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12004,
											"end": 12143,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11731,
											"end": 12150,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11731,
											"end": 12150,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11731,
											"end": 12150,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11731,
											"end": 12150,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 12156,
											"end": 12318,
											"name": "tag",
											"source": 8,
											"value": "387"
										},
										{
											"begin": 12156,
											"end": 12318,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12296,
											"end": 12310,
											"name": "PUSH",
											"source": 8,
											"value": "496E73756666696369656E740000000000000000000000000000000000000000"
										},
										{
											"begin": 12292,
											"end": 12293,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12284,
											"end": 12290,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12280,
											"end": 12294,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12273,
											"end": 12311,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12156,
											"end": 12318,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12156,
											"end": 12318,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 12324,
											"end": 12690,
											"name": "tag",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 12324,
											"end": 12690,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12466,
											"end": 12469,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12487,
											"end": 12554,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "530"
										},
										{
											"begin": 12551,
											"end": 12553,
											"name": "PUSH",
											"source": 8,
											"value": "C"
										},
										{
											"begin": 12546,
											"end": 12549,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12487,
											"end": 12554,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "370"
										},
										{
											"begin": 12487,
											"end": 12554,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 12487,
											"end": 12554,
											"name": "tag",
											"source": 8,
											"value": "530"
										},
										{
											"begin": 12487,
											"end": 12554,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12480,
											"end": 12554,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12480,
											"end": 12554,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12563,
											"end": 12656,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "531"
										},
										{
											"begin": 12652,
											"end": 12655,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12563,
											"end": 12656,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "387"
										},
										{
											"begin": 12563,
											"end": 12656,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 12563,
											"end": 12656,
											"name": "tag",
											"source": 8,
											"value": "531"
										},
										{
											"begin": 12563,
											"end": 12656,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12681,
											"end": 12683,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12676,
											"end": 12679,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12672,
											"end": 12684,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12665,
											"end": 12684,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12665,
											"end": 12684,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12324,
											"end": 12690,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12324,
											"end": 12690,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12324,
											"end": 12690,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12324,
											"end": 12690,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 12696,
											"end": 13115,
											"name": "tag",
											"source": 8,
											"value": "196"
										},
										{
											"begin": 12696,
											"end": 13115,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12862,
											"end": 12866,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12900,
											"end": 12902,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12889,
											"end": 12898,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12885,
											"end": 12903,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12877,
											"end": 12903,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12877,
											"end": 12903,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12949,
											"end": 12958,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12943,
											"end": 12947,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12939,
											"end": 12959,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 12935,
											"end": 12936,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12924,
											"end": 12933,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12920,
											"end": 12937,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12913,
											"end": 12960,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12977,
											"end": 13108,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "533"
										},
										{
											"begin": 13103,
											"end": 13107,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12977,
											"end": 13108,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 12977,
											"end": 13108,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 12977,
											"end": 13108,
											"name": "tag",
											"source": 8,
											"value": "533"
										},
										{
											"begin": 12977,
											"end": 13108,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12969,
											"end": 13108,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12969,
											"end": 13108,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12696,
											"end": 13115,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12696,
											"end": 13115,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12696,
											"end": 13115,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12696,
											"end": 13115,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 13121,
											"end": 13283,
											"name": "tag",
											"source": 8,
											"value": "389"
										},
										{
											"begin": 13121,
											"end": 13283,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13261,
											"end": 13275,
											"name": "PUSH",
											"source": 8,
											"value": "496E76616C6964204D6F64650000000000000000000000000000000000000000"
										},
										{
											"begin": 13257,
											"end": 13258,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13249,
											"end": 13255,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13245,
											"end": 13259,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13238,
											"end": 13276,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13121,
											"end": 13283,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13121,
											"end": 13283,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 13289,
											"end": 13655,
											"name": "tag",
											"source": 8,
											"value": "390"
										},
										{
											"begin": 13289,
											"end": 13655,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13431,
											"end": 13434,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13452,
											"end": 13519,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "536"
										},
										{
											"begin": 13516,
											"end": 13518,
											"name": "PUSH",
											"source": 8,
											"value": "C"
										},
										{
											"begin": 13511,
											"end": 13514,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13452,
											"end": 13519,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "370"
										},
										{
											"begin": 13452,
											"end": 13519,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 13452,
											"end": 13519,
											"name": "tag",
											"source": 8,
											"value": "536"
										},
										{
											"begin": 13452,
											"end": 13519,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13445,
											"end": 13519,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13445,
											"end": 13519,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13528,
											"end": 13621,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "537"
										},
										{
											"begin": 13617,
											"end": 13620,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13528,
											"end": 13621,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "389"
										},
										{
											"begin": 13528,
											"end": 13621,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 13528,
											"end": 13621,
											"name": "tag",
											"source": 8,
											"value": "537"
										},
										{
											"begin": 13528,
											"end": 13621,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13646,
											"end": 13648,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13641,
											"end": 13644,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13637,
											"end": 13649,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13630,
											"end": 13649,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13630,
											"end": 13649,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13289,
											"end": 13655,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13289,
											"end": 13655,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13289,
											"end": 13655,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13289,
											"end": 13655,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 13661,
											"end": 14080,
											"name": "tag",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 13661,
											"end": 14080,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13827,
											"end": 13831,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13865,
											"end": 13867,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13854,
											"end": 13863,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13850,
											"end": 13868,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13842,
											"end": 13868,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13842,
											"end": 13868,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13914,
											"end": 13923,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13908,
											"end": 13912,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13904,
											"end": 13924,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 13900,
											"end": 13901,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13889,
											"end": 13898,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13885,
											"end": 13902,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13878,
											"end": 13925,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13942,
											"end": 14073,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "539"
										},
										{
											"begin": 14068,
											"end": 14072,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13942,
											"end": 14073,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "390"
										},
										{
											"begin": 13942,
											"end": 14073,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 13942,
											"end": 14073,
											"name": "tag",
											"source": 8,
											"value": "539"
										},
										{
											"begin": 13942,
											"end": 14073,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13934,
											"end": 14073,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13934,
											"end": 14073,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13661,
											"end": 14080,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13661,
											"end": 14080,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13661,
											"end": 14080,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13661,
											"end": 14080,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 14086,
											"end": 14259,
											"name": "tag",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 14086,
											"end": 14259,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14226,
											"end": 14251,
											"name": "PUSH",
											"source": 8,
											"value": "496E76616C6964204C6F636B7570204475726174696F6E000000000000000000"
										},
										{
											"begin": 14222,
											"end": 14223,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14214,
											"end": 14220,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14210,
											"end": 14224,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14203,
											"end": 14252,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14086,
											"end": 14259,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14086,
											"end": 14259,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 14265,
											"end": 14631,
											"name": "tag",
											"source": 8,
											"value": "392"
										},
										{
											"begin": 14265,
											"end": 14631,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14407,
											"end": 14410,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14428,
											"end": 14495,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "542"
										},
										{
											"begin": 14492,
											"end": 14494,
											"name": "PUSH",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 14487,
											"end": 14490,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14428,
											"end": 14495,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "370"
										},
										{
											"begin": 14428,
											"end": 14495,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 14428,
											"end": 14495,
											"name": "tag",
											"source": 8,
											"value": "542"
										},
										{
											"begin": 14428,
											"end": 14495,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14421,
											"end": 14495,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14421,
											"end": 14495,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14504,
											"end": 14597,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "543"
										},
										{
											"begin": 14593,
											"end": 14596,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14504,
											"end": 14597,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 14504,
											"end": 14597,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 14504,
											"end": 14597,
											"name": "tag",
											"source": 8,
											"value": "543"
										},
										{
											"begin": 14504,
											"end": 14597,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14622,
											"end": 14624,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 14617,
											"end": 14620,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14613,
											"end": 14625,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14606,
											"end": 14625,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14606,
											"end": 14625,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14265,
											"end": 14631,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14265,
											"end": 14631,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14265,
											"end": 14631,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14265,
											"end": 14631,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 14637,
											"end": 15056,
											"name": "tag",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 14637,
											"end": 15056,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14803,
											"end": 14807,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14841,
											"end": 14843,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 14830,
											"end": 14839,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14826,
											"end": 14844,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14818,
											"end": 14844,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14818,
											"end": 14844,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14890,
											"end": 14899,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14884,
											"end": 14888,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14880,
											"end": 14900,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 14876,
											"end": 14877,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14865,
											"end": 14874,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14861,
											"end": 14878,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14854,
											"end": 14901,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14918,
											"end": 15049,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "545"
										},
										{
											"begin": 15044,
											"end": 15048,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14918,
											"end": 15049,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "392"
										},
										{
											"begin": 14918,
											"end": 15049,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 14918,
											"end": 15049,
											"name": "tag",
											"source": 8,
											"value": "545"
										},
										{
											"begin": 14918,
											"end": 15049,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14910,
											"end": 15049,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14910,
											"end": 15049,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14637,
											"end": 15056,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14637,
											"end": 15056,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14637,
											"end": 15056,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14637,
											"end": 15056,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 15062,
											"end": 15238,
											"name": "tag",
											"source": 8,
											"value": "393"
										},
										{
											"begin": 15062,
											"end": 15238,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15202,
											"end": 15230,
											"name": "PUSH",
											"source": 8,
											"value": "496E76616C696420556E7374616B696E67204665652052617465000000000000"
										},
										{
											"begin": 15198,
											"end": 15199,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15190,
											"end": 15196,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15186,
											"end": 15200,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15179,
											"end": 15231,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15062,
											"end": 15238,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15062,
											"end": 15238,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 15244,
											"end": 15610,
											"name": "tag",
											"source": 8,
											"value": "394"
										},
										{
											"begin": 15244,
											"end": 15610,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15386,
											"end": 15389,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15407,
											"end": 15474,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "548"
										},
										{
											"begin": 15471,
											"end": 15473,
											"name": "PUSH",
											"source": 8,
											"value": "1A"
										},
										{
											"begin": 15466,
											"end": 15469,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15407,
											"end": 15474,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "370"
										},
										{
											"begin": 15407,
											"end": 15474,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 15407,
											"end": 15474,
											"name": "tag",
											"source": 8,
											"value": "548"
										},
										{
											"begin": 15407,
											"end": 15474,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15400,
											"end": 15474,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15400,
											"end": 15474,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15483,
											"end": 15576,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "549"
										},
										{
											"begin": 15572,
											"end": 15575,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15483,
											"end": 15576,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "393"
										},
										{
											"begin": 15483,
											"end": 15576,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 15483,
											"end": 15576,
											"name": "tag",
											"source": 8,
											"value": "549"
										},
										{
											"begin": 15483,
											"end": 15576,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15601,
											"end": 15603,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 15596,
											"end": 15599,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15592,
											"end": 15604,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15585,
											"end": 15604,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15585,
											"end": 15604,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15244,
											"end": 15610,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15244,
											"end": 15610,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15244,
											"end": 15610,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15244,
											"end": 15610,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 15616,
											"end": 16035,
											"name": "tag",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 15616,
											"end": 16035,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15782,
											"end": 15786,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15820,
											"end": 15822,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 15809,
											"end": 15818,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15805,
											"end": 15823,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15797,
											"end": 15823,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15797,
											"end": 15823,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15869,
											"end": 15878,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15863,
											"end": 15867,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15859,
											"end": 15879,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 15855,
											"end": 15856,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15844,
											"end": 15853,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15840,
											"end": 15857,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15833,
											"end": 15880,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15897,
											"end": 16028,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "551"
										},
										{
											"begin": 16023,
											"end": 16027,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15897,
											"end": 16028,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "394"
										},
										{
											"begin": 15897,
											"end": 16028,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 15897,
											"end": 16028,
											"name": "tag",
											"source": 8,
											"value": "551"
										},
										{
											"begin": 15897,
											"end": 16028,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15889,
											"end": 16028,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15889,
											"end": 16028,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15616,
											"end": 16035,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15616,
											"end": 16035,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15616,
											"end": 16035,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15616,
											"end": 16035,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 16041,
											"end": 16204,
											"name": "tag",
											"source": 8,
											"value": "395"
										},
										{
											"begin": 16041,
											"end": 16204,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16181,
											"end": 16196,
											"name": "PUSH",
											"source": 8,
											"value": "496E76616C69642076616C756500000000000000000000000000000000000000"
										},
										{
											"begin": 16177,
											"end": 16178,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16169,
											"end": 16175,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16165,
											"end": 16179,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16158,
											"end": 16197,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 16041,
											"end": 16204,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16041,
											"end": 16204,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 16210,
											"end": 16576,
											"name": "tag",
											"source": 8,
											"value": "396"
										},
										{
											"begin": 16210,
											"end": 16576,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16352,
											"end": 16355,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16373,
											"end": 16440,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "554"
										},
										{
											"begin": 16437,
											"end": 16439,
											"name": "PUSH",
											"source": 8,
											"value": "D"
										},
										{
											"begin": 16432,
											"end": 16435,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 16373,
											"end": 16440,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "370"
										},
										{
											"begin": 16373,
											"end": 16440,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 16373,
											"end": 16440,
											"name": "tag",
											"source": 8,
											"value": "554"
										},
										{
											"begin": 16373,
											"end": 16440,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16366,
											"end": 16440,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16366,
											"end": 16440,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16449,
											"end": 16542,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "555"
										},
										{
											"begin": 16538,
											"end": 16541,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16449,
											"end": 16542,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "395"
										},
										{
											"begin": 16449,
											"end": 16542,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 16449,
											"end": 16542,
											"name": "tag",
											"source": 8,
											"value": "555"
										},
										{
											"begin": 16449,
											"end": 16542,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16567,
											"end": 16569,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 16562,
											"end": 16565,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16558,
											"end": 16570,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16551,
											"end": 16570,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16551,
											"end": 16570,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16210,
											"end": 16576,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16210,
											"end": 16576,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16210,
											"end": 16576,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16210,
											"end": 16576,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 16582,
											"end": 17001,
											"name": "tag",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 16582,
											"end": 17001,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16748,
											"end": 16752,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16786,
											"end": 16788,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 16775,
											"end": 16784,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16771,
											"end": 16789,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16763,
											"end": 16789,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16763,
											"end": 16789,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16835,
											"end": 16844,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16829,
											"end": 16833,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16825,
											"end": 16845,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 16821,
											"end": 16822,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16810,
											"end": 16819,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 16806,
											"end": 16823,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16799,
											"end": 16846,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 16863,
											"end": 16994,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "557"
										},
										{
											"begin": 16989,
											"end": 16993,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16863,
											"end": 16994,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "396"
										},
										{
											"begin": 16863,
											"end": 16994,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 16863,
											"end": 16994,
											"name": "tag",
											"source": 8,
											"value": "557"
										},
										{
											"begin": 16863,
											"end": 16994,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16855,
											"end": 16994,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16855,
											"end": 16994,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16582,
											"end": 17001,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16582,
											"end": 17001,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16582,
											"end": 17001,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16582,
											"end": 17001,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 17007,
											"end": 17178,
											"name": "tag",
											"source": 8,
											"value": "397"
										},
										{
											"begin": 17007,
											"end": 17178,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17147,
											"end": 17170,
											"name": "PUSH",
											"source": 8,
											"value": "4572726F723A20696E76616C6964207374616B65720000000000000000000000"
										},
										{
											"begin": 17143,
											"end": 17144,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17135,
											"end": 17141,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17131,
											"end": 17145,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17124,
											"end": 17171,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 17007,
											"end": 17178,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17007,
											"end": 17178,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 17184,
											"end": 17550,
											"name": "tag",
											"source": 8,
											"value": "398"
										},
										{
											"begin": 17184,
											"end": 17550,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17326,
											"end": 17329,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17347,
											"end": 17414,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "560"
										},
										{
											"begin": 17411,
											"end": 17413,
											"name": "PUSH",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 17406,
											"end": 17409,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 17347,
											"end": 17414,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "370"
										},
										{
											"begin": 17347,
											"end": 17414,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 17347,
											"end": 17414,
											"name": "tag",
											"source": 8,
											"value": "560"
										},
										{
											"begin": 17347,
											"end": 17414,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17340,
											"end": 17414,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17340,
											"end": 17414,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17423,
											"end": 17516,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "561"
										},
										{
											"begin": 17512,
											"end": 17515,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17423,
											"end": 17516,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "397"
										},
										{
											"begin": 17423,
											"end": 17516,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 17423,
											"end": 17516,
											"name": "tag",
											"source": 8,
											"value": "561"
										},
										{
											"begin": 17423,
											"end": 17516,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17541,
											"end": 17543,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 17536,
											"end": 17539,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17532,
											"end": 17544,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17525,
											"end": 17544,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17525,
											"end": 17544,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17184,
											"end": 17550,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17184,
											"end": 17550,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17184,
											"end": 17550,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17184,
											"end": 17550,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 17556,
											"end": 17975,
											"name": "tag",
											"source": 8,
											"value": "266"
										},
										{
											"begin": 17556,
											"end": 17975,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17722,
											"end": 17726,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17760,
											"end": 17762,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 17749,
											"end": 17758,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17745,
											"end": 17763,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17737,
											"end": 17763,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17737,
											"end": 17763,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17809,
											"end": 17818,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17803,
											"end": 17807,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17799,
											"end": 17819,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 17795,
											"end": 17796,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17784,
											"end": 17793,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 17780,
											"end": 17797,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17773,
											"end": 17820,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 17837,
											"end": 17968,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "563"
										},
										{
											"begin": 17963,
											"end": 17967,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17837,
											"end": 17968,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "398"
										},
										{
											"begin": 17837,
											"end": 17968,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 17837,
											"end": 17968,
											"name": "tag",
											"source": 8,
											"value": "563"
										},
										{
											"begin": 17837,
											"end": 17968,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17829,
											"end": 17968,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17829,
											"end": 17968,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17556,
											"end": 17975,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17556,
											"end": 17975,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17556,
											"end": 17975,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17556,
											"end": 17975,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 17981,
											"end": 18206,
											"name": "tag",
											"source": 8,
											"value": "399"
										},
										{
											"begin": 17981,
											"end": 18206,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18121,
											"end": 18155,
											"name": "PUSH",
											"source": 8,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 18117,
											"end": 18118,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18109,
											"end": 18115,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18105,
											"end": 18119,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18098,
											"end": 18156,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 18190,
											"end": 18198,
											"name": "PUSH",
											"source": 8,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18185,
											"end": 18187,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 18177,
											"end": 18183,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18173,
											"end": 18188,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18166,
											"end": 18199,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 17981,
											"end": 18206,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17981,
											"end": 18206,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 18212,
											"end": 18578,
											"name": "tag",
											"source": 8,
											"value": "400"
										},
										{
											"begin": 18212,
											"end": 18578,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18354,
											"end": 18357,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18375,
											"end": 18442,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "566"
										},
										{
											"begin": 18439,
											"end": 18441,
											"name": "PUSH",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 18434,
											"end": 18437,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 18375,
											"end": 18442,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "370"
										},
										{
											"begin": 18375,
											"end": 18442,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 18375,
											"end": 18442,
											"name": "tag",
											"source": 8,
											"value": "566"
										},
										{
											"begin": 18375,
											"end": 18442,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18368,
											"end": 18442,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18368,
											"end": 18442,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18451,
											"end": 18544,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "567"
										},
										{
											"begin": 18540,
											"end": 18543,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18451,
											"end": 18544,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "399"
										},
										{
											"begin": 18451,
											"end": 18544,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 18451,
											"end": 18544,
											"name": "tag",
											"source": 8,
											"value": "567"
										},
										{
											"begin": 18451,
											"end": 18544,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18569,
											"end": 18571,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 18564,
											"end": 18567,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18560,
											"end": 18572,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18553,
											"end": 18572,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18553,
											"end": 18572,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18212,
											"end": 18578,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18212,
											"end": 18578,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18212,
											"end": 18578,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18212,
											"end": 18578,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 18584,
											"end": 19003,
											"name": "tag",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 18584,
											"end": 19003,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18750,
											"end": 18754,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18788,
											"end": 18790,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 18777,
											"end": 18786,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18773,
											"end": 18791,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18765,
											"end": 18791,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18765,
											"end": 18791,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18837,
											"end": 18846,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18831,
											"end": 18835,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18827,
											"end": 18847,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 18823,
											"end": 18824,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18812,
											"end": 18821,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 18808,
											"end": 18825,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18801,
											"end": 18848,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 18865,
											"end": 18996,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "569"
										},
										{
											"begin": 18991,
											"end": 18995,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18865,
											"end": 18996,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "400"
										},
										{
											"begin": 18865,
											"end": 18996,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 18865,
											"end": 18996,
											"name": "tag",
											"source": 8,
											"value": "569"
										},
										{
											"begin": 18865,
											"end": 18996,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18857,
											"end": 18996,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18857,
											"end": 18996,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18584,
											"end": 19003,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18584,
											"end": 19003,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18584,
											"end": 19003,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18584,
											"end": 19003,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 19009,
											"end": 19189,
											"name": "tag",
											"source": 8,
											"value": "401"
										},
										{
											"begin": 19009,
											"end": 19189,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19057,
											"end": 19134,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19054,
											"end": 19055,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19047,
											"end": 19135,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 19154,
											"end": 19158,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 19151,
											"end": 19152,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 19144,
											"end": 19159,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 19178,
											"end": 19182,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 19175,
											"end": 19176,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19168,
											"end": 19183,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 19195,
											"end": 19386,
											"name": "tag",
											"source": 8,
											"value": "297"
										},
										{
											"begin": 19195,
											"end": 19386,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19235,
											"end": 19239,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19255,
											"end": 19275,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "572"
										},
										{
											"begin": 19273,
											"end": 19274,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19255,
											"end": 19275,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "353"
										},
										{
											"begin": 19255,
											"end": 19275,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 19255,
											"end": 19275,
											"name": "tag",
											"source": 8,
											"value": "572"
										},
										{
											"begin": 19255,
											"end": 19275,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19250,
											"end": 19275,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19250,
											"end": 19275,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19289,
											"end": 19309,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "573"
										},
										{
											"begin": 19307,
											"end": 19308,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 19289,
											"end": 19309,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "353"
										},
										{
											"begin": 19289,
											"end": 19309,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 19289,
											"end": 19309,
											"name": "tag",
											"source": 8,
											"value": "573"
										},
										{
											"begin": 19289,
											"end": 19309,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19284,
											"end": 19309,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 19284,
											"end": 19309,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19328,
											"end": 19329,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19325,
											"end": 19326,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19322,
											"end": 19330,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 19319,
											"end": 19353,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 19319,
											"end": 19353,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "574"
										},
										{
											"begin": 19319,
											"end": 19353,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 19333,
											"end": 19351,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "575"
										},
										{
											"begin": 19333,
											"end": 19351,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "401"
										},
										{
											"begin": 19333,
											"end": 19351,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 19333,
											"end": 19351,
											"name": "tag",
											"source": 8,
											"value": "575"
										},
										{
											"begin": 19333,
											"end": 19351,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19319,
											"end": 19353,
											"name": "tag",
											"source": 8,
											"value": "574"
										},
										{
											"begin": 19319,
											"end": 19353,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19378,
											"end": 19379,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19375,
											"end": 19376,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19371,
											"end": 19380,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 19363,
											"end": 19380,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19363,
											"end": 19380,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19195,
											"end": 19386,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 19195,
											"end": 19386,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19195,
											"end": 19386,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19195,
											"end": 19386,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19195,
											"end": 19386,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 19392,
											"end": 19577,
											"name": "tag",
											"source": 8,
											"value": "300"
										},
										{
											"begin": 19392,
											"end": 19577,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19432,
											"end": 19433,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19449,
											"end": 19469,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "577"
										},
										{
											"begin": 19467,
											"end": 19468,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19449,
											"end": 19469,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "353"
										},
										{
											"begin": 19449,
											"end": 19469,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 19449,
											"end": 19469,
											"name": "tag",
											"source": 8,
											"value": "577"
										},
										{
											"begin": 19449,
											"end": 19469,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19444,
											"end": 19469,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19444,
											"end": 19469,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19483,
											"end": 19503,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "578"
										},
										{
											"begin": 19501,
											"end": 19502,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 19483,
											"end": 19503,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "353"
										},
										{
											"begin": 19483,
											"end": 19503,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 19483,
											"end": 19503,
											"name": "tag",
											"source": 8,
											"value": "578"
										},
										{
											"begin": 19483,
											"end": 19503,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19478,
											"end": 19503,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 19478,
											"end": 19503,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19522,
											"end": 19523,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19512,
											"end": 19547,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "579"
										},
										{
											"begin": 19512,
											"end": 19547,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 19527,
											"end": 19545,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "580"
										},
										{
											"begin": 19527,
											"end": 19545,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "375"
										},
										{
											"begin": 19527,
											"end": 19545,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 19527,
											"end": 19545,
											"name": "tag",
											"source": 8,
											"value": "580"
										},
										{
											"begin": 19527,
											"end": 19545,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19512,
											"end": 19547,
											"name": "tag",
											"source": 8,
											"value": "579"
										},
										{
											"begin": 19512,
											"end": 19547,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19569,
											"end": 19570,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19566,
											"end": 19567,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19562,
											"end": 19571,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 19557,
											"end": 19571,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19557,
											"end": 19571,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19392,
											"end": 19577,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 19392,
											"end": 19577,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19392,
											"end": 19577,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19392,
											"end": 19577,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19392,
											"end": 19577,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 19583,
											"end": 19888,
											"name": "tag",
											"source": 8,
											"value": "303"
										},
										{
											"begin": 19583,
											"end": 19888,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19623,
											"end": 19626,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19642,
											"end": 19662,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "582"
										},
										{
											"begin": 19660,
											"end": 19661,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19642,
											"end": 19662,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "353"
										},
										{
											"begin": 19642,
											"end": 19662,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 19642,
											"end": 19662,
											"name": "tag",
											"source": 8,
											"value": "582"
										},
										{
											"begin": 19642,
											"end": 19662,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19637,
											"end": 19662,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19637,
											"end": 19662,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19676,
											"end": 19696,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "583"
										},
										{
											"begin": 19694,
											"end": 19695,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 19676,
											"end": 19696,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "353"
										},
										{
											"begin": 19676,
											"end": 19696,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 19676,
											"end": 19696,
											"name": "tag",
											"source": 8,
											"value": "583"
										},
										{
											"begin": 19676,
											"end": 19696,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19671,
											"end": 19696,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 19671,
											"end": 19696,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19830,
											"end": 19831,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19762,
											"end": 19828,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19758,
											"end": 19832,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 19755,
											"end": 19756,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19752,
											"end": 19833,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 19749,
											"end": 19856,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 19749,
											"end": 19856,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "584"
										},
										{
											"begin": 19749,
											"end": 19856,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 19836,
											"end": 19854,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "585"
										},
										{
											"begin": 19836,
											"end": 19854,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "401"
										},
										{
											"begin": 19836,
											"end": 19854,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 19836,
											"end": 19854,
											"name": "tag",
											"source": 8,
											"value": "585"
										},
										{
											"begin": 19836,
											"end": 19854,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19749,
											"end": 19856,
											"name": "tag",
											"source": 8,
											"value": "584"
										},
										{
											"begin": 19749,
											"end": 19856,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19880,
											"end": 19881,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19877,
											"end": 19878,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19873,
											"end": 19882,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19866,
											"end": 19882,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19866,
											"end": 19882,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19583,
											"end": 19888,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 19583,
											"end": 19888,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19583,
											"end": 19888,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19583,
											"end": 19888,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19583,
											"end": 19888,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 19894,
											"end": 20242,
											"name": "tag",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 19894,
											"end": 20242,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19934,
											"end": 19941,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19957,
											"end": 19977,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "587"
										},
										{
											"begin": 19975,
											"end": 19976,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19957,
											"end": 19977,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "353"
										},
										{
											"begin": 19957,
											"end": 19977,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 19957,
											"end": 19977,
											"name": "tag",
											"source": 8,
											"value": "587"
										},
										{
											"begin": 19957,
											"end": 19977,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19952,
											"end": 19977,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19952,
											"end": 19977,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19991,
											"end": 20011,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "588"
										},
										{
											"begin": 20009,
											"end": 20010,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 19991,
											"end": 20011,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "353"
										},
										{
											"begin": 19991,
											"end": 20011,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 19991,
											"end": 20011,
											"name": "tag",
											"source": 8,
											"value": "588"
										},
										{
											"begin": 19991,
											"end": 20011,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19986,
											"end": 20011,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 19986,
											"end": 20011,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20179,
											"end": 20180,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20111,
											"end": 20177,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20107,
											"end": 20181,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 20104,
											"end": 20105,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 20101,
											"end": 20182,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 20096,
											"end": 20097,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20089,
											"end": 20098,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 20082,
											"end": 20099,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 20078,
											"end": 20183,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 20075,
											"end": 20206,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 20075,
											"end": 20206,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "589"
										},
										{
											"begin": 20075,
											"end": 20206,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 20186,
											"end": 20204,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "590"
										},
										{
											"begin": 20186,
											"end": 20204,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "401"
										},
										{
											"begin": 20186,
											"end": 20204,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 20186,
											"end": 20204,
											"name": "tag",
											"source": 8,
											"value": "590"
										},
										{
											"begin": 20186,
											"end": 20204,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20075,
											"end": 20206,
											"name": "tag",
											"source": 8,
											"value": "589"
										},
										{
											"begin": 20075,
											"end": 20206,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20234,
											"end": 20235,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20231,
											"end": 20232,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20227,
											"end": 20236,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 20216,
											"end": 20236,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20216,
											"end": 20236,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19894,
											"end": 20242,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 19894,
											"end": 20242,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19894,
											"end": 20242,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19894,
											"end": 20242,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19894,
											"end": 20242,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 20248,
											"end": 20690,
											"name": "tag",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 20248,
											"end": 20690,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20397,
											"end": 20401,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20435,
											"end": 20437,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 20424,
											"end": 20433,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20420,
											"end": 20438,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20412,
											"end": 20438,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20412,
											"end": 20438,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20448,
											"end": 20519,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "592"
										},
										{
											"begin": 20516,
											"end": 20517,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20505,
											"end": 20514,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 20501,
											"end": 20518,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20492,
											"end": 20498,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 20448,
											"end": 20519,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "364"
										},
										{
											"begin": 20448,
											"end": 20519,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 20448,
											"end": 20519,
											"name": "tag",
											"source": 8,
											"value": "592"
										},
										{
											"begin": 20448,
											"end": 20519,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20529,
											"end": 20601,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "593"
										},
										{
											"begin": 20597,
											"end": 20599,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 20586,
											"end": 20595,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 20582,
											"end": 20600,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20573,
											"end": 20579,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 20529,
											"end": 20601,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "364"
										},
										{
											"begin": 20529,
											"end": 20601,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 20529,
											"end": 20601,
											"name": "tag",
											"source": 8,
											"value": "593"
										},
										{
											"begin": 20529,
											"end": 20601,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20611,
											"end": 20683,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "594"
										},
										{
											"begin": 20679,
											"end": 20681,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 20668,
											"end": 20677,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 20664,
											"end": 20682,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20655,
											"end": 20661,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 20611,
											"end": 20683,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "354"
										},
										{
											"begin": 20611,
											"end": 20683,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 20611,
											"end": 20683,
											"name": "tag",
											"source": 8,
											"value": "594"
										},
										{
											"begin": 20611,
											"end": 20683,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20248,
											"end": 20690,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 20248,
											"end": 20690,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 20248,
											"end": 20690,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20248,
											"end": 20690,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20248,
											"end": 20690,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20248,
											"end": 20690,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20248,
											"end": 20690,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 20696,
											"end": 20786,
											"name": "tag",
											"source": 8,
											"value": "402"
										},
										{
											"begin": 20696,
											"end": 20786,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20730,
											"end": 20737,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20773,
											"end": 20778,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20766,
											"end": 20779,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 20759,
											"end": 20780,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 20748,
											"end": 20780,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20748,
											"end": 20780,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20696,
											"end": 20786,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 20696,
											"end": 20786,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20696,
											"end": 20786,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20696,
											"end": 20786,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 20792,
											"end": 20908,
											"name": "tag",
											"source": 8,
											"value": "403"
										},
										{
											"begin": 20792,
											"end": 20908,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20862,
											"end": 20883,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "597"
										},
										{
											"begin": 20877,
											"end": 20882,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20862,
											"end": 20883,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "402"
										},
										{
											"begin": 20862,
											"end": 20883,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 20862,
											"end": 20883,
											"name": "tag",
											"source": 8,
											"value": "597"
										},
										{
											"begin": 20862,
											"end": 20883,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20855,
											"end": 20860,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20852,
											"end": 20884,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 20842,
											"end": 20902,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "598"
										},
										{
											"begin": 20842,
											"end": 20902,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 20898,
											"end": 20899,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20895,
											"end": 20896,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 20888,
											"end": 20900,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 20842,
											"end": 20902,
											"name": "tag",
											"source": 8,
											"value": "598"
										},
										{
											"begin": 20842,
											"end": 20902,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20792,
											"end": 20908,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20792,
											"end": 20908,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 20914,
											"end": 21051,
											"name": "tag",
											"source": 8,
											"value": "404"
										},
										{
											"begin": 20914,
											"end": 21051,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20968,
											"end": 20973,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20999,
											"end": 21005,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20993,
											"end": 21006,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 20984,
											"end": 21006,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20984,
											"end": 21006,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21015,
											"end": 21045,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "600"
										},
										{
											"begin": 21039,
											"end": 21044,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 21015,
											"end": 21045,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "403"
										},
										{
											"begin": 21015,
											"end": 21045,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 21015,
											"end": 21045,
											"name": "tag",
											"source": 8,
											"value": "600"
										},
										{
											"begin": 21015,
											"end": 21045,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20914,
											"end": 21051,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 20914,
											"end": 21051,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 20914,
											"end": 21051,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20914,
											"end": 21051,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20914,
											"end": 21051,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 21057,
											"end": 21402,
											"name": "tag",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 21057,
											"end": 21402,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21124,
											"end": 21130,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21173,
											"end": 21175,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 21161,
											"end": 21170,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21152,
											"end": 21159,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 21148,
											"end": 21171,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 21144,
											"end": 21176,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 21141,
											"end": 21260,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 21141,
											"end": 21260,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "602"
										},
										{
											"begin": 21141,
											"end": 21260,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 21179,
											"end": 21258,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "603"
										},
										{
											"begin": 21179,
											"end": 21258,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "356"
										},
										{
											"begin": 21179,
											"end": 21258,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 21179,
											"end": 21258,
											"name": "tag",
											"source": 8,
											"value": "603"
										},
										{
											"begin": 21179,
											"end": 21258,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21141,
											"end": 21260,
											"name": "tag",
											"source": 8,
											"value": "602"
										},
										{
											"begin": 21141,
											"end": 21260,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21299,
											"end": 21300,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21324,
											"end": 21385,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "604"
										},
										{
											"begin": 21377,
											"end": 21384,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 21368,
											"end": 21374,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21357,
											"end": 21366,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 21353,
											"end": 21375,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21324,
											"end": 21385,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "404"
										},
										{
											"begin": 21324,
											"end": 21385,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 21324,
											"end": 21385,
											"name": "tag",
											"source": 8,
											"value": "604"
										},
										{
											"begin": 21324,
											"end": 21385,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21314,
											"end": 21385,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 21314,
											"end": 21385,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21270,
											"end": 21395,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21057,
											"end": 21402,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 21057,
											"end": 21402,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 21057,
											"end": 21402,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21057,
											"end": 21402,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21057,
											"end": 21402,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 21408,
											"end": 21637,
											"name": "tag",
											"source": 8,
											"value": "405"
										},
										{
											"begin": 21408,
											"end": 21637,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21548,
											"end": 21582,
											"name": "PUSH",
											"source": 8,
											"value": "5361666542455032303A204245503230206F7065726174696F6E20646964206E"
										},
										{
											"begin": 21544,
											"end": 21545,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21536,
											"end": 21542,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21532,
											"end": 21546,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21525,
											"end": 21583,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 21617,
											"end": 21629,
											"name": "PUSH",
											"source": 8,
											"value": "6F74207375636365656400000000000000000000000000000000000000000000"
										},
										{
											"begin": 21612,
											"end": 21614,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 21604,
											"end": 21610,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21600,
											"end": 21615,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21593,
											"end": 21630,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 21408,
											"end": 21637,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21408,
											"end": 21637,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 21643,
											"end": 22009,
											"name": "tag",
											"source": 8,
											"value": "406"
										},
										{
											"begin": 21643,
											"end": 22009,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21785,
											"end": 21788,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21806,
											"end": 21873,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "607"
										},
										{
											"begin": 21870,
											"end": 21872,
											"name": "PUSH",
											"source": 8,
											"value": "2A"
										},
										{
											"begin": 21865,
											"end": 21868,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 21806,
											"end": 21873,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "370"
										},
										{
											"begin": 21806,
											"end": 21873,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 21806,
											"end": 21873,
											"name": "tag",
											"source": 8,
											"value": "607"
										},
										{
											"begin": 21806,
											"end": 21873,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21799,
											"end": 21873,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 21799,
											"end": 21873,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21882,
											"end": 21975,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "608"
										},
										{
											"begin": 21971,
											"end": 21974,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21882,
											"end": 21975,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "405"
										},
										{
											"begin": 21882,
											"end": 21975,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 21882,
											"end": 21975,
											"name": "tag",
											"source": 8,
											"value": "608"
										},
										{
											"begin": 21882,
											"end": 21975,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22000,
											"end": 22002,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 21995,
											"end": 21998,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21991,
											"end": 22003,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21984,
											"end": 22003,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21984,
											"end": 22003,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21643,
											"end": 22009,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 21643,
											"end": 22009,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21643,
											"end": 22009,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21643,
											"end": 22009,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 22015,
											"end": 22434,
											"name": "tag",
											"source": 8,
											"value": "325"
										},
										{
											"begin": 22015,
											"end": 22434,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22181,
											"end": 22185,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 22219,
											"end": 22221,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 22208,
											"end": 22217,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 22204,
											"end": 22222,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 22196,
											"end": 22222,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 22196,
											"end": 22222,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22268,
											"end": 22277,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 22262,
											"end": 22266,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 22258,
											"end": 22278,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 22254,
											"end": 22255,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 22243,
											"end": 22252,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 22239,
											"end": 22256,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 22232,
											"end": 22279,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 22296,
											"end": 22427,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "610"
										},
										{
											"begin": 22422,
											"end": 22426,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 22296,
											"end": 22427,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "406"
										},
										{
											"begin": 22296,
											"end": 22427,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 22296,
											"end": 22427,
											"name": "tag",
											"source": 8,
											"value": "610"
										},
										{
											"begin": 22296,
											"end": 22427,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22288,
											"end": 22427,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 22288,
											"end": 22427,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22015,
											"end": 22434,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 22015,
											"end": 22434,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 22015,
											"end": 22434,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22015,
											"end": 22434,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 22440,
											"end": 22665,
											"name": "tag",
											"source": 8,
											"value": "407"
										},
										{
											"begin": 22440,
											"end": 22665,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22580,
											"end": 22614,
											"name": "PUSH",
											"source": 8,
											"value": "416464726573733A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 22576,
											"end": 22577,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 22568,
											"end": 22574,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 22564,
											"end": 22578,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 22557,
											"end": 22615,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 22649,
											"end": 22657,
											"name": "PUSH",
											"source": 8,
											"value": "722063616C6C0000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22644,
											"end": 22646,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 22636,
											"end": 22642,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 22632,
											"end": 22647,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 22625,
											"end": 22658,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 22440,
											"end": 22665,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22440,
											"end": 22665,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 22671,
											"end": 23037,
											"name": "tag",
											"source": 8,
											"value": "408"
										},
										{
											"begin": 22671,
											"end": 23037,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22813,
											"end": 22816,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 22834,
											"end": 22901,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "613"
										},
										{
											"begin": 22898,
											"end": 22900,
											"name": "PUSH",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 22893,
											"end": 22896,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 22834,
											"end": 22901,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "370"
										},
										{
											"begin": 22834,
											"end": 22901,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 22834,
											"end": 22901,
											"name": "tag",
											"source": 8,
											"value": "613"
										},
										{
											"begin": 22834,
											"end": 22901,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22827,
											"end": 22901,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 22827,
											"end": 22901,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22910,
											"end": 23003,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "614"
										},
										{
											"begin": 22999,
											"end": 23002,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 22910,
											"end": 23003,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "407"
										},
										{
											"begin": 22910,
											"end": 23003,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 22910,
											"end": 23003,
											"name": "tag",
											"source": 8,
											"value": "614"
										},
										{
											"begin": 22910,
											"end": 23003,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23028,
											"end": 23030,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 23023,
											"end": 23026,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 23019,
											"end": 23031,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 23012,
											"end": 23031,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 23012,
											"end": 23031,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22671,
											"end": 23037,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 22671,
											"end": 23037,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 22671,
											"end": 23037,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22671,
											"end": 23037,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 23043,
											"end": 23462,
											"name": "tag",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 23043,
											"end": 23462,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23209,
											"end": 23213,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 23247,
											"end": 23249,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 23236,
											"end": 23245,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 23232,
											"end": 23250,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 23224,
											"end": 23250,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 23224,
											"end": 23250,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23296,
											"end": 23305,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 23290,
											"end": 23294,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 23286,
											"end": 23306,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 23282,
											"end": 23283,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 23271,
											"end": 23280,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 23267,
											"end": 23284,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 23260,
											"end": 23307,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 23324,
											"end": 23455,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "616"
										},
										{
											"begin": 23450,
											"end": 23454,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 23324,
											"end": 23455,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "408"
										},
										{
											"begin": 23324,
											"end": 23455,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 23324,
											"end": 23455,
											"name": "tag",
											"source": 8,
											"value": "616"
										},
										{
											"begin": 23324,
											"end": 23455,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23316,
											"end": 23455,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 23316,
											"end": 23455,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23043,
											"end": 23462,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 23043,
											"end": 23462,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 23043,
											"end": 23462,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23043,
											"end": 23462,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 23468,
											"end": 23647,
											"name": "tag",
											"source": 8,
											"value": "409"
										},
										{
											"begin": 23468,
											"end": 23647,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23608,
											"end": 23639,
											"name": "PUSH",
											"source": 8,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 23604,
											"end": 23605,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 23596,
											"end": 23602,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 23592,
											"end": 23606,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 23585,
											"end": 23640,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 23468,
											"end": 23647,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23468,
											"end": 23647,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 23653,
											"end": 24019,
											"name": "tag",
											"source": 8,
											"value": "410"
										},
										{
											"begin": 23653,
											"end": 24019,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23795,
											"end": 23798,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 23816,
											"end": 23883,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "619"
										},
										{
											"begin": 23880,
											"end": 23882,
											"name": "PUSH",
											"source": 8,
											"value": "1D"
										},
										{
											"begin": 23875,
											"end": 23878,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 23816,
											"end": 23883,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "370"
										},
										{
											"begin": 23816,
											"end": 23883,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 23816,
											"end": 23883,
											"name": "tag",
											"source": 8,
											"value": "619"
										},
										{
											"begin": 23816,
											"end": 23883,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23809,
											"end": 23883,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 23809,
											"end": 23883,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23892,
											"end": 23985,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "620"
										},
										{
											"begin": 23981,
											"end": 23984,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 23892,
											"end": 23985,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "409"
										},
										{
											"begin": 23892,
											"end": 23985,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 23892,
											"end": 23985,
											"name": "tag",
											"source": 8,
											"value": "620"
										},
										{
											"begin": 23892,
											"end": 23985,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24010,
											"end": 24012,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 24005,
											"end": 24008,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 24001,
											"end": 24013,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 23994,
											"end": 24013,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 23994,
											"end": 24013,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23653,
											"end": 24019,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 23653,
											"end": 24019,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 23653,
											"end": 24019,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23653,
											"end": 24019,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 24025,
											"end": 24444,
											"name": "tag",
											"source": 8,
											"value": "337"
										},
										{
											"begin": 24025,
											"end": 24444,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24191,
											"end": 24195,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 24229,
											"end": 24231,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 24218,
											"end": 24227,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 24214,
											"end": 24232,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 24206,
											"end": 24232,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 24206,
											"end": 24232,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24278,
											"end": 24287,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 24272,
											"end": 24276,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 24268,
											"end": 24288,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 24264,
											"end": 24265,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 24253,
											"end": 24262,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 24249,
											"end": 24266,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 24242,
											"end": 24289,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 24306,
											"end": 24437,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "622"
										},
										{
											"begin": 24432,
											"end": 24436,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 24306,
											"end": 24437,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "410"
										},
										{
											"begin": 24306,
											"end": 24437,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 24306,
											"end": 24437,
											"name": "tag",
											"source": 8,
											"value": "622"
										},
										{
											"begin": 24306,
											"end": 24437,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24298,
											"end": 24437,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 24298,
											"end": 24437,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24025,
											"end": 24444,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 24025,
											"end": 24444,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 24025,
											"end": 24444,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24025,
											"end": 24444,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 24450,
											"end": 24548,
											"name": "tag",
											"source": 8,
											"value": "411"
										},
										{
											"begin": 24450,
											"end": 24548,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24501,
											"end": 24507,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 24535,
											"end": 24540,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 24529,
											"end": 24541,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 24519,
											"end": 24541,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 24519,
											"end": 24541,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24450,
											"end": 24548,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 24450,
											"end": 24548,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 24450,
											"end": 24548,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24450,
											"end": 24548,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 24554,
											"end": 24701,
											"name": "tag",
											"source": 8,
											"value": "412"
										},
										{
											"begin": 24554,
											"end": 24701,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24655,
											"end": 24666,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 24692,
											"end": 24695,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 24677,
											"end": 24695,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 24677,
											"end": 24695,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24554,
											"end": 24701,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 24554,
											"end": 24701,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 24554,
											"end": 24701,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24554,
											"end": 24701,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24554,
											"end": 24701,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 24707,
											"end": 25014,
											"name": "tag",
											"source": 8,
											"value": "413"
										},
										{
											"begin": 24707,
											"end": 25014,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24775,
											"end": 24776,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 24785,
											"end": 24898,
											"name": "tag",
											"source": 8,
											"value": "626"
										},
										{
											"begin": 24785,
											"end": 24898,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24799,
											"end": 24805,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 24796,
											"end": 24797,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 24793,
											"end": 24806,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 24785,
											"end": 24898,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 24785,
											"end": 24898,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "628"
										},
										{
											"begin": 24785,
											"end": 24898,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 24884,
											"end": 24885,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 24879,
											"end": 24882,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 24875,
											"end": 24886,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 24869,
											"end": 24887,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 24865,
											"end": 24866,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 24860,
											"end": 24863,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 24856,
											"end": 24867,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 24849,
											"end": 24888,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 24821,
											"end": 24823,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 24818,
											"end": 24819,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 24814,
											"end": 24824,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 24809,
											"end": 24824,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 24809,
											"end": 24824,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24785,
											"end": 24898,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "626"
										},
										{
											"begin": 24785,
											"end": 24898,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 24785,
											"end": 24898,
											"name": "tag",
											"source": 8,
											"value": "628"
										},
										{
											"begin": 24785,
											"end": 24898,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24916,
											"end": 24922,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 24913,
											"end": 24914,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 24910,
											"end": 24923,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 24907,
											"end": 25008,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 24907,
											"end": 25008,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "629"
										},
										{
											"begin": 24907,
											"end": 25008,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 24996,
											"end": 24997,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 24987,
											"end": 24993,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 24982,
											"end": 24985,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 24978,
											"end": 24994,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 24971,
											"end": 24998,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 24907,
											"end": 25008,
											"name": "tag",
											"source": 8,
											"value": "629"
										},
										{
											"begin": 24907,
											"end": 25008,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24756,
											"end": 25014,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24707,
											"end": 25014,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24707,
											"end": 25014,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24707,
											"end": 25014,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24707,
											"end": 25014,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 25020,
											"end": 25393,
											"name": "tag",
											"source": 8,
											"value": "414"
										},
										{
											"begin": 25020,
											"end": 25393,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25124,
											"end": 25127,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 25152,
											"end": 25190,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "631"
										},
										{
											"begin": 25184,
											"end": 25189,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 25152,
											"end": 25190,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "411"
										},
										{
											"begin": 25152,
											"end": 25190,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 25152,
											"end": 25190,
											"name": "tag",
											"source": 8,
											"value": "631"
										},
										{
											"begin": 25152,
											"end": 25190,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25206,
											"end": 25294,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "632"
										},
										{
											"begin": 25287,
											"end": 25293,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 25282,
											"end": 25285,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 25206,
											"end": 25294,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "412"
										},
										{
											"begin": 25206,
											"end": 25294,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 25206,
											"end": 25294,
											"name": "tag",
											"source": 8,
											"value": "632"
										},
										{
											"begin": 25206,
											"end": 25294,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25199,
											"end": 25294,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 25199,
											"end": 25294,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25303,
											"end": 25355,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "633"
										},
										{
											"begin": 25348,
											"end": 25354,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 25343,
											"end": 25346,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 25336,
											"end": 25340,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 25329,
											"end": 25334,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 25325,
											"end": 25341,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 25303,
											"end": 25355,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "413"
										},
										{
											"begin": 25303,
											"end": 25355,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 25303,
											"end": 25355,
											"name": "tag",
											"source": 8,
											"value": "633"
										},
										{
											"begin": 25303,
											"end": 25355,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25380,
											"end": 25386,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 25375,
											"end": 25378,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 25371,
											"end": 25387,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 25364,
											"end": 25387,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 25364,
											"end": 25387,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25128,
											"end": 25393,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25020,
											"end": 25393,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 25020,
											"end": 25393,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 25020,
											"end": 25393,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25020,
											"end": 25393,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25020,
											"end": 25393,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 25399,
											"end": 25670,
											"name": "tag",
											"source": 8,
											"value": "339"
										},
										{
											"begin": 25399,
											"end": 25670,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25529,
											"end": 25532,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 25551,
											"end": 25644,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "635"
										},
										{
											"begin": 25640,
											"end": 25643,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 25631,
											"end": 25637,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 25551,
											"end": 25644,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "414"
										},
										{
											"begin": 25551,
											"end": 25644,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 25551,
											"end": 25644,
											"name": "tag",
											"source": 8,
											"value": "635"
										},
										{
											"begin": 25551,
											"end": 25644,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25544,
											"end": 25644,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 25544,
											"end": 25644,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25661,
											"end": 25664,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 25654,
											"end": 25664,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 25654,
											"end": 25664,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25399,
											"end": 25670,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 25399,
											"end": 25670,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 25399,
											"end": 25670,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25399,
											"end": 25670,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25399,
											"end": 25670,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 25676,
											"end": 25775,
											"name": "tag",
											"source": 8,
											"value": "415"
										},
										{
											"begin": 25676,
											"end": 25775,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25728,
											"end": 25734,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 25762,
											"end": 25767,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 25756,
											"end": 25768,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 25746,
											"end": 25768,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 25746,
											"end": 25768,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25676,
											"end": 25775,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 25676,
											"end": 25775,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 25676,
											"end": 25775,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25676,
											"end": 25775,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 25781,
											"end": 25883,
											"name": "tag",
											"source": 8,
											"value": "416"
										},
										{
											"begin": 25781,
											"end": 25883,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25822,
											"end": 25828,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 25873,
											"end": 25875,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 25869,
											"end": 25876,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 25864,
											"end": 25866,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 25857,
											"end": 25862,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 25853,
											"end": 25867,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 25849,
											"end": 25877,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 25839,
											"end": 25877,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 25839,
											"end": 25877,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25781,
											"end": 25883,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 25781,
											"end": 25883,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 25781,
											"end": 25883,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25781,
											"end": 25883,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 25889,
											"end": 26253,
											"name": "tag",
											"source": 8,
											"value": "417"
										},
										{
											"begin": 25889,
											"end": 26253,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25977,
											"end": 25980,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 26005,
											"end": 26044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "639"
										},
										{
											"begin": 26038,
											"end": 26043,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 26005,
											"end": 26044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "415"
										},
										{
											"begin": 26005,
											"end": 26044,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 26005,
											"end": 26044,
											"name": "tag",
											"source": 8,
											"value": "639"
										},
										{
											"begin": 26005,
											"end": 26044,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26060,
											"end": 26131,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "640"
										},
										{
											"begin": 26124,
											"end": 26130,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 26119,
											"end": 26122,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 26060,
											"end": 26131,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "370"
										},
										{
											"begin": 26060,
											"end": 26131,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 26060,
											"end": 26131,
											"name": "tag",
											"source": 8,
											"value": "640"
										},
										{
											"begin": 26060,
											"end": 26131,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26053,
											"end": 26131,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 26053,
											"end": 26131,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26140,
											"end": 26192,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "641"
										},
										{
											"begin": 26185,
											"end": 26191,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 26180,
											"end": 26183,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 26173,
											"end": 26177,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 26166,
											"end": 26171,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 26162,
											"end": 26178,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 26140,
											"end": 26192,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "413"
										},
										{
											"begin": 26140,
											"end": 26192,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 26140,
											"end": 26192,
											"name": "tag",
											"source": 8,
											"value": "641"
										},
										{
											"begin": 26140,
											"end": 26192,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26217,
											"end": 26246,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "642"
										},
										{
											"begin": 26239,
											"end": 26245,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 26217,
											"end": 26246,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "416"
										},
										{
											"begin": 26217,
											"end": 26246,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 26217,
											"end": 26246,
											"name": "tag",
											"source": 8,
											"value": "642"
										},
										{
											"begin": 26217,
											"end": 26246,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26212,
											"end": 26215,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 26208,
											"end": 26247,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 26201,
											"end": 26247,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 26201,
											"end": 26247,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25981,
											"end": 26253,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25889,
											"end": 26253,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 25889,
											"end": 26253,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 25889,
											"end": 26253,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25889,
											"end": 26253,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25889,
											"end": 26253,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 26259,
											"end": 26572,
											"name": "tag",
											"source": 8,
											"value": "352"
										},
										{
											"begin": 26259,
											"end": 26572,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26372,
											"end": 26376,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 26410,
											"end": 26412,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 26399,
											"end": 26408,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 26395,
											"end": 26413,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 26387,
											"end": 26413,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 26387,
											"end": 26413,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26459,
											"end": 26468,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 26453,
											"end": 26457,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 26449,
											"end": 26469,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 26445,
											"end": 26446,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 26434,
											"end": 26443,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 26430,
											"end": 26447,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 26423,
											"end": 26470,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 26487,
											"end": 26565,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "644"
										},
										{
											"begin": 26560,
											"end": 26564,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 26551,
											"end": 26557,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 26487,
											"end": 26565,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "417"
										},
										{
											"begin": 26487,
											"end": 26565,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 26487,
											"end": 26565,
											"name": "tag",
											"source": 8,
											"value": "644"
										},
										{
											"begin": 26487,
											"end": 26565,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26479,
											"end": 26565,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 26479,
											"end": 26565,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26259,
											"end": 26572,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 26259,
											"end": 26572,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 26259,
											"end": 26572,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26259,
											"end": 26572,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26259,
											"end": 26572,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"getNumberofStakers()": "5715ec11",
							"getRewardRate()": "7e1a3786",
							"getStakerMode(address)": "aedf562b",
							"getTotalStaked()": "0917e776",
							"harvest()": "4641257d",
							"isLocked(address)": "4a4fbeec",
							"isStartStaking(address)": "fe600f84",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"rewardAmount(address)": "645a8a56",
							"rewardToHarvest()": "5d2ec65d",
							"setEventPeriod(uint256)": "692642e7",
							"setLockupTime(uint256)": "4b62b70b",
							"setRewardRate(uint256)": "9e447fc6",
							"setUnstakingFeeRate(uint256)": "91e07e7a",
							"stake(uint256)": "a694fc3a",
							"stakedAmount(address)": "f9931855",
							"startStaking(uint256,uint256)": "4b77dd9e",
							"token()": "fc0c546a",
							"totalStaked()": "817b1cd2",
							"transferOwnership(address)": "f2fde38b",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardToClaim\",\"type\":\"uint256\"}],\"name\":\"Harvest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lockupDuration\",\"type\":\"uint256\"}],\"name\":\"SetEventPeriod\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardRate\",\"type\":\"uint256\"}],\"name\":\"SetRewardRate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"unstakingFeeRate\",\"type\":\"uint256\"}],\"name\":\"SetUnstakingFeeRate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getNumberofStakers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRewardRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getStakerMode\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"harvest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isLocked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isStartStaking\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"rewardAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardToHarvest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"__eventPeriod\",\"type\":\"uint256\"}],\"name\":\"setEventPeriod\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lockupTime\",\"type\":\"uint256\"}],\"name\":\"setLockupTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"__rewardRate\",\"type\":\"uint256\"}],\"name\":\"setRewardRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"__unstakingFeeRate\",\"type\":\"uint256\"}],\"name\":\"setUnstakingFeeRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"stakedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_mode\",\"type\":\"uint256\"}],\"name\":\"startStaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IBEP20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Staking.sol\":\"StakingPlatform\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]},\"contracts/IBEP20.sol\":{\"keccak256\":\"0xe10557d770e08d0867c7d7f45f4ecc3aa71fab37aec10f03deac873774d83958\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29c5d9f242fe719f9c99293f895de2c62b11990dcb76b0c5fe29d4bb20debd36\",\"dweb:/ipfs/QmcxmgSN37RwVYQ6uVyyksA7q9rbs7ZfAGxLg9ZAqetzVc\"]},\"contracts/SafeBEP20.sol\":{\"keccak256\":\"0x6ddb1e1687ec39379d8d51c1dd37f9fc5bdbcf76d13b12bb2ef97218f17af728\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c317daa7645bea9fb8926f04a64e9dda06454035d35dd618fb8865bead0b343\",\"dweb:/ipfs/QmcGbnJ9k7RVUBh5HyHxzV7u52hykYsHKqi7VRWSLvEjrG\"]},\"contracts/Staking.sol\":{\"keccak256\":\"0x443dd1e25c49db69464fb1bf851bce61523050a73049bc9b82c730718d700543\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc57e2f91f450d875ebfd5947b1501e20e4551d77f760039fbf2f3185e34498\",\"dweb:/ipfs/QmZshPWa2XQovdG8M65CNVLKhQYV4o7KNZXRSJUHX4d4DS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "contracts/Staking.sol:StakingPlatform",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 1160,
								"contract": "contracts/Staking.sol:StakingPlatform",
								"label": "_unstakingFeeRate",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 1162,
								"contract": "contracts/Staking.sol:StakingPlatform",
								"label": "_eventPeriod",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 1164,
								"contract": "contracts/Staking.sol:StakingPlatform",
								"label": "_rewardRate",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 1166,
								"contract": "contracts/Staking.sol:StakingPlatform",
								"label": "_rewardFeeRate",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 1168,
								"contract": "contracts/Staking.sol:StakingPlatform",
								"label": "_lockupPeriod",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 1170,
								"contract": "contracts/Staking.sol:StakingPlatform",
								"label": "_minStakeAmount_g",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 1172,
								"contract": "contracts/Staking.sol:StakingPlatform",
								"label": "_minStakeAmount_s",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 1174,
								"contract": "contracts/Staking.sol:StakingPlatform",
								"label": "_minStakeAmount_c",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 1177,
								"contract": "contracts/Staking.sol:StakingPlatform",
								"label": "_stakers",
								"offset": 0,
								"slot": "9",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 1182,
								"contract": "contracts/Staking.sol:StakingPlatform",
								"label": "_staker",
								"offset": 0,
								"slot": "10",
								"type": "t_mapping(t_address,t_struct(Staker)1158_storage)"
							},
							{
								"astId": 1184,
								"contract": "contracts/Staking.sol:StakingPlatform",
								"label": "totalStaked",
								"offset": 0,
								"slot": "11",
								"type": "t_uint256"
							},
							{
								"astId": 1187,
								"contract": "contracts/Staking.sol:StakingPlatform",
								"label": "token",
								"offset": 0,
								"slot": "12",
								"type": "t_contract(IBEP20)912"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_contract(IBEP20)912": {
								"encoding": "inplace",
								"label": "contract IBEP20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(Staker)1158_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct StakingPlatform.Staker)",
								"numberOfBytes": "32",
								"value": "t_struct(Staker)1158_storage"
							},
							"t_struct(Staker)1158_storage": {
								"encoding": "inplace",
								"label": "struct StakingPlatform.Staker",
								"members": [
									{
										"astId": 1147,
										"contract": "contracts/Staking.sol:StakingPlatform",
										"label": "stakerCurrentReward",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1149,
										"contract": "contracts/Staking.sol:StakingPlatform",
										"label": "stakedAmount",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1151,
										"contract": "contracts/Staking.sol:StakingPlatform",
										"label": "mode",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1153,
										"contract": "contracts/Staking.sol:StakingPlatform",
										"label": "stakeStartTime",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 1155,
										"contract": "contracts/Staking.sol:StakingPlatform",
										"label": "lastUpdatedBlockNumber",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 1157,
										"contract": "contracts/Staking.sol:StakingPlatform",
										"label": "staked",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "192"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							499
						],
						"Ownable": [
							104
						]
					},
					"id": 105,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 105,
							"sourceUnit": 500,
							"src": "112:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 499,
										"src": "668:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "668:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "144:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 104,
							"linearizedBaseContracts": [
								104,
								499
							],
							"name": "Ownable",
							"nameLocation": "657:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "698:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 104,
									"src": "682:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "682:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "717:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "754:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "738:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "785:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "769:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "769:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:57:0"
									},
									"src": "711:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "911:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 489,
																"src": "940:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "940:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "921:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "921:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "921:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "801:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "908:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "911:0:0"
									},
									"scope": 104,
									"src": "897:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 31,
										"nodeType": "Block",
										"src": "1091:30:0",
										"statements": [
											{
												"expression": {
													"id": 29,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1108:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 28,
												"id": 30,
												"nodeType": "Return",
												"src": "1101:13:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "966:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 32,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1045:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1050:2:0"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "1082:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1082:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1081:9:0"
									},
									"scope": 104,
									"src": "1036:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 45,
										"nodeType": "Block",
										"src": "1230:96:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 36,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 32,
																	"src": "1248:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 37,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1248:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 38,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 489,
																	"src": "1259:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 39,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1259:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1248:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1273:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 35,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1240:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1240:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "1240:68:0"
											},
											{
												"id": 44,
												"nodeType": "PlaceholderStatement",
												"src": "1318:1:0"
											}
										]
									},
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "1127:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 46,
									"name": "onlyOwner",
									"nameLocation": "1218:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1227:2:0"
									},
									"src": "1209:117:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "1722:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 55,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1759:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1751:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 53,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1751:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1751:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 52,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "1732:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1732:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 58,
												"nodeType": "ExpressionStatement",
												"src": "1732:30:0"
											}
										]
									},
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "1332:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 50,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 49,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1712:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1712:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1677:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1694:2:0"
									},
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1722:0:0"
									},
									"scope": 104,
									"src": "1668:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 82,
										"nodeType": "Block",
										"src": "1988:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 69,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 63,
																"src": "2006:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 72,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2026:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 71,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2018:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 70,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2018:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2018:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2006:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 75,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2030:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 68,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1998:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1998:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 77,
												"nodeType": "ExpressionStatement",
												"src": "1998:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 79,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 63,
															"src": "2100:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 78,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "2081:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2081:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 81,
												"nodeType": "ExpressionStatement",
												"src": "2081:28:0"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "1775:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 83,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 66,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 65,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1978:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1978:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1927:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1953:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "1945:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1945:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1944:18:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1988:0:0"
									},
									"scope": 104,
									"src": "1918:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 102,
										"nodeType": "Block",
										"src": "2333:124:0",
										"statements": [
											{
												"assignments": [
													90
												],
												"declarations": [
													{
														"constant": false,
														"id": 90,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2351:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 102,
														"src": "2343:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 89,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2343:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 92,
												"initialValue": {
													"id": 91,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2362:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2343:25:0"
											},
											{
												"expression": {
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 93,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2378:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 94,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "2387:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2378:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2378:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 98,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 90,
															"src": "2431:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 99,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 86,
															"src": "2441:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 97,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2410:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2410:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 101,
												"nodeType": "EmitStatement",
												"src": "2405:45:0"
											}
										]
									},
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "2122:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2279:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2306:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "2298:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2298:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2297:18:0"
									},
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2333:0:0"
									},
									"scope": 104,
									"src": "2270:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 105,
							"src": "639:1820:0",
							"usedErrors": []
						}
					],
					"src": "87:2373:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							182
						]
					},
					"id": 183,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 106,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 107,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 182,
							"linearizedBaseContracts": [
								182
							],
							"name": "IERC20",
							"nameLocation": "212:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 108,
										"nodeType": "StructuredDocumentation",
										"src": "225:66:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 113,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "305:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "316:2:1"
									},
									"returnParameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "342:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "342:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "341:9:1"
									},
									"scope": 182,
									"src": "296:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 114,
										"nodeType": "StructuredDocumentation",
										"src": "357:72:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 121,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "443:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "461:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "453:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "453:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "452:17:1"
									},
									"returnParameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "493:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 118,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "493:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "492:9:1"
									},
									"scope": 182,
									"src": "434:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 122,
										"nodeType": "StructuredDocumentation",
										"src": "508:202:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 131,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "724:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 124,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "741:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "733:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 123,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "733:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "753:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "745:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 125,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "745:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "732:28:1"
									},
									"returnParameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "779:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 128,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "779:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "778:6:1"
									},
									"scope": 182,
									"src": "715:70:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "791:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 141,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1069:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1087:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "1079:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1079:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1102:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "1094:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 135,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1078:32:1"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "1134:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1134:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1133:9:1"
									},
									"scope": 182,
									"src": "1060:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 142,
										"nodeType": "StructuredDocumentation",
										"src": "1149:642:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 151,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1805:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1821:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 151,
												"src": "1813:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1813:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1838:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 151,
												"src": "1830:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 145,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1830:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1812:33:1"
									},
									"returnParameters": {
										"id": 150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 151,
												"src": "1864:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 148,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1864:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1863:6:1"
									},
									"scope": 182,
									"src": "1796:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 152,
										"nodeType": "StructuredDocumentation",
										"src": "1876:287:1",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 163,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2177:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2207:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "2199:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 153,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2199:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2229:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "2221:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 155,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2221:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2249:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "2241:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2241:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2189:72:1"
									},
									"returnParameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "2280:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 160,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2280:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2279:6:1"
									},
									"scope": 182,
									"src": "2168:118:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 164,
										"nodeType": "StructuredDocumentation",
										"src": "2292:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 172,
									"name": "Transfer",
									"nameLocation": "2461:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2486:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "2470:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 165,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2470:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 168,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2508:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "2492:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 167,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2492:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 170,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2520:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "2512:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2512:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2469:57:1"
									},
									"src": "2455:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 173,
										"nodeType": "StructuredDocumentation",
										"src": "2533:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 181,
									"name": "Approval",
									"nameLocation": "2692:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2717:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "2701:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 177,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2740:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "2724:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2724:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 179,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2757:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "2749:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2749:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2700:63:1"
									},
									"src": "2686:78:1"
								}
							],
							"scope": 183,
							"src": "202:2564:1",
							"usedErrors": []
						}
					],
					"src": "106:2661:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							477
						]
					},
					"id": 478,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 184,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 185,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:2",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 477,
							"linearizedBaseContracts": [
								477
							],
							"name": "Address",
							"nameLocation": "202:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 199,
										"nodeType": "Block",
										"src": "1241:254:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 193,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 188,
																"src": "1465:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 194,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1465:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 195,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1465:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 196,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1487:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1465:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 192,
												"id": 198,
												"nodeType": "Return",
												"src": "1458:30:2"
											}
										]
									},
									"documentation": {
										"id": 186,
										"nodeType": "StructuredDocumentation",
										"src": "216:954:2",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 200,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1184:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1203:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "1195:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:17:2"
									},
									"returnParameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "1235:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 190,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1235:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1234:6:2"
									},
									"scope": 477,
									"src": "1175:320:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 233,
										"nodeType": "Block",
										"src": "2483:241:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 215,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 211,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2509:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$477",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$477",
																				"typeString": "library Address"
																			}
																		],
																		"id": 210,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2501:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 209,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2501:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 212,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2501:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 213,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2501:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 214,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 205,
																"src": "2526:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2501:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 216,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2534:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 208,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2493:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:73:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 218,
												"nodeType": "ExpressionStatement",
												"src": "2493:73:2"
											},
											{
												"assignments": [
													220,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 220,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2583:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 233,
														"src": "2578:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 219,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2578:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 227,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 225,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 221,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 203,
																"src": "2596:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2596:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 224,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 223,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 205,
																"src": "2618:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2596:29:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2596:33:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2577:52:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 229,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 220,
															"src": "2647:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 230,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2656:60:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 228,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2639:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2639:78:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 232,
												"nodeType": "ExpressionStatement",
												"src": "2639:78:2"
											}
										]
									},
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "1501:906:2",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 234,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2421:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2447:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "2431:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2431:15:2",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2466:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "2458:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2458:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:43:2"
									},
									"returnParameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2483:0:2"
									},
									"scope": 477,
									"src": "2412:312:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 250,
										"nodeType": "Block",
										"src": "3555:84:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 245,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "3585:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 246,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 239,
															"src": "3593:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 247,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3599:32:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 244,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															251,
															271
														],
														"referencedDeclaration": 271,
														"src": "3572:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3572:60:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 243,
												"id": 249,
												"nodeType": "Return",
												"src": "3565:67:2"
											}
										]
									},
									"documentation": {
										"id": 235,
										"nodeType": "StructuredDocumentation",
										"src": "2730:731:2",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 251,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3475:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3496:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "3488:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 236,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3488:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3517:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "3504:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 238,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3504:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3487:35:2"
									},
									"returnParameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "3541:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 241,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3541:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3540:14:2"
									},
									"scope": 477,
									"src": "3466:173:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 270,
										"nodeType": "Block",
										"src": "4008:76:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 264,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 254,
															"src": "4047:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 265,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 256,
															"src": "4055:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 266,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4061:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 267,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 258,
															"src": "4064:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 263,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															291,
															341
														],
														"referencedDeclaration": 341,
														"src": "4025:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4025:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 262,
												"id": 269,
												"nodeType": "Return",
												"src": "4018:59:2"
											}
										]
									},
									"documentation": {
										"id": 252,
										"nodeType": "StructuredDocumentation",
										"src": "3645:211:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 271,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3870:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3900:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "3892:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3892:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3929:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "3916:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 255,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3916:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3957:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "3943:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 257,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3943:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3882:93:2"
									},
									"returnParameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "3994:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 260,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3994:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3993:14:2"
									},
									"scope": 477,
									"src": "3861:223:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 290,
										"nodeType": "Block",
										"src": "4589:111:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 284,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "4628:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 285,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "4636:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 286,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 278,
															"src": "4642:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 287,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4649:43:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 283,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															291,
															341
														],
														"referencedDeclaration": 341,
														"src": "4606:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4606:87:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 282,
												"id": 289,
												"nodeType": "Return",
												"src": "4599:94:2"
											}
										]
									},
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "4090:351:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 291,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4455:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4494:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "4486:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4486:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4523:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "4510:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 275,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4510:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4545:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "4537:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4537:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4476:80:2"
									},
									"returnParameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "4575:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 280,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4575:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4574:14:2"
									},
									"scope": 477,
									"src": "4446:254:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 340,
										"nodeType": "Block",
										"src": "5127:320:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 308,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5153:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$477",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$477",
																				"typeString": "library Address"
																			}
																		],
																		"id": 307,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5145:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 306,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5145:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 309,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5145:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 310,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5145:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 311,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 298,
																"src": "5170:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5145:30:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 313,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5177:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 305,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5137:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5137:81:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 315,
												"nodeType": "ExpressionStatement",
												"src": "5137:81:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 318,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 294,
																	"src": "5247:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 317,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 200,
																"src": "5236:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 319,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5236:18:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 320,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5256:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 316,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5228:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5228:60:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 322,
												"nodeType": "ExpressionStatement",
												"src": "5228:60:2"
											},
											{
												"assignments": [
													324,
													326
												],
												"declarations": [
													{
														"constant": false,
														"id": 324,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5305:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 340,
														"src": "5300:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 323,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5300:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 326,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5327:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 340,
														"src": "5314:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 325,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5314:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 333,
												"initialValue": {
													"arguments": [
														{
															"id": 331,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 296,
															"src": "5367:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 327,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 294,
																"src": "5341:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 328,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5341:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 330,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 329,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 298,
																"src": "5360:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5341:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5341:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5299:73:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 335,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 324,
															"src": "5406:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 336,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 326,
															"src": "5415:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 337,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 300,
															"src": "5427:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 334,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 476,
														"src": "5389:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5389:51:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 304,
												"id": 339,
												"nodeType": "Return",
												"src": "5382:58:2"
											}
										]
									},
									"documentation": {
										"id": 292,
										"nodeType": "StructuredDocumentation",
										"src": "4706:237:2",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 341,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4957:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4996:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "4988:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4988:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5025:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "5012:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 295,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5012:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 298,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5047:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "5039:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 297,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5039:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5076:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "5062:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 299,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5062:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4978:116:2"
									},
									"returnParameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "5113:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 302,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5113:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5112:14:2"
									},
									"scope": 477,
									"src": "4948:499:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 357,
										"nodeType": "Block",
										"src": "5724:97:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 352,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 344,
															"src": "5760:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 353,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 346,
															"src": "5768:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 354,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5774:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 351,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															358,
															393
														],
														"referencedDeclaration": 393,
														"src": "5741:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5741:73:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 350,
												"id": 356,
												"nodeType": "Return",
												"src": "5734:80:2"
											}
										]
									},
									"documentation": {
										"id": 342,
										"nodeType": "StructuredDocumentation",
										"src": "5453:166:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 358,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5633:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5660:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "5652:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5652:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5681:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "5668:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 345,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5668:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5651:35:2"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "5710:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 348,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5710:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5709:14:2"
									},
									"scope": 477,
									"src": "5624:197:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 392,
										"nodeType": "Block",
										"src": "6163:228:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 372,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 361,
																	"src": "6192:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 371,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 200,
																"src": "6181:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 373,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6181:18:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 374,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6201:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 370,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6173:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6173:67:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 376,
												"nodeType": "ExpressionStatement",
												"src": "6173:67:2"
											},
											{
												"assignments": [
													378,
													380
												],
												"declarations": [
													{
														"constant": false,
														"id": 378,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6257:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 392,
														"src": "6252:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 377,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6252:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 380,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6279:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 392,
														"src": "6266:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 379,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6266:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 385,
												"initialValue": {
													"arguments": [
														{
															"id": 383,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 363,
															"src": "6311:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 381,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 361,
															"src": "6293:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 382,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6293:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6293:23:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6251:65:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 387,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 378,
															"src": "6350:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 388,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 380,
															"src": "6359:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 389,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 365,
															"src": "6371:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 386,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 476,
														"src": "6333:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6333:51:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 369,
												"id": 391,
												"nodeType": "Return",
												"src": "6326:58:2"
											}
										]
									},
									"documentation": {
										"id": 359,
										"nodeType": "StructuredDocumentation",
										"src": "5827:173:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 393,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6014:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6050:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "6042:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 360,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6042:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6079:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "6066:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 362,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6066:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6107:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "6093:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 364,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6093:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6032:93:2"
									},
									"returnParameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "6149:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 367,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6149:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6148:14:2"
									},
									"scope": 477,
									"src": "6005:386:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 409,
										"nodeType": "Block",
										"src": "6667:101:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 404,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "6705:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 405,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 398,
															"src": "6713:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 406,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6719:41:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 403,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															410,
															445
														],
														"referencedDeclaration": 445,
														"src": "6684:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6684:77:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 402,
												"id": 408,
												"nodeType": "Return",
												"src": "6677:84:2"
											}
										]
									},
									"documentation": {
										"id": 394,
										"nodeType": "StructuredDocumentation",
										"src": "6397:168:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 410,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6579:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6608:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "6600:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 395,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6600:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "6616:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 397,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6599:35:2"
									},
									"returnParameters": {
										"id": 402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "6653:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 400,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6653:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6652:14:2"
									},
									"scope": 477,
									"src": "6570:198:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 444,
										"nodeType": "Block",
										"src": "7109:232:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 424,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 413,
																	"src": "7138:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 423,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 200,
																"src": "7127:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 425,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7127:18:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 426,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7147:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 422,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7119:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7119:69:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 428,
												"nodeType": "ExpressionStatement",
												"src": "7119:69:2"
											},
											{
												"assignments": [
													430,
													432
												],
												"declarations": [
													{
														"constant": false,
														"id": 430,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7205:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 444,
														"src": "7200:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 429,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7200:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 432,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7227:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 444,
														"src": "7214:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 431,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7214:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 437,
												"initialValue": {
													"arguments": [
														{
															"id": 435,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 415,
															"src": "7261:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 433,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 413,
															"src": "7241:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7241:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7241:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7199:67:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 439,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 430,
															"src": "7300:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 440,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 432,
															"src": "7309:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 441,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "7321:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 438,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 476,
														"src": "7283:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7283:51:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 421,
												"id": 443,
												"nodeType": "Return",
												"src": "7276:58:2"
											}
										]
									},
									"documentation": {
										"id": 411,
										"nodeType": "StructuredDocumentation",
										"src": "6774:175:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 445,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6963:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7001:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "6993:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 412,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6993:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7030:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "7017:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 414,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7017:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7058:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "7044:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 416,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7044:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6983:93:2"
									},
									"returnParameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "7095:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 419,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7095:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7094:14:2"
									},
									"scope": 477,
									"src": "6954:387:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 475,
										"nodeType": "Block",
										"src": "7721:532:2",
										"statements": [
											{
												"condition": {
													"id": 457,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 448,
													"src": "7735:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 473,
													"nodeType": "Block",
													"src": "7792:455:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 464,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 461,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 450,
																		"src": "7876:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 462,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7876:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 463,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7896:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7876:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 471,
																"nodeType": "Block",
																"src": "8184:53:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 468,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 452,
																					"src": "8209:12:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 467,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "8202:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 469,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8202:20:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 470,
																		"nodeType": "ExpressionStatement",
																		"src": "8202:20:2"
																	}
																]
															},
															"id": 472,
															"nodeType": "IfStatement",
															"src": "7872:365:2",
															"trueBody": {
																"id": 466,
																"nodeType": "Block",
																"src": "7899:279:2",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "8019:145:2",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "8041:40:2",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "8070:10:2"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "8064:5:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8064:17:2"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "8045:15:2",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8113:2:2",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "8117:10:2"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8109:3:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8109:19:2"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "8130:15:2"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "8102:6:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8102:44:2"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "8102:44:2"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 450,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8070:10:2",
																				"valueSize": 1
																			},
																			{
																				"declaration": 450,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8117:10:2",
																				"valueSize": 1
																			}
																		],
																		"id": 465,
																		"nodeType": "InlineAssembly",
																		"src": "8010:154:2"
																	}
																]
															}
														}
													]
												},
												"id": 474,
												"nodeType": "IfStatement",
												"src": "7731:516:2",
												"trueBody": {
													"id": 460,
													"nodeType": "Block",
													"src": "7744:42:2",
													"statements": [
														{
															"expression": {
																"id": 458,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 450,
																"src": "7765:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 456,
															"id": 459,
															"nodeType": "Return",
															"src": "7758:17:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 446,
										"nodeType": "StructuredDocumentation",
										"src": "7347:209:2",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 476,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7570:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7601:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "7596:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 447,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7596:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7631:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "7618:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 449,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7618:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7665:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "7651:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 451,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7651:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7586:97:2"
									},
									"returnParameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "7707:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 454,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7707:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7706:14:2"
									},
									"scope": 477,
									"src": "7561:692:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 478,
							"src": "194:8061:2",
							"usedErrors": []
						}
					],
					"src": "101:8155:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							499
						]
					},
					"id": 500,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 479,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 480,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 499,
							"linearizedBaseContracts": [
								499
							],
							"name": "Context",
							"nameLocation": "626:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 488,
										"nodeType": "Block",
										"src": "702:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 485,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 484,
												"id": 487,
												"nodeType": "Return",
												"src": "712:17:3"
											}
										]
									},
									"id": 489,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:3"
									},
									"returnParameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "693:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:3"
									},
									"scope": 499,
									"src": "640:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 497,
										"nodeType": "Block",
										"src": "809:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 494,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 493,
												"id": 496,
												"nodeType": "Return",
												"src": "819:15:3"
											}
										]
									},
									"id": 498,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:3"
									},
									"returnParameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "793:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 491,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:3"
									},
									"scope": 499,
									"src": "742:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 500,
							"src": "608:235:3",
							"usedErrors": []
						}
					],
					"src": "86:758:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							811
						]
					},
					"id": 812,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 501,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "92:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 502,
								"nodeType": "StructuredDocumentation",
								"src": "270:196:4",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 811,
							"linearizedBaseContracts": [
								811
							],
							"name": "SafeMath",
							"nameLocation": "475:8:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 533,
										"nodeType": "Block",
										"src": "702:140:4",
										"statements": [
											{
												"id": 532,
												"nodeType": "UncheckedBlock",
												"src": "712:124:4",
												"statements": [
													{
														"assignments": [
															515
														],
														"declarations": [
															{
																"constant": false,
																"id": 515,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "744:1:4",
																"nodeType": "VariableDeclaration",
																"scope": 532,
																"src": "736:9:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 514,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "736:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 519,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 518,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 516,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 505,
																"src": "748:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 517,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 507,
																"src": "752:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "748:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "736:17:4"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 522,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 520,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 515,
																"src": "771:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 521,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 505,
																"src": "775:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "771:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 527,
														"nodeType": "IfStatement",
														"src": "767:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 523,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "786:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 524,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "793:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 525,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "785:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 513,
															"id": 526,
															"nodeType": "Return",
															"src": "778:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 528,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "817:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 529,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 515,
																	"src": "823:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 530,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "816:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 513,
														"id": 531,
														"nodeType": "Return",
														"src": "809:16:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 503,
										"nodeType": "StructuredDocumentation",
										"src": "490:131:4",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 534,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "635:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "650:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "642:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 504,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "642:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "661:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "653:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 506,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "653:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "641:22:4"
									},
									"returnParameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "687:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 509,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "687:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "693:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 511,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "686:15:4"
									},
									"scope": 811,
									"src": "626:216:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 561,
										"nodeType": "Block",
										"src": "1064:113:4",
										"statements": [
											{
												"id": 560,
												"nodeType": "UncheckedBlock",
												"src": "1074:97:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 548,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 546,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 539,
																"src": "1102:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 547,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 537,
																"src": "1106:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1102:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 553,
														"nodeType": "IfStatement",
														"src": "1098:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 549,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1117:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 550,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1124:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 551,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1116:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 545,
															"id": 552,
															"nodeType": "Return",
															"src": "1109:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 554,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1148:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 557,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 555,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 537,
																		"src": "1154:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 556,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 539,
																		"src": "1158:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1154:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 558,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1147:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 545,
														"id": 559,
														"nodeType": "Return",
														"src": "1140:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 535,
										"nodeType": "StructuredDocumentation",
										"src": "848:135:4",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 562,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "997:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1012:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "1004:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 536,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1004:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1023:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "1015:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 538,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1015:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1003:22:4"
									},
									"returnParameters": {
										"id": 545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "1049:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 541,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1049:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "1055:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 543,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1055:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1048:15:4"
									},
									"scope": 811,
									"src": "988:189:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 603,
										"nodeType": "Block",
										"src": "1401:417:4",
										"statements": [
											{
												"id": 602,
												"nodeType": "UncheckedBlock",
												"src": "1411:401:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 576,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 574,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 565,
																"src": "1669:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 575,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1674:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1669:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 581,
														"nodeType": "IfStatement",
														"src": "1665:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 577,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1685:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 578,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1691:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 579,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1684:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 573,
															"id": 580,
															"nodeType": "Return",
															"src": "1677:16:4"
														}
													},
													{
														"assignments": [
															583
														],
														"declarations": [
															{
																"constant": false,
																"id": 583,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1715:1:4",
																"nodeType": "VariableDeclaration",
																"scope": 602,
																"src": "1707:9:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 582,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1707:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 587,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 586,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 584,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 565,
																"src": "1719:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 585,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 567,
																"src": "1723:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1719:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1707:17:4"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 592,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 590,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 588,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 583,
																	"src": "1742:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 589,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 565,
																	"src": "1746:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1742:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 591,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 567,
																"src": "1751:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1742:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 597,
														"nodeType": "IfStatement",
														"src": "1738:33:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 593,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1762:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1769:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 595,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1761:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 573,
															"id": 596,
															"nodeType": "Return",
															"src": "1754:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 598,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1793:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 599,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 583,
																	"src": "1799:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 600,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1792:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 573,
														"id": 601,
														"nodeType": "Return",
														"src": "1785:16:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 563,
										"nodeType": "StructuredDocumentation",
										"src": "1183:137:4",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 604,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1334:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1349:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "1341:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 564,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1341:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1360:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "1352:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 566,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1352:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1340:22:4"
									},
									"returnParameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "1386:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 569,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1386:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "1392:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 571,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1392:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1385:15:4"
									},
									"scope": 811,
									"src": "1325:493:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 631,
										"nodeType": "Block",
										"src": "2043:114:4",
										"statements": [
											{
												"id": 630,
												"nodeType": "UncheckedBlock",
												"src": "2053:98:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 618,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 616,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 609,
																"src": "2081:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2086:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2081:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 623,
														"nodeType": "IfStatement",
														"src": "2077:29:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 619,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2097:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 620,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2104:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 621,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2096:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 615,
															"id": 622,
															"nodeType": "Return",
															"src": "2089:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 624,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2128:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 627,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 625,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 607,
																		"src": "2134:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 626,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 609,
																		"src": "2138:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2134:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 628,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2127:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 615,
														"id": 629,
														"nodeType": "Return",
														"src": "2120:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 605,
										"nodeType": "StructuredDocumentation",
										"src": "1824:138:4",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 632,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1976:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1991:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "1983:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 606,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1983:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2002:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "1994:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1982:22:4"
									},
									"returnParameters": {
										"id": 615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "2028:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 611,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2028:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "2034:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 613,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2034:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:4"
									},
									"scope": 811,
									"src": "1967:190:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 659,
										"nodeType": "Block",
										"src": "2392:114:4",
										"statements": [
											{
												"id": 658,
												"nodeType": "UncheckedBlock",
												"src": "2402:98:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 646,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 644,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 637,
																"src": "2430:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 645,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2435:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2430:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 651,
														"nodeType": "IfStatement",
														"src": "2426:29:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 647,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2446:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 648,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2453:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 649,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2445:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 643,
															"id": 650,
															"nodeType": "Return",
															"src": "2438:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 652,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2477:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 655,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 653,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 635,
																		"src": "2483:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 654,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 637,
																		"src": "2487:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2483:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 656,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2476:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 643,
														"id": 657,
														"nodeType": "Return",
														"src": "2469:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 633,
										"nodeType": "StructuredDocumentation",
										"src": "2163:148:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 660,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2325:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2340:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "2332:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 634,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2332:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 637,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2351:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "2343:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 636,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2331:22:4"
									},
									"returnParameters": {
										"id": 643,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "2377:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 639,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "2383:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 641,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2383:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:15:4"
									},
									"scope": 811,
									"src": "2316:190:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 674,
										"nodeType": "Block",
										"src": "2808:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 672,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 670,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "2825:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 671,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 665,
														"src": "2829:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2825:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 669,
												"id": 673,
												"nodeType": "Return",
												"src": "2818:12:4"
											}
										]
									},
									"documentation": {
										"id": 661,
										"nodeType": "StructuredDocumentation",
										"src": "2512:224:4",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 675,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2750:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2762:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "2754:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 662,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2754:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2773:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "2765:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 664,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2765:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2753:22:4"
									},
									"returnParameters": {
										"id": 669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 668,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "2799:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 667,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2799:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2798:9:4"
									},
									"scope": 811,
									"src": "2741:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "3175:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 685,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 678,
														"src": "3192:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 686,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 680,
														"src": "3196:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3192:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 684,
												"id": 688,
												"nodeType": "Return",
												"src": "3185:12:4"
											}
										]
									},
									"documentation": {
										"id": 676,
										"nodeType": "StructuredDocumentation",
										"src": "2843:260:4",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3117:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 678,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3129:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "3121:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 677,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3121:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3140:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "3132:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 679,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3132:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3120:22:4"
									},
									"returnParameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "3166:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 682,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3166:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3165:9:4"
									},
									"scope": 811,
									"src": "3108:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 704,
										"nodeType": "Block",
										"src": "3518:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 700,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "3535:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 701,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "3539:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3535:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 699,
												"id": 703,
												"nodeType": "Return",
												"src": "3528:12:4"
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "3210:236:4",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 705,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3460:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3472:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "3464:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 692,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3464:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3483:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "3475:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 694,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3475:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3463:22:4"
									},
									"returnParameters": {
										"id": 699,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 698,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "3509:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 697,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3509:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3508:9:4"
									},
									"scope": 811,
									"src": "3451:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 719,
										"nodeType": "Block",
										"src": "3903:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 715,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 708,
														"src": "3920:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 716,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 710,
														"src": "3924:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3920:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 714,
												"id": 718,
												"nodeType": "Return",
												"src": "3913:12:4"
											}
										]
									},
									"documentation": {
										"id": 706,
										"nodeType": "StructuredDocumentation",
										"src": "3553:278:4",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 720,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3845:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 708,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3857:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "3849:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 707,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3849:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3868:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "3860:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 709,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3860:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3848:22:4"
									},
									"returnParameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "3894:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 712,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3894:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3893:9:4"
									},
									"scope": 811,
									"src": "3836:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 734,
										"nodeType": "Block",
										"src": "4452:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 732,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 730,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 723,
														"src": "4469:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 731,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 725,
														"src": "4473:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4469:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 729,
												"id": 733,
												"nodeType": "Return",
												"src": "4462:12:4"
											}
										]
									},
									"documentation": {
										"id": 721,
										"nodeType": "StructuredDocumentation",
										"src": "3938:442:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 735,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4394:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 726,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4406:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "4398:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4398:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4417:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "4409:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 724,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4409:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4397:22:4"
									},
									"returnParameters": {
										"id": 729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "4443:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 727,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4443:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4442:9:4"
									},
									"scope": 811,
									"src": "4385:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 759,
										"nodeType": "Block",
										"src": "5070:106:4",
										"statements": [
											{
												"id": 758,
												"nodeType": "UncheckedBlock",
												"src": "5080:90:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 750,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 748,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 740,
																		"src": "5112:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 749,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 738,
																		"src": "5117:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5112:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 751,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 742,
																	"src": "5120:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 747,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5104:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 752,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5104:29:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 753,
														"nodeType": "ExpressionStatement",
														"src": "5104:29:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 756,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 754,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 738,
																"src": "5154:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 755,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 740,
																"src": "5158:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5154:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 746,
														"id": 757,
														"nodeType": "Return",
														"src": "5147:12:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 736,
										"nodeType": "StructuredDocumentation",
										"src": "4487:453:4",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 760,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4954:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 743,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 738,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4975:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "4967:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 737,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4967:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4994:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "4986:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 739,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4986:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5019:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "5005:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 741,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5005:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4957:80:4"
									},
									"returnParameters": {
										"id": 746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 745,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "5061:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 744,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:9:4"
									},
									"scope": 811,
									"src": "4945:231:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 784,
										"nodeType": "Block",
										"src": "5785:105:4",
										"statements": [
											{
												"id": 783,
												"nodeType": "UncheckedBlock",
												"src": "5795:89:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 775,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 773,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 765,
																		"src": "5827:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 774,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5831:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5827:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 776,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 767,
																	"src": "5834:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 772,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5819:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 777,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5819:28:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 778,
														"nodeType": "ExpressionStatement",
														"src": "5819:28:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 781,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 779,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 763,
																"src": "5868:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 780,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 765,
																"src": "5872:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5868:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 771,
														"id": 782,
														"nodeType": "Return",
														"src": "5861:12:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 761,
										"nodeType": "StructuredDocumentation",
										"src": "5182:473:4",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 785,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5669:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5690:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "5682:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 762,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5682:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5709:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "5701:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 764,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5734:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "5720:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 766,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5720:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5672:80:4"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "5776:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 769,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5776:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5775:9:4"
									},
									"scope": 811,
									"src": "5660:230:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 809,
										"nodeType": "Block",
										"src": "6661:105:4",
										"statements": [
											{
												"id": 808,
												"nodeType": "UncheckedBlock",
												"src": "6671:89:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 800,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 798,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 790,
																		"src": "6703:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 799,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6707:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6703:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 801,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 792,
																	"src": "6710:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 797,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6695:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 802,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6695:28:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 803,
														"nodeType": "ExpressionStatement",
														"src": "6695:28:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 806,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 804,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 788,
																"src": "6744:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 805,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 790,
																"src": "6748:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6744:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 796,
														"id": 807,
														"nodeType": "Return",
														"src": "6737:12:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 786,
										"nodeType": "StructuredDocumentation",
										"src": "5896:635:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 810,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6545:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 788,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6566:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "6558:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 787,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6558:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 790,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6585:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "6577:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 789,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6577:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 792,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6610:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "6596:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 791,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6596:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6548:80:4"
									},
									"returnParameters": {
										"id": 796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "6652:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 794,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6652:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6651:9:4"
									},
									"scope": 811,
									"src": "6536:230:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 812,
							"src": "467:6301:4",
							"usedErrors": []
						}
					],
					"src": "92:6677:4"
				},
				"id": 4
			},
			"contracts/IBEP20.sol": {
				"ast": {
					"absolutePath": "contracts/IBEP20.sol",
					"exportedSymbols": {
						"IBEP20": [
							912
						]
					},
					"id": 913,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 813,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IBEP20",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 912,
							"linearizedBaseContracts": [
								912
							],
							"name": "IBEP20",
							"nameLocation": "72:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 814,
										"nodeType": "StructuredDocumentation",
										"src": "86:68:5",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 819,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "169:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 815,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "180:2:5"
									},
									"returnParameters": {
										"id": 818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 817,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "206:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 816,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "206:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "205:9:5"
									},
									"scope": 912,
									"src": "160:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 820,
										"nodeType": "StructuredDocumentation",
										"src": "223:53:5",
										"text": " @dev Returns the token decimals."
									},
									"functionSelector": "313ce567",
									"id": 825,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "291:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 821,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "299:2:5"
									},
									"returnParameters": {
										"id": 824,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 823,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 825,
												"src": "325:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 822,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "325:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:7:5"
									},
									"scope": 912,
									"src": "282:50:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 826,
										"nodeType": "StructuredDocumentation",
										"src": "340:51:5",
										"text": " @dev Returns the token symbol."
									},
									"functionSelector": "95d89b41",
									"id": 831,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "406:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 827,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "412:2:5"
									},
									"returnParameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 831,
												"src": "438:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 828,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "438:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "437:15:5"
									},
									"scope": 912,
									"src": "397:56:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 832,
										"nodeType": "StructuredDocumentation",
										"src": "461:49:5",
										"text": " @dev Returns the token name."
									},
									"functionSelector": "06fdde03",
									"id": 837,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "525:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "529:2:5"
									},
									"returnParameters": {
										"id": 836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 835,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 837,
												"src": "555:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 834,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "555:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "554:15:5"
									},
									"scope": 912,
									"src": "516:54:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 838,
										"nodeType": "StructuredDocumentation",
										"src": "578:54:5",
										"text": " @dev Returns the bep token owner."
									},
									"functionSelector": "893d20e8",
									"id": 843,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nameLocation": "647:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 839,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "655:2:5"
									},
									"returnParameters": {
										"id": 842,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 841,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "681:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 840,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "681:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "680:9:5"
									},
									"scope": 912,
									"src": "638:52:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 844,
										"nodeType": "StructuredDocumentation",
										"src": "698:74:5",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 851,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "787:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 847,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 846,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "805:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 851,
												"src": "797:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 845,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "797:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "796:17:5"
									},
									"returnParameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 851,
												"src": "837:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 848,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "837:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "836:9:5"
									},
									"scope": 912,
									"src": "778:68:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 852,
										"nodeType": "StructuredDocumentation",
										"src": "854:215:5",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 861,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1084:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 857,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 854,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1101:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "1093:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 853,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1093:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 856,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1120:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "1112:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 855,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1112:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1092:35:5"
									},
									"returnParameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "1146:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 858,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1146:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1145:6:5"
									},
									"scope": 912,
									"src": "1075:77:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 862,
										"nodeType": "StructuredDocumentation",
										"src": "1160:270:5",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 871,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1445:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 864,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "1463:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "1455:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 863,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1455:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 866,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1479:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "1471:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 865,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1471:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1454:33:5"
									},
									"returnParameters": {
										"id": 870,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "1511:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 868,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:9:5"
									},
									"scope": 912,
									"src": "1436:84:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 872,
										"nodeType": "StructuredDocumentation",
										"src": "1528:655:5",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT:  Beware that changingan allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 881,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2198:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2214:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "2206:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 873,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2206:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 876,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2231:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "2223:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 875,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2223:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2205:33:5"
									},
									"returnParameters": {
										"id": 880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 879,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "2257:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 878,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2257:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2256:6:5"
									},
									"scope": 912,
									"src": "2189:74:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 882,
										"nodeType": "StructuredDocumentation",
										"src": "2271:304:5",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 893,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2590:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 884,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2611:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "2603:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 883,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2603:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 886,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2627:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "2619:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 885,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2619:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2646:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "2638:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 887,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2638:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2602:51:5"
									},
									"returnParameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "2672:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 890,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2672:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2671:6:5"
									},
									"scope": 912,
									"src": "2581:97:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 894,
										"nodeType": "StructuredDocumentation",
										"src": "2686:163:5",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 902,
									"name": "Transfer",
									"nameLocation": "2861:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 896,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2886:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "2870:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 895,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2870:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 898,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2908:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "2892:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 897,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2892:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 900,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2920:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "2912:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 899,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2912:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2869:57:5"
									},
									"src": "2855:72:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 903,
										"nodeType": "StructuredDocumentation",
										"src": "2935:151:5",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 911,
									"name": "Approval",
									"nameLocation": "3098:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 905,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3123:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 911,
												"src": "3107:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 904,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3107:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 907,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3146:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 911,
												"src": "3130:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 906,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3130:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 909,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3163:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 911,
												"src": "3155:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 908,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3155:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3106:63:5"
									},
									"src": "3092:78:5"
								}
							],
							"scope": 913,
							"src": "62:3111:5",
							"usedErrors": []
						}
					],
					"src": "35:3138:5"
				},
				"id": 5
			},
			"contracts/SafeBEP20.sol": {
				"ast": {
					"absolutePath": "contracts/SafeBEP20.sol",
					"exportedSymbols": {
						"Address": [
							477
						],
						"IBEP20": [
							912
						],
						"SafeBEP20": [
							1130
						],
						"SafeMath": [
							811
						]
					},
					"id": 1131,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 914,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 915,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1131,
							"sourceUnit": 812,
							"src": "60:57:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "@openzeppelin/contracts/utils/Address.sol",
							"id": 916,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1131,
							"sourceUnit": 478,
							"src": "119:51:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/IBEP20.sol",
							"file": "./IBEP20.sol",
							"id": 917,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1131,
							"sourceUnit": 913,
							"src": "172:22:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeBEP20",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 1130,
							"linearizedBaseContracts": [
								1130
							],
							"name": "SafeBEP20",
							"nameLocation": "206:9:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 920,
									"libraryName": {
										"id": 918,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 811,
										"src": "229:8:6"
									},
									"nodeType": "UsingForDirective",
									"src": "223:27:6",
									"typeName": {
										"id": 919,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "242:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 923,
									"libraryName": {
										"id": 921,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 477,
										"src": "262:7:6"
									},
									"nodeType": "UsingForDirective",
									"src": "256:26:6",
									"typeName": {
										"id": 922,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "274:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 945,
										"nodeType": "Block",
										"src": "362:105:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 934,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 926,
															"src": "393:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 937,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 926,
																			"src": "423:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$912",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 938,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 861,
																		"src": "423:14:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 939,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "423:23:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 940,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 928,
																	"src": "448:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 941,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 930,
																	"src": "452:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 935,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "400:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 936,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "400:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 942,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "400:58:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 933,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1129,
														"src": "373:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$912_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 943,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "373:86:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 944,
												"nodeType": "ExpressionStatement",
												"src": "373:86:6"
											}
										]
									},
									"id": 946,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "299:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 926,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "319:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "312:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$912",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 925,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 924,
														"name": "IBEP20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 912,
														"src": "312:6:6"
													},
													"referencedDeclaration": 912,
													"src": "312:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$912",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 928,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "334:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "326:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 927,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "326:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 930,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "346:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "338:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 929,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "338:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "311:41:6"
									},
									"returnParameters": {
										"id": 932,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "362:0:6"
									},
									"scope": 1130,
									"src": "290:177:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 971,
										"nodeType": "Block",
										"src": "565:115:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 959,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 949,
															"src": "596:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 962,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 949,
																			"src": "626:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$912",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 963,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 893,
																		"src": "626:18:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 964,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "626:27:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 965,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 951,
																	"src": "655:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 966,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 953,
																	"src": "661:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 967,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 955,
																	"src": "665:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 960,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "603:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 961,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "603:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 968,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "603:68:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 958,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1129,
														"src": "576:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$912_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "576:96:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 970,
												"nodeType": "ExpressionStatement",
												"src": "576:96:6"
											}
										]
									},
									"id": 972,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "484:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 956,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 949,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "508:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "501:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$912",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 948,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 947,
														"name": "IBEP20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 912,
														"src": "501:6:6"
													},
													"referencedDeclaration": 912,
													"src": "501:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$912",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 951,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "523:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "515:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 950,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "515:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 953,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "537:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "529:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 952,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "529:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "549:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "541:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 954,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "541:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "500:55:6"
									},
									"returnParameters": {
										"id": 957,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "565:0:6"
									},
									"scope": 1130,
									"src": "475:205:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1015,
										"nodeType": "Block",
										"src": "1025:546:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 999,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 986,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 984,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 980,
																			"src": "1319:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 985,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1328:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1319:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 987,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1318:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 997,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 992,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "1359:4:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeBEP20_$1130",
																								"typeString": "library SafeBEP20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeBEP20_$1130",
																								"typeString": "library SafeBEP20"
																							}
																						],
																						"id": 991,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1351:7:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 990,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1351:7:6",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 993,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1351:13:6",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 994,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 978,
																					"src": "1366:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 988,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 976,
																					"src": "1335:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IBEP20_$912",
																						"typeString": "contract IBEP20"
																					}
																				},
																				"id": 989,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 871,
																				"src": "1335:15:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 995,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1335:39:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 996,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1378:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1335:44:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 998,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1334:46:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1318:62:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666542455032303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 1000,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1395:56:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_91a9bac926ceb306224f4766a09b4f2ef09ebf6b62503a939a3d65e9ddb75b06",
																"typeString": "literal_string \"SafeBEP20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeBEP20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_91a9bac926ceb306224f4766a09b4f2ef09ebf6b62503a939a3d65e9ddb75b06",
																"typeString": "literal_string \"SafeBEP20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 983,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1310:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1001,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1310:152:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1002,
												"nodeType": "ExpressionStatement",
												"src": "1310:152:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1004,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 976,
															"src": "1493:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1007,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 976,
																			"src": "1523:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$912",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 1008,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 881,
																		"src": "1523:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1009,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1523:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1010,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 978,
																	"src": "1547:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1011,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 980,
																	"src": "1556:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1005,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1500:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1006,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1500:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1012,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1500:62:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1003,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1129,
														"src": "1473:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$912_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 1013,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1473:90:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1014,
												"nodeType": "ExpressionStatement",
												"src": "1473:90:6"
											}
										]
									},
									"documentation": {
										"id": 973,
										"nodeType": "StructuredDocumentation",
										"src": "688:255:6",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IBEP20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 1016,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "958:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 976,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "977:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "970:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$912",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 975,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 974,
														"name": "IBEP20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 912,
														"src": "970:6:6"
													},
													"referencedDeclaration": 912,
													"src": "970:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$912",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 978,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "992:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "984:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 977,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "984:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 980,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1009:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "1001:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 979,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1001:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:46:6"
									},
									"returnParameters": {
										"id": 982,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1025:0:6"
									},
									"scope": 1130,
									"src": "949:622:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1052,
										"nodeType": "Block",
										"src": "1665:200:6",
										"statements": [
											{
												"assignments": [
													1027
												],
												"declarations": [
													{
														"constant": false,
														"id": 1027,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "1684:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 1052,
														"src": "1676:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1026,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1676:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1039,
												"initialValue": {
													"arguments": [
														{
															"id": 1037,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1023,
															"src": "1743:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1032,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "1723:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeBEP20_$1130",
																				"typeString": "library SafeBEP20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeBEP20_$1130",
																				"typeString": "library SafeBEP20"
																			}
																		],
																		"id": 1031,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1715:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1030,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1715:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1033,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1715:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1034,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1021,
																	"src": "1730:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1028,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1019,
																	"src": "1699:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IBEP20_$912",
																		"typeString": "contract IBEP20"
																	}
																},
																"id": 1029,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 871,
																"src": "1699:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 1035,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1699:39:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1036,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 675,
														"src": "1699:43:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1038,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1699:50:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1676:73:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1041,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1019,
															"src": "1780:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1044,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1019,
																			"src": "1810:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$912",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 1045,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 881,
																		"src": "1810:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1046,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1810:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1047,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1021,
																	"src": "1834:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1048,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1027,
																	"src": "1843:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1042,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1787:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1043,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1787:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1049,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1787:69:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1040,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1129,
														"src": "1760:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$912_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 1050,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1760:97:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1051,
												"nodeType": "ExpressionStatement",
												"src": "1760:97:6"
											}
										]
									},
									"id": 1053,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "1588:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1019,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1617:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "1610:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$912",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 1018,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1017,
														"name": "IBEP20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 912,
														"src": "1610:6:6"
													},
													"referencedDeclaration": 912,
													"src": "1610:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$912",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1632:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "1624:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1020,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1624:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1023,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1649:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "1641:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1022,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1641:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1609:46:6"
									},
									"returnParameters": {
										"id": 1025,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1665:0:6"
									},
									"scope": 1130,
									"src": "1579:286:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1090,
										"nodeType": "Block",
										"src": "1959:245:6",
										"statements": [
											{
												"assignments": [
													1064
												],
												"declarations": [
													{
														"constant": false,
														"id": 1064,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "1978:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 1090,
														"src": "1970:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1063,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1970:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1077,
												"initialValue": {
													"arguments": [
														{
															"id": 1074,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1060,
															"src": "2037:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "5361666542455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 1075,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2044:43:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8d8b0d004f76517d0accc4049600ccad745ed1cf03a0a544bc57f891c9ae38a3",
																"typeString": "literal_string \"SafeBEP20: decreased allowance below zero\""
															},
															"value": "SafeBEP20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_8d8b0d004f76517d0accc4049600ccad745ed1cf03a0a544bc57f891c9ae38a3",
																"typeString": "literal_string \"SafeBEP20: decreased allowance below zero\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1069,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2017:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeBEP20_$1130",
																				"typeString": "library SafeBEP20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeBEP20_$1130",
																				"typeString": "library SafeBEP20"
																			}
																		],
																		"id": 1068,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2009:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1067,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2009:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1070,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2009:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1071,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1058,
																	"src": "2024:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1065,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1056,
																	"src": "1993:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IBEP20_$912",
																		"typeString": "contract IBEP20"
																	}
																},
																"id": 1066,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 871,
																"src": "1993:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 1072,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1993:39:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1073,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 760,
														"src": "1993:43:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 1076,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1993:95:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1970:118:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1079,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1056,
															"src": "2119:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1082,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1056,
																			"src": "2149:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$912",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 1083,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 881,
																		"src": "2149:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1084,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2149:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1085,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1058,
																	"src": "2173:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1086,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1064,
																	"src": "2182:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1080,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2126:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1081,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2126:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1087,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2126:69:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1078,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1129,
														"src": "2099:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$912_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 1088,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2099:97:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1089,
												"nodeType": "ExpressionStatement",
												"src": "2099:97:6"
											}
										]
									},
									"id": 1091,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "1882:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1061,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1056,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1911:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "1904:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$912",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 1055,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1054,
														"name": "IBEP20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 912,
														"src": "1904:6:6"
													},
													"referencedDeclaration": 912,
													"src": "1904:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$912",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1058,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1926:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "1918:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1057,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1918:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1060,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1943:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "1935:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1059,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1935:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1903:46:6"
									},
									"returnParameters": {
										"id": 1062,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1959:0:6"
									},
									"scope": 1130,
									"src": "1873:331:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1128,
										"nodeType": "Block",
										"src": "2669:699:6",
										"statements": [
											{
												"assignments": [
													1101
												],
												"declarations": [
													{
														"constant": false,
														"id": 1101,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3044:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1128,
														"src": "3031:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1100,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3031:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1110,
												"initialValue": {
													"arguments": [
														{
															"id": 1107,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1097,
															"src": "3085:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666542455032303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3091:34:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e357ac51478c37023e9e7ad13e9d6e33f2ac0566d41923020f1a6b2e7a541c3e",
																"typeString": "literal_string \"SafeBEP20: low-level call failed\""
															},
															"value": "SafeBEP20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_e357ac51478c37023e9e7ad13e9d6e33f2ac0566d41923020f1a6b2e7a541c3e",
																"typeString": "literal_string \"SafeBEP20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1104,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1095,
																	"src": "3065:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IBEP20_$912",
																		"typeString": "contract IBEP20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IBEP20_$912",
																		"typeString": "contract IBEP20"
																	}
																],
																"id": 1103,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3057:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1102,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3057:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1105,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3057:14:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1106,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 271,
														"src": "3057:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3057:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3031:95:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1111,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1101,
															"src": "3141:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1112,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3141:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1113,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3161:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3141:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1127,
												"nodeType": "IfStatement",
												"src": "3137:224:6",
												"trueBody": {
													"id": 1126,
													"nodeType": "Block",
													"src": "3164:197:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1118,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1101,
																				"src": "3283:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 1120,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "3296:4:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 1119,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "3296:4:6",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 1121,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3295:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 1116,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3272:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1117,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "3272:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1122,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3272:30:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666542455032303a204245503230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 1123,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3304:44:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082",
																			"typeString": "literal_string \"SafeBEP20: BEP20 operation did not succeed\""
																		},
																		"value": "SafeBEP20: BEP20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082",
																			"typeString": "literal_string \"SafeBEP20: BEP20 operation did not succeed\""
																		}
																	],
																	"id": 1115,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3264:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1124,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3264:85:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1125,
															"nodeType": "ExpressionStatement",
															"src": "3264:85:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1092,
										"nodeType": "StructuredDocumentation",
										"src": "2216:377:6",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 1129,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "2608:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1098,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1095,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2635:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1129,
												"src": "2628:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$912",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 1094,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1093,
														"name": "IBEP20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 912,
														"src": "2628:6:6"
													},
													"referencedDeclaration": 912,
													"src": "2628:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$912",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1097,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2655:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1129,
												"src": "2642:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1096,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2642:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2627:33:6"
									},
									"returnParameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2669:0:6"
									},
									"scope": 1130,
									"src": "2599:769:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1131,
							"src": "198:3173:6",
							"usedErrors": []
						}
					],
					"src": "33:3338:6"
				},
				"id": 6
			},
			"contracts/Staking.sol": {
				"ast": {
					"absolutePath": "contracts/Staking.sol",
					"exportedSymbols": {
						"Address": [
							477
						],
						"Context": [
							499
						],
						"IBEP20": [
							912
						],
						"IERC20": [
							182
						],
						"Ownable": [
							104
						],
						"SafeBEP20": [
							1130
						],
						"SafeMath": [
							811
						],
						"StakingPlatform": [
							2002
						]
					},
					"id": 2003,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1132,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1133,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2003,
							"sourceUnit": 105,
							"src": "60:52:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1134,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2003,
							"sourceUnit": 183,
							"src": "114:56:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 1135,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2003,
							"sourceUnit": 812,
							"src": "172:57:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/SafeBEP20.sol",
							"file": "./SafeBEP20.sol",
							"id": 1136,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2003,
							"sourceUnit": 1131,
							"src": "231:25:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1137,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 104,
										"src": "288:7:7"
									},
									"id": 1138,
									"nodeType": "InheritanceSpecifier",
									"src": "288:7:7"
								}
							],
							"canonicalName": "StakingPlatform",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2002,
							"linearizedBaseContracts": [
								2002,
								104,
								499
							],
							"name": "StakingPlatform",
							"nameLocation": "269:15:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1141,
									"libraryName": {
										"id": 1139,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 811,
										"src": "315:8:7"
									},
									"nodeType": "UsingForDirective",
									"src": "309:27:7",
									"typeName": {
										"id": 1140,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "328:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 1145,
									"libraryName": {
										"id": 1142,
										"name": "SafeBEP20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1130,
										"src": "348:9:7"
									},
									"nodeType": "UsingForDirective",
									"src": "342:27:7",
									"typeName": {
										"id": 1144,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1143,
											"name": "IBEP20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 912,
											"src": "362:6:7"
										},
										"referencedDeclaration": 912,
										"src": "362:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IBEP20_$912",
											"typeString": "contract IBEP20"
										}
									}
								},
								{
									"canonicalName": "StakingPlatform.Staker",
									"id": 1158,
									"members": [
										{
											"constant": false,
											"id": 1147,
											"mutability": "mutable",
											"name": "stakerCurrentReward",
											"nameLocation": "440:19:7",
											"nodeType": "VariableDeclaration",
											"scope": 1158,
											"src": "432:27:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1146,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "432:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1149,
											"mutability": "mutable",
											"name": "stakedAmount",
											"nameLocation": "478:12:7",
											"nodeType": "VariableDeclaration",
											"scope": 1158,
											"src": "470:20:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1148,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "470:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1151,
											"mutability": "mutable",
											"name": "mode",
											"nameLocation": "509:4:7",
											"nodeType": "VariableDeclaration",
											"scope": 1158,
											"src": "501:12:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1150,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "501:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1153,
											"mutability": "mutable",
											"name": "stakeStartTime",
											"nameLocation": "532:14:7",
											"nodeType": "VariableDeclaration",
											"scope": 1158,
											"src": "524:22:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1152,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "524:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1155,
											"mutability": "mutable",
											"name": "lastUpdatedBlockNumber",
											"nameLocation": "565:22:7",
											"nodeType": "VariableDeclaration",
											"scope": 1158,
											"src": "557:30:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1154,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "557:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1157,
											"mutability": "mutable",
											"name": "staked",
											"nameLocation": "606:6:7",
											"nodeType": "VariableDeclaration",
											"scope": 1158,
											"src": "598:14:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1156,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "598:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Staker",
									"nameLocation": "414:6:7",
									"nodeType": "StructDefinition",
									"scope": 2002,
									"src": "407:213:7",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1160,
									"mutability": "mutable",
									"name": "_unstakingFeeRate",
									"nameLocation": "741:17:7",
									"nodeType": "VariableDeclaration",
									"scope": 2002,
									"src": "725:33:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1159,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "725:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1162,
									"mutability": "mutable",
									"name": "_eventPeriod",
									"nameLocation": "781:12:7",
									"nodeType": "VariableDeclaration",
									"scope": 2002,
									"src": "765:28:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1161,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "765:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1164,
									"mutability": "mutable",
									"name": "_rewardRate",
									"nameLocation": "816:11:7",
									"nodeType": "VariableDeclaration",
									"scope": 2002,
									"src": "800:27:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1163,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "800:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1166,
									"mutability": "mutable",
									"name": "_rewardFeeRate",
									"nameLocation": "850:14:7",
									"nodeType": "VariableDeclaration",
									"scope": 2002,
									"src": "834:30:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1165,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "834:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1168,
									"mutability": "mutable",
									"name": "_lockupPeriod",
									"nameLocation": "887:13:7",
									"nodeType": "VariableDeclaration",
									"scope": 2002,
									"src": "871:29:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1167,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "871:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1170,
									"mutability": "mutable",
									"name": "_minStakeAmount_g",
									"nameLocation": "923:17:7",
									"nodeType": "VariableDeclaration",
									"scope": 2002,
									"src": "907:33:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1169,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "907:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1172,
									"mutability": "mutable",
									"name": "_minStakeAmount_s",
									"nameLocation": "963:17:7",
									"nodeType": "VariableDeclaration",
									"scope": 2002,
									"src": "947:33:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1171,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "947:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1174,
									"mutability": "mutable",
									"name": "_minStakeAmount_c",
									"nameLocation": "1003:17:7",
									"nodeType": "VariableDeclaration",
									"scope": 2002,
									"src": "987:33:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1173,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "987:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1177,
									"mutability": "mutable",
									"name": "_stakers",
									"nameLocation": "1051:8:7",
									"nodeType": "VariableDeclaration",
									"scope": 2002,
									"src": "1033:26:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 1175,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1033:7:7",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 1176,
										"nodeType": "ArrayTypeName",
										"src": "1033:9:7",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1182,
									"mutability": "mutable",
									"name": "_staker",
									"nameLocation": "1103:7:7",
									"nodeType": "VariableDeclaration",
									"scope": 2002,
									"src": "1068:42:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
										"typeString": "mapping(address => struct StakingPlatform.Staker)"
									},
									"typeName": {
										"id": 1181,
										"keyType": {
											"id": 1178,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1076:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1068:26:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
											"typeString": "mapping(address => struct StakingPlatform.Staker)"
										},
										"valueType": {
											"id": 1180,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1179,
												"name": "Staker",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1158,
												"src": "1087:6:7"
											},
											"referencedDeclaration": 1158,
											"src": "1087:6:7",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Staker_$1158_storage_ptr",
												"typeString": "struct StakingPlatform.Staker"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "817b1cd2",
									"id": 1184,
									"mutability": "mutable",
									"name": "totalStaked",
									"nameLocation": "1188:11:7",
									"nodeType": "VariableDeclaration",
									"scope": 2002,
									"src": "1173:26:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1183,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1173:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fc0c546a",
									"id": 1187,
									"mutability": "mutable",
									"name": "token",
									"nameLocation": "1220:5:7",
									"nodeType": "VariableDeclaration",
									"scope": 2002,
									"src": "1206:19:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IBEP20_$912",
										"typeString": "contract IBEP20"
									},
									"typeName": {
										"id": 1186,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1185,
											"name": "IBEP20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 912,
											"src": "1206:6:7"
										},
										"referencedDeclaration": 912,
										"src": "1206:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IBEP20_$912",
											"typeString": "contract IBEP20"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 1193,
									"name": "Staked",
									"nameLocation": "1319:6:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1189,
												"indexed": false,
												"mutability": "mutable",
												"name": "staker",
												"nameLocation": "1334:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "1326:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1188,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1326:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1191,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1350:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "1342:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1190,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1342:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1325:32:7"
									},
									"src": "1313:45:7"
								},
								{
									"anonymous": false,
									"id": 1199,
									"name": "Harvest",
									"nameLocation": "1370:7:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1195,
												"indexed": false,
												"mutability": "mutable",
												"name": "staker",
												"nameLocation": "1386:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "1378:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1378:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1197,
												"indexed": false,
												"mutability": "mutable",
												"name": "rewardToClaim",
												"nameLocation": "1402:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "1394:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1196,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1394:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1377:39:7"
									},
									"src": "1364:53:7"
								},
								{
									"anonymous": false,
									"id": 1205,
									"name": "Withdraw",
									"nameLocation": "1429:8:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1201,
												"indexed": false,
												"mutability": "mutable",
												"name": "staker",
												"nameLocation": "1446:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1205,
												"src": "1438:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1200,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1438:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1203,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1462:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1205,
												"src": "1454:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1454:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1437:32:7"
									},
									"src": "1423:47:7"
								},
								{
									"anonymous": false,
									"id": 1209,
									"name": "SetRewardRate",
									"nameLocation": "1482:13:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1207,
												"indexed": false,
												"mutability": "mutable",
												"name": "rewardRate",
												"nameLocation": "1504:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1209,
												"src": "1496:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1496:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:20:7"
									},
									"src": "1476:40:7"
								},
								{
									"anonymous": false,
									"id": 1213,
									"name": "SetEventPeriod",
									"nameLocation": "1528:14:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1211,
												"indexed": false,
												"mutability": "mutable",
												"name": "lockupDuration",
												"nameLocation": "1551:14:7",
												"nodeType": "VariableDeclaration",
												"scope": 1213,
												"src": "1543:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1543:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1542:24:7"
									},
									"src": "1522:45:7"
								},
								{
									"anonymous": false,
									"id": 1217,
									"name": "SetUnstakingFeeRate",
									"nameLocation": "1579:19:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1215,
												"indexed": false,
												"mutability": "mutable",
												"name": "unstakingFeeRate",
												"nameLocation": "1607:16:7",
												"nodeType": "VariableDeclaration",
												"scope": 1217,
												"src": "1599:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1214,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1599:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1598:26:7"
									},
									"src": "1573:52:7"
								},
								{
									"body": {
										"id": 1231,
										"nodeType": "Block",
										"src": "1661:68:7",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1222,
														"name": "Init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1272,
														"src": "1682:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1682:6:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1224,
												"nodeType": "ExpressionStatement",
												"src": "1682:6:7"
											},
											{
												"expression": {
													"id": 1229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1225,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1187,
														"src": "1699:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IBEP20_$912",
															"typeString": "contract IBEP20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1227,
																"name": "_token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1219,
																"src": "1714:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1226,
															"name": "IBEP20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 912,
															"src": "1707:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IBEP20_$912_$",
																"typeString": "type(contract IBEP20)"
															}
														},
														"id": 1228,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1707:14:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IBEP20_$912",
															"typeString": "contract IBEP20"
														}
													},
													"src": "1699:22:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$912",
														"typeString": "contract IBEP20"
													}
												},
												"id": 1230,
												"nodeType": "ExpressionStatement",
												"src": "1699:22:7"
											}
										]
									},
									"id": 1232,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1219,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "1653:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1232,
												"src": "1645:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1645:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1644:16:7"
									},
									"returnParameters": {
										"id": 1221,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1661:0:7"
									},
									"scope": 2002,
									"src": "1633:96:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1271,
										"nodeType": "Block",
										"src": "1762:298:7",
										"statements": [
											{
												"expression": {
													"id": 1237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1235,
														"name": "_rewardRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1164,
														"src": "1783:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "323030",
														"id": 1236,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1797:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_200_by_1",
															"typeString": "int_const 200"
														},
														"value": "200"
													},
													"src": "1783:17:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1238,
												"nodeType": "ExpressionStatement",
												"src": "1783:17:7"
											},
											{
												"expression": {
													"id": 1241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1239,
														"name": "_unstakingFeeRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1160,
														"src": "1822:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31353030",
														"id": 1240,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1842:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1500_by_1",
															"typeString": "int_const 1500"
														},
														"value": "1500"
													},
													"src": "1822:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1242,
												"nodeType": "ExpressionStatement",
												"src": "1822:24:7"
											},
											{
												"expression": {
													"id": 1245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1243,
														"name": "_rewardFeeRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1166,
														"src": "1857:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "313030",
														"id": 1244,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1874:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "1857:20:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1246,
												"nodeType": "ExpressionStatement",
												"src": "1857:20:7"
											},
											{
												"expression": {
													"id": 1249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1247,
														"name": "_eventPeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1162,
														"src": "1888:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "37",
														"id": 1248,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1903:6:7",
														"subdenomination": "days",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_604800_by_1",
															"typeString": "int_const 604800"
														},
														"value": "7"
													},
													"src": "1888:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1250,
												"nodeType": "ExpressionStatement",
												"src": "1888:21:7"
											},
											{
												"expression": {
													"id": 1253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1251,
														"name": "_lockupPeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1168,
														"src": "1920:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3930",
														"id": 1252,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1936:7:7",
														"subdenomination": "days",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_7776000_by_1",
															"typeString": "int_const 7776000"
														},
														"value": "90"
													},
													"src": "1920:23:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1254,
												"nodeType": "ExpressionStatement",
												"src": "1920:23:7"
											},
											{
												"expression": {
													"id": 1257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1255,
														"name": "_minStakeAmount_c",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1174,
														"src": "1954:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31653234",
														"id": 1256,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1974:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000000000"
														},
														"value": "1e24"
													},
													"src": "1954:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1258,
												"nodeType": "ExpressionStatement",
												"src": "1954:24:7"
											},
											{
												"expression": {
													"id": 1263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1259,
														"name": "_minStakeAmount_s",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1172,
														"src": "1989:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_rational_3000000000000000000000000_by_1",
															"typeString": "int_const 3000000000000000000000000"
														},
														"id": 1262,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "33",
															"id": 1260,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2009:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3_by_1",
																"typeString": "int_const 3"
															},
															"value": "3"
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "31653234",
															"id": 1261,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2011:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000000000"
															},
															"value": "1e24"
														},
														"src": "2009:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3000000000000000000000000_by_1",
															"typeString": "int_const 3000000000000000000000000"
														}
													},
													"src": "1989:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1264,
												"nodeType": "ExpressionStatement",
												"src": "1989:26:7"
											},
											{
												"expression": {
													"id": 1269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1265,
														"name": "_minStakeAmount_g",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1170,
														"src": "2026:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_rational_7000000000000000000000000_by_1",
															"typeString": "int_const 7000000000000000000000000"
														},
														"id": 1268,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "37",
															"id": 1266,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2046:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_7_by_1",
																"typeString": "int_const 7"
															},
															"value": "7"
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "31653234",
															"id": 1267,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2048:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000000000"
															},
															"value": "1e24"
														},
														"src": "2046:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_7000000000000000000000000_by_1",
															"typeString": "int_const 7000000000000000000000000"
														}
													},
													"src": "2026:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1270,
												"nodeType": "ExpressionStatement",
												"src": "2026:26:7"
											}
										]
									},
									"id": 1272,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "Init",
									"nameLocation": "1746:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1233,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1750:2:7"
									},
									"returnParameters": {
										"id": 1234,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1762:0:7"
									},
									"scope": 2002,
									"src": "1737:323:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1284,
										"nodeType": "Block",
										"src": "2147:55:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "31",
															"id": 1281,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2187:6:7",
															"subdenomination": "days",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_86400_by_1",
																"typeString": "int_const 86400"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_86400_by_1",
																"typeString": "int_const 86400"
															}
														],
														"expression": {
															"id": 1279,
															"name": "timedur",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1274,
															"src": "2175:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1280,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 720,
														"src": "2175:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2175:19:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1278,
												"id": 1283,
												"nodeType": "Return",
												"src": "2168:26:7"
											}
										]
									},
									"id": 1285,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calDaysFromTimestamp",
									"nameLocation": "2077:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1274,
												"mutability": "mutable",
												"name": "timedur",
												"nameLocation": "2106:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1285,
												"src": "2098:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1273,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2098:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2097:17:7"
									},
									"returnParameters": {
										"id": 1278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1277,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1285,
												"src": "2138:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:9:7"
									},
									"scope": 2002,
									"src": "2068:134:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1344,
										"nodeType": "Block",
										"src": "2308:426:7",
										"statements": [
											{
												"assignments": [
													1289
												],
												"declarations": [
													{
														"constant": false,
														"id": 1289,
														"mutability": "mutable",
														"name": "stakerStakedAmount",
														"nameLocation": "2337:18:7",
														"nodeType": "VariableDeclaration",
														"scope": 1344,
														"src": "2329:26:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1288,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2329:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1295,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 1290,
															"name": "_staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1182,
															"src": "2358:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
															}
														},
														"id": 1293,
														"indexExpression": {
															"expression": {
																"id": 1291,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2366:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1292,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2366:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2358:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$1158_storage",
															"typeString": "struct StakingPlatform.Staker storage ref"
														}
													},
													"id": 1294,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "stakedAmount",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1149,
													"src": "2358:32:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2329:61:7"
											},
											{
												"assignments": [
													1297
												],
												"declarations": [
													{
														"constant": false,
														"id": 1297,
														"mutability": "mutable",
														"name": "newReward",
														"nameLocation": "2419:9:7",
														"nodeType": "VariableDeclaration",
														"scope": 1344,
														"src": "2411:17:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1296,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2411:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1319,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "316534",
															"id": 1317,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2547:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10000_by_1",
																"typeString": "int_const 10000"
															},
															"value": "1e4"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_10000_by_1",
																"typeString": "int_const 10000"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1314,
																	"name": "_rewardRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1164,
																	"src": "2530:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"hexValue": "38363430",
																					"id": 1310,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2519:4:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_8640_by_1",
																						"typeString": "int_const 8640"
																					},
																					"value": "8640"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_8640_by_1",
																						"typeString": "int_const 8640"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"expression": {
																								"baseExpression": {
																									"id": 1303,
																									"name": "_staker",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1182,
																									"src": "2471:7:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																										"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																									}
																								},
																								"id": 1306,
																								"indexExpression": {
																									"expression": {
																										"id": 1304,
																										"name": "msg",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 4294967281,
																										"src": "2479:3:7",
																										"typeDescriptions": {
																											"typeIdentifier": "t_magic_message",
																											"typeString": "msg"
																										}
																									},
																									"id": 1305,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "sender",
																									"nodeType": "MemberAccess",
																									"src": "2479:10:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "2471:19:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_Staker_$1158_storage",
																									"typeString": "struct StakingPlatform.Staker storage ref"
																								}
																							},
																							"id": 1307,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "lastUpdatedBlockNumber",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1155,
																							"src": "2471:42:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"expression": {
																								"id": 1300,
																								"name": "block",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967292,
																								"src": "2454:5:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_block",
																									"typeString": "block"
																								}
																							},
																							"id": 1301,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "number",
																							"nodeType": "MemberAccess",
																							"src": "2454:12:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1302,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "sub",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 690,
																						"src": "2454:16:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 1308,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2454:60:7",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1309,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "div",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 720,
																				"src": "2454:64:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1311,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2454:70:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1298,
																			"name": "stakerStakedAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1289,
																			"src": "2431:18:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1299,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 705,
																		"src": "2431:22:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1312,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2431:94:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1313,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 705,
																"src": "2431:98:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1315,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2431:111:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1316,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 720,
														"src": "2431:115:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2431:120:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2411:140:7"
											},
											{
												"expression": {
													"id": 1333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1320,
																"name": "_staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1182,
																"src": "2562:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																	"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																}
															},
															"id": 1323,
															"indexExpression": {
																"expression": {
																	"id": 1321,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2570:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1322,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2570:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2562:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1158_storage",
																"typeString": "struct StakingPlatform.Staker storage ref"
															}
														},
														"id": 1324,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "stakerCurrentReward",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1147,
														"src": "2562:39:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1331,
																"name": "newReward",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1297,
																"src": "2648:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"baseExpression": {
																		"id": 1325,
																		"name": "_staker",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1182,
																		"src": "2604:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																			"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																		}
																	},
																	"id": 1328,
																	"indexExpression": {
																		"expression": {
																			"id": 1326,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2612:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1327,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2612:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2604:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Staker_$1158_storage",
																		"typeString": "struct StakingPlatform.Staker storage ref"
																	}
																},
																"id": 1329,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "stakerCurrentReward",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1147,
																"src": "2604:39:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1330,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 675,
															"src": "2604:43:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1332,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2604:54:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2562:96:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1334,
												"nodeType": "ExpressionStatement",
												"src": "2562:96:7"
											},
											{
												"expression": {
													"id": 1342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1335,
																"name": "_staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1182,
																"src": "2669:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																	"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																}
															},
															"id": 1338,
															"indexExpression": {
																"expression": {
																	"id": 1336,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2677:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1337,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2677:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2669:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1158_storage",
																"typeString": "struct StakingPlatform.Staker storage ref"
															}
														},
														"id": 1339,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "lastUpdatedBlockNumber",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1155,
														"src": "2669:42:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1340,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2714:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1341,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "number",
														"nodeType": "MemberAccess",
														"src": "2714:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2669:57:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1343,
												"nodeType": "ExpressionStatement",
												"src": "2669:57:7"
											}
										]
									},
									"id": 1345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updateReward",
									"nameLocation": "2286:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1286,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2298:2:7"
									},
									"returnParameters": {
										"id": 1287,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2308:0:7"
									},
									"scope": 2002,
									"src": "2277:457:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1467,
										"nodeType": "Block",
										"src": "2809:816:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1355,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1353,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1347,
																"src": "2838:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1354,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2848:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2838:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e742073686f756c642062652067726561746572207468616e2030",
															"id": 1356,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2851:33:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580",
																"typeString": "literal_string \"Amount should be greater than 0\""
															},
															"value": "Amount should be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580",
																"typeString": "literal_string \"Amount should be greater than 0\""
															}
														],
														"id": 1352,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2830:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2830:55:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1358,
												"nodeType": "ExpressionStatement",
												"src": "2830:55:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1366,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1362,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2920:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1363,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2920:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1360,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1187,
																		"src": "2904:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IBEP20_$912",
																			"typeString": "contract IBEP20"
																		}
																	},
																	"id": 1361,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 851,
																	"src": "2904:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1364,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2904:27:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1365,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1347,
																"src": "2934:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2904:37:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e7421",
															"id": 1367,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2943:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811",
																"typeString": "literal_string \"Insufficient!\""
															},
															"value": "Insufficient!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811",
																"typeString": "literal_string \"Insufficient!\""
															}
														],
														"id": 1359,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2896:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2896:63:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1369,
												"nodeType": "ExpressionStatement",
												"src": "2896:63:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1377,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1371,
																		"name": "_staker",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1182,
																		"src": "2978:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																			"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																		}
																	},
																	"id": 1374,
																	"indexExpression": {
																		"expression": {
																			"id": 1372,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2986:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1373,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2986:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2978:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Staker_$1158_storage",
																		"typeString": "struct StakingPlatform.Staker storage ref"
																	}
																},
																"id": 1375,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "staked",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1157,
																"src": "2978:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30783535",
																"id": 1376,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3008:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_85_by_1",
																	"typeString": "int_const 85"
																},
																"value": "0x55"
															},
															"src": "2978:34:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c72656164792073746172746564",
															"id": 1378,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3014:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6",
																"typeString": "literal_string \"Already started\""
															},
															"value": "Already started"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6",
																"typeString": "literal_string \"Already started\""
															}
														],
														"id": 1370,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2970:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2970:62:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1380,
												"nodeType": "ExpressionStatement",
												"src": "2970:62:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1381,
														"name": "_mode",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1349,
														"src": "3057:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1382,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3066:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3057:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1392,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1390,
															"name": "_mode",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1349,
															"src": "3109:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 1391,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3118:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3109:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1402,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1400,
																"name": "_mode",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1349,
																"src": "3194:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "32",
																"id": 1401,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3203:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "3194:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1412,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1410,
																	"name": "_mode",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1349,
																	"src": "3279:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "33",
																	"id": 1411,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3288:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_3_by_1",
																		"typeString": "int_const 3"
																	},
																	"value": "3"
																},
																"src": "3279:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"expression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1423,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1421,
																				"name": "_amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1347,
																				"src": "3368:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 1422,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3378:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "3368:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		{
																			"hexValue": "496e76616c6964204d6f6465",
																			"id": 1424,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3381:14:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_deac108a7d54cf66b12f6e883ab8551f52667d7b9815f115365cc11ce5c44062",
																				"typeString": "literal_string \"Invalid Mode\""
																			},
																			"value": "Invalid Mode"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			{
																				"typeIdentifier": "t_stringliteral_deac108a7d54cf66b12f6e883ab8551f52667d7b9815f115365cc11ce5c44062",
																				"typeString": "literal_string \"Invalid Mode\""
																			}
																		],
																		"id": 1420,
																		"name": "require",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			4294967278,
																			4294967278
																		],
																		"referencedDeclaration": 4294967278,
																		"src": "3360:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																			"typeString": "function (bool,string memory) pure"
																		}
																	},
																	"id": 1425,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3360:36:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1426,
																"nodeType": "ExpressionStatement",
																"src": "3360:36:7"
															},
															"id": 1427,
															"nodeType": "IfStatement",
															"src": "3275:121:7",
															"trueBody": {
																"expression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1416,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1414,
																				"name": "_amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1347,
																				"src": "3299:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">=",
																			"rightExpression": {
																				"id": 1415,
																				"name": "_minStakeAmount_g",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1170,
																				"src": "3310:17:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3299:28:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		{
																			"hexValue": "496e73756666696369656e74",
																			"id": 1417,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3329:14:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_0d617be88096c346284999e0c326580edf46a27365999d8d83893f396c546e11",
																				"typeString": "literal_string \"Insufficient\""
																			},
																			"value": "Insufficient"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			{
																				"typeIdentifier": "t_stringliteral_0d617be88096c346284999e0c326580edf46a27365999d8d83893f396c546e11",
																				"typeString": "literal_string \"Insufficient\""
																			}
																		],
																		"id": 1413,
																		"name": "require",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			4294967278,
																			4294967278
																		],
																		"referencedDeclaration": 4294967278,
																		"src": "3291:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																			"typeString": "function (bool,string memory) pure"
																		}
																	},
																	"id": 1418,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3291:53:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1419,
																"nodeType": "ExpressionStatement",
																"src": "3291:53:7"
															}
														},
														"id": 1428,
														"nodeType": "IfStatement",
														"src": "3190:206:7",
														"trueBody": {
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1406,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1404,
																			"name": "_amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1347,
																			"src": "3214:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 1405,
																			"name": "_minStakeAmount_s",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1172,
																			"src": "3225:17:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3214:28:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "496e73756666696369656e74",
																		"id": 1407,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3244:14:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_0d617be88096c346284999e0c326580edf46a27365999d8d83893f396c546e11",
																			"typeString": "literal_string \"Insufficient\""
																		},
																		"value": "Insufficient"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_0d617be88096c346284999e0c326580edf46a27365999d8d83893f396c546e11",
																			"typeString": "literal_string \"Insufficient\""
																		}
																	],
																	"id": 1403,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3206:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1408,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3206:53:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1409,
															"nodeType": "ExpressionStatement",
															"src": "3206:53:7"
														}
													},
													"id": 1429,
													"nodeType": "IfStatement",
													"src": "3105:291:7",
													"trueBody": {
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1396,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1394,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1347,
																		"src": "3129:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 1395,
																		"name": "_minStakeAmount_c",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1174,
																		"src": "3140:17:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3129:28:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "496e73756666696369656e74",
																	"id": 1397,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3159:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_0d617be88096c346284999e0c326580edf46a27365999d8d83893f396c546e11",
																		"typeString": "literal_string \"Insufficient\""
																	},
																	"value": "Insufficient"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_0d617be88096c346284999e0c326580edf46a27365999d8d83893f396c546e11",
																		"typeString": "literal_string \"Insufficient\""
																	}
																],
																"id": 1393,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "3121:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1398,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3121:53:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1399,
														"nodeType": "ExpressionStatement",
														"src": "3121:53:7"
													}
												},
												"id": 1430,
												"nodeType": "IfStatement",
												"src": "3053:343:7",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1387,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1385,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1347,
																	"src": "3077:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1386,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3087:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "3077:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															],
															"id": 1384,
															"name": "require",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																4294967278,
																4294967278
															],
															"referencedDeclaration": 4294967278,
															"src": "3069:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																"typeString": "function (bool) pure"
															}
														},
														"id": 1388,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3069:20:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1389,
													"nodeType": "ExpressionStatement",
													"src": "3069:20:7"
												}
											},
											{
												"expression": {
													"id": 1437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1431,
																"name": "_staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1182,
																"src": "3417:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																	"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																}
															},
															"id": 1434,
															"indexExpression": {
																"expression": {
																	"id": 1432,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3425:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1433,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3425:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3417:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1158_storage",
																"typeString": "struct StakingPlatform.Staker storage ref"
															}
														},
														"id": 1435,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "mode",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1151,
														"src": "3417:24:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1436,
														"name": "_mode",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1349,
														"src": "3444:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3417:32:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1438,
												"nodeType": "ExpressionStatement",
												"src": "3417:32:7"
											},
											{
												"expression": {
													"id": 1446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1439,
																"name": "_staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1182,
																"src": "3460:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																	"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																}
															},
															"id": 1442,
															"indexExpression": {
																"expression": {
																	"id": 1440,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3468:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1441,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3468:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3460:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1158_storage",
																"typeString": "struct StakingPlatform.Staker storage ref"
															}
														},
														"id": 1443,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "stakeStartTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1153,
														"src": "3460:34:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1444,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3497:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1445,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "3497:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3460:52:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1447,
												"nodeType": "ExpressionStatement",
												"src": "3460:52:7"
											},
											{
												"expression": {
													"id": 1454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1448,
																"name": "_staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1182,
																"src": "3523:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																	"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																}
															},
															"id": 1451,
															"indexExpression": {
																"expression": {
																	"id": 1449,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3531:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1450,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3531:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3523:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1158_storage",
																"typeString": "struct StakingPlatform.Staker storage ref"
															}
														},
														"id": 1452,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "staked",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1157,
														"src": "3523:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30783535",
														"id": 1453,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3552:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_85_by_1",
															"typeString": "int_const 85"
														},
														"value": "0x55"
													},
													"src": "3523:33:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1455,
												"nodeType": "ExpressionStatement",
												"src": "3523:33:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1459,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3581:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1460,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3581:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1456,
															"name": "_stakers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1177,
															"src": "3567:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1458,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "3567:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
															"typeString": "function (address[] storage pointer,address)"
														}
													},
													"id": 1461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3567:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1462,
												"nodeType": "ExpressionStatement",
												"src": "3567:25:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1464,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1347,
															"src": "3609:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1463,
														"name": "stake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1546,
														"src": "3603:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3603:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1466,
												"nodeType": "ExpressionStatement",
												"src": "3603:14:7"
											}
										]
									},
									"functionSelector": "4b77dd9e",
									"id": 1468,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "startStaking",
									"nameLocation": "2755:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1347,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "2776:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1468,
												"src": "2768:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1346,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1349,
												"mutability": "mutable",
												"name": "_mode",
												"nameLocation": "2793:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1468,
												"src": "2785:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1348,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2785:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:32:7"
									},
									"returnParameters": {
										"id": 1351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2809:0:7"
									},
									"scope": 2002,
									"src": "2746:879:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1545,
										"nodeType": "Block",
										"src": "3731:544:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1476,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1474,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1470,
																"src": "3760:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1475,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3770:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3760:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e742073686f756c642062652067726561746572207468616e2030",
															"id": 1477,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3773:33:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580",
																"typeString": "literal_string \"Amount should be greater than 0\""
															},
															"value": "Amount should be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580",
																"typeString": "literal_string \"Amount should be greater than 0\""
															}
														],
														"id": 1473,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3752:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3752:55:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1479,
												"nodeType": "ExpressionStatement",
												"src": "3752:55:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1487,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1483,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3842:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1484,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3842:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1481,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1187,
																		"src": "3826:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IBEP20_$912",
																			"typeString": "contract IBEP20"
																		}
																	},
																	"id": 1482,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 851,
																	"src": "3826:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1485,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3826:27:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1486,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1470,
																"src": "3856:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3826:37:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e7421",
															"id": 1488,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3865:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811",
																"typeString": "literal_string \"Insufficient!\""
															},
															"value": "Insufficient!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811",
																"typeString": "literal_string \"Insufficient!\""
															}
														],
														"id": 1480,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3818:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3818:63:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1490,
												"nodeType": "ExpressionStatement",
												"src": "3818:63:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1498,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1492,
																		"name": "_staker",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1182,
																		"src": "3900:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																			"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																		}
																	},
																	"id": 1495,
																	"indexExpression": {
																		"expression": {
																			"id": 1493,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3908:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1494,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3908:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3900:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Staker_$1158_storage",
																		"typeString": "struct StakingPlatform.Staker storage ref"
																	}
																},
																"id": 1496,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "staked",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1157,
																"src": "3900:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30783535",
																"id": 1497,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3930:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_85_by_1",
																	"typeString": "int_const 85"
																},
																"value": "0x55"
															},
															"src": "3900:34:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4572726f723a20696e76616c6964207374616b6572",
															"id": 1499,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3936:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684",
																"typeString": "literal_string \"Error: invalid staker\""
															},
															"value": "Error: invalid staker"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684",
																"typeString": "literal_string \"Error: invalid staker\""
															}
														],
														"id": 1491,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3892:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3892:68:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1501,
												"nodeType": "ExpressionStatement",
												"src": "3892:68:7"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1502,
														"name": "updateReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1345,
														"src": "3981:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3981:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1504,
												"nodeType": "ExpressionStatement",
												"src": "3981:14:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1508,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4039:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1509,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4039:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1512,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4059:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakingPlatform_$2002",
																		"typeString": "contract StakingPlatform"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_StakingPlatform_$2002",
																		"typeString": "contract StakingPlatform"
																	}
																],
																"id": 1511,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4051:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1510,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4051:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1513,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4051:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1514,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1470,
															"src": "4066:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1505,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1187,
															"src": "4016:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															}
														},
														"id": 1507,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 972,
														"src": "4016:22:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$912_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IBEP20_$912_$",
															"typeString": "function (contract IBEP20,address,address,uint256)"
														}
													},
													"id": 1515,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4016:58:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1516,
												"nodeType": "ExpressionStatement",
												"src": "4016:58:7"
											},
											{
												"expression": {
													"id": 1530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1517,
																"name": "_staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1182,
																"src": "4085:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																	"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																}
															},
															"id": 1520,
															"indexExpression": {
																"expression": {
																	"id": 1518,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4093:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1519,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "4093:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4085:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1158_storage",
																"typeString": "struct StakingPlatform.Staker storage ref"
															}
														},
														"id": 1521,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "stakedAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1149,
														"src": "4085:32:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1528,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1470,
																"src": "4157:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"baseExpression": {
																		"id": 1522,
																		"name": "_staker",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1182,
																		"src": "4120:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																			"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																		}
																	},
																	"id": 1525,
																	"indexExpression": {
																		"expression": {
																			"id": 1523,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4128:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1524,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4128:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4120:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Staker_$1158_storage",
																		"typeString": "struct StakingPlatform.Staker storage ref"
																	}
																},
																"id": 1526,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "stakedAmount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1149,
																"src": "4120:32:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1527,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 675,
															"src": "4120:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1529,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4120:45:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4085:80:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1531,
												"nodeType": "ExpressionStatement",
												"src": "4085:80:7"
											},
											{
												"expression": {
													"id": 1537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1532,
														"name": "totalStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1184,
														"src": "4176:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1535,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1470,
																"src": "4206:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1533,
																"name": "totalStaked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1184,
																"src": "4190:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1534,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 675,
															"src": "4190:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1536,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4190:24:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4176:38:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1538,
												"nodeType": "ExpressionStatement",
												"src": "4176:38:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1540,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4247:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1541,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4247:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1542,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1470,
															"src": "4259:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1539,
														"name": "Staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1193,
														"src": "4240:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4240:27:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1544,
												"nodeType": "EmitStatement",
												"src": "4235:32:7"
											}
										]
									},
									"functionSelector": "a694fc3a",
									"id": 1546,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stake",
									"nameLocation": "3702:5:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1470,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "3716:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1546,
												"src": "3708:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1469,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3708:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3707:17:7"
									},
									"returnParameters": {
										"id": 1472,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3731:0:7"
									},
									"scope": 2002,
									"src": "3693:582:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1553,
										"nodeType": "Block",
										"src": "4339:39:7",
										"statements": [
											{
												"expression": {
													"id": 1551,
													"name": "totalStaked",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1184,
													"src": "4359:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1550,
												"id": 1552,
												"nodeType": "Return",
												"src": "4352:18:7"
											}
										]
									},
									"functionSelector": "0917e776",
									"id": 1554,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTotalStaked",
									"nameLocation": "4292:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1547,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4306:2:7"
									},
									"returnParameters": {
										"id": 1550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1549,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1554,
												"src": "4330:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4330:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4329:9:7"
									},
									"scope": 2002,
									"src": "4283:95:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1562,
										"nodeType": "Block",
										"src": "4446:43:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1559,
														"name": "_stakers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1177,
														"src": "4466:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"id": 1560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "4466:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1558,
												"id": 1561,
												"nodeType": "Return",
												"src": "4459:22:7"
											}
										]
									},
									"functionSelector": "5715ec11",
									"id": 1563,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getNumberofStakers",
									"nameLocation": "4395:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1555,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4413:2:7"
									},
									"returnParameters": {
										"id": 1558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1557,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1563,
												"src": "4437:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1556,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4437:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4436:9:7"
									},
									"scope": 2002,
									"src": "4386:103:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1580,
										"nodeType": "Block",
										"src": "4568:63:7",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1575,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"baseExpression": {
																	"id": 1570,
																	"name": "_staker",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1182,
																	"src": "4588:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																		"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																	}
																},
																"id": 1572,
																"indexExpression": {
																	"id": 1571,
																	"name": "_address",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1565,
																	"src": "4596:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4588:17:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Staker_$1158_storage",
																	"typeString": "struct StakingPlatform.Staker storage ref"
																}
															},
															"id": 1573,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "mode",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1151,
															"src": "4588:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1574,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4614:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4588:27:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "31",
														"id": 1577,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4622:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"id": 1578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "4588:35:7",
													"trueExpression": {
														"hexValue": "30",
														"id": 1576,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4618:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 1569,
												"id": 1579,
												"nodeType": "Return",
												"src": "4581:42:7"
											}
										]
									},
									"functionSelector": "aedf562b",
									"id": 1581,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStakerMode",
									"nameLocation": "4506:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1565,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "4528:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1581,
												"src": "4520:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1564,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4520:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4519:18:7"
									},
									"returnParameters": {
										"id": 1569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1568,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1581,
												"src": "4559:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1567,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4559:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4558:9:7"
									},
									"scope": 2002,
									"src": "4497:134:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1593,
										"nodeType": "Block",
										"src": "4711:52:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 1588,
															"name": "_staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1182,
															"src": "4731:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
															}
														},
														"id": 1590,
														"indexExpression": {
															"id": 1589,
															"name": "_address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1583,
															"src": "4739:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4731:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$1158_storage",
															"typeString": "struct StakingPlatform.Staker storage ref"
														}
													},
													"id": 1591,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "staked",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1157,
													"src": "4731:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1587,
												"id": 1592,
												"nodeType": "Return",
												"src": "4724:31:7"
											}
										]
									},
									"functionSelector": "fe600f84",
									"id": 1594,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isStartStaking",
									"nameLocation": "4648:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1583,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "4671:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1594,
												"src": "4663:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1582,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4663:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4662:18:7"
									},
									"returnParameters": {
										"id": 1587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1586,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1594,
												"src": "4702:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1585,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4702:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4701:9:7"
									},
									"scope": 2002,
									"src": "4639:124:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1648,
										"nodeType": "Block",
										"src": "4837:336:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 1601,
																"name": "_staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1182,
																"src": "4854:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																	"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																}
															},
															"id": 1603,
															"indexExpression": {
																"id": 1602,
																"name": "_address",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1596,
																"src": "4862:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4854:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1158_storage",
																"typeString": "struct StakingPlatform.Staker storage ref"
															}
														},
														"id": 1604,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staked",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1157,
														"src": "4854:24:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30783535",
														"id": 1605,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4882:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_85_by_1",
															"typeString": "int_const 85"
														},
														"value": "0x55"
													},
													"src": "4854:32:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1609,
												"nodeType": "IfStatement",
												"src": "4850:59:7",
												"trueBody": {
													"expression": {
														"hexValue": "31",
														"id": 1607,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4908:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"functionReturnParameters": 1600,
													"id": 1608,
													"nodeType": "Return",
													"src": "4901:8:7"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 1610,
																"name": "_staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1182,
																"src": "4924:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																	"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																}
															},
															"id": 1612,
															"indexExpression": {
																"id": 1611,
																"name": "_address",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1596,
																"src": "4932:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4924:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1158_storage",
																"typeString": "struct StakingPlatform.Staker storage ref"
															}
														},
														"id": 1613,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mode",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1151,
														"src": "4924:22:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1614,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4950:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4924:27:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"expression": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1642,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"baseExpression": {
																				"id": 1636,
																				"name": "_staker",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1182,
																				"src": "5107:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																					"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																				}
																			},
																			"id": 1638,
																			"indexExpression": {
																				"id": 1637,
																				"name": "_address",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1596,
																				"src": "5115:8:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "5107:17:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Staker_$1158_storage",
																				"typeString": "struct StakingPlatform.Staker storage ref"
																			}
																		},
																		"id": 1639,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "stakeStartTime",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1153,
																		"src": "5107:32:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 1633,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "5087:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1634,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "5087:15:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1635,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 690,
																	"src": "5087:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1640,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5087:53:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1641,
																"name": "_lockupPeriod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1168,
																"src": "5144:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5087:70:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"hexValue": "31",
															"id": 1644,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5164:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"id": 1645,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "5087:78:7",
														"trueExpression": {
															"hexValue": "30",
															"id": 1643,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5160:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"functionReturnParameters": 1600,
													"id": 1646,
													"nodeType": "Return",
													"src": "5080:85:7"
												},
												"id": 1647,
												"nodeType": "IfStatement",
												"src": "4920:245:7",
												"trueBody": {
													"expression": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1628,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1626,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"expression": {
																				"baseExpression": {
																					"id": 1619,
																					"name": "_staker",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1182,
																					"src": "4993:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																						"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																					}
																				},
																				"id": 1621,
																				"indexExpression": {
																					"id": 1620,
																					"name": "_address",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1596,
																					"src": "5001:8:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "4993:17:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Staker_$1158_storage",
																					"typeString": "struct StakingPlatform.Staker storage ref"
																				}
																			},
																			"id": 1622,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "stakeStartTime",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1153,
																			"src": "4993:32:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 1616,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967292,
																				"src": "4973:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 1617,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "timestamp",
																			"nodeType": "MemberAccess",
																			"src": "4973:15:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1618,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 690,
																		"src": "4973:19:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1623,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4973:53:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "%",
																"rightExpression": {
																	"components": [
																		{
																			"hexValue": "37",
																			"id": 1624,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5030:6:7",
																			"subdenomination": "days",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_604800_by_1",
																				"typeString": "int_const 604800"
																			},
																			"value": "7"
																		}
																	],
																	"id": 1625,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "5029:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_604800_by_1",
																		"typeString": "int_const 604800"
																	}
																},
																"src": "4973:64:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1627,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5041:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4973:69:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"hexValue": "31",
															"id": 1630,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5049:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"id": 1631,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "4973:77:7",
														"trueExpression": {
															"hexValue": "30",
															"id": 1629,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5045:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"functionReturnParameters": 1600,
													"id": 1632,
													"nodeType": "Return",
													"src": "4966:84:7"
												}
											}
										]
									},
									"functionSelector": "4a4fbeec",
									"id": 1649,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isLocked",
									"nameLocation": "4780:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1596,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "4797:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1649,
												"src": "4789:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1595,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4789:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4788:18:7"
									},
									"returnParameters": {
										"id": 1600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1599,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1649,
												"src": "4828:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1598,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4828:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4827:9:7"
									},
									"scope": 2002,
									"src": "4771:402:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1661,
										"nodeType": "Block",
										"src": "5255:66:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 1656,
															"name": "_staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1182,
															"src": "5283:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
															}
														},
														"id": 1658,
														"indexExpression": {
															"id": 1657,
															"name": "_address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1651,
															"src": "5291:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5283:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$1158_storage",
															"typeString": "struct StakingPlatform.Staker storage ref"
														}
													},
													"id": 1659,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "stakedAmount",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1149,
													"src": "5283:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1655,
												"id": 1660,
												"nodeType": "Return",
												"src": "5276:37:7"
											}
										]
									},
									"functionSelector": "f9931855",
									"id": 1662,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stakedAmount",
									"nameLocation": "5194:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1651,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "5215:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1662,
												"src": "5207:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1650,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5207:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5206:18:7"
									},
									"returnParameters": {
										"id": 1655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1654,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1662,
												"src": "5246:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1653,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5246:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5245:9:7"
									},
									"scope": 2002,
									"src": "5185:136:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1674,
										"nodeType": "Block",
										"src": "5403:65:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 1669,
															"name": "_staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1182,
															"src": "5423:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
															}
														},
														"id": 1671,
														"indexExpression": {
															"id": 1670,
															"name": "_address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1664,
															"src": "5431:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5423:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$1158_storage",
															"typeString": "struct StakingPlatform.Staker storage ref"
														}
													},
													"id": 1672,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "stakerCurrentReward",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1147,
													"src": "5423:37:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1668,
												"id": 1673,
												"nodeType": "Return",
												"src": "5416:44:7"
											}
										]
									},
									"functionSelector": "645a8a56",
									"id": 1675,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "rewardAmount",
									"nameLocation": "5342:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1664,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "5363:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1675,
												"src": "5355:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1663,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5355:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5354:18:7"
									},
									"returnParameters": {
										"id": 1668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1667,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1675,
												"src": "5394:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1666,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5394:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5393:9:7"
									},
									"scope": 2002,
									"src": "5333:135:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1682,
										"nodeType": "Block",
										"src": "5531:39:7",
										"statements": [
											{
												"expression": {
													"id": 1680,
													"name": "_rewardRate",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1164,
													"src": "5551:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1679,
												"id": 1681,
												"nodeType": "Return",
												"src": "5544:18:7"
											}
										]
									},
									"functionSelector": "7e1a3786",
									"id": 1683,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRewardRate",
									"nameLocation": "5485:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1676,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5498:2:7"
									},
									"returnParameters": {
										"id": 1679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1678,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1683,
												"src": "5522:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1677,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5522:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5521:9:7"
									},
									"scope": 2002,
									"src": "5476:94:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1820,
										"nodeType": "Block",
										"src": "5659:1081:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1691,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1689,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1685,
																"src": "5688:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1690,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5697:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5688:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e742073686f756c642062652067726561746572207468616e2030",
															"id": 1692,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5700:33:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580",
																"typeString": "literal_string \"Amount should be greater than 0\""
															},
															"value": "Amount should be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580",
																"typeString": "literal_string \"Amount should be greater than 0\""
															}
														],
														"id": 1688,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5680:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1693,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5680:54:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1694,
												"nodeType": "ExpressionStatement",
												"src": "5680:54:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1702,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1696,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1685,
																"src": "5753:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1697,
																		"name": "_staker",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1182,
																		"src": "5763:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																			"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																		}
																	},
																	"id": 1700,
																	"indexExpression": {
																		"expression": {
																			"id": 1698,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "5771:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1699,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "5771:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5763:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Staker_$1158_storage",
																		"typeString": "struct StakingPlatform.Staker storage ref"
																	}
																},
																"id": 1701,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "stakedAmount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1149,
																"src": "5763:32:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5753:42:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420616d6f756e74",
															"id": 1703,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5797:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1",
																"typeString": "literal_string \"Invalid amount\""
															},
															"value": "Invalid amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1",
																"typeString": "literal_string \"Invalid amount\""
															}
														],
														"id": 1695,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5745:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1704,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5745:69:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1705,
												"nodeType": "ExpressionStatement",
												"src": "5745:69:7"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1706,
														"name": "updateReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1345,
														"src": "5827:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5827:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1708,
												"nodeType": "ExpressionStatement",
												"src": "5827:14:7"
											},
											{
												"assignments": [
													1710
												],
												"declarations": [
													{
														"constant": false,
														"id": 1710,
														"mutability": "mutable",
														"name": "amountTobeWithdrawn",
														"nameLocation": "5860:19:7",
														"nodeType": "VariableDeclaration",
														"scope": 1820,
														"src": "5852:27:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1709,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5852:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1712,
												"initialValue": {
													"id": 1711,
													"name": "amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1685,
													"src": "5882:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5852:36:7"
											},
											{
												"assignments": [
													1714
												],
												"declarations": [
													{
														"constant": false,
														"id": 1714,
														"mutability": "mutable",
														"name": "during",
														"nameLocation": "5907:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1820,
														"src": "5899:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1713,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5899:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1727,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31",
															"id": 1725,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5976:6:7",
															"subdenomination": "days",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_86400_by_1",
																"typeString": "int_const 86400"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_86400_by_1",
																"typeString": "int_const 86400"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"baseExpression": {
																			"id": 1718,
																			"name": "_staker",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1182,
																			"src": "5936:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																				"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																			}
																		},
																		"id": 1721,
																		"indexExpression": {
																			"expression": {
																				"id": 1719,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "5944:3:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1720,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "5944:10:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5936:19:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Staker_$1158_storage",
																			"typeString": "struct StakingPlatform.Staker storage ref"
																		}
																	},
																	"id": 1722,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "stakeStartTime",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1153,
																	"src": "5936:34:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"expression": {
																		"id": 1715,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "5916:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1716,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "5916:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1717,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 690,
																"src": "5916:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1723,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5916:55:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1724,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 720,
														"src": "5916:59:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5916:67:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5899:84:7"
											},
											{
												"assignments": [
													1729
												],
												"declarations": [
													{
														"constant": false,
														"id": 1729,
														"mutability": "mutable",
														"name": "fee",
														"nameLocation": "6002:3:7",
														"nodeType": "VariableDeclaration",
														"scope": 1820,
														"src": "5994:11:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1728,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5994:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1731,
												"initialValue": {
													"hexValue": "313030",
													"id": 1730,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6008:3:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_100_by_1",
														"typeString": "int_const 100"
													},
													"value": "100"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5994:17:7"
											},
											{
												"assignments": [
													1733
												],
												"declarations": [
													{
														"constant": false,
														"id": 1733,
														"mutability": "mutable",
														"name": "isLockupTimeOver",
														"nameLocation": "6027:16:7",
														"nodeType": "VariableDeclaration",
														"scope": 1820,
														"src": "6022:21:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1732,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6022:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1762,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1740,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"baseExpression": {
																	"id": 1734,
																	"name": "_staker",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1182,
																	"src": "6046:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																		"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																	}
																},
																"id": 1737,
																"indexExpression": {
																	"expression": {
																		"id": 1735,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "6054:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1736,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "6054:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6046:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Staker_$1158_storage",
																	"typeString": "struct StakingPlatform.Staker storage ref"
																}
															},
															"id": 1738,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "mode",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1151,
															"src": "6046:24:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 1739,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6074:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "6046:29:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1760,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1750,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "6134:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1751,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "6134:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"arguments": [
																{
																	"id": 1758,
																	"name": "_lockupPeriod",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1168,
																	"src": "6192:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"expression": {
																		"baseExpression": {
																			"id": 1752,
																			"name": "_staker",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1182,
																			"src": "6153:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																				"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																			}
																		},
																		"id": 1755,
																		"indexExpression": {
																			"expression": {
																				"id": 1753,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "6161:3:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1754,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "6161:10:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6153:19:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Staker_$1158_storage",
																			"typeString": "struct StakingPlatform.Staker storage ref"
																		}
																	},
																	"id": 1756,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "stakeStartTime",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1153,
																	"src": "6153:34:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1757,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 675,
																"src": "6153:38:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1759,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6153:53:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6134:72:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1761,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "6046:160:7",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1749,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1745,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1743,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1741,
																	"name": "during",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1714,
																	"src": "6078:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "%",
																"rightExpression": {
																	"id": 1742,
																	"name": "_eventPeriod",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1162,
																	"src": "6087:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6078:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1744,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6103:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6078:26:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1748,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1746,
																"name": "during",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1714,
																"src": "6108:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1747,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6117:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6108:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "6078:40:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6022:184:7"
											},
											{
												"condition": {
													"id": 1764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6221:17:7",
													"subExpression": {
														"id": 1763,
														"name": "isLockupTimeOver",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1733,
														"src": "6222:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1770,
												"nodeType": "IfStatement",
												"src": "6217:73:7",
												"trueBody": {
													"id": 1769,
													"nodeType": "Block",
													"src": "6240:50:7",
													"statements": [
														{
															"expression": {
																"id": 1767,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1765,
																	"name": "fee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1729,
																	"src": "6255:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1766,
																	"name": "_unstakingFeeRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1160,
																	"src": "6261:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6255:23:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1768,
															"nodeType": "ExpressionStatement",
															"src": "6255:23:7"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1782,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1771,
														"name": "amountTobeWithdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1710,
														"src": "6300:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"hexValue": "316534",
																		"id": 1779,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6379:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10000_by_1",
																			"typeString": "int_const 10000"
																		},
																		"value": "1e4"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_10000_by_1",
																			"typeString": "int_const 10000"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1776,
																				"name": "fee",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1729,
																				"src": "6370:3:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1774,
																				"name": "amountTobeWithdrawn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1710,
																				"src": "6346:19:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1775,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 705,
																			"src": "6346:23:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1777,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6346:28:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1778,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 720,
																	"src": "6346:32:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1780,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6346:37:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1772,
																"name": "amountTobeWithdrawn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1710,
																"src": "6322:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1773,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 690,
															"src": "6322:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1781,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6322:62:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6300:84:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1783,
												"nodeType": "ExpressionStatement",
												"src": "6300:84:7"
											},
											{
												"expression": {
													"id": 1789,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1784,
														"name": "totalStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1184,
														"src": "6395:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1787,
																"name": "amountTobeWithdrawn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1710,
																"src": "6425:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1785,
																"name": "totalStaked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1184,
																"src": "6409:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1786,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 690,
															"src": "6409:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1788,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6409:36:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6395:50:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1790,
												"nodeType": "ExpressionStatement",
												"src": "6395:50:7"
											},
											{
												"expression": {
													"id": 1804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1791,
																"name": "_staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1182,
																"src": "6456:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																	"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																}
															},
															"id": 1794,
															"indexExpression": {
																"expression": {
																	"id": 1792,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "6464:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1793,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "6464:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6456:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1158_storage",
																"typeString": "struct StakingPlatform.Staker storage ref"
															}
														},
														"id": 1795,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "stakedAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1149,
														"src": "6456:32:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1802,
																"name": "amountTobeWithdrawn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1710,
																"src": "6528:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"baseExpression": {
																		"id": 1796,
																		"name": "_staker",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1182,
																		"src": "6491:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																			"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																		}
																	},
																	"id": 1799,
																	"indexExpression": {
																		"expression": {
																			"id": 1797,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "6499:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1798,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "6499:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6491:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Staker_$1158_storage",
																		"typeString": "struct StakingPlatform.Staker storage ref"
																	}
																},
																"id": 1800,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "stakedAmount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1149,
																"src": "6491:32:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1801,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 690,
															"src": "6491:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1803,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6491:57:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6456:92:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1805,
												"nodeType": "ExpressionStatement",
												"src": "6456:92:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1809,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6578:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1810,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6578:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1811,
															"name": "amountTobeWithdrawn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1710,
															"src": "6590:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1806,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1187,
															"src": "6559:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															}
														},
														"id": 1808,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 946,
														"src": "6559:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$912_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IBEP20_$912_$",
															"typeString": "function (contract IBEP20,address,uint256)"
														}
													},
													"id": 1812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6559:51:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1813,
												"nodeType": "ExpressionStatement",
												"src": "6559:51:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1815,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6637:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1816,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6637:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1817,
															"name": "amountTobeWithdrawn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1710,
															"src": "6649:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1814,
														"name": "Withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1205,
														"src": "6628:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1818,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6628:41:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1819,
												"nodeType": "EmitStatement",
												"src": "6623:46:7"
											}
										]
									},
									"functionSelector": "2e1a7d4d",
									"id": 1821,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "5626:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1685,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5643:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1821,
												"src": "5635:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1684,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5635:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5634:16:7"
									},
									"returnParameters": {
										"id": 1687,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5659:0:7"
									},
									"scope": 2002,
									"src": "5617:1123:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1843,
										"nodeType": "Block",
										"src": "6816:163:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1831,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1829,
																"name": "__rewardRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1823,
																"src": "6845:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1830,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6860:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6845:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642076616c7565",
															"id": 1832,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6863:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6",
																"typeString": "literal_string \"Invalid value\""
															},
															"value": "Invalid value"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6",
																"typeString": "literal_string \"Invalid value\""
															}
														],
														"id": 1828,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6837:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1833,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6837:42:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1834,
												"nodeType": "ExpressionStatement",
												"src": "6837:42:7"
											},
											{
												"expression": {
													"id": 1837,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1835,
														"name": "_rewardRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1164,
														"src": "6900:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1836,
														"name": "__rewardRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1823,
														"src": "6914:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6900:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1838,
												"nodeType": "ExpressionStatement",
												"src": "6900:26:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1840,
															"name": "__rewardRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1823,
															"src": "6958:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1839,
														"name": "SetRewardRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1209,
														"src": "6944:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1841,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6944:27:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1842,
												"nodeType": "EmitStatement",
												"src": "6939:32:7"
											}
										]
									},
									"functionSelector": "9e447fc6",
									"id": 1844,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1826,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1825,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "6806:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "6806:9:7"
										}
									],
									"name": "setRewardRate",
									"nameLocation": "6761:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1824,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1823,
												"mutability": "mutable",
												"name": "__rewardRate",
												"nameLocation": "6783:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1844,
												"src": "6775:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1822,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6775:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6774:22:7"
									},
									"returnParameters": {
										"id": 1827,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6816:0:7"
									},
									"scope": 2002,
									"src": "6752:227:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1869,
										"nodeType": "Block",
										"src": "7053:182:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1854,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1852,
																"name": "__eventPeriod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1846,
																"src": "7082:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1853,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7098:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7082:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964204c6f636b7570204475726174696f6e",
															"id": 1855,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7101:25:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561",
																"typeString": "literal_string \"Invalid Lockup Duration\""
															},
															"value": "Invalid Lockup Duration"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561",
																"typeString": "literal_string \"Invalid Lockup Duration\""
															}
														],
														"id": 1851,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7074:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1856,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7074:53:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1857,
												"nodeType": "ExpressionStatement",
												"src": "7074:53:7"
											},
											{
												"expression": {
													"id": 1863,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1858,
														"name": "_eventPeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1162,
														"src": "7140:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "31",
																"id": 1861,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7173:6:7",
																"subdenomination": "days",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_86400_by_1",
																	"typeString": "int_const 86400"
																},
																"value": "1"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_86400_by_1",
																	"typeString": "int_const 86400"
																}
															],
															"expression": {
																"id": 1859,
																"name": "__eventPeriod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1846,
																"src": "7155:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1860,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "mul",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 705,
															"src": "7155:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1862,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7155:25:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7140:40:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1864,
												"nodeType": "ExpressionStatement",
												"src": "7140:40:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1866,
															"name": "__eventPeriod",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1846,
															"src": "7213:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1865,
														"name": "SetEventPeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1213,
														"src": "7198:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7198:29:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1868,
												"nodeType": "EmitStatement",
												"src": "7193:34:7"
											}
										]
									},
									"functionSelector": "692642e7",
									"id": 1870,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1849,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1848,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "7043:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "7043:9:7"
										}
									],
									"name": "setEventPeriod",
									"nameLocation": "6996:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1847,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1846,
												"mutability": "mutable",
												"name": "__eventPeriod",
												"nameLocation": "7019:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 1870,
												"src": "7011:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1845,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7011:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7010:23:7"
									},
									"returnParameters": {
										"id": 1850,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7053:0:7"
									},
									"scope": 2002,
									"src": "6987:248:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1892,
										"nodeType": "Block",
										"src": "7319:198:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1880,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1878,
																"name": "__unstakingFeeRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1872,
																"src": "7348:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1879,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7369:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7348:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420556e7374616b696e67204665652052617465",
															"id": 1881,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7372:28:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3",
																"typeString": "literal_string \"Invalid Unstaking Fee Rate\""
															},
															"value": "Invalid Unstaking Fee Rate"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3",
																"typeString": "literal_string \"Invalid Unstaking Fee Rate\""
															}
														],
														"id": 1877,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7340:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1882,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7340:61:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1883,
												"nodeType": "ExpressionStatement",
												"src": "7340:61:7"
											},
											{
												"expression": {
													"id": 1886,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1884,
														"name": "_unstakingFeeRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1160,
														"src": "7414:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1885,
														"name": "__unstakingFeeRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1872,
														"src": "7434:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7414:38:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1887,
												"nodeType": "ExpressionStatement",
												"src": "7414:38:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1889,
															"name": "__unstakingFeeRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1872,
															"src": "7490:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1888,
														"name": "SetUnstakingFeeRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1217,
														"src": "7470:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1890,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7470:39:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1891,
												"nodeType": "EmitStatement",
												"src": "7465:44:7"
											}
										]
									},
									"functionSelector": "91e07e7a",
									"id": 1893,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1875,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1874,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "7309:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "7309:9:7"
										}
									],
									"name": "setUnstakingFeeRate",
									"nameLocation": "7252:19:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1873,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1872,
												"mutability": "mutable",
												"name": "__unstakingFeeRate",
												"nameLocation": "7280:18:7",
												"nodeType": "VariableDeclaration",
												"scope": 1893,
												"src": "7272:26:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1871,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7272:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7271:28:7"
									},
									"returnParameters": {
										"id": 1876,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7319:0:7"
									},
									"scope": 2002,
									"src": "7243:274:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1911,
										"nodeType": "Block",
										"src": "7587:108:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1903,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1901,
																"name": "lockupTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1895,
																"src": "7608:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1902,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7621:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7608:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e2774206265207a65726f",
															"id": 1904,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7624:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2",
																"typeString": "literal_string \"Can't be zero\""
															},
															"value": "Can't be zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2",
																"typeString": "literal_string \"Can't be zero\""
															}
														],
														"id": 1900,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7600:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1905,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7600:40:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1906,
												"nodeType": "ExpressionStatement",
												"src": "7600:40:7"
											},
											{
												"expression": {
													"id": 1909,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1907,
														"name": "_lockupPeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1168,
														"src": "7661:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1908,
														"name": "lockupTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1895,
														"src": "7677:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7661:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1910,
												"nodeType": "ExpressionStatement",
												"src": "7661:26:7"
											}
										]
									},
									"functionSelector": "4b62b70b",
									"id": 1912,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1898,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1897,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "7577:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "7577:9:7"
										}
									],
									"name": "setLockupTime",
									"nameLocation": "7534:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1896,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1895,
												"mutability": "mutable",
												"name": "lockupTime",
												"nameLocation": "7556:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1912,
												"src": "7548:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1894,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7548:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7547:20:7"
									},
									"returnParameters": {
										"id": 1899,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7587:0:7"
									},
									"scope": 2002,
									"src": "7525:170:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1923,
										"nodeType": "Block",
										"src": "7814:103:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 1917,
															"name": "_staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1182,
															"src": "7870:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
															}
														},
														"id": 1920,
														"indexExpression": {
															"expression": {
																"id": 1918,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7878:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1919,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7878:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7870:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$1158_storage",
															"typeString": "struct StakingPlatform.Staker storage ref"
														}
													},
													"id": 1921,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "stakerCurrentReward",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1147,
													"src": "7870:39:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1916,
												"id": 1922,
												"nodeType": "Return",
												"src": "7863:46:7"
											}
										]
									},
									"functionSelector": "5d2ec65d",
									"id": 1924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "rewardToHarvest",
									"nameLocation": "7767:15:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1913,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7782:2:7"
									},
									"returnParameters": {
										"id": 1916,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1915,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1924,
												"src": "7806:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1914,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7806:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7805:9:7"
									},
									"scope": 2002,
									"src": "7758:159:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2000,
										"nodeType": "Block",
										"src": "7983:550:7",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1927,
														"name": "updateReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1345,
														"src": "8004:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1928,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8004:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1929,
												"nodeType": "ExpressionStatement",
												"src": "8004:14:7"
											},
											{
												"assignments": [
													1931
												],
												"declarations": [
													{
														"constant": false,
														"id": 1931,
														"mutability": "mutable",
														"name": "rewardToClaim",
														"nameLocation": "8037:13:7",
														"nodeType": "VariableDeclaration",
														"scope": 2000,
														"src": "8029:21:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1930,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8029:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1950,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "316534",
																	"id": 1947,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8161:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10000_by_1",
																		"typeString": "int_const 10000"
																	},
																	"value": "1e4"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_10000_by_1",
																		"typeString": "int_const 10000"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 1944,
																			"name": "_rewardFeeRate",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1166,
																			"src": "8141:14:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"baseExpression": {
																					"id": 1938,
																					"name": "_staker",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1182,
																					"src": "8097:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																						"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																					}
																				},
																				"id": 1941,
																				"indexExpression": {
																					"expression": {
																						"id": 1939,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "8105:3:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 1940,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "8105:10:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "8097:19:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Staker_$1158_storage",
																					"typeString": "struct StakingPlatform.Staker storage ref"
																				}
																			},
																			"id": 1942,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "stakerCurrentReward",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1147,
																			"src": "8097:39:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1943,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 705,
																		"src": "8097:43:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1945,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8097:59:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1946,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 720,
																"src": "8097:63:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1948,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8097:68:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"baseExpression": {
																	"id": 1932,
																	"name": "_staker",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1182,
																	"src": "8053:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																		"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																	}
																},
																"id": 1935,
																"indexExpression": {
																	"expression": {
																		"id": 1933,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "8061:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1934,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "8061:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8053:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Staker_$1158_storage",
																	"typeString": "struct StakingPlatform.Staker storage ref"
																}
															},
															"id": 1936,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "stakerCurrentReward",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1147,
															"src": "8053:39:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1937,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 690,
														"src": "8053:43:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1949,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8053:113:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8029:137:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1954,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1952,
																"name": "rewardToClaim",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1931,
																"src": "8195:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1953,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8211:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8195:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7468696e6720746f20636c61696d",
															"id": 1955,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8214:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3",
																"typeString": "literal_string \"Nothing to claim\""
															},
															"value": "Nothing to claim"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3",
																"typeString": "literal_string \"Nothing to claim\""
															}
														],
														"id": 1951,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8187:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1956,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8187:46:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1957,
												"nodeType": "ExpressionStatement",
												"src": "8187:46:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1966,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1958,
														"name": "rewardToClaim",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1931,
														"src": "8248:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1963,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "8288:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_StakingPlatform_$2002",
																			"typeString": "contract StakingPlatform"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_StakingPlatform_$2002",
																			"typeString": "contract StakingPlatform"
																		}
																	],
																	"id": 1962,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8280:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1961,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8280:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 1964,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8280:13:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 1959,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1187,
																"src": "8264:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IBEP20_$912",
																	"typeString": "contract IBEP20"
																}
															},
															"id": 1960,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 851,
															"src": "8264:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 1965,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8264:30:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8248:46:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1977,
												"nodeType": "IfStatement",
												"src": "8244:111:7",
												"trueBody": {
													"expression": {
														"id": 1975,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1967,
															"name": "rewardToClaim",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1931,
															"src": "8309:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1972,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "8349:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_StakingPlatform_$2002",
																				"typeString": "contract StakingPlatform"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_StakingPlatform_$2002",
																				"typeString": "contract StakingPlatform"
																			}
																		],
																		"id": 1971,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8341:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1970,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8341:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1973,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8341:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1968,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1187,
																	"src": "8325:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IBEP20_$912",
																		"typeString": "contract IBEP20"
																	}
																},
																"id": 1969,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 851,
																"src": "8325:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 1974,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8325:30:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "8309:46:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1976,
													"nodeType": "ExpressionStatement",
													"src": "8309:46:7"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1981,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8385:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1982,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8385:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1983,
															"name": "rewardToClaim",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1931,
															"src": "8397:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1978,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1187,
															"src": "8366:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															}
														},
														"id": 1980,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 946,
														"src": "8366:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$912_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IBEP20_$912_$",
															"typeString": "function (contract IBEP20,address,uint256)"
														}
													},
													"id": 1984,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8366:45:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1985,
												"nodeType": "ExpressionStatement",
												"src": "8366:45:7"
											},
											{
												"expression": {
													"id": 1992,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1986,
																"name": "_staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1182,
																"src": "8422:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																	"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																}
															},
															"id": 1989,
															"indexExpression": {
																"expression": {
																	"id": 1987,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "8430:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1988,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "8430:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8422:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1158_storage",
																"typeString": "struct StakingPlatform.Staker storage ref"
															}
														},
														"id": 1990,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "stakerCurrentReward",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1147,
														"src": "8422:39:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1991,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8464:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8422:43:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1993,
												"nodeType": "ExpressionStatement",
												"src": "8422:43:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1995,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8499:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1996,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8499:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1997,
															"name": "rewardToClaim",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1931,
															"src": "8511:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1994,
														"name": "Harvest",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1199,
														"src": "8491:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1998,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8491:34:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1999,
												"nodeType": "EmitStatement",
												"src": "8486:39:7"
											}
										]
									},
									"functionSelector": "4641257d",
									"id": 2001,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "harvest",
									"nameLocation": "7967:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1925,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7974:2:7"
									},
									"returnParameters": {
										"id": 1926,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7983:0:7"
									},
									"scope": 2002,
									"src": "7958:575:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 2003,
							"src": "260:8276:7",
							"usedErrors": []
						}
					],
					"src": "33:8505:7"
				},
				"id": 7
			}
		}
	}
}