{
	"id": "75cbc33f2b827511cf3afdb124db0f5d",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.9",
	"solcLongVersion": "0.8.9+commit.e5eed63a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Staking.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.4;\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\nimport \"./SafeBEP20.sol\";\r\n\r\ncontract StakingPlatform is Ownable {\r\n    \r\n    using SafeMath for uint256;\r\n    using SafeBEP20 for IBEP20;\r\n    \r\n    // args for _stakers\r\n    struct Staker {\r\n        uint256 stakerCurrentReward;\r\n        uint256 stakedAmount;\r\n        uint256 mode;\r\n        uint256 stakeStartTime;\r\n        uint256 lastUpdatedTime;\r\n        uint256 staked;\r\n    }   \r\n    \r\n    // refer to CRSFANS token. Address: 0x7AD8A62451f79399c940fC1A6FE96358a80B1931\r\n    \r\n    uint256 private _unstakingFeeRate;\r\n    uint256 private _eventPeriod;\r\n    uint256 private _rewardRate;\r\n    uint256 private _rewardFeeRate;\r\n    uint256 private _lockupPeriod;\r\n    uint256 private _minStakeAmount_m;\r\n    uint256 private _minStakeAmount_g;\r\n    uint256 private _minStakeAmount_s;\r\n    uint256 private _minStakeAmount_c;\r\n    \r\n    address[] private _stakers;\r\n\r\n    mapping(address => Staker) private _staker;\r\n\r\n    // Total amount of token staked in staking pool.\r\n    uint256 public totalStaked;\r\n    IBEP20 public token;\r\n    \r\n    // Events triggered when start, stake, unstake(withdraw), get reward.\r\n    event Staked(address staker, uint256 amount);\r\n    event Harvest(address staker, uint256 rewardToClaim);\r\n    event Withdraw(address staker, uint256 amount);\r\n    event SetRewardRate(uint256 rewardRate);\r\n    event SetEventPeriod(uint256 lockupDuration);\r\n    event SetUnstakingFeeRate(uint256 unstakingFeeRate);\r\n\r\n    constructor(address _token) {\r\n        \r\n        Init();\r\n        token = IBEP20(_token);\r\n    }\r\n\r\n    function Init() internal {\r\n        \r\n        _rewardRate = 200; // per day\r\n        _unstakingFeeRate = 1500;\r\n        _rewardFeeRate = 100;\r\n        _eventPeriod = 7;\r\n        _lockupPeriod = 90;\r\n        _minStakeAmount_m = 3* 1e24;\r\n        _minStakeAmount_c = 1e24;\r\n        _minStakeAmount_s = 3 * 1e24;\r\n        _minStakeAmount_g = 7 * 1e24;\r\n    }\r\n\r\n    // Update rewards for _stakers according to deposited amount.\r\n    function updateReward() private{\r\n        \r\n        uint256 stakerStakedAmount = _staker[msg.sender].stakedAmount;\r\n        \r\n        uint256 newReward = stakerStakedAmount.mul(block.timestamp.sub(_staker[msg.sender].lastUpdatedTime)).mul(_rewardRate).div(1 minutes).div(1e4);\r\n        _staker[msg.sender].stakerCurrentReward = _staker[msg.sender].stakerCurrentReward.add(newReward);\r\n        _staker[msg.sender].lastUpdatedTime = block.timestamp;\r\n    }\r\n    \r\n    function startStaking(uint256 _amount, uint256 _mode) external {\r\n        \r\n        require(_amount > 0, \"Amount should be greater than 0\");\r\n        require(token.balanceOf(msg.sender) > _amount, \"Insufficient!\");\r\n        require(isLocked(msg.sender) == 0, \"Can't start\");\r\n        \r\n        if (_mode == 0) require(_amount >= _minStakeAmount_m, \"Insufficient\");\r\n        else if (_mode == 1) require(_amount >= _minStakeAmount_c, \"Insufficient\");\r\n        else if (_mode == 2) require(_amount >= _minStakeAmount_s, \"Insufficient\");\r\n        else if (_mode == 3) require(_amount >= _minStakeAmount_g, \"Insufficient\");\r\n        else require(_amount < 0, \"Invalid Mode\");\r\n        \r\n        _staker[msg.sender].mode = _mode;\r\n        _staker[msg.sender].stakeStartTime = block.timestamp;\r\n        _staker[msg.sender].staked = 55;\r\n        _stakers.push(msg.sender);\r\n        stake(_amount);\r\n    }\r\n    \r\n    // Staker tries to stake specific amount of token.\r\n    function stake(uint256 _amount) public{\r\n        \r\n        require(_amount > 0, \"Amount should be greater than 0\");\r\n        require(token.balanceOf(msg.sender) > _amount, \"Insufficient!\");\r\n        require(_staker[msg.sender].staked == 55, \"Error: invalid staker\");\r\n        \r\n        updateReward();\r\n        \r\n        token.safeTransferFrom(msg.sender, address(this), _amount);\r\n        _staker[msg.sender].stakedAmount = _staker[msg.sender].stakedAmount.add(_amount);\r\n        totalStaked = totalStaked.add(_amount);\r\n        \r\n        emit Staked(msg.sender, _amount);\r\n    }\r\n\r\n    function getTotalStaked() public view returns (uint256) {\r\n\r\n        return totalStaked;\r\n    }\r\n\r\n    function getNumberofStakers() public view returns (uint256) {\r\n\r\n        return _stakers.length;\r\n    }\r\n\r\n    function getStakerMode(address _address) public view returns (uint256) {\r\n\r\n        require(isStartStaking(_address) == 55, \"Not staker yet\");\r\n        return _staker[_address].mode;\r\n    }\r\n    \r\n    function isStartStaking(address _address) public view returns (uint256) {\r\n\r\n        return _staker[_address].staked;\r\n    }\r\n\r\n    function isLocked(address _address) public view returns (uint256) {\r\n\r\n        if (_staker[_address].staked != 55)\r\n            return 0;\r\n        if (_staker[_address].mode != 0)\r\n            return block.timestamp.sub(_staker[_address].stakeStartTime).div(1 days) % 7 == 0 ? 0 : 1;\r\n        else \r\n            return block.timestamp.sub(_staker[_address].stakeStartTime) >= _lockupPeriod.mul(1 days) ? 0 : 1;\r\n    }\r\n    \r\n    function stakedAmount(address _address) public view returns (uint256) {\r\n        \r\n        return _staker[_address].stakedAmount;\r\n    }\r\n\r\n    function getRewardRate() public view returns (uint256) {\r\n\r\n        return _rewardRate;\r\n    }\r\n\r\n    function lockupPeriod(uint256 mode) public view returns (uint256) {\r\n        \r\n        if (mode == 0) return _lockupPeriod;\r\n        return _eventPeriod;\r\n    }\r\n\r\n    function eventPeriod() public view returns (uint256) {\r\n        \r\n        return _eventPeriod;\r\n    }\r\n\r\n    function unstakingFeeLate() public view returns (uint256) {\r\n\r\n        return _unstakingFeeRate;\r\n    }\r\n\r\n    // Amount of reward staker can be guaranteed.\r\n    function rewardToHarvest(address _address) public view returns (uint256){\r\n        \r\n        uint256 stakerStakedAmount = _staker[_address].stakedAmount;\r\n        uint256 newReward = stakerStakedAmount.mul(block.timestamp.sub(_staker[_address].lastUpdatedTime)).mul(_rewardRate).div(1 days).div(1e4);\r\n        \r\n        return _staker[msg.sender].stakerCurrentReward + newReward;\r\n    }\r\n\r\n    // Withdraw some of token staked.\r\n    function withdraw(uint256 amount) external{\r\n        \r\n        require(amount > 0, \"Amount should be greater than 0\");\r\n        require(amount <= _staker[msg.sender].stakedAmount, \"Invalid amount\");\r\n\r\n        updateReward();\r\n        uint256 amountTobeWithdrawn = amount;\r\n        uint256 during = block.timestamp.sub(_staker[msg.sender].stakeStartTime).div(1 days);\r\n        uint256 fee = 100;\r\n        bool isLockupTimeOver = _staker[msg.sender].mode != 0 ? during % _eventPeriod == 0 && during > 0 :\r\n            block.timestamp >= _staker[msg.sender].stakeStartTime.add(_lockupPeriod.mul(1 days));\r\n        if (!isLockupTimeOver) {\r\n            fee = _unstakingFeeRate;\r\n        }\r\n        _staker[msg.sender].stakedAmount = _staker[msg.sender].stakedAmount.sub(amountTobeWithdrawn);\r\n        totalStaked = totalStaked.sub(amountTobeWithdrawn);\r\n        amountTobeWithdrawn = amountTobeWithdrawn.sub(amountTobeWithdrawn.mul(fee).div(1e4));\r\n        token.safeTransfer(msg.sender, amountTobeWithdrawn);\r\n\r\n        emit Withdraw(msg.sender, amountTobeWithdrawn);\r\n    }\r\n    \r\n    function setRewardRate(uint256 __rewardRate) external onlyOwner {\r\n        \r\n        require(__rewardRate > 0, \"Invalid value\");\r\n        \r\n        _rewardRate = __rewardRate;\r\n\r\n        emit SetRewardRate(__rewardRate);\r\n    }\r\n\r\n    function setEventPeriod(uint256 __eventPeriod) external onlyOwner {\r\n        \r\n        require(__eventPeriod > 0, \"Invalid Lockup Duration\");\r\n\r\n        _eventPeriod = __eventPeriod;\r\n\r\n        emit SetEventPeriod(__eventPeriod);\r\n    }\r\n\r\n    function setUnstakingFeeRate(uint256 __unstakingFeeRate) external onlyOwner {\r\n        \r\n        require(__unstakingFeeRate > 0, \"Invalid Unstaking Fee Rate\");\r\n\r\n        _unstakingFeeRate = __unstakingFeeRate;\r\n\r\n        emit SetUnstakingFeeRate(__unstakingFeeRate);\r\n    }\r\n\r\n    function setLockupTime(uint256 lockupTime) external onlyOwner {\r\n        \r\n        require(lockupTime > 0, \"Can't be zero\");\r\n        \r\n        _lockupPeriod = lockupTime;\r\n    }\r\n\r\n    function setThreeMonthMinAmount(uint256 _minAmount) external onlyOwner {\r\n        \r\n        require (_minAmount > 0, \"Can't be zero\");\r\n\r\n        _minStakeAmount_m = _minAmount;\r\n    }\r\n    \r\n    function setCopperMinAmount(uint256 _minAmount) external onlyOwner {\r\n\r\n        require (_minAmount > 0, \"Can't be zero\");\r\n\r\n        _minStakeAmount_c = _minAmount;\r\n    }\r\n\r\n    function setSilverMinAmount(uint256 _minAmount) external onlyOwner {\r\n\r\n        require (_minAmount > 0, \"Can't be zero\");\r\n\r\n        _minStakeAmount_s = _minAmount;\r\n    }\r\n\r\n    function setGoldMinAmount(uint256 _minAmount) external onlyOwner {\r\n\r\n        require (_minAmount > 0, \"Can't be zero\");\r\n        \r\n        _minStakeAmount_g = _minAmount;\r\n    }\r\n    \r\n    // Get reward of msg.sender\r\n    function harvest() public{\r\n        \r\n        updateReward();\r\n        \r\n        uint256 curReward = _staker[msg.sender].stakerCurrentReward;\r\n        uint256 rewardToClaim = curReward.sub(curReward.mul(_rewardFeeRate).div(1e4));\r\n        \r\n        require(rewardToClaim > 0, \"Nothing to claim\");\r\n        if (rewardToClaim > token.balanceOf(address(this)))\r\n            rewardToClaim = token.balanceOf(address(this));\r\n        token.safeTransfer(msg.sender, rewardToClaim);\r\n        _staker[msg.sender].stakerCurrentReward = 0;\r\n        \r\n        emit Harvest(msg.sender, rewardToClaim);\r\n    }\r\n\r\n    function getMinimumStakingAmount(uint256 _mode) public view returns (uint256) {\r\n        \r\n        uint256 _minStakeAmount = 0;\r\n\r\n        if (_mode == 0 || _mode == 2) _minStakeAmount = _minStakeAmount_m;\r\n        else if (_mode == 1) _minStakeAmount = _minStakeAmount_c;\r\n        else if (_mode == 3) _minStakeAmount = _minStakeAmount_g;\r\n        else require (0 > 1, \"Invalid Mode\");\r\n\r\n        return _minStakeAmount;\r\n    }\r\n}\r\n"
			},
			"contracts/SafeBEP20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.4;\r\n\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\nimport \"@openzeppelin/contracts/utils/Address.sol\";\r\nimport \"./IBEP20.sol\";\r\n\r\nlibrary SafeBEP20 {\r\n    using SafeMath for uint256;\r\n    using Address for address;\r\n\r\n    function safeTransfer(IBEP20 token, address to, uint256 value) internal {\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\r\n    }\r\n\r\n    function safeTransferFrom(IBEP20 token, address from, address to, uint256 value) internal {\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\r\n    }\r\n\r\n    /**\r\n     * @dev Deprecated. This function has issues similar to the ones found in\r\n     * {IBEP20-approve}, and its usage is discouraged.\r\n     *\r\n     * Whenever possible, use {safeIncreaseAllowance} and\r\n     * {safeDecreaseAllowance} instead.\r\n     */\r\n    function safeApprove(IBEP20 token, address spender, uint256 value) internal {\r\n        // safeApprove should only be called when setting an initial allowance,\r\n        // or when resetting it to zero. To increase and decrease it, use\r\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\r\n        // solhint-disable-next-line max-line-length\r\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\r\n            \"SafeBEP20: approve from non-zero to non-zero allowance\"\r\n        );\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\r\n    }\r\n\r\n    function safeIncreaseAllowance(IBEP20 token, address spender, uint256 value) internal {\r\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\r\n    }\r\n\r\n    function safeDecreaseAllowance(IBEP20 token, address spender, uint256 value) internal {\r\n        uint256 newAllowance = token.allowance(address(this), spender).sub(value, \"SafeBEP20: decreased allowance below zero\");\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\r\n    }\r\n    \r\n    /**\r\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\r\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\r\n     * @param token The token targeted by the call.\r\n     * @param data The call data (encoded using abi.encode or one of its variants).\r\n     */\r\n    function _callOptionalReturn(IBEP20 token, bytes memory data) private {\r\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\r\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\r\n        // the target address contains contract code and also asserts for success in the low-level call.\r\n        \r\n        bytes memory returndata = address(token).functionCall(data, \"SafeBEP20: low-level call failed\");\r\n        if (returndata.length > 0) { // Return data is optional\r\n            // solhint-disable-next-line max-line-length\r\n            require(abi.decode(returndata, (bool)), \"SafeBEP20: BEP20 operation did not succeed\");\r\n        }\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"contracts/IBEP20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\ninterface IBEP20 {\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the token decimals.\r\n     */\r\n    function decimals() external view returns (uint8);\r\n\r\n    /**\r\n     * @dev Returns the token symbol.\r\n     */\r\n    function symbol() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the token name.\r\n     */\r\n    function name() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the bep token owner.\r\n     */\r\n    function getOwner() external view returns (address);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address _owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT:  Beware that changingan allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":194:8255  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":194:8255  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220de4c7be6b8589acbf5f63b9e86dcb90806b931fe0b5ceedb00dfd9183e5e8a1064736f6c63430008090033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220de4c7be6b8589acbf5f63b9e86dcb90806b931fe0b5ceedb00dfd9183e5e8a1064736f6c63430008090033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDE 0x4C PUSH28 0xE6B8589ACBF5F63B9E86DCB90806B931FE0B5CEEDB00DFD9183E5E8A LT PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ",
							"sourceMap": "194:8061:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220de4c7be6b8589acbf5f63b9e86dcb90806b931fe0b5ceedb00dfd9183e5e8a1064736f6c63430008090033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDE 0x4C PUSH28 0xE6B8589ACBF5F63B9E86DCB90806B931FE0B5CEEDB00DFD9183E5E8A LT PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ",
							"sourceMap": "194:8061:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220de4c7be6b8589acbf5f63b9e86dcb90806b931fe0b5ceedb00dfd9183e5e8a1064736f6c63430008090033",
									".code": [
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":467:6768  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":467:6768  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220ac86573c17e9dfe964dd12c44ce60777e5034c6b6ecd4d605a8898eb29a2c7a064736f6c63430008090033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ac86573c17e9dfe964dd12c44ce60777e5034c6b6ecd4d605a8898eb29a2c7a064736f6c63430008090033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAC DUP7 JUMPI EXTCODECOPY OR 0xE9 0xDF 0xE9 PUSH5 0xDD12C44CE6 SMOD PUSH24 0xE5034C6B6ECD4D605A8898EB29A2C7A064736F6C63430008 MULMOD STOP CALLER ",
							"sourceMap": "467:6301:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ac86573c17e9dfe964dd12c44ce60777e5034c6b6ecd4d605a8898eb29a2c7a064736f6c63430008090033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAC DUP7 JUMPI EXTCODECOPY OR 0xE9 0xDF 0xE9 PUSH5 0xDD12C44CE6 SMOD PUSH24 0xE5034C6B6ECD4D605A8898EB29A2C7A064736F6C63430008 MULMOD STOP CALLER ",
							"sourceMap": "467:6301:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ac86573c17e9dfe964dd12c44ce60777e5034c6b6ecd4d605a8898eb29a2c7a064736f6c63430008090033",
									".code": [
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/IBEP20.sol": {
				"IBEP20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT:  Beware that changingan allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"getOwner()": {
								"details": "Returns the bep token owner."
							},
							"name()": {
								"details": "Returns the token name."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"getOwner()": "893d20e8",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT:  Beware that changingan allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"name()\":{\"details\":\"Returns the token name.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IBEP20.sol\":\"IBEP20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IBEP20.sol\":{\"keccak256\":\"0xe10557d770e08d0867c7d7f45f4ecc3aa71fab37aec10f03deac873774d83958\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29c5d9f242fe719f9c99293f895de2c62b11990dcb76b0c5fe29d4bb20debd36\",\"dweb:/ipfs/QmcxmgSN37RwVYQ6uVyyksA7q9rbs7ZfAGxLg9ZAqetzVc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/SafeBEP20.sol": {
				"SafeBEP20": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/SafeBEP20.sol\":198:3371  library SafeBEP20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/SafeBEP20.sol\":198:3371  library SafeBEP20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220095e643ac96b281fbd788b15b344ef7b13b62c3d26785f5881c8b550cb0a076064736f6c63430008090033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220095e643ac96b281fbd788b15b344ef7b13b62c3d26785f5881c8b550cb0a076064736f6c63430008090033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MULMOD 0x5E PUSH5 0x3AC96B281F 0xBD PUSH25 0x8B15B344EF7B13B62C3D26785F5881C8B550CB0A076064736F PUSH13 0x63430008090033000000000000 ",
							"sourceMap": "198:3173:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220095e643ac96b281fbd788b15b344ef7b13b62c3d26785f5881c8b550cb0a076064736f6c63430008090033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MULMOD 0x5E PUSH5 0x3AC96B281F 0xBD PUSH25 0x8B15B344EF7B13B62C3D26785F5881C8B550CB0A076064736F PUSH13 0x63430008090033000000000000 ",
							"sourceMap": "198:3173:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IBEP20,bytes memory)": "infinite",
								"safeApprove(contract IBEP20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IBEP20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IBEP20,address,uint256)": "infinite",
								"safeTransfer(contract IBEP20,address,uint256)": "infinite",
								"safeTransferFrom(contract IBEP20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220095e643ac96b281fbd788b15b344ef7b13b62c3d26785f5881c8b550cb0a076064736f6c63430008090033",
									".code": [
										{
											"begin": 198,
											"end": 3371,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 198,
											"end": 3371,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 198,
											"end": 3371,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 198,
											"end": 3371,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 198,
											"end": 3371,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 198,
											"end": 3371,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 198,
											"end": 3371,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 198,
											"end": 3371,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 198,
											"end": 3371,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SafeBEP20.sol\":\"SafeBEP20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]},\"contracts/IBEP20.sol\":{\"keccak256\":\"0xe10557d770e08d0867c7d7f45f4ecc3aa71fab37aec10f03deac873774d83958\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29c5d9f242fe719f9c99293f895de2c62b11990dcb76b0c5fe29d4bb20debd36\",\"dweb:/ipfs/QmcxmgSN37RwVYQ6uVyyksA7q9rbs7ZfAGxLg9ZAqetzVc\"]},\"contracts/SafeBEP20.sol\":{\"keccak256\":\"0x6ddb1e1687ec39379d8d51c1dd37f9fc5bdbcf76d13b12bb2ef97218f17af728\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c317daa7645bea9fb8926f04a64e9dda06454035d35dd618fb8865bead0b343\",\"dweb:/ipfs/QmcGbnJ9k7RVUBh5HyHxzV7u52hykYsHKqi7VRWSLvEjrG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Staking.sol": {
				"StakingPlatform": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "staker",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "rewardToClaim",
									"type": "uint256"
								}
							],
							"name": "Harvest",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "lockupDuration",
									"type": "uint256"
								}
							],
							"name": "SetEventPeriod",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "rewardRate",
									"type": "uint256"
								}
							],
							"name": "SetRewardRate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "unstakingFeeRate",
									"type": "uint256"
								}
							],
							"name": "SetUnstakingFeeRate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "staker",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Staked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "staker",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdraw",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "eventPeriod",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_mode",
									"type": "uint256"
								}
							],
							"name": "getMinimumStakingAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getNumberofStakers",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getRewardRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "getStakerMode",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTotalStaked",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "harvest",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "isLocked",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "isStartStaking",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "mode",
									"type": "uint256"
								}
							],
							"name": "lockupPeriod",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "rewardToHarvest",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_minAmount",
									"type": "uint256"
								}
							],
							"name": "setCopperMinAmount",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "__eventPeriod",
									"type": "uint256"
								}
							],
							"name": "setEventPeriod",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_minAmount",
									"type": "uint256"
								}
							],
							"name": "setGoldMinAmount",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "lockupTime",
									"type": "uint256"
								}
							],
							"name": "setLockupTime",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "__rewardRate",
									"type": "uint256"
								}
							],
							"name": "setRewardRate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_minAmount",
									"type": "uint256"
								}
							],
							"name": "setSilverMinAmount",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_minAmount",
									"type": "uint256"
								}
							],
							"name": "setThreeMonthMinAmount",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "__unstakingFeeRate",
									"type": "uint256"
								}
							],
							"name": "setUnstakingFeeRate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "stakedAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_mode",
									"type": "uint256"
								}
							],
							"name": "startStaking",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "contract IBEP20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalStaked",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unstakingFeeLate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Staking.sol\":260:10157  contract StakingPlatform is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Staking.sol\":1666:1762  constructor(address _token) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  tag_7\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":940:952  _msgSender() */\n  tag_8\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":940:950  _msgSender */\n  shl(0x20, tag_9)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":940:952  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:939  _transferOwnership */\n  shl(0x20, tag_10)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_7:\n    /* \"contracts/Staking.sol\":1715:1721  Init() */\n  tag_12\n    /* \"contracts/Staking.sol\":1715:1719  Init */\n  shl(0x20, tag_13)\n    /* \"contracts/Staking.sol\":1715:1721  Init() */\n  0x20\n  shr\n  jump\t// in\ntag_12:\n    /* \"contracts/Staking.sol\":1747:1753  _token */\n  dup1\n    /* \"contracts/Staking.sol\":1732:1737  token */\n  0x0d\n  0x00\n    /* \"contracts/Staking.sol\":1732:1754  token = IBEP20(_token) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Staking.sol\":1666:1762  constructor(address _token) {... */\n  pop\n    /* \"contracts/Staking.sol\":260:10157  contract StakingPlatform is Ownable {... */\n  jump(tag_14)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_9:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2368  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2387:2395  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2384  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2441:2449  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2431:2439  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"contracts/Staking.sol\":1770:2125  function Init() internal {... */\ntag_13:\n    /* \"contracts/Staking.sol\":1830:1833  200 */\n  0xc8\n    /* \"contracts/Staking.sol\":1816:1827  _rewardRate */\n  0x03\n    /* \"contracts/Staking.sol\":1816:1833  _rewardRate = 200 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Staking.sol\":1875:1879  1500 */\n  0x05dc\n    /* \"contracts/Staking.sol\":1855:1872  _unstakingFeeRate */\n  0x01\n    /* \"contracts/Staking.sol\":1855:1879  _unstakingFeeRate = 1500 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Staking.sol\":1907:1910  100 */\n  0x64\n    /* \"contracts/Staking.sol\":1890:1904  _rewardFeeRate */\n  0x04\n    /* \"contracts/Staking.sol\":1890:1910  _rewardFeeRate = 100 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Staking.sol\":1936:1937  7 */\n  0x07\n    /* \"contracts/Staking.sol\":1921:1933  _eventPeriod */\n  0x02\n    /* \"contracts/Staking.sol\":1921:1937  _eventPeriod = 7 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Staking.sol\":1964:1966  90 */\n  0x5a\n    /* \"contracts/Staking.sol\":1948:1961  _lockupPeriod */\n  0x05\n    /* \"contracts/Staking.sol\":1948:1966  _lockupPeriod = 90 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Staking.sol\":1997:2004  3* 1e24 */\n  0x027b46536c66c8e3000000\n    /* \"contracts/Staking.sol\":1977:1994  _minStakeAmount_m */\n  0x06\n    /* \"contracts/Staking.sol\":1977:2004  _minStakeAmount_m = 3* 1e24 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Staking.sol\":2035:2039  1e24 */\n  0xd3c21bcecceda1000000\n    /* \"contracts/Staking.sol\":2015:2032  _minStakeAmount_c */\n  0x09\n    /* \"contracts/Staking.sol\":2015:2039  _minStakeAmount_c = 1e24 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Staking.sol\":2070:2078  3 * 1e24 */\n  0x027b46536c66c8e3000000\n    /* \"contracts/Staking.sol\":2050:2067  _minStakeAmount_s */\n  0x08\n    /* \"contracts/Staking.sol\":2050:2078  _minStakeAmount_s = 3 * 1e24 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Staking.sol\":2109:2117  7 * 1e24 */\n  0x05ca4ec2a79a7f67000000\n    /* \"contracts/Staking.sol\":2089:2106  _minStakeAmount_g */\n  0x07\n    /* \"contracts/Staking.sol\":2089:2117  _minStakeAmount_g = 7 * 1e24 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Staking.sol\":1770:2125  function Init() internal {... */\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_19:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_21:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_22:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_31\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_21\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_23:\n    /* \"#utility.yul\":641:665   */\n  tag_33\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_22\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_34\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_34:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_24:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_36\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_23\n  jump\t// in\ntag_36:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_38\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_39\n  tag_19\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":932:1051   */\ntag_38:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_40\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_24\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/Staking.sol\":260:10157  contract StakingPlatform is Ownable {... */\ntag_14:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Staking.sol\":260:10157  contract StakingPlatform is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x817b1cd2\n      gt\n      tag_32\n      jumpi\n      dup1\n      0xaedf562b\n      gt\n      tag_33\n      jumpi\n      dup1\n      0xf2fde38b\n      gt\n      tag_34\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xf9931855\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xfc0c546a\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xfe600f84\n      eq\n      tag_31\n      jumpi\n      jump(tag_2)\n    tag_34:\n      dup1\n      0xaedf562b\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xc1704a14\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xc665d80e\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xce34751f\n      eq\n      tag_27\n      jumpi\n      jump(tag_2)\n    tag_33:\n      dup1\n      0x91e07e7a\n      gt\n      tag_35\n      jumpi\n      dup1\n      0x91e07e7a\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x9e447fc6\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xa694fc3a\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xae544943\n      eq\n      tag_23\n      jumpi\n      jump(tag_2)\n    tag_35:\n      dup1\n      0x817b1cd2\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x909f093e\n      eq\n      tag_19\n      jumpi\n      jump(tag_2)\n    tag_32:\n      dup1\n      0x4b62b70b\n      gt\n      tag_36\n      jumpi\n      dup1\n      0x692642e7\n      gt\n      tag_37\n      jumpi\n      dup1\n      0x692642e7\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x6ef32435\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x7e1a3786\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_37:\n      dup1\n      0x4b62b70b\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x4b77dd9e\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x5715ec11\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_36:\n      dup1\n      0x23b61117\n      gt\n      tag_38\n      jumpi\n      dup1\n      0x23b61117\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x4641257d\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x4a4fbeec\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_38:\n      dup1\n      0x0917e776\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x18b2367e\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x221dfe03\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Staking.sol\":4219:4314  function getTotalStaked() public view returns (uint256) {... */\n    tag_3:\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":5609:5710  function eventPeriod() public view returns (uint256) {... */\n    tag_4:\n      tag_43\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":5718:5821  function unstakingFeeLate() public view returns (uint256) {... */\n    tag_5:\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":8720:8892  function setSilverMinAmount(uint256 _minAmount) external onlyOwner {... */\n    tag_6:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n    tag_49:\n      stop\n        /* \"contracts/Staking.sol\":6313:7385  function withdraw(uint256 amount) external{... */\n    tag_7:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_54:\n      tag_55\n      jump\t// in\n    tag_53:\n      stop\n        /* \"contracts/Staking.sol\":9123:9718  function harvest() public{... */\n    tag_8:\n      tag_56\n      tag_57\n      jump\t// in\n    tag_56:\n      stop\n        /* \"contracts/Staking.sol\":4766:5183  function isLocked(address _address) public view returns (uint256) {... */\n    tag_9:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":8158:8336  function setLockupTime(uint256 lockupTime) external onlyOwner {... */\n    tag_10:\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_64\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_64:\n      tag_65\n      jump\t// in\n    tag_63:\n      stop\n        /* \"contracts/Staking.sol\":2666:3563  function startStaking(uint256 _amount, uint256 _mode) external {... */\n    tag_11:\n      tag_66\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_67\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n      tag_69\n      jump\t// in\n    tag_66:\n      stop\n        /* \"contracts/Staking.sol\":4322:4425  function getNumberofStakers() public view returns (uint256) {... */\n    tag_12:\n      tag_70\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_72\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":7632:7868  function setEventPeriod(uint256 __eventPeriod) external onlyOwner {... */\n    tag_13:\n      tag_73\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_74\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_74:\n      tag_75\n      jump\t// in\n    tag_73:\n      stop\n        /* \"contracts/Staking.sol\":5880:6266  function rewardToHarvest(address _address) public view returns (uint256){... */\n    tag_14:\n      tag_76\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_77\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_77:\n      tag_78\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      tag_79\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_15:\n      tag_80\n      tag_81\n      jump\t// in\n    tag_80:\n      stop\n        /* \"contracts/Staking.sol\":5339:5433  function getRewardRate() public view returns (uint256) {... */\n    tag_16:\n      tag_82\n      tag_83\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      tag_84\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":1206:1232  uint256 public totalStaked */\n    tag_17:\n      tag_85\n      tag_86\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      tag_87\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_18:\n      tag_88\n      tag_89\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      tag_90\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":9726:10154  function getMinimumStakingAmount(uint256 _mode) public view returns (uint256) {... */\n    tag_19:\n      tag_92\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_93\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_93:\n      tag_94\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      tag_95\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":7876:8150  function setUnstakingFeeRate(uint256 __unstakingFeeRate) external onlyOwner {... */\n    tag_20:\n      tag_96\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_97\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_97:\n      tag_98\n      jump\t// in\n    tag_96:\n      stop\n        /* \"contracts/Staking.sol\":7397:7624  function setRewardRate(uint256 __rewardRate) external onlyOwner {... */\n    tag_21:\n      tag_99\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_100\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_100:\n      tag_101\n      jump\t// in\n    tag_99:\n      stop\n        /* \"contracts/Staking.sol\":3631:4211  function stake(uint256 _amount) public{... */\n    tag_22:\n      tag_102\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_103\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_103:\n      tag_104\n      jump\t// in\n    tag_102:\n      stop\n        /* \"contracts/Staking.sol\":8900:9078  function setGoldMinAmount(uint256 _minAmount) external onlyOwner {... */\n    tag_23:\n      tag_105\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_106\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_106:\n      tag_107\n      jump\t// in\n    tag_105:\n      stop\n        /* \"contracts/Staking.sol\":4433:4622  function getStakerMode(address _address) public view returns (uint256) {... */\n    tag_24:\n      tag_108\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_109\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_109:\n      tag_110\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      tag_111\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_111:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":8540:8712  function setCopperMinAmount(uint256 _minAmount) external onlyOwner {... */\n    tag_25:\n      tag_112\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_113\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_113:\n      tag_114\n      jump\t// in\n    tag_112:\n      stop\n        /* \"contracts/Staking.sol\":8344:8528  function setThreeMonthMinAmount(uint256 _minAmount) external onlyOwner {... */\n    tag_26:\n      tag_115\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_116\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_116:\n      tag_117\n      jump\t// in\n    tag_115:\n      stop\n        /* \"contracts/Staking.sol\":5441:5601  function lockupPeriod(uint256 mode) public view returns (uint256) {... */\n    tag_27:\n      tag_118\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_119\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_119:\n      tag_120\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      tag_121\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_28:\n      tag_122\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_123\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_123:\n      tag_124\n      jump\t// in\n    tag_122:\n      stop\n        /* \"contracts/Staking.sol\":5195:5331  function stakedAmount(address _address) public view returns (uint256) {... */\n    tag_29:\n      tag_125\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_126\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_126:\n      tag_127\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      tag_128\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":1239:1258  IBEP20 public token */\n    tag_30:\n      tag_129\n      tag_130\n      jump\t// in\n    tag_129:\n      mload(0x40)\n      tag_131\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_131:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":4634:4758  function isStartStaking(address _address) public view returns (uint256) {... */\n    tag_31:\n      tag_133\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_134\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_134:\n      tag_135\n      jump\t// in\n    tag_133:\n      mload(0x40)\n      tag_136\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_136:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":4219:4314  function getTotalStaked() public view returns (uint256) {... */\n    tag_40:\n        /* \"contracts/Staking.sol\":4266:4273  uint256 */\n      0x00\n        /* \"contracts/Staking.sol\":4295:4306  totalStaked */\n      sload(0x0c)\n        /* \"contracts/Staking.sol\":4288:4306  return totalStaked */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":4219:4314  function getTotalStaked() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Staking.sol\":5609:5710  function eventPeriod() public view returns (uint256) {... */\n    tag_44:\n        /* \"contracts/Staking.sol\":5653:5660  uint256 */\n      0x00\n        /* \"contracts/Staking.sol\":5690:5702  _eventPeriod */\n      sload(0x02)\n        /* \"contracts/Staking.sol\":5683:5702  return _eventPeriod */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":5609:5710  function eventPeriod() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Staking.sol\":5718:5821  function unstakingFeeLate() public view returns (uint256) {... */\n    tag_47:\n        /* \"contracts/Staking.sol\":5767:5774  uint256 */\n      0x00\n        /* \"contracts/Staking.sol\":5796:5813  _unstakingFeeRate */\n      sload(0x01)\n        /* \"contracts/Staking.sol\":5789:5813  return _unstakingFeeRate */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":5718:5821  function unstakingFeeLate() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Staking.sol\":8720:8892  function setSilverMinAmount(uint256 _minAmount) external onlyOwner {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_141\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_142\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_141:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_143\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_89\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_143:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_144\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_145\n      swap1\n      tag_146\n      jump\t// in\n    tag_145:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_144:\n        /* \"contracts/Staking.sol\":8822:8823  0 */\n      0x00\n        /* \"contracts/Staking.sol\":8809:8819  _minAmount */\n      dup2\n        /* \"contracts/Staking.sol\":8809:8823  _minAmount > 0 */\n      gt\n        /* \"contracts/Staking.sol\":8800:8841  require (_minAmount > 0, \"Can't be zero\") */\n      tag_148\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_149\n      swap1\n      tag_150\n      jump\t// in\n    tag_149:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_148:\n        /* \"contracts/Staking.sol\":8874:8884  _minAmount */\n      dup1\n        /* \"contracts/Staking.sol\":8854:8871  _minStakeAmount_s */\n      0x08\n        /* \"contracts/Staking.sol\":8854:8884  _minStakeAmount_s = _minAmount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":8720:8892  function setSilverMinAmount(uint256 _minAmount) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Staking.sol\":6313:7385  function withdraw(uint256 amount) external{... */\n    tag_55:\n        /* \"contracts/Staking.sol\":6393:6394  0 */\n      0x00\n        /* \"contracts/Staking.sol\":6384:6390  amount */\n      dup2\n        /* \"contracts/Staking.sol\":6384:6394  amount > 0 */\n      gt\n        /* \"contracts/Staking.sol\":6376:6430  require(amount > 0, \"Amount should be greater than 0\") */\n      tag_152\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_153\n      swap1\n      tag_154\n      jump\t// in\n    tag_153:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_152:\n        /* \"contracts/Staking.sol\":6459:6466  _staker */\n      0x0b\n        /* \"contracts/Staking.sol\":6459:6478  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":6467:6477  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":6459:6478  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":6459:6491  _staker[msg.sender].stakedAmount */\n      0x01\n      add\n      sload\n        /* \"contracts/Staking.sol\":6449:6455  amount */\n      dup2\n        /* \"contracts/Staking.sol\":6449:6491  amount <= _staker[msg.sender].stakedAmount */\n      gt\n      iszero\n        /* \"contracts/Staking.sol\":6441:6510  require(amount <= _staker[msg.sender].stakedAmount, \"Invalid amount\") */\n      tag_155\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_156\n      swap1\n      tag_157\n      jump\t// in\n    tag_156:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_155:\n        /* \"contracts/Staking.sol\":6523:6537  updateReward() */\n      tag_158\n        /* \"contracts/Staking.sol\":6523:6535  updateReward */\n      tag_159\n        /* \"contracts/Staking.sol\":6523:6537  updateReward() */\n      jump\t// in\n    tag_158:\n        /* \"contracts/Staking.sol\":6548:6575  uint256 amountTobeWithdrawn */\n      0x00\n        /* \"contracts/Staking.sol\":6578:6584  amount */\n      dup2\n        /* \"contracts/Staking.sol\":6548:6584  uint256 amountTobeWithdrawn = amount */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":6595:6609  uint256 during */\n      0x00\n        /* \"contracts/Staking.sol\":6612:6679  block.timestamp.sub(_staker[msg.sender].stakeStartTime).div(1 days) */\n      tag_160\n        /* \"contracts/Staking.sol\":6672:6678  1 days */\n      0x015180\n        /* \"contracts/Staking.sol\":6612:6667  block.timestamp.sub(_staker[msg.sender].stakeStartTime) */\n      tag_161\n        /* \"contracts/Staking.sol\":6632:6639  _staker */\n      0x0b\n        /* \"contracts/Staking.sol\":6632:6651  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":6640:6650  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":6632:6651  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":6632:6666  _staker[msg.sender].stakeStartTime */\n      0x03\n      add\n      sload\n        /* \"contracts/Staking.sol\":6612:6627  block.timestamp */\n      timestamp\n        /* \"contracts/Staking.sol\":6612:6631  block.timestamp.sub */\n      tag_162\n      swap1\n        /* \"contracts/Staking.sol\":6612:6667  block.timestamp.sub(_staker[msg.sender].stakeStartTime) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_161:\n        /* \"contracts/Staking.sol\":6612:6671  block.timestamp.sub(_staker[msg.sender].stakeStartTime).div */\n      tag_163\n      swap1\n        /* \"contracts/Staking.sol\":6612:6679  block.timestamp.sub(_staker[msg.sender].stakeStartTime).div(1 days) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_160:\n        /* \"contracts/Staking.sol\":6595:6679  uint256 during = block.timestamp.sub(_staker[msg.sender].stakeStartTime).div(1 days) */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":6690:6701  uint256 fee */\n      0x00\n        /* \"contracts/Staking.sol\":6704:6707  100 */\n      0x64\n        /* \"contracts/Staking.sol\":6690:6707  uint256 fee = 100 */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":6718:6739  bool isLockupTimeOver */\n      0x00\n        /* \"contracts/Staking.sol\":6770:6771  0 */\n      dup1\n        /* \"contracts/Staking.sol\":6742:6749  _staker */\n      0x0b\n        /* \"contracts/Staking.sol\":6742:6761  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":6750:6760  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":6742:6761  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":6742:6766  _staker[msg.sender].mode */\n      0x02\n      add\n      sload\n        /* \"contracts/Staking.sol\":6742:6771  _staker[msg.sender].mode != 0 */\n      eq\n      iszero\n        /* \"contracts/Staking.sol\":6742:6914  _staker[msg.sender].mode != 0 ? during % _eventPeriod == 0 && during > 0 :... */\n      tag_164\n      jumpi\n        /* \"contracts/Staking.sol\":6849:6914  _staker[msg.sender].stakeStartTime.add(_lockupPeriod.mul(1 days)) */\n      tag_165\n        /* \"contracts/Staking.sol\":6888:6913  _lockupPeriod.mul(1 days) */\n      tag_166\n        /* \"contracts/Staking.sol\":6906:6912  1 days */\n      0x015180\n        /* \"contracts/Staking.sol\":6888:6901  _lockupPeriod */\n      sload(0x05)\n        /* \"contracts/Staking.sol\":6888:6905  _lockupPeriod.mul */\n      tag_167\n      swap1\n        /* \"contracts/Staking.sol\":6888:6913  _lockupPeriod.mul(1 days) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_166:\n        /* \"contracts/Staking.sol\":6849:6856  _staker */\n      0x0b\n        /* \"contracts/Staking.sol\":6849:6868  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":6857:6867  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":6849:6868  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":6849:6883  _staker[msg.sender].stakeStartTime */\n      0x03\n      add\n      sload\n        /* \"contracts/Staking.sol\":6849:6887  _staker[msg.sender].stakeStartTime.add */\n      tag_168\n      swap1\n        /* \"contracts/Staking.sol\":6849:6914  _staker[msg.sender].stakeStartTime.add(_lockupPeriod.mul(1 days)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_165:\n        /* \"contracts/Staking.sol\":6830:6845  block.timestamp */\n      timestamp\n        /* \"contracts/Staking.sol\":6830:6914  block.timestamp >= _staker[msg.sender].stakeStartTime.add(_lockupPeriod.mul(1 days)) */\n      lt\n      iszero\n        /* \"contracts/Staking.sol\":6742:6914  _staker[msg.sender].mode != 0 ? during % _eventPeriod == 0 && during > 0 :... */\n      jump(tag_169)\n    tag_164:\n        /* \"contracts/Staking.sol\":6799:6800  0 */\n      0x00\n        /* \"contracts/Staking.sol\":6783:6795  _eventPeriod */\n      sload(0x02)\n        /* \"contracts/Staking.sol\":6774:6780  during */\n      dup5\n        /* \"contracts/Staking.sol\":6774:6795  during % _eventPeriod */\n      tag_170\n      swap2\n      swap1\n      tag_171\n      jump\t// in\n    tag_170:\n        /* \"contracts/Staking.sol\":6774:6800  during % _eventPeriod == 0 */\n      eq\n        /* \"contracts/Staking.sol\":6774:6814  during % _eventPeriod == 0 && during > 0 */\n      dup1\n      iszero\n      tag_172\n      jumpi\n      pop\n        /* \"contracts/Staking.sol\":6813:6814  0 */\n      0x00\n        /* \"contracts/Staking.sol\":6804:6810  during */\n      dup4\n        /* \"contracts/Staking.sol\":6804:6814  during > 0 */\n      gt\n        /* \"contracts/Staking.sol\":6774:6814  during % _eventPeriod == 0 && during > 0 */\n    tag_172:\n        /* \"contracts/Staking.sol\":6742:6914  _staker[msg.sender].mode != 0 ? during % _eventPeriod == 0 && during > 0 :... */\n    tag_169:\n        /* \"contracts/Staking.sol\":6718:6914  bool isLockupTimeOver = _staker[msg.sender].mode != 0 ? during % _eventPeriod == 0 && during > 0 :... */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":6930:6946  isLockupTimeOver */\n      dup1\n        /* \"contracts/Staking.sol\":6925:6998  if (!isLockupTimeOver) {... */\n      tag_173\n      jumpi\n        /* \"contracts/Staking.sol\":6969:6986  _unstakingFeeRate */\n      sload(0x01)\n        /* \"contracts/Staking.sol\":6963:6986  fee = _unstakingFeeRate */\n      swap2\n      pop\n        /* \"contracts/Staking.sol\":6925:6998  if (!isLockupTimeOver) {... */\n    tag_173:\n        /* \"contracts/Staking.sol\":7043:7100  _staker[msg.sender].stakedAmount.sub(amountTobeWithdrawn) */\n      tag_174\n        /* \"contracts/Staking.sol\":7080:7099  amountTobeWithdrawn */\n      dup5\n        /* \"contracts/Staking.sol\":7043:7050  _staker */\n      0x0b\n        /* \"contracts/Staking.sol\":7043:7062  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":7051:7061  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":7043:7062  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":7043:7075  _staker[msg.sender].stakedAmount */\n      0x01\n      add\n      sload\n        /* \"contracts/Staking.sol\":7043:7079  _staker[msg.sender].stakedAmount.sub */\n      tag_162\n      swap1\n        /* \"contracts/Staking.sol\":7043:7100  _staker[msg.sender].stakedAmount.sub(amountTobeWithdrawn) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_174:\n        /* \"contracts/Staking.sol\":7008:7015  _staker */\n      0x0b\n        /* \"contracts/Staking.sol\":7008:7027  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":7016:7026  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":7008:7027  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":7008:7040  _staker[msg.sender].stakedAmount */\n      0x01\n      add\n        /* \"contracts/Staking.sol\":7008:7100  _staker[msg.sender].stakedAmount = _staker[msg.sender].stakedAmount.sub(amountTobeWithdrawn) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":7125:7161  totalStaked.sub(amountTobeWithdrawn) */\n      tag_175\n        /* \"contracts/Staking.sol\":7141:7160  amountTobeWithdrawn */\n      dup5\n        /* \"contracts/Staking.sol\":7125:7136  totalStaked */\n      sload(0x0c)\n        /* \"contracts/Staking.sol\":7125:7140  totalStaked.sub */\n      tag_162\n      swap1\n        /* \"contracts/Staking.sol\":7125:7161  totalStaked.sub(amountTobeWithdrawn) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_175:\n        /* \"contracts/Staking.sol\":7111:7122  totalStaked */\n      0x0c\n        /* \"contracts/Staking.sol\":7111:7161  totalStaked = totalStaked.sub(amountTobeWithdrawn) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":7194:7256  amountTobeWithdrawn.sub(amountTobeWithdrawn.mul(fee).div(1e4)) */\n      tag_176\n        /* \"contracts/Staking.sol\":7218:7255  amountTobeWithdrawn.mul(fee).div(1e4) */\n      tag_177\n        /* \"contracts/Staking.sol\":7251:7254  1e4 */\n      0x2710\n        /* \"contracts/Staking.sol\":7218:7246  amountTobeWithdrawn.mul(fee) */\n      tag_178\n        /* \"contracts/Staking.sol\":7242:7245  fee */\n      dup6\n        /* \"contracts/Staking.sol\":7218:7237  amountTobeWithdrawn */\n      dup9\n        /* \"contracts/Staking.sol\":7218:7241  amountTobeWithdrawn.mul */\n      tag_167\n      swap1\n        /* \"contracts/Staking.sol\":7218:7246  amountTobeWithdrawn.mul(fee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_178:\n        /* \"contracts/Staking.sol\":7218:7250  amountTobeWithdrawn.mul(fee).div */\n      tag_163\n      swap1\n        /* \"contracts/Staking.sol\":7218:7255  amountTobeWithdrawn.mul(fee).div(1e4) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_177:\n        /* \"contracts/Staking.sol\":7194:7213  amountTobeWithdrawn */\n      dup6\n        /* \"contracts/Staking.sol\":7194:7217  amountTobeWithdrawn.sub */\n      tag_162\n      swap1\n        /* \"contracts/Staking.sol\":7194:7256  amountTobeWithdrawn.sub(amountTobeWithdrawn.mul(fee).div(1e4)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_176:\n        /* \"contracts/Staking.sol\":7172:7256  amountTobeWithdrawn = amountTobeWithdrawn.sub(amountTobeWithdrawn.mul(fee).div(1e4)) */\n      swap4\n      pop\n        /* \"contracts/Staking.sol\":7267:7318  token.safeTransfer(msg.sender, amountTobeWithdrawn) */\n      tag_179\n        /* \"contracts/Staking.sol\":7286:7296  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":7298:7317  amountTobeWithdrawn */\n      dup6\n        /* \"contracts/Staking.sol\":7267:7272  token */\n      0x0d\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Staking.sol\":7267:7285  token.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_180\n      swap1\n        /* \"contracts/Staking.sol\":7267:7318  token.safeTransfer(msg.sender, amountTobeWithdrawn) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_179:\n        /* \"contracts/Staking.sol\":7336:7377  Withdraw(msg.sender, amountTobeWithdrawn) */\n      0x884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364\n        /* \"contracts/Staking.sol\":7345:7355  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":7357:7376  amountTobeWithdrawn */\n      dup6\n        /* \"contracts/Staking.sol\":7336:7377  Withdraw(msg.sender, amountTobeWithdrawn) */\n      mload(0x40)\n      tag_181\n      swap3\n      swap2\n      swap1\n      tag_182\n      jump\t// in\n    tag_181:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Staking.sol\":6355:7385  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Staking.sol\":6313:7385  function withdraw(uint256 amount) external{... */\n      pop\n      jump\t// out\n        /* \"contracts/Staking.sol\":9123:9718  function harvest() public{... */\n    tag_57:\n        /* \"contracts/Staking.sol\":9169:9183  updateReward() */\n      tag_184\n        /* \"contracts/Staking.sol\":9169:9181  updateReward */\n      tag_159\n        /* \"contracts/Staking.sol\":9169:9183  updateReward() */\n      jump\t// in\n    tag_184:\n        /* \"contracts/Staking.sol\":9204:9221  uint256 curReward */\n      0x00\n        /* \"contracts/Staking.sol\":9224:9231  _staker */\n      0x0b\n        /* \"contracts/Staking.sol\":9224:9243  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":9232:9242  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":9224:9243  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":9224:9263  _staker[msg.sender].stakerCurrentReward */\n      0x00\n      add\n      sload\n        /* \"contracts/Staking.sol\":9204:9263  uint256 curReward = _staker[msg.sender].stakerCurrentReward */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":9274:9295  uint256 rewardToClaim */\n      0x00\n        /* \"contracts/Staking.sol\":9298:9351  curReward.sub(curReward.mul(_rewardFeeRate).div(1e4)) */\n      tag_185\n        /* \"contracts/Staking.sol\":9312:9350  curReward.mul(_rewardFeeRate).div(1e4) */\n      tag_186\n        /* \"contracts/Staking.sol\":9346:9349  1e4 */\n      0x2710\n        /* \"contracts/Staking.sol\":9312:9341  curReward.mul(_rewardFeeRate) */\n      tag_187\n        /* \"contracts/Staking.sol\":9326:9340  _rewardFeeRate */\n      sload(0x04)\n        /* \"contracts/Staking.sol\":9312:9321  curReward */\n      dup7\n        /* \"contracts/Staking.sol\":9312:9325  curReward.mul */\n      tag_167\n      swap1\n        /* \"contracts/Staking.sol\":9312:9341  curReward.mul(_rewardFeeRate) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_187:\n        /* \"contracts/Staking.sol\":9312:9345  curReward.mul(_rewardFeeRate).div */\n      tag_163\n      swap1\n        /* \"contracts/Staking.sol\":9312:9350  curReward.mul(_rewardFeeRate).div(1e4) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_186:\n        /* \"contracts/Staking.sol\":9298:9307  curReward */\n      dup4\n        /* \"contracts/Staking.sol\":9298:9311  curReward.sub */\n      tag_162\n      swap1\n        /* \"contracts/Staking.sol\":9298:9351  curReward.sub(curReward.mul(_rewardFeeRate).div(1e4)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_185:\n        /* \"contracts/Staking.sol\":9274:9351  uint256 rewardToClaim = curReward.sub(curReward.mul(_rewardFeeRate).div(1e4)) */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":9396:9397  0 */\n      0x00\n        /* \"contracts/Staking.sol\":9380:9393  rewardToClaim */\n      dup2\n        /* \"contracts/Staking.sol\":9380:9397  rewardToClaim > 0 */\n      gt\n        /* \"contracts/Staking.sol\":9372:9418  require(rewardToClaim > 0, \"Nothing to claim\") */\n      tag_188\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_189\n      swap1\n      tag_190\n      jump\t// in\n    tag_189:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_188:\n        /* \"contracts/Staking.sol\":9449:9454  token */\n      0x0d\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Staking.sol\":9449:9464  token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/Staking.sol\":9473:9477  this */\n      address\n        /* \"contracts/Staking.sol\":9449:9479  token.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_191:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_192\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_192:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_194\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_194:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_195\n      swap2\n      swap1\n      tag_196\n      jump\t// in\n    tag_195:\n        /* \"contracts/Staking.sol\":9433:9446  rewardToClaim */\n      dup2\n        /* \"contracts/Staking.sol\":9433:9479  rewardToClaim > token.balanceOf(address(this)) */\n      gt\n        /* \"contracts/Staking.sol\":9429:9540  if (rewardToClaim > token.balanceOf(address(this)))... */\n      iszero\n      tag_197\n      jumpi\n        /* \"contracts/Staking.sol\":9510:9515  token */\n      0x0d\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Staking.sol\":9510:9525  token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/Staking.sol\":9534:9538  this */\n      address\n        /* \"contracts/Staking.sol\":9510:9540  token.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_198\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_198:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_199\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_199:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_201\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_201:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_202\n      swap2\n      swap1\n      tag_196\n      jump\t// in\n    tag_202:\n        /* \"contracts/Staking.sol\":9494:9540  rewardToClaim = token.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":9429:9540  if (rewardToClaim > token.balanceOf(address(this)))... */\n    tag_197:\n        /* \"contracts/Staking.sol\":9551:9596  token.safeTransfer(msg.sender, rewardToClaim) */\n      tag_203\n        /* \"contracts/Staking.sol\":9570:9580  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":9582:9595  rewardToClaim */\n      dup3\n        /* \"contracts/Staking.sol\":9551:9556  token */\n      0x0d\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Staking.sol\":9551:9569  token.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_180\n      swap1\n        /* \"contracts/Staking.sol\":9551:9596  token.safeTransfer(msg.sender, rewardToClaim) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_203:\n        /* \"contracts/Staking.sol\":9649:9650  0 */\n      0x00\n        /* \"contracts/Staking.sol\":9607:9614  _staker */\n      0x0b\n        /* \"contracts/Staking.sol\":9607:9626  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":9615:9625  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":9607:9626  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":9607:9646  _staker[msg.sender].stakerCurrentReward */\n      0x00\n      add\n        /* \"contracts/Staking.sol\":9607:9650  _staker[msg.sender].stakerCurrentReward = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":9676:9710  Harvest(msg.sender, rewardToClaim) */\n      0xc9695243a805adb74c91f28311176c65b417e842d5699893cef56d18bfa48cba\n        /* \"contracts/Staking.sol\":9684:9694  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":9696:9709  rewardToClaim */\n      dup3\n        /* \"contracts/Staking.sol\":9676:9710  Harvest(msg.sender, rewardToClaim) */\n      mload(0x40)\n      tag_204\n      swap3\n      swap2\n      swap1\n      tag_182\n      jump\t// in\n    tag_204:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Staking.sol\":9148:9718  {... */\n      pop\n      pop\n        /* \"contracts/Staking.sol\":9123:9718  function harvest() public{... */\n      jump\t// out\n        /* \"contracts/Staking.sol\":4766:5183  function isLocked(address _address) public view returns (uint256) {... */\n    tag_61:\n        /* \"contracts/Staking.sol\":4823:4830  uint256 */\n      0x00\n        /* \"contracts/Staking.sol\":4877:4879  55 */\n      0x37\n        /* \"contracts/Staking.sol\":4849:4856  _staker */\n      0x0b\n        /* \"contracts/Staking.sol\":4849:4866  _staker[_address] */\n      0x00\n        /* \"contracts/Staking.sol\":4857:4865  _address */\n      dup5\n        /* \"contracts/Staking.sol\":4849:4866  _staker[_address] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":4849:4873  _staker[_address].staked */\n      0x05\n      add\n      sload\n        /* \"contracts/Staking.sol\":4849:4879  _staker[_address].staked != 55 */\n      eq\n        /* \"contracts/Staking.sol\":4845:4902  if (_staker[_address].staked != 55)... */\n      tag_206\n      jumpi\n        /* \"contracts/Staking.sol\":4901:4902  0 */\n      0x00\n        /* \"contracts/Staking.sol\":4894:4902  return 0 */\n      swap1\n      pop\n      jump(tag_205)\n        /* \"contracts/Staking.sol\":4845:4902  if (_staker[_address].staked != 55)... */\n    tag_206:\n        /* \"contracts/Staking.sol\":4943:4944  0 */\n      0x00\n        /* \"contracts/Staking.sol\":4917:4924  _staker */\n      0x0b\n        /* \"contracts/Staking.sol\":4917:4934  _staker[_address] */\n      0x00\n        /* \"contracts/Staking.sol\":4925:4933  _address */\n      dup5\n        /* \"contracts/Staking.sol\":4917:4934  _staker[_address] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":4917:4939  _staker[_address].mode */\n      0x02\n      add\n      sload\n        /* \"contracts/Staking.sol\":4917:4944  _staker[_address].mode != 0 */\n      eq\n        /* \"contracts/Staking.sol\":4913:5175  if (_staker[_address].mode != 0)... */\n      tag_207\n      jumpi\n        /* \"contracts/Staking.sol\":5039:5040  0 */\n      0x00\n        /* \"contracts/Staking.sol\":5034:5035  7 */\n      0x07\n        /* \"contracts/Staking.sol\":4966:5031  block.timestamp.sub(_staker[_address].stakeStartTime).div(1 days) */\n      tag_208\n        /* \"contracts/Staking.sol\":5024:5030  1 days */\n      0x015180\n        /* \"contracts/Staking.sol\":4966:5019  block.timestamp.sub(_staker[_address].stakeStartTime) */\n      tag_209\n        /* \"contracts/Staking.sol\":4986:4993  _staker */\n      0x0b\n        /* \"contracts/Staking.sol\":4986:5003  _staker[_address] */\n      0x00\n        /* \"contracts/Staking.sol\":4994:5002  _address */\n      dup9\n        /* \"contracts/Staking.sol\":4986:5003  _staker[_address] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":4986:5018  _staker[_address].stakeStartTime */\n      0x03\n      add\n      sload\n        /* \"contracts/Staking.sol\":4966:4981  block.timestamp */\n      timestamp\n        /* \"contracts/Staking.sol\":4966:4985  block.timestamp.sub */\n      tag_162\n      swap1\n        /* \"contracts/Staking.sol\":4966:5019  block.timestamp.sub(_staker[_address].stakeStartTime) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_209:\n        /* \"contracts/Staking.sol\":4966:5023  block.timestamp.sub(_staker[_address].stakeStartTime).div */\n      tag_163\n      swap1\n        /* \"contracts/Staking.sol\":4966:5031  block.timestamp.sub(_staker[_address].stakeStartTime).div(1 days) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_208:\n        /* \"contracts/Staking.sol\":4966:5035  block.timestamp.sub(_staker[_address].stakeStartTime).div(1 days) % 7 */\n      tag_210\n      swap2\n      swap1\n      tag_171\n      jump\t// in\n    tag_210:\n        /* \"contracts/Staking.sol\":4966:5040  block.timestamp.sub(_staker[_address].stakeStartTime).div(1 days) % 7 == 0 */\n      eq\n        /* \"contracts/Staking.sol\":4966:5048  block.timestamp.sub(_staker[_address].stakeStartTime).div(1 days) % 7 == 0 ? 0 : 1 */\n      tag_211\n      jumpi\n        /* \"contracts/Staking.sol\":5047:5048  1 */\n      0x01\n        /* \"contracts/Staking.sol\":4966:5048  block.timestamp.sub(_staker[_address].stakeStartTime).div(1 days) % 7 == 0 ? 0 : 1 */\n      jump(tag_212)\n    tag_211:\n        /* \"contracts/Staking.sol\":5043:5044  0 */\n      0x00\n        /* \"contracts/Staking.sol\":4966:5048  block.timestamp.sub(_staker[_address].stakeStartTime).div(1 days) % 7 == 0 ? 0 : 1 */\n    tag_212:\n        /* \"contracts/Staking.sol\":4959:5048  return block.timestamp.sub(_staker[_address].stakeStartTime).div(1 days) % 7 == 0 ? 0 : 1 */\n      0xff\n      and\n      swap1\n      pop\n      jump(tag_205)\n        /* \"contracts/Staking.sol\":4913:5175  if (_staker[_address].mode != 0)... */\n    tag_207:\n        /* \"contracts/Staking.sol\":5142:5167  _lockupPeriod.mul(1 days) */\n      tag_214\n        /* \"contracts/Staking.sol\":5160:5166  1 days */\n      0x015180\n        /* \"contracts/Staking.sol\":5142:5155  _lockupPeriod */\n      sload(0x05)\n        /* \"contracts/Staking.sol\":5142:5159  _lockupPeriod.mul */\n      tag_167\n      swap1\n        /* \"contracts/Staking.sol\":5142:5167  _lockupPeriod.mul(1 days) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_214:\n        /* \"contracts/Staking.sol\":5085:5138  block.timestamp.sub(_staker[_address].stakeStartTime) */\n      tag_215\n        /* \"contracts/Staking.sol\":5105:5112  _staker */\n      0x0b\n        /* \"contracts/Staking.sol\":5105:5122  _staker[_address] */\n      0x00\n        /* \"contracts/Staking.sol\":5113:5121  _address */\n      dup6\n        /* \"contracts/Staking.sol\":5105:5122  _staker[_address] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":5105:5137  _staker[_address].stakeStartTime */\n      0x03\n      add\n      sload\n        /* \"contracts/Staking.sol\":5085:5100  block.timestamp */\n      timestamp\n        /* \"contracts/Staking.sol\":5085:5104  block.timestamp.sub */\n      tag_162\n      swap1\n        /* \"contracts/Staking.sol\":5085:5138  block.timestamp.sub(_staker[_address].stakeStartTime) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_215:\n        /* \"contracts/Staking.sol\":5085:5167  block.timestamp.sub(_staker[_address].stakeStartTime) >= _lockupPeriod.mul(1 days) */\n      lt\n      iszero\n        /* \"contracts/Staking.sol\":5085:5175  block.timestamp.sub(_staker[_address].stakeStartTime) >= _lockupPeriod.mul(1 days) ? 0 : 1 */\n      tag_216\n      jumpi\n        /* \"contracts/Staking.sol\":5174:5175  1 */\n      0x01\n        /* \"contracts/Staking.sol\":5085:5175  block.timestamp.sub(_staker[_address].stakeStartTime) >= _lockupPeriod.mul(1 days) ? 0 : 1 */\n      jump(tag_217)\n    tag_216:\n        /* \"contracts/Staking.sol\":5170:5171  0 */\n      0x00\n        /* \"contracts/Staking.sol\":5085:5175  block.timestamp.sub(_staker[_address].stakeStartTime) >= _lockupPeriod.mul(1 days) ? 0 : 1 */\n    tag_217:\n        /* \"contracts/Staking.sol\":5078:5175  return block.timestamp.sub(_staker[_address].stakeStartTime) >= _lockupPeriod.mul(1 days) ? 0 : 1 */\n      0xff\n      and\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":4766:5183  function isLocked(address _address) public view returns (uint256) {... */\n    tag_205:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Staking.sol\":8158:8336  function setLockupTime(uint256 lockupTime) external onlyOwner {... */\n    tag_65:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_219\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_142\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_219:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_220\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_89\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_220:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_221\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_222\n      swap1\n      tag_146\n      jump\t// in\n    tag_222:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_221:\n        /* \"contracts/Staking.sol\":8262:8263  0 */\n      0x00\n        /* \"contracts/Staking.sol\":8249:8259  lockupTime */\n      dup2\n        /* \"contracts/Staking.sol\":8249:8263  lockupTime > 0 */\n      gt\n        /* \"contracts/Staking.sol\":8241:8281  require(lockupTime > 0, \"Can't be zero\") */\n      tag_224\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_225\n      swap1\n      tag_150\n      jump\t// in\n    tag_225:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_224:\n        /* \"contracts/Staking.sol\":8318:8328  lockupTime */\n      dup1\n        /* \"contracts/Staking.sol\":8302:8315  _lockupPeriod */\n      0x05\n        /* \"contracts/Staking.sol\":8302:8328  _lockupPeriod = lockupTime */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":8158:8336  function setLockupTime(uint256 lockupTime) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Staking.sol\":2666:3563  function startStaking(uint256 _amount, uint256 _mode) external {... */\n    tag_69:\n        /* \"contracts/Staking.sol\":2768:2769  0 */\n      0x00\n        /* \"contracts/Staking.sol\":2758:2765  _amount */\n      dup3\n        /* \"contracts/Staking.sol\":2758:2769  _amount > 0 */\n      gt\n        /* \"contracts/Staking.sol\":2750:2805  require(_amount > 0, \"Amount should be greater than 0\") */\n      tag_227\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_228\n      swap1\n      tag_154\n      jump\t// in\n    tag_228:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_227:\n        /* \"contracts/Staking.sol\":2854:2861  _amount */\n      dup2\n        /* \"contracts/Staking.sol\":2824:2829  token */\n      0x0d\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Staking.sol\":2824:2839  token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/Staking.sol\":2840:2850  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":2824:2851  token.balanceOf(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_229\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_229:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_230\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_230:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_232\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_232:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_233\n      swap2\n      swap1\n      tag_196\n      jump\t// in\n    tag_233:\n        /* \"contracts/Staking.sol\":2824:2861  token.balanceOf(msg.sender) > _amount */\n      gt\n        /* \"contracts/Staking.sol\":2816:2879  require(token.balanceOf(msg.sender) > _amount, \"Insufficient!\") */\n      tag_234\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_235\n      swap1\n      tag_236\n      jump\t// in\n    tag_235:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_234:\n        /* \"contracts/Staking.sol\":2922:2923  0 */\n      0x00\n        /* \"contracts/Staking.sol\":2898:2918  isLocked(msg.sender) */\n      tag_237\n        /* \"contracts/Staking.sol\":2907:2917  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":2898:2906  isLocked */\n      tag_61\n        /* \"contracts/Staking.sol\":2898:2918  isLocked(msg.sender) */\n      jump\t// in\n    tag_237:\n        /* \"contracts/Staking.sol\":2898:2923  isLocked(msg.sender) == 0 */\n      eq\n        /* \"contracts/Staking.sol\":2890:2939  require(isLocked(msg.sender) == 0, \"Can't start\") */\n      tag_238\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_239\n      swap1\n      tag_240\n      jump\t// in\n    tag_239:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_238:\n        /* \"contracts/Staking.sol\":2973:2974  0 */\n      0x00\n        /* \"contracts/Staking.sol\":2964:2969  _mode */\n      dup2\n        /* \"contracts/Staking.sol\":2964:2974  _mode == 0 */\n      eq\n        /* \"contracts/Staking.sol\":2960:3336  if (_mode == 0) require(_amount >= _minStakeAmount_m, \"Insufficient\");... */\n      iszero\n      tag_241\n      jumpi\n        /* \"contracts/Staking.sol\":2995:3012  _minStakeAmount_m */\n      sload(0x06)\n        /* \"contracts/Staking.sol\":2984:2991  _amount */\n      dup3\n        /* \"contracts/Staking.sol\":2984:3012  _amount >= _minStakeAmount_m */\n      lt\n      iszero\n        /* \"contracts/Staking.sol\":2976:3029  require(_amount >= _minStakeAmount_m, \"Insufficient\") */\n      tag_242\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_243\n      swap1\n      tag_244\n      jump\t// in\n    tag_243:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_242:\n        /* \"contracts/Staking.sol\":2960:3336  if (_mode == 0) require(_amount >= _minStakeAmount_m, \"Insufficient\");... */\n      jump(tag_245)\n    tag_241:\n        /* \"contracts/Staking.sol\":3058:3059  1 */\n      0x01\n        /* \"contracts/Staking.sol\":3049:3054  _mode */\n      dup2\n        /* \"contracts/Staking.sol\":3049:3059  _mode == 1 */\n      eq\n        /* \"contracts/Staking.sol\":3045:3336  if (_mode == 1) require(_amount >= _minStakeAmount_c, \"Insufficient\");... */\n      iszero\n      tag_246\n      jumpi\n        /* \"contracts/Staking.sol\":3080:3097  _minStakeAmount_c */\n      sload(0x09)\n        /* \"contracts/Staking.sol\":3069:3076  _amount */\n      dup3\n        /* \"contracts/Staking.sol\":3069:3097  _amount >= _minStakeAmount_c */\n      lt\n      iszero\n        /* \"contracts/Staking.sol\":3061:3114  require(_amount >= _minStakeAmount_c, \"Insufficient\") */\n      tag_247\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_248\n      swap1\n      tag_244\n      jump\t// in\n    tag_248:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_247:\n        /* \"contracts/Staking.sol\":3045:3336  if (_mode == 1) require(_amount >= _minStakeAmount_c, \"Insufficient\");... */\n      jump(tag_249)\n    tag_246:\n        /* \"contracts/Staking.sol\":3143:3144  2 */\n      0x02\n        /* \"contracts/Staking.sol\":3134:3139  _mode */\n      dup2\n        /* \"contracts/Staking.sol\":3134:3144  _mode == 2 */\n      eq\n        /* \"contracts/Staking.sol\":3130:3336  if (_mode == 2) require(_amount >= _minStakeAmount_s, \"Insufficient\");... */\n      iszero\n      tag_250\n      jumpi\n        /* \"contracts/Staking.sol\":3165:3182  _minStakeAmount_s */\n      sload(0x08)\n        /* \"contracts/Staking.sol\":3154:3161  _amount */\n      dup3\n        /* \"contracts/Staking.sol\":3154:3182  _amount >= _minStakeAmount_s */\n      lt\n      iszero\n        /* \"contracts/Staking.sol\":3146:3199  require(_amount >= _minStakeAmount_s, \"Insufficient\") */\n      tag_251\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_252\n      swap1\n      tag_244\n      jump\t// in\n    tag_252:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_251:\n        /* \"contracts/Staking.sol\":3130:3336  if (_mode == 2) require(_amount >= _minStakeAmount_s, \"Insufficient\");... */\n      jump(tag_253)\n    tag_250:\n        /* \"contracts/Staking.sol\":3228:3229  3 */\n      0x03\n        /* \"contracts/Staking.sol\":3219:3224  _mode */\n      dup2\n        /* \"contracts/Staking.sol\":3219:3229  _mode == 3 */\n      eq\n        /* \"contracts/Staking.sol\":3215:3336  if (_mode == 3) require(_amount >= _minStakeAmount_g, \"Insufficient\");... */\n      iszero\n      tag_254\n      jumpi\n        /* \"contracts/Staking.sol\":3250:3267  _minStakeAmount_g */\n      sload(0x07)\n        /* \"contracts/Staking.sol\":3239:3246  _amount */\n      dup3\n        /* \"contracts/Staking.sol\":3239:3267  _amount >= _minStakeAmount_g */\n      lt\n      iszero\n        /* \"contracts/Staking.sol\":3231:3284  require(_amount >= _minStakeAmount_g, \"Insufficient\") */\n      tag_255\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_256\n      swap1\n      tag_244\n      jump\t// in\n    tag_256:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_255:\n        /* \"contracts/Staking.sol\":3215:3336  if (_mode == 3) require(_amount >= _minStakeAmount_g, \"Insufficient\");... */\n      jump(tag_257)\n    tag_254:\n        /* \"contracts/Staking.sol\":3318:3319  0 */\n      0x00\n        /* \"contracts/Staking.sol\":3308:3315  _amount */\n      dup3\n        /* \"contracts/Staking.sol\":3308:3319  _amount < 0 */\n      lt\n        /* \"contracts/Staking.sol\":3300:3336  require(_amount < 0, \"Invalid Mode\") */\n      tag_258\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_259\n      swap1\n      tag_260\n      jump\t// in\n    tag_259:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_258:\n        /* \"contracts/Staking.sol\":3215:3336  if (_mode == 3) require(_amount >= _minStakeAmount_g, \"Insufficient\");... */\n    tag_257:\n        /* \"contracts/Staking.sol\":3130:3336  if (_mode == 2) require(_amount >= _minStakeAmount_s, \"Insufficient\");... */\n    tag_253:\n        /* \"contracts/Staking.sol\":3045:3336  if (_mode == 1) require(_amount >= _minStakeAmount_c, \"Insufficient\");... */\n    tag_249:\n        /* \"contracts/Staking.sol\":2960:3336  if (_mode == 0) require(_amount >= _minStakeAmount_m, \"Insufficient\");... */\n    tag_245:\n        /* \"contracts/Staking.sol\":3384:3389  _mode */\n      dup1\n        /* \"contracts/Staking.sol\":3357:3364  _staker */\n      0x0b\n        /* \"contracts/Staking.sol\":3357:3376  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":3365:3375  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":3357:3376  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":3357:3381  _staker[msg.sender].mode */\n      0x02\n      add\n        /* \"contracts/Staking.sol\":3357:3389  _staker[msg.sender].mode = _mode */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":3437:3452  block.timestamp */\n      timestamp\n        /* \"contracts/Staking.sol\":3400:3407  _staker */\n      0x0b\n        /* \"contracts/Staking.sol\":3400:3419  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":3408:3418  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":3400:3419  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":3400:3434  _staker[msg.sender].stakeStartTime */\n      0x03\n      add\n        /* \"contracts/Staking.sol\":3400:3452  _staker[msg.sender].stakeStartTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":3492:3494  55 */\n      0x37\n        /* \"contracts/Staking.sol\":3463:3470  _staker */\n      0x0b\n        /* \"contracts/Staking.sol\":3463:3482  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":3471:3481  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":3463:3482  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":3463:3489  _staker[msg.sender].staked */\n      0x05\n      add\n        /* \"contracts/Staking.sol\":3463:3494  _staker[msg.sender].staked = 55 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":3505:3513  _stakers */\n      0x0a\n        /* \"contracts/Staking.sol\":3519:3529  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":3505:3530  _stakers.push(msg.sender) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":3541:3555  stake(_amount) */\n      tag_262\n        /* \"contracts/Staking.sol\":3547:3554  _amount */\n      dup3\n        /* \"contracts/Staking.sol\":3541:3546  stake */\n      tag_104\n        /* \"contracts/Staking.sol\":3541:3555  stake(_amount) */\n      jump\t// in\n    tag_262:\n        /* \"contracts/Staking.sol\":2666:3563  function startStaking(uint256 _amount, uint256 _mode) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Staking.sol\":4322:4425  function getNumberofStakers() public view returns (uint256) {... */\n    tag_71:\n        /* \"contracts/Staking.sol\":4373:4380  uint256 */\n      0x00\n        /* \"contracts/Staking.sol\":4402:4410  _stakers */\n      0x0a\n        /* \"contracts/Staking.sol\":4402:4417  _stakers.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":4395:4417  return _stakers.length */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":4322:4425  function getNumberofStakers() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Staking.sol\":7632:7868  function setEventPeriod(uint256 __eventPeriod) external onlyOwner {... */\n    tag_75:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_265\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_142\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_265:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_266\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_89\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_266:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_267\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_268\n      swap1\n      tag_146\n      jump\t// in\n    tag_268:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_267:\n        /* \"contracts/Staking.sol\":7743:7744  0 */\n      0x00\n        /* \"contracts/Staking.sol\":7727:7740  __eventPeriod */\n      dup2\n        /* \"contracts/Staking.sol\":7727:7744  __eventPeriod > 0 */\n      gt\n        /* \"contracts/Staking.sol\":7719:7772  require(__eventPeriod > 0, \"Invalid Lockup Duration\") */\n      tag_270\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_271\n      swap1\n      tag_272\n      jump\t// in\n    tag_271:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_270:\n        /* \"contracts/Staking.sol\":7800:7813  __eventPeriod */\n      dup1\n        /* \"contracts/Staking.sol\":7785:7797  _eventPeriod */\n      0x02\n        /* \"contracts/Staking.sol\":7785:7813  _eventPeriod = __eventPeriod */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":7831:7860  SetEventPeriod(__eventPeriod) */\n      0x189bda9782663c67a3f95c0aa5455924c711210b00281c60ead2f0dd8dbc924c\n        /* \"contracts/Staking.sol\":7846:7859  __eventPeriod */\n      dup2\n        /* \"contracts/Staking.sol\":7831:7860  SetEventPeriod(__eventPeriod) */\n      mload(0x40)\n      tag_273\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_273:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Staking.sol\":7632:7868  function setEventPeriod(uint256 __eventPeriod) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Staking.sol\":5880:6266  function rewardToHarvest(address _address) public view returns (uint256){... */\n    tag_78:\n        /* \"contracts/Staking.sol\":5944:5951  uint256 */\n      0x00\n        /* \"contracts/Staking.sol\":5973:5999  uint256 stakerStakedAmount */\n      dup1\n        /* \"contracts/Staking.sol\":6002:6009  _staker */\n      0x0b\n        /* \"contracts/Staking.sol\":6002:6019  _staker[_address] */\n      0x00\n        /* \"contracts/Staking.sol\":6010:6018  _address */\n      dup5\n        /* \"contracts/Staking.sol\":6002:6019  _staker[_address] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":6002:6032  _staker[_address].stakedAmount */\n      0x01\n      add\n      sload\n        /* \"contracts/Staking.sol\":5973:6032  uint256 stakerStakedAmount = _staker[_address].stakedAmount */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":6043:6060  uint256 newReward */\n      0x00\n        /* \"contracts/Staking.sol\":6063:6179  stakerStakedAmount.mul(block.timestamp.sub(_staker[_address].lastUpdatedTime)).mul(_rewardRate).div(1 days).div(1e4) */\n      tag_275\n        /* \"contracts/Staking.sol\":6175:6178  1e4 */\n      0x2710\n        /* \"contracts/Staking.sol\":6063:6170  stakerStakedAmount.mul(block.timestamp.sub(_staker[_address].lastUpdatedTime)).mul(_rewardRate).div(1 days) */\n      tag_276\n        /* \"contracts/Staking.sol\":6163:6169  1 days */\n      0x015180\n        /* \"contracts/Staking.sol\":6063:6158  stakerStakedAmount.mul(block.timestamp.sub(_staker[_address].lastUpdatedTime)).mul(_rewardRate) */\n      tag_277\n        /* \"contracts/Staking.sol\":6146:6157  _rewardRate */\n      sload(0x03)\n        /* \"contracts/Staking.sol\":6063:6141  stakerStakedAmount.mul(block.timestamp.sub(_staker[_address].lastUpdatedTime)) */\n      tag_278\n        /* \"contracts/Staking.sol\":6086:6140  block.timestamp.sub(_staker[_address].lastUpdatedTime) */\n      tag_279\n        /* \"contracts/Staking.sol\":6106:6113  _staker */\n      0x0b\n        /* \"contracts/Staking.sol\":6106:6123  _staker[_address] */\n      0x00\n        /* \"contracts/Staking.sol\":6114:6122  _address */\n      dup14\n        /* \"contracts/Staking.sol\":6106:6123  _staker[_address] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":6106:6139  _staker[_address].lastUpdatedTime */\n      0x04\n      add\n      sload\n        /* \"contracts/Staking.sol\":6086:6101  block.timestamp */\n      timestamp\n        /* \"contracts/Staking.sol\":6086:6105  block.timestamp.sub */\n      tag_162\n      swap1\n        /* \"contracts/Staking.sol\":6086:6140  block.timestamp.sub(_staker[_address].lastUpdatedTime) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_279:\n        /* \"contracts/Staking.sol\":6063:6081  stakerStakedAmount */\n      dup10\n        /* \"contracts/Staking.sol\":6063:6085  stakerStakedAmount.mul */\n      tag_167\n      swap1\n        /* \"contracts/Staking.sol\":6063:6141  stakerStakedAmount.mul(block.timestamp.sub(_staker[_address].lastUpdatedTime)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_278:\n        /* \"contracts/Staking.sol\":6063:6145  stakerStakedAmount.mul(block.timestamp.sub(_staker[_address].lastUpdatedTime)).mul */\n      tag_167\n      swap1\n        /* \"contracts/Staking.sol\":6063:6158  stakerStakedAmount.mul(block.timestamp.sub(_staker[_address].lastUpdatedTime)).mul(_rewardRate) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_277:\n        /* \"contracts/Staking.sol\":6063:6162  stakerStakedAmount.mul(block.timestamp.sub(_staker[_address].lastUpdatedTime)).mul(_rewardRate).div */\n      tag_163\n      swap1\n        /* \"contracts/Staking.sol\":6063:6170  stakerStakedAmount.mul(block.timestamp.sub(_staker[_address].lastUpdatedTime)).mul(_rewardRate).div(1 days) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_276:\n        /* \"contracts/Staking.sol\":6063:6174  stakerStakedAmount.mul(block.timestamp.sub(_staker[_address].lastUpdatedTime)).mul(_rewardRate).div(1 days).div */\n      tag_163\n      swap1\n        /* \"contracts/Staking.sol\":6063:6179  stakerStakedAmount.mul(block.timestamp.sub(_staker[_address].lastUpdatedTime)).mul(_rewardRate).div(1 days).div(1e4) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_275:\n        /* \"contracts/Staking.sol\":6043:6179  uint256 newReward = stakerStakedAmount.mul(block.timestamp.sub(_staker[_address].lastUpdatedTime)).mul(_rewardRate).div(1 days).div(1e4) */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":6249:6258  newReward */\n      dup1\n        /* \"contracts/Staking.sol\":6207:6214  _staker */\n      0x0b\n        /* \"contracts/Staking.sol\":6207:6226  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":6215:6225  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":6207:6226  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":6207:6246  _staker[msg.sender].stakerCurrentReward */\n      0x00\n      add\n      sload\n        /* \"contracts/Staking.sol\":6207:6258  _staker[msg.sender].stakerCurrentReward + newReward */\n      tag_280\n      swap2\n      swap1\n      tag_281\n      jump\t// in\n    tag_280:\n        /* \"contracts/Staking.sol\":6200:6258  return _staker[msg.sender].stakerCurrentReward + newReward */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/Staking.sol\":5880:6266  function rewardToHarvest(address _address) public view returns (uint256){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_81:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_283\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_142\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_283:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_284\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_89\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_284:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_285\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_286\n      swap1\n      tag_146\n      jump\t// in\n    tag_286:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_285:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      tag_288\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1759:1760  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1750  _transferOwnership */\n      tag_289\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_288:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/Staking.sol\":5339:5433  function getRewardRate() public view returns (uint256) {... */\n    tag_83:\n        /* \"contracts/Staking.sol\":5385:5392  uint256 */\n      0x00\n        /* \"contracts/Staking.sol\":5414:5425  _rewardRate */\n      sload(0x03)\n        /* \"contracts/Staking.sol\":5407:5425  return _rewardRate */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":5339:5433  function getRewardRate() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Staking.sol\":1206:1232  uint256 public totalStaked */\n    tag_86:\n      sload(0x0c)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_89:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1101:1114  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Staking.sol\":9726:10154  function getMinimumStakingAmount(uint256 _mode) public view returns (uint256) {... */\n    tag_94:\n        /* \"contracts/Staking.sol\":9795:9802  uint256 */\n      0x00\n        /* \"contracts/Staking.sol\":9825:9848  uint256 _minStakeAmount */\n      dup1\n        /* \"contracts/Staking.sol\":9851:9852  0 */\n      0x00\n        /* \"contracts/Staking.sol\":9825:9852  uint256 _minStakeAmount = 0 */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":9878:9879  0 */\n      0x00\n        /* \"contracts/Staking.sol\":9869:9874  _mode */\n      dup4\n        /* \"contracts/Staking.sol\":9869:9879  _mode == 0 */\n      eq\n        /* \"contracts/Staking.sol\":9869:9893  _mode == 0 || _mode == 2 */\n      dup1\n      tag_293\n      jumpi\n      pop\n        /* \"contracts/Staking.sol\":9892:9893  2 */\n      0x02\n        /* \"contracts/Staking.sol\":9883:9888  _mode */\n      dup4\n        /* \"contracts/Staking.sol\":9883:9893  _mode == 2 */\n      eq\n        /* \"contracts/Staking.sol\":9869:9893  _mode == 0 || _mode == 2 */\n    tag_293:\n        /* \"contracts/Staking.sol\":9865:10111  if (_mode == 0 || _mode == 2) _minStakeAmount = _minStakeAmount_m;... */\n      iszero\n      tag_294\n      jumpi\n        /* \"contracts/Staking.sol\":9913:9930  _minStakeAmount_m */\n      sload(0x06)\n        /* \"contracts/Staking.sol\":9895:9930  _minStakeAmount = _minStakeAmount_m */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":9865:10111  if (_mode == 0 || _mode == 2) _minStakeAmount = _minStakeAmount_m;... */\n      jump(tag_295)\n    tag_294:\n        /* \"contracts/Staking.sol\":9959:9960  1 */\n      0x01\n        /* \"contracts/Staking.sol\":9950:9955  _mode */\n      dup4\n        /* \"contracts/Staking.sol\":9950:9960  _mode == 1 */\n      eq\n        /* \"contracts/Staking.sol\":9946:10111  if (_mode == 1) _minStakeAmount = _minStakeAmount_c;... */\n      iszero\n      tag_296\n      jumpi\n        /* \"contracts/Staking.sol\":9980:9997  _minStakeAmount_c */\n      sload(0x09)\n        /* \"contracts/Staking.sol\":9962:9997  _minStakeAmount = _minStakeAmount_c */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":9946:10111  if (_mode == 1) _minStakeAmount = _minStakeAmount_c;... */\n      jump(tag_297)\n    tag_296:\n        /* \"contracts/Staking.sol\":10026:10027  3 */\n      0x03\n        /* \"contracts/Staking.sol\":10017:10022  _mode */\n      dup4\n        /* \"contracts/Staking.sol\":10017:10027  _mode == 3 */\n      eq\n        /* \"contracts/Staking.sol\":10013:10111  if (_mode == 3) _minStakeAmount = _minStakeAmount_g;... */\n      iszero\n      tag_298\n      jumpi\n        /* \"contracts/Staking.sol\":10047:10064  _minStakeAmount_g */\n      sload(0x07)\n        /* \"contracts/Staking.sol\":10029:10064  _minStakeAmount = _minStakeAmount_g */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":10013:10111  if (_mode == 3) _minStakeAmount = _minStakeAmount_g;... */\n      jump(tag_299)\n    tag_298:\n        /* \"contracts/Staking.sol\":10093:10094  1 */\n      0x01\n        /* \"contracts/Staking.sol\":10089:10090  0 */\n      0x00\n        /* \"contracts/Staking.sol\":10089:10094  0 > 1 */\n      gt\n        /* \"contracts/Staking.sol\":10080:10111  require (0 > 1, \"Invalid Mode\") */\n      tag_300\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_301\n      swap1\n      tag_260\n      jump\t// in\n    tag_301:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_300:\n        /* \"contracts/Staking.sol\":10013:10111  if (_mode == 3) _minStakeAmount = _minStakeAmount_g;... */\n    tag_299:\n        /* \"contracts/Staking.sol\":9946:10111  if (_mode == 1) _minStakeAmount = _minStakeAmount_c;... */\n    tag_297:\n        /* \"contracts/Staking.sol\":9865:10111  if (_mode == 0 || _mode == 2) _minStakeAmount = _minStakeAmount_m;... */\n    tag_295:\n        /* \"contracts/Staking.sol\":10131:10146  _minStakeAmount */\n      dup1\n        /* \"contracts/Staking.sol\":10124:10146  return _minStakeAmount */\n      swap2\n      pop\n      pop\n        /* \"contracts/Staking.sol\":9726:10154  function getMinimumStakingAmount(uint256 _mode) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Staking.sol\":7876:8150  function setUnstakingFeeRate(uint256 __unstakingFeeRate) external onlyOwner {... */\n    tag_98:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_303\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_142\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_303:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_304\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_89\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_304:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_305\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_306\n      swap1\n      tag_146\n      jump\t// in\n    tag_306:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_305:\n        /* \"contracts/Staking.sol\":8002:8003  0 */\n      0x00\n        /* \"contracts/Staking.sol\":7981:7999  __unstakingFeeRate */\n      dup2\n        /* \"contracts/Staking.sol\":7981:8003  __unstakingFeeRate > 0 */\n      gt\n        /* \"contracts/Staking.sol\":7973:8034  require(__unstakingFeeRate > 0, \"Invalid Unstaking Fee Rate\") */\n      tag_308\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_309\n      swap1\n      tag_310\n      jump\t// in\n    tag_309:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_308:\n        /* \"contracts/Staking.sol\":8067:8085  __unstakingFeeRate */\n      dup1\n        /* \"contracts/Staking.sol\":8047:8064  _unstakingFeeRate */\n      0x01\n        /* \"contracts/Staking.sol\":8047:8085  _unstakingFeeRate = __unstakingFeeRate */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":8103:8142  SetUnstakingFeeRate(__unstakingFeeRate) */\n      0x150c688dd7595bf7862b8ab1fe46756450eb7d731037942b3bbc46f3f0e21b81\n        /* \"contracts/Staking.sol\":8123:8141  __unstakingFeeRate */\n      dup2\n        /* \"contracts/Staking.sol\":8103:8142  SetUnstakingFeeRate(__unstakingFeeRate) */\n      mload(0x40)\n      tag_311\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_311:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Staking.sol\":7876:8150  function setUnstakingFeeRate(uint256 __unstakingFeeRate) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Staking.sol\":7397:7624  function setRewardRate(uint256 __rewardRate) external onlyOwner {... */\n    tag_101:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_313\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_142\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_313:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_314\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_89\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_314:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_315\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_316\n      swap1\n      tag_146\n      jump\t// in\n    tag_316:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_315:\n        /* \"contracts/Staking.sol\":7505:7506  0 */\n      0x00\n        /* \"contracts/Staking.sol\":7490:7502  __rewardRate */\n      dup2\n        /* \"contracts/Staking.sol\":7490:7506  __rewardRate > 0 */\n      gt\n        /* \"contracts/Staking.sol\":7482:7524  require(__rewardRate > 0, \"Invalid value\") */\n      tag_318\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_319\n      swap1\n      tag_320\n      jump\t// in\n    tag_319:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_318:\n        /* \"contracts/Staking.sol\":7559:7571  __rewardRate */\n      dup1\n        /* \"contracts/Staking.sol\":7545:7556  _rewardRate */\n      0x03\n        /* \"contracts/Staking.sol\":7545:7571  _rewardRate = __rewardRate */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":7589:7616  SetRewardRate(__rewardRate) */\n      0x1946fb78c7ca778b54d82cabaac5ba67cf446f58d0ff1f8ceaebb6150e54e44f\n        /* \"contracts/Staking.sol\":7603:7615  __rewardRate */\n      dup2\n        /* \"contracts/Staking.sol\":7589:7616  SetRewardRate(__rewardRate) */\n      mload(0x40)\n      tag_321\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_321:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Staking.sol\":7397:7624  function setRewardRate(uint256 __rewardRate) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Staking.sol\":3631:4211  function stake(uint256 _amount) public{... */\n    tag_104:\n        /* \"contracts/Staking.sol\":3708:3709  0 */\n      0x00\n        /* \"contracts/Staking.sol\":3698:3705  _amount */\n      dup2\n        /* \"contracts/Staking.sol\":3698:3709  _amount > 0 */\n      gt\n        /* \"contracts/Staking.sol\":3690:3745  require(_amount > 0, \"Amount should be greater than 0\") */\n      tag_323\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_324\n      swap1\n      tag_154\n      jump\t// in\n    tag_324:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_323:\n        /* \"contracts/Staking.sol\":3794:3801  _amount */\n      dup1\n        /* \"contracts/Staking.sol\":3764:3769  token */\n      0x0d\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Staking.sol\":3764:3779  token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/Staking.sol\":3780:3790  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":3764:3791  token.balanceOf(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_325\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_325:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_326\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_326:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_328\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_328:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_329\n      swap2\n      swap1\n      tag_196\n      jump\t// in\n    tag_329:\n        /* \"contracts/Staking.sol\":3764:3801  token.balanceOf(msg.sender) > _amount */\n      gt\n        /* \"contracts/Staking.sol\":3756:3819  require(token.balanceOf(msg.sender) > _amount, \"Insufficient!\") */\n      tag_330\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_331\n      swap1\n      tag_236\n      jump\t// in\n    tag_331:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_330:\n        /* \"contracts/Staking.sol\":3868:3870  55 */\n      0x37\n        /* \"contracts/Staking.sol\":3838:3845  _staker */\n      0x0b\n        /* \"contracts/Staking.sol\":3838:3857  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":3846:3856  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":3838:3857  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":3838:3864  _staker[msg.sender].staked */\n      0x05\n      add\n      sload\n        /* \"contracts/Staking.sol\":3838:3870  _staker[msg.sender].staked == 55 */\n      eq\n        /* \"contracts/Staking.sol\":3830:3896  require(_staker[msg.sender].staked == 55, \"Error: invalid staker\") */\n      tag_332\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_333\n      swap1\n      tag_334\n      jump\t// in\n    tag_333:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_332:\n        /* \"contracts/Staking.sol\":3917:3931  updateReward() */\n      tag_335\n        /* \"contracts/Staking.sol\":3917:3929  updateReward */\n      tag_159\n        /* \"contracts/Staking.sol\":3917:3931  updateReward() */\n      jump\t// in\n    tag_335:\n        /* \"contracts/Staking.sol\":3952:4010  token.safeTransferFrom(msg.sender, address(this), _amount) */\n      tag_336\n        /* \"contracts/Staking.sol\":3975:3985  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":3995:3999  this */\n      address\n        /* \"contracts/Staking.sol\":4002:4009  _amount */\n      dup4\n        /* \"contracts/Staking.sol\":3952:3957  token */\n      0x0d\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Staking.sol\":3952:3974  token.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_337\n      swap1\n        /* \"contracts/Staking.sol\":3952:4010  token.safeTransferFrom(msg.sender, address(this), _amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_336:\n        /* \"contracts/Staking.sol\":4056:4101  _staker[msg.sender].stakedAmount.add(_amount) */\n      tag_338\n        /* \"contracts/Staking.sol\":4093:4100  _amount */\n      dup2\n        /* \"contracts/Staking.sol\":4056:4063  _staker */\n      0x0b\n        /* \"contracts/Staking.sol\":4056:4075  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":4064:4074  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":4056:4075  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":4056:4088  _staker[msg.sender].stakedAmount */\n      0x01\n      add\n      sload\n        /* \"contracts/Staking.sol\":4056:4092  _staker[msg.sender].stakedAmount.add */\n      tag_168\n      swap1\n        /* \"contracts/Staking.sol\":4056:4101  _staker[msg.sender].stakedAmount.add(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_338:\n        /* \"contracts/Staking.sol\":4021:4028  _staker */\n      0x0b\n        /* \"contracts/Staking.sol\":4021:4040  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":4029:4039  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":4021:4040  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":4021:4053  _staker[msg.sender].stakedAmount */\n      0x01\n      add\n        /* \"contracts/Staking.sol\":4021:4101  _staker[msg.sender].stakedAmount = _staker[msg.sender].stakedAmount.add(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":4126:4150  totalStaked.add(_amount) */\n      tag_339\n        /* \"contracts/Staking.sol\":4142:4149  _amount */\n      dup2\n        /* \"contracts/Staking.sol\":4126:4137  totalStaked */\n      sload(0x0c)\n        /* \"contracts/Staking.sol\":4126:4141  totalStaked.add */\n      tag_168\n      swap1\n        /* \"contracts/Staking.sol\":4126:4150  totalStaked.add(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_339:\n        /* \"contracts/Staking.sol\":4112:4123  totalStaked */\n      0x0c\n        /* \"contracts/Staking.sol\":4112:4150  totalStaked = totalStaked.add(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":4176:4203  Staked(msg.sender, _amount) */\n      0x9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d\n        /* \"contracts/Staking.sol\":4183:4193  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":4195:4202  _amount */\n      dup3\n        /* \"contracts/Staking.sol\":4176:4203  Staked(msg.sender, _amount) */\n      mload(0x40)\n      tag_340\n      swap3\n      swap2\n      swap1\n      tag_182\n      jump\t// in\n    tag_340:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Staking.sol\":3631:4211  function stake(uint256 _amount) public{... */\n      pop\n      jump\t// out\n        /* \"contracts/Staking.sol\":8900:9078  function setGoldMinAmount(uint256 _minAmount) external onlyOwner {... */\n    tag_107:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_342\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_142\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_342:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_343\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_89\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_343:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_344\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_345\n      swap1\n      tag_146\n      jump\t// in\n    tag_345:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_344:\n        /* \"contracts/Staking.sol\":9000:9001  0 */\n      0x00\n        /* \"contracts/Staking.sol\":8987:8997  _minAmount */\n      dup2\n        /* \"contracts/Staking.sol\":8987:9001  _minAmount > 0 */\n      gt\n        /* \"contracts/Staking.sol\":8978:9019  require (_minAmount > 0, \"Can't be zero\") */\n      tag_347\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_348\n      swap1\n      tag_150\n      jump\t// in\n    tag_348:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_347:\n        /* \"contracts/Staking.sol\":9060:9070  _minAmount */\n      dup1\n        /* \"contracts/Staking.sol\":9040:9057  _minStakeAmount_g */\n      0x07\n        /* \"contracts/Staking.sol\":9040:9070  _minStakeAmount_g = _minAmount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":8900:9078  function setGoldMinAmount(uint256 _minAmount) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Staking.sol\":4433:4622  function getStakerMode(address _address) public view returns (uint256) {... */\n    tag_110:\n        /* \"contracts/Staking.sol\":4495:4502  uint256 */\n      0x00\n        /* \"contracts/Staking.sol\":4553:4555  55 */\n      0x37\n        /* \"contracts/Staking.sol\":4525:4549  isStartStaking(_address) */\n      tag_350\n        /* \"contracts/Staking.sol\":4540:4548  _address */\n      dup4\n        /* \"contracts/Staking.sol\":4525:4539  isStartStaking */\n      tag_135\n        /* \"contracts/Staking.sol\":4525:4549  isStartStaking(_address) */\n      jump\t// in\n    tag_350:\n        /* \"contracts/Staking.sol\":4525:4555  isStartStaking(_address) == 55 */\n      eq\n        /* \"contracts/Staking.sol\":4517:4574  require(isStartStaking(_address) == 55, \"Not staker yet\") */\n      tag_351\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_352\n      swap1\n      tag_353\n      jump\t// in\n    tag_352:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_351:\n        /* \"contracts/Staking.sol\":4592:4599  _staker */\n      0x0b\n        /* \"contracts/Staking.sol\":4592:4609  _staker[_address] */\n      0x00\n        /* \"contracts/Staking.sol\":4600:4608  _address */\n      dup4\n        /* \"contracts/Staking.sol\":4592:4609  _staker[_address] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":4592:4614  _staker[_address].mode */\n      0x02\n      add\n      sload\n        /* \"contracts/Staking.sol\":4585:4614  return _staker[_address].mode */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":4433:4622  function getStakerMode(address _address) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Staking.sol\":8540:8712  function setCopperMinAmount(uint256 _minAmount) external onlyOwner {... */\n    tag_114:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_355\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_142\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_355:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_356\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_89\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_356:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_357\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_358\n      swap1\n      tag_146\n      jump\t// in\n    tag_358:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_357:\n        /* \"contracts/Staking.sol\":8642:8643  0 */\n      0x00\n        /* \"contracts/Staking.sol\":8629:8639  _minAmount */\n      dup2\n        /* \"contracts/Staking.sol\":8629:8643  _minAmount > 0 */\n      gt\n        /* \"contracts/Staking.sol\":8620:8661  require (_minAmount > 0, \"Can't be zero\") */\n      tag_360\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_361\n      swap1\n      tag_150\n      jump\t// in\n    tag_361:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_360:\n        /* \"contracts/Staking.sol\":8694:8704  _minAmount */\n      dup1\n        /* \"contracts/Staking.sol\":8674:8691  _minStakeAmount_c */\n      0x09\n        /* \"contracts/Staking.sol\":8674:8704  _minStakeAmount_c = _minAmount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":8540:8712  function setCopperMinAmount(uint256 _minAmount) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Staking.sol\":8344:8528  function setThreeMonthMinAmount(uint256 _minAmount) external onlyOwner {... */\n    tag_117:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_363\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_142\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_363:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_364\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_89\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_364:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_365\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_366\n      swap1\n      tag_146\n      jump\t// in\n    tag_366:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_365:\n        /* \"contracts/Staking.sol\":8458:8459  0 */\n      0x00\n        /* \"contracts/Staking.sol\":8445:8455  _minAmount */\n      dup2\n        /* \"contracts/Staking.sol\":8445:8459  _minAmount > 0 */\n      gt\n        /* \"contracts/Staking.sol\":8436:8477  require (_minAmount > 0, \"Can't be zero\") */\n      tag_368\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_369\n      swap1\n      tag_150\n      jump\t// in\n    tag_369:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_368:\n        /* \"contracts/Staking.sol\":8510:8520  _minAmount */\n      dup1\n        /* \"contracts/Staking.sol\":8490:8507  _minStakeAmount_m */\n      0x06\n        /* \"contracts/Staking.sol\":8490:8520  _minStakeAmount_m = _minAmount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":8344:8528  function setThreeMonthMinAmount(uint256 _minAmount) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Staking.sol\":5441:5601  function lockupPeriod(uint256 mode) public view returns (uint256) {... */\n    tag_120:\n        /* \"contracts/Staking.sol\":5498:5505  uint256 */\n      0x00\n        /* \"contracts/Staking.sol\":5540:5541  0 */\n      dup1\n        /* \"contracts/Staking.sol\":5532:5536  mode */\n      dup3\n        /* \"contracts/Staking.sol\":5532:5541  mode == 0 */\n      eq\n        /* \"contracts/Staking.sol\":5528:5563  if (mode == 0) return _lockupPeriod */\n      iszero\n      tag_371\n      jumpi\n        /* \"contracts/Staking.sol\":5550:5563  _lockupPeriod */\n      sload(0x05)\n        /* \"contracts/Staking.sol\":5543:5563  return _lockupPeriod */\n      swap1\n      pop\n      jump(tag_370)\n        /* \"contracts/Staking.sol\":5528:5563  if (mode == 0) return _lockupPeriod */\n    tag_371:\n        /* \"contracts/Staking.sol\":5581:5593  _eventPeriod */\n      sload(0x02)\n        /* \"contracts/Staking.sol\":5574:5593  return _eventPeriod */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":5441:5601  function lockupPeriod(uint256 mode) public view returns (uint256) {... */\n    tag_370:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_124:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_373\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_142\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_373:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_374\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_89\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_374:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_375\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_376\n      swap1\n      tag_146\n      jump\t// in\n    tag_376:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_375:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2026:2027  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2028  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2014  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2028  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_378\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_379\n      swap1\n      tag_380\n      jump\t// in\n    tag_379:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_378:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      tag_381\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2100:2108  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2099  _transferOwnership */\n      tag_289\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_381:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Staking.sol\":5195:5331  function stakedAmount(address _address) public view returns (uint256) {... */\n    tag_127:\n        /* \"contracts/Staking.sol\":5256:5263  uint256 */\n      0x00\n        /* \"contracts/Staking.sol\":5293:5300  _staker */\n      0x0b\n        /* \"contracts/Staking.sol\":5293:5310  _staker[_address] */\n      0x00\n        /* \"contracts/Staking.sol\":5301:5309  _address */\n      dup4\n        /* \"contracts/Staking.sol\":5293:5310  _staker[_address] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":5293:5323  _staker[_address].stakedAmount */\n      0x01\n      add\n      sload\n        /* \"contracts/Staking.sol\":5286:5323  return _staker[_address].stakedAmount */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":5195:5331  function stakedAmount(address _address) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Staking.sol\":1239:1258  IBEP20 public token */\n    tag_130:\n      0x0d\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Staking.sol\":4634:4758  function isStartStaking(address _address) public view returns (uint256) {... */\n    tag_135:\n        /* \"contracts/Staking.sol\":4697:4704  uint256 */\n      0x00\n        /* \"contracts/Staking.sol\":4726:4733  _staker */\n      0x0b\n        /* \"contracts/Staking.sol\":4726:4743  _staker[_address] */\n      0x00\n        /* \"contracts/Staking.sol\":4734:4742  _address */\n      dup4\n        /* \"contracts/Staking.sol\":4726:4743  _staker[_address] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":4726:4750  _staker[_address].staked */\n      0x05\n      add\n      sload\n        /* \"contracts/Staking.sol\":4719:4750  return _staker[_address].staked */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":4634:4758  function isStartStaking(address _address) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_142:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Staking.sol\":2200:2654  function updateReward() private{... */\n    tag_159:\n        /* \"contracts/Staking.sol\":2252:2278  uint256 stakerStakedAmount */\n      0x00\n        /* \"contracts/Staking.sol\":2281:2288  _staker */\n      0x0b\n        /* \"contracts/Staking.sol\":2281:2300  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":2289:2299  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":2281:2300  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":2281:2313  _staker[msg.sender].stakedAmount */\n      0x01\n      add\n      sload\n        /* \"contracts/Staking.sol\":2252:2313  uint256 stakerStakedAmount = _staker[msg.sender].stakedAmount */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":2334:2351  uint256 newReward */\n      0x00\n        /* \"contracts/Staking.sol\":2354:2475  stakerStakedAmount.mul(block.timestamp.sub(_staker[msg.sender].lastUpdatedTime)).mul(_rewardRate).div(1 minutes).div(1e4) */\n      tag_386\n        /* \"contracts/Staking.sol\":2471:2474  1e4 */\n      0x2710\n        /* \"contracts/Staking.sol\":2354:2466  stakerStakedAmount.mul(block.timestamp.sub(_staker[msg.sender].lastUpdatedTime)).mul(_rewardRate).div(1 minutes) */\n      tag_387\n        /* \"contracts/Staking.sol\":2456:2465  1 minutes */\n      0x3c\n        /* \"contracts/Staking.sol\":2354:2451  stakerStakedAmount.mul(block.timestamp.sub(_staker[msg.sender].lastUpdatedTime)).mul(_rewardRate) */\n      tag_388\n        /* \"contracts/Staking.sol\":2439:2450  _rewardRate */\n      sload(0x03)\n        /* \"contracts/Staking.sol\":2354:2434  stakerStakedAmount.mul(block.timestamp.sub(_staker[msg.sender].lastUpdatedTime)) */\n      tag_389\n        /* \"contracts/Staking.sol\":2377:2433  block.timestamp.sub(_staker[msg.sender].lastUpdatedTime) */\n      tag_390\n        /* \"contracts/Staking.sol\":2397:2404  _staker */\n      0x0b\n        /* \"contracts/Staking.sol\":2397:2416  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":2405:2415  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":2397:2416  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":2397:2432  _staker[msg.sender].lastUpdatedTime */\n      0x04\n      add\n      sload\n        /* \"contracts/Staking.sol\":2377:2392  block.timestamp */\n      timestamp\n        /* \"contracts/Staking.sol\":2377:2396  block.timestamp.sub */\n      tag_162\n      swap1\n        /* \"contracts/Staking.sol\":2377:2433  block.timestamp.sub(_staker[msg.sender].lastUpdatedTime) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_390:\n        /* \"contracts/Staking.sol\":2354:2372  stakerStakedAmount */\n      dup10\n        /* \"contracts/Staking.sol\":2354:2376  stakerStakedAmount.mul */\n      tag_167\n      swap1\n        /* \"contracts/Staking.sol\":2354:2434  stakerStakedAmount.mul(block.timestamp.sub(_staker[msg.sender].lastUpdatedTime)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_389:\n        /* \"contracts/Staking.sol\":2354:2438  stakerStakedAmount.mul(block.timestamp.sub(_staker[msg.sender].lastUpdatedTime)).mul */\n      tag_167\n      swap1\n        /* \"contracts/Staking.sol\":2354:2451  stakerStakedAmount.mul(block.timestamp.sub(_staker[msg.sender].lastUpdatedTime)).mul(_rewardRate) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_388:\n        /* \"contracts/Staking.sol\":2354:2455  stakerStakedAmount.mul(block.timestamp.sub(_staker[msg.sender].lastUpdatedTime)).mul(_rewardRate).div */\n      tag_163\n      swap1\n        /* \"contracts/Staking.sol\":2354:2466  stakerStakedAmount.mul(block.timestamp.sub(_staker[msg.sender].lastUpdatedTime)).mul(_rewardRate).div(1 minutes) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_387:\n        /* \"contracts/Staking.sol\":2354:2470  stakerStakedAmount.mul(block.timestamp.sub(_staker[msg.sender].lastUpdatedTime)).mul(_rewardRate).div(1 minutes).div */\n      tag_163\n      swap1\n        /* \"contracts/Staking.sol\":2354:2475  stakerStakedAmount.mul(block.timestamp.sub(_staker[msg.sender].lastUpdatedTime)).mul(_rewardRate).div(1 minutes).div(1e4) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_386:\n        /* \"contracts/Staking.sol\":2334:2475  uint256 newReward = stakerStakedAmount.mul(block.timestamp.sub(_staker[msg.sender].lastUpdatedTime)).mul(_rewardRate).div(1 minutes).div(1e4) */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":2528:2582  _staker[msg.sender].stakerCurrentReward.add(newReward) */\n      tag_391\n        /* \"contracts/Staking.sol\":2572:2581  newReward */\n      dup2\n        /* \"contracts/Staking.sol\":2528:2535  _staker */\n      0x0b\n        /* \"contracts/Staking.sol\":2528:2547  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":2536:2546  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":2528:2547  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":2528:2567  _staker[msg.sender].stakerCurrentReward */\n      0x00\n      add\n      sload\n        /* \"contracts/Staking.sol\":2528:2571  _staker[msg.sender].stakerCurrentReward.add */\n      tag_168\n      swap1\n        /* \"contracts/Staking.sol\":2528:2582  _staker[msg.sender].stakerCurrentReward.add(newReward) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_391:\n        /* \"contracts/Staking.sol\":2486:2493  _staker */\n      0x0b\n        /* \"contracts/Staking.sol\":2486:2505  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":2494:2504  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":2486:2505  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":2486:2525  _staker[msg.sender].stakerCurrentReward */\n      0x00\n      add\n        /* \"contracts/Staking.sol\":2486:2582  _staker[msg.sender].stakerCurrentReward = _staker[msg.sender].stakerCurrentReward.add(newReward) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":2631:2646  block.timestamp */\n      timestamp\n        /* \"contracts/Staking.sol\":2593:2600  _staker */\n      0x0b\n        /* \"contracts/Staking.sol\":2593:2612  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":2601:2611  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":2593:2612  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":2593:2628  _staker[msg.sender].lastUpdatedTime */\n      0x04\n      add\n        /* \"contracts/Staking.sol\":2593:2646  _staker[msg.sender].lastUpdatedTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":2231:2654  {... */\n      pop\n      pop\n        /* \"contracts/Staking.sol\":2200:2654  function updateReward() private{... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3108:3204  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_162:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3166:3173  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3196:3197  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3192:3193  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3192:3197  a - b */\n      tag_393\n      swap2\n      swap1\n      tag_394\n      jump\t// in\n    tag_393:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3185:3197  return a - b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3108:3204  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3836:3932  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_163:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3894:3901  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3924:3925  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3920:3921  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3920:3925  a / b */\n      tag_396\n      swap2\n      swap1\n      tag_397\n      jump\t// in\n    tag_396:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3913:3925  return a / b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3836:3932  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3451:3547  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_167:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3509:3516  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3539:3540  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3535:3536  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3535:3540  a * b */\n      tag_399\n      swap2\n      swap1\n      tag_400\n      jump\t// in\n    tag_399:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3528:3540  return a * b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3451:3547  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2741:2837  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_168:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2799:2806  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2829:2830  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2825:2826  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2825:2830  a + b */\n      tag_402\n      swap2\n      swap1\n      tag_281\n      jump\t// in\n    tag_402:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2818:2830  return a + b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2741:2837  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SafeBEP20.sol\":290:467  function safeTransfer(IBEP20 token, address to, uint256 value) internal {... */\n    tag_180:\n        /* \"contracts/SafeBEP20.sol\":373:459  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_404\n        /* \"contracts/SafeBEP20.sol\":393:398  token */\n      dup4\n        /* \"contracts/SafeBEP20.sol\":423:446  token.transfer.selector */\n      shl(0xe0, 0xa9059cbb)\n        /* \"contracts/SafeBEP20.sol\":448:450  to */\n      dup5\n        /* \"contracts/SafeBEP20.sol\":452:457  value */\n      dup5\n        /* \"contracts/SafeBEP20.sol\":400:458  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      add(0x24, mload(0x40))\n      tag_405\n      swap3\n      swap2\n      swap1\n      tag_182\n      jump\t// in\n    tag_405:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/SafeBEP20.sol\":373:392  _callOptionalReturn */\n      tag_406\n        /* \"contracts/SafeBEP20.sol\":373:459  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n    tag_404:\n        /* \"contracts/SafeBEP20.sol\":290:467  function safeTransfer(IBEP20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_289:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2368  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2387:2395  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2384  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2441:2449  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2431:2439  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/SafeBEP20.sol\":475:680  function safeTransferFrom(IBEP20 token, address from, address to, uint256 value) internal {... */\n    tag_337:\n        /* \"contracts/SafeBEP20.sol\":576:672  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      tag_409\n        /* \"contracts/SafeBEP20.sol\":596:601  token */\n      dup5\n        /* \"contracts/SafeBEP20.sol\":626:653  token.transferFrom.selector */\n      shl(0xe0, 0x23b872dd)\n        /* \"contracts/SafeBEP20.sol\":655:659  from */\n      dup6\n        /* \"contracts/SafeBEP20.sol\":661:663  to */\n      dup6\n        /* \"contracts/SafeBEP20.sol\":665:670  value */\n      dup6\n        /* \"contracts/SafeBEP20.sol\":603:671  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      add(0x24, mload(0x40))\n      tag_410\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_411\n      jump\t// in\n    tag_410:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/SafeBEP20.sol\":576:595  _callOptionalReturn */\n      tag_406\n        /* \"contracts/SafeBEP20.sol\":576:672  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      jump\t// in\n    tag_409:\n        /* \"contracts/SafeBEP20.sol\":475:680  function safeTransferFrom(IBEP20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SafeBEP20.sol\":2599:3368  function _callOptionalReturn(IBEP20 token, bytes memory data) private {... */\n    tag_406:\n        /* \"contracts/SafeBEP20.sol\":3031:3054  bytes memory returndata */\n      0x00\n        /* \"contracts/SafeBEP20.sol\":3057:3126  address(token).functionCall(data, \"SafeBEP20: low-level call failed\") */\n      tag_413\n        /* \"contracts/SafeBEP20.sol\":3085:3089  data */\n      dup3\n        /* \"contracts/SafeBEP20.sol\":3057:3126  address(token).functionCall(data, \"SafeBEP20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666542455032303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"contracts/SafeBEP20.sol\":3065:3070  token */\n      dup6\n        /* \"contracts/SafeBEP20.sol\":3057:3084  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_414\n      swap1\n        /* \"contracts/SafeBEP20.sol\":3057:3126  address(token).functionCall(data, \"SafeBEP20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_413:\n        /* \"contracts/SafeBEP20.sol\":3031:3126  bytes memory returndata = address(token).functionCall(data, \"SafeBEP20: low-level call failed\") */\n      swap1\n      pop\n        /* \"contracts/SafeBEP20.sol\":3161:3162  0 */\n      0x00\n        /* \"contracts/SafeBEP20.sol\":3141:3151  returndata */\n      dup2\n        /* \"contracts/SafeBEP20.sol\":3141:3158  returndata.length */\n      mload\n        /* \"contracts/SafeBEP20.sol\":3141:3162  returndata.length > 0 */\n      gt\n        /* \"contracts/SafeBEP20.sol\":3137:3361  if (returndata.length > 0) { // Return data is optional... */\n      iszero\n      tag_415\n      jumpi\n        /* \"contracts/SafeBEP20.sol\":3283:3293  returndata */\n      dup1\n        /* \"contracts/SafeBEP20.sol\":3272:3302  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_416\n      swap2\n      swap1\n      tag_417\n      jump\t// in\n    tag_416:\n        /* \"contracts/SafeBEP20.sol\":3264:3349  require(abi.decode(returndata, (bool)), \"SafeBEP20: BEP20 operation did not succeed\") */\n      tag_418\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_419\n      swap1\n      tag_420\n      jump\t// in\n    tag_419:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_418:\n        /* \"contracts/SafeBEP20.sol\":3137:3361  if (returndata.length > 0) { // Return data is optional... */\n    tag_415:\n        /* \"contracts/SafeBEP20.sol\":2669:3368  {... */\n      pop\n        /* \"contracts/SafeBEP20.sol\":2599:3368  function _callOptionalReturn(IBEP20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3861:4084  function functionCall(... */\n    tag_414:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3994:4006  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4025:4077  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_422\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4047:4053  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4055:4059  data */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4061:4062  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4064:4076  errorMessage */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4025:4046  functionCallWithValue */\n      tag_423\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4025:4077  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_422:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4018:4077  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3861:4084  function functionCall(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4948:5447  function functionCallWithValue(... */\n    tag_423:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5113:5125  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5170:5175  value */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5145:5166  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5145:5175  address(this).balance >= value */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5137:5218  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_425\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_426\n      swap1\n      tag_427\n      jump\t// in\n    tag_426:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_425:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5236:5254  isContract(target) */\n      tag_428\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5247:5253  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5236:5246  isContract */\n      tag_429\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5236:5254  isContract(target) */\n      jump\t// in\n    tag_428:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5228:5288  require(isContract(target), \"Address: call to non-contract\") */\n      tag_430\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_431\n      swap1\n      tag_432\n      jump\t// in\n    tag_431:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_430:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5300:5312  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5314:5337  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5341:5347  target */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5341:5352  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5360:5365  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5367:5371  data */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5341:5372  target.call{value: value}(data) */\n      mload(0x40)\n      tag_433\n      swap2\n      swap1\n      tag_434\n      jump\t// in\n    tag_433:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_437\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_436)\n    tag_437:\n      0x60\n      swap2\n      pop\n    tag_436:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5299:5372  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5389:5440  verifyCallResult(success, returndata, errorMessage) */\n      tag_438\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5406:5413  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5415:5425  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5427:5439  errorMessage */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5389:5405  verifyCallResult */\n      tag_439\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5389:5440  verifyCallResult(success, returndata, errorMessage) */\n      jump\t// in\n    tag_438:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5382:5440  return verifyCallResult(success, returndata, errorMessage) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4948:5447  function functionCallWithValue(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1175:1495  function isContract(address account) internal view returns (bool) {... */\n    tag_429:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1235:1239  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1487:1488  0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1472  account */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1484  account.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1488  account.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1458:1488  return account.code.length > 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1175:1495  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7561:8253  function verifyCallResult(... */\n    tag_439:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7707:7719  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7735:7742  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7731:8247  if (success) {... */\n      iszero\n      tag_442\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7765:7775  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7758:7775  return returndata */\n      swap1\n      pop\n      jump(tag_441)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7731:8247  if (success) {... */\n    tag_442:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7896:7897  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7876:7886  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7876:7893  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7876:7897  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7872:8237  if (returndata.length > 0) {... */\n      iszero\n      tag_444\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8070:8080  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8064:8081  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8130:8145  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8117:8127  returndata */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8113:8115  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8109:8128  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8102:8146  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7872:8237  if (returndata.length > 0) {... */\n    tag_444:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8209:8221  errorMessage */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8202:8222  revert(errorMessage) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_446\n      swap2\n      swap1\n      tag_447\n      jump\t// in\n    tag_446:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7561:8253  function verifyCallResult(... */\n    tag_441:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_448:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_449:\n        /* \"#utility.yul\":177:201   */\n      tag_518\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_448\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_42:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_520\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_449\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":523:640   */\n    tag_451:\n        /* \"#utility.yul\":632:633   */\n      0x00\n        /* \"#utility.yul\":629:630   */\n      dup1\n        /* \"#utility.yul\":622:634   */\n      revert\n        /* \"#utility.yul\":769:891   */\n    tag_453:\n        /* \"#utility.yul\":842:866   */\n      tag_525\n        /* \"#utility.yul\":860:865   */\n      dup2\n        /* \"#utility.yul\":842:866   */\n      tag_448\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":835:840   */\n      dup2\n        /* \"#utility.yul\":832:867   */\n      eq\n        /* \"#utility.yul\":822:885   */\n      tag_526\n      jumpi\n        /* \"#utility.yul\":881:882   */\n      0x00\n        /* \"#utility.yul\":878:879   */\n      dup1\n        /* \"#utility.yul\":871:883   */\n      revert\n        /* \"#utility.yul\":822:885   */\n    tag_526:\n        /* \"#utility.yul\":769:891   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":897:1036   */\n    tag_454:\n        /* \"#utility.yul\":943:948   */\n      0x00\n        /* \"#utility.yul\":981:987   */\n      dup2\n        /* \"#utility.yul\":968:988   */\n      calldataload\n        /* \"#utility.yul\":959:988   */\n      swap1\n      pop\n        /* \"#utility.yul\":997:1030   */\n      tag_528\n        /* \"#utility.yul\":1024:1029   */\n      dup2\n        /* \"#utility.yul\":997:1030   */\n      tag_453\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":897:1036   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1042:1371   */\n    tag_51:\n        /* \"#utility.yul\":1101:1107   */\n      0x00\n        /* \"#utility.yul\":1150:1152   */\n      0x20\n        /* \"#utility.yul\":1138:1147   */\n      dup3\n        /* \"#utility.yul\":1129:1136   */\n      dup5\n        /* \"#utility.yul\":1125:1148   */\n      sub\n        /* \"#utility.yul\":1121:1153   */\n      slt\n        /* \"#utility.yul\":1118:1237   */\n      iszero\n      tag_530\n      jumpi\n        /* \"#utility.yul\":1156:1235   */\n      tag_531\n      tag_451\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":1118:1237   */\n    tag_530:\n        /* \"#utility.yul\":1276:1277   */\n      0x00\n        /* \"#utility.yul\":1301:1354   */\n      tag_532\n        /* \"#utility.yul\":1346:1353   */\n      dup5\n        /* \"#utility.yul\":1337:1343   */\n      dup3\n        /* \"#utility.yul\":1326:1335   */\n      dup6\n        /* \"#utility.yul\":1322:1344   */\n      add\n        /* \"#utility.yul\":1301:1354   */\n      tag_454\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":1291:1354   */\n      swap2\n      pop\n        /* \"#utility.yul\":1247:1364   */\n      pop\n        /* \"#utility.yul\":1042:1371   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1377:1503   */\n    tag_455:\n        /* \"#utility.yul\":1414:1421   */\n      0x00\n        /* \"#utility.yul\":1454:1496   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1447:1452   */\n      dup3\n        /* \"#utility.yul\":1443:1497   */\n      and\n        /* \"#utility.yul\":1432:1497   */\n      swap1\n      pop\n        /* \"#utility.yul\":1377:1503   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1509:1605   */\n    tag_456:\n        /* \"#utility.yul\":1546:1553   */\n      0x00\n        /* \"#utility.yul\":1575:1599   */\n      tag_535\n        /* \"#utility.yul\":1593:1598   */\n      dup3\n        /* \"#utility.yul\":1575:1599   */\n      tag_455\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":1564:1599   */\n      swap1\n      pop\n        /* \"#utility.yul\":1509:1605   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1733   */\n    tag_457:\n        /* \"#utility.yul\":1684:1708   */\n      tag_537\n        /* \"#utility.yul\":1702:1707   */\n      dup2\n        /* \"#utility.yul\":1684:1708   */\n      tag_456\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":1677:1682   */\n      dup2\n        /* \"#utility.yul\":1674:1709   */\n      eq\n        /* \"#utility.yul\":1664:1727   */\n      tag_538\n      jumpi\n        /* \"#utility.yul\":1723:1724   */\n      0x00\n        /* \"#utility.yul\":1720:1721   */\n      dup1\n        /* \"#utility.yul\":1713:1725   */\n      revert\n        /* \"#utility.yul\":1664:1727   */\n    tag_538:\n        /* \"#utility.yul\":1611:1733   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1739:1878   */\n    tag_458:\n        /* \"#utility.yul\":1785:1790   */\n      0x00\n        /* \"#utility.yul\":1823:1829   */\n      dup2\n        /* \"#utility.yul\":1810:1830   */\n      calldataload\n        /* \"#utility.yul\":1801:1830   */\n      swap1\n      pop\n        /* \"#utility.yul\":1839:1872   */\n      tag_540\n        /* \"#utility.yul\":1866:1871   */\n      dup2\n        /* \"#utility.yul\":1839:1872   */\n      tag_457\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":1739:1878   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1884:2213   */\n    tag_60:\n        /* \"#utility.yul\":1943:1949   */\n      0x00\n        /* \"#utility.yul\":1992:1994   */\n      0x20\n        /* \"#utility.yul\":1980:1989   */\n      dup3\n        /* \"#utility.yul\":1971:1978   */\n      dup5\n        /* \"#utility.yul\":1967:1990   */\n      sub\n        /* \"#utility.yul\":1963:1995   */\n      slt\n        /* \"#utility.yul\":1960:2079   */\n      iszero\n      tag_542\n      jumpi\n        /* \"#utility.yul\":1998:2077   */\n      tag_543\n      tag_451\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":1960:2079   */\n    tag_542:\n        /* \"#utility.yul\":2118:2119   */\n      0x00\n        /* \"#utility.yul\":2143:2196   */\n      tag_544\n        /* \"#utility.yul\":2188:2195   */\n      dup5\n        /* \"#utility.yul\":2179:2185   */\n      dup3\n        /* \"#utility.yul\":2168:2177   */\n      dup6\n        /* \"#utility.yul\":2164:2186   */\n      add\n        /* \"#utility.yul\":2143:2196   */\n      tag_458\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":2133:2196   */\n      swap2\n      pop\n        /* \"#utility.yul\":2089:2206   */\n      pop\n        /* \"#utility.yul\":1884:2213   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2219:2693   */\n    tag_68:\n        /* \"#utility.yul\":2287:2293   */\n      0x00\n        /* \"#utility.yul\":2295:2301   */\n      dup1\n        /* \"#utility.yul\":2344:2346   */\n      0x40\n        /* \"#utility.yul\":2332:2341   */\n      dup4\n        /* \"#utility.yul\":2323:2330   */\n      dup6\n        /* \"#utility.yul\":2319:2342   */\n      sub\n        /* \"#utility.yul\":2315:2347   */\n      slt\n        /* \"#utility.yul\":2312:2431   */\n      iszero\n      tag_546\n      jumpi\n        /* \"#utility.yul\":2350:2429   */\n      tag_547\n      tag_451\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":2312:2431   */\n    tag_546:\n        /* \"#utility.yul\":2470:2471   */\n      0x00\n        /* \"#utility.yul\":2495:2548   */\n      tag_548\n        /* \"#utility.yul\":2540:2547   */\n      dup6\n        /* \"#utility.yul\":2531:2537   */\n      dup3\n        /* \"#utility.yul\":2520:2529   */\n      dup7\n        /* \"#utility.yul\":2516:2538   */\n      add\n        /* \"#utility.yul\":2495:2548   */\n      tag_454\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":2485:2548   */\n      swap3\n      pop\n        /* \"#utility.yul\":2441:2558   */\n      pop\n        /* \"#utility.yul\":2597:2599   */\n      0x20\n        /* \"#utility.yul\":2623:2676   */\n      tag_549\n        /* \"#utility.yul\":2668:2675   */\n      dup6\n        /* \"#utility.yul\":2659:2665   */\n      dup3\n        /* \"#utility.yul\":2648:2657   */\n      dup7\n        /* \"#utility.yul\":2644:2666   */\n      add\n        /* \"#utility.yul\":2623:2676   */\n      tag_454\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":2613:2676   */\n      swap2\n      pop\n        /* \"#utility.yul\":2568:2686   */\n      pop\n        /* \"#utility.yul\":2219:2693   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2699:2817   */\n    tag_459:\n        /* \"#utility.yul\":2786:2810   */\n      tag_551\n        /* \"#utility.yul\":2804:2809   */\n      dup2\n        /* \"#utility.yul\":2786:2810   */\n      tag_456\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":2781:2784   */\n      dup3\n        /* \"#utility.yul\":2774:2811   */\n      mstore\n        /* \"#utility.yul\":2699:2817   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2823:3045   */\n    tag_91:\n        /* \"#utility.yul\":2916:2920   */\n      0x00\n        /* \"#utility.yul\":2954:2956   */\n      0x20\n        /* \"#utility.yul\":2943:2952   */\n      dup3\n        /* \"#utility.yul\":2939:2957   */\n      add\n        /* \"#utility.yul\":2931:2957   */\n      swap1\n      pop\n        /* \"#utility.yul\":2967:3038   */\n      tag_553\n        /* \"#utility.yul\":3035:3036   */\n      0x00\n        /* \"#utility.yul\":3024:3033   */\n      dup4\n        /* \"#utility.yul\":3020:3037   */\n      add\n        /* \"#utility.yul\":3011:3017   */\n      dup5\n        /* \"#utility.yul\":2967:3038   */\n      tag_459\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":2823:3045   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3051:3111   */\n    tag_460:\n        /* \"#utility.yul\":3079:3082   */\n      0x00\n        /* \"#utility.yul\":3100:3105   */\n      dup2\n        /* \"#utility.yul\":3093:3105   */\n      swap1\n      pop\n        /* \"#utility.yul\":3051:3111   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3117:3259   */\n    tag_461:\n        /* \"#utility.yul\":3167:3176   */\n      0x00\n        /* \"#utility.yul\":3200:3253   */\n      tag_556\n        /* \"#utility.yul\":3218:3252   */\n      tag_557\n        /* \"#utility.yul\":3227:3251   */\n      tag_558\n        /* \"#utility.yul\":3245:3250   */\n      dup5\n        /* \"#utility.yul\":3227:3251   */\n      tag_455\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":3218:3252   */\n      tag_460\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":3200:3253   */\n      tag_455\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":3187:3253   */\n      swap1\n      pop\n        /* \"#utility.yul\":3117:3259   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3265:3391   */\n    tag_462:\n        /* \"#utility.yul\":3315:3324   */\n      0x00\n        /* \"#utility.yul\":3348:3385   */\n      tag_560\n        /* \"#utility.yul\":3379:3384   */\n      dup3\n        /* \"#utility.yul\":3348:3385   */\n      tag_461\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":3335:3385   */\n      swap1\n      pop\n        /* \"#utility.yul\":3265:3391   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3397:3537   */\n    tag_463:\n        /* \"#utility.yul\":3461:3470   */\n      0x00\n        /* \"#utility.yul\":3494:3531   */\n      tag_562\n        /* \"#utility.yul\":3525:3530   */\n      dup3\n        /* \"#utility.yul\":3494:3531   */\n      tag_462\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":3481:3531   */\n      swap1\n      pop\n        /* \"#utility.yul\":3397:3537   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3543:3702   */\n    tag_464:\n        /* \"#utility.yul\":3644:3695   */\n      tag_564\n        /* \"#utility.yul\":3689:3694   */\n      dup2\n        /* \"#utility.yul\":3644:3695   */\n      tag_463\n      jump\t// in\n    tag_564:\n        /* \"#utility.yul\":3639:3642   */\n      dup3\n        /* \"#utility.yul\":3632:3696   */\n      mstore\n        /* \"#utility.yul\":3543:3702   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3708:3958   */\n    tag_132:\n        /* \"#utility.yul\":3815:3819   */\n      0x00\n        /* \"#utility.yul\":3853:3855   */\n      0x20\n        /* \"#utility.yul\":3842:3851   */\n      dup3\n        /* \"#utility.yul\":3838:3856   */\n      add\n        /* \"#utility.yul\":3830:3856   */\n      swap1\n      pop\n        /* \"#utility.yul\":3866:3951   */\n      tag_566\n        /* \"#utility.yul\":3948:3949   */\n      0x00\n        /* \"#utility.yul\":3937:3946   */\n      dup4\n        /* \"#utility.yul\":3933:3950   */\n      add\n        /* \"#utility.yul\":3924:3930   */\n      dup5\n        /* \"#utility.yul\":3866:3951   */\n      tag_464\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":3708:3958   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3964:4133   */\n    tag_465:\n        /* \"#utility.yul\":4048:4059   */\n      0x00\n        /* \"#utility.yul\":4082:4088   */\n      dup3\n        /* \"#utility.yul\":4077:4080   */\n      dup3\n        /* \"#utility.yul\":4070:4089   */\n      mstore\n        /* \"#utility.yul\":4122:4126   */\n      0x20\n        /* \"#utility.yul\":4117:4120   */\n      dup3\n        /* \"#utility.yul\":4113:4127   */\n      add\n        /* \"#utility.yul\":4098:4127   */\n      swap1\n      pop\n        /* \"#utility.yul\":3964:4133   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4139:4321   */\n    tag_466:\n        /* \"#utility.yul\":4279:4313   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":4275:4276   */\n      0x00\n        /* \"#utility.yul\":4267:4273   */\n      dup3\n        /* \"#utility.yul\":4263:4277   */\n      add\n        /* \"#utility.yul\":4256:4314   */\n      mstore\n        /* \"#utility.yul\":4139:4321   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4327:4693   */\n    tag_467:\n        /* \"#utility.yul\":4469:4472   */\n      0x00\n        /* \"#utility.yul\":4490:4557   */\n      tag_570\n        /* \"#utility.yul\":4554:4556   */\n      0x20\n        /* \"#utility.yul\":4549:4552   */\n      dup4\n        /* \"#utility.yul\":4490:4557   */\n      tag_465\n      jump\t// in\n    tag_570:\n        /* \"#utility.yul\":4483:4557   */\n      swap2\n      pop\n        /* \"#utility.yul\":4566:4659   */\n      tag_571\n        /* \"#utility.yul\":4655:4658   */\n      dup3\n        /* \"#utility.yul\":4566:4659   */\n      tag_466\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":4684:4686   */\n      0x20\n        /* \"#utility.yul\":4679:4682   */\n      dup3\n        /* \"#utility.yul\":4675:4687   */\n      add\n        /* \"#utility.yul\":4668:4687   */\n      swap1\n      pop\n        /* \"#utility.yul\":4327:4693   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4699:5118   */\n    tag_146:\n        /* \"#utility.yul\":4865:4869   */\n      0x00\n        /* \"#utility.yul\":4903:4905   */\n      0x20\n        /* \"#utility.yul\":4892:4901   */\n      dup3\n        /* \"#utility.yul\":4888:4906   */\n      add\n        /* \"#utility.yul\":4880:4906   */\n      swap1\n      pop\n        /* \"#utility.yul\":4952:4961   */\n      dup2\n        /* \"#utility.yul\":4946:4950   */\n      dup2\n        /* \"#utility.yul\":4942:4962   */\n      sub\n        /* \"#utility.yul\":4938:4939   */\n      0x00\n        /* \"#utility.yul\":4927:4936   */\n      dup4\n        /* \"#utility.yul\":4923:4940   */\n      add\n        /* \"#utility.yul\":4916:4963   */\n      mstore\n        /* \"#utility.yul\":4980:5111   */\n      tag_573\n        /* \"#utility.yul\":5106:5110   */\n      dup2\n        /* \"#utility.yul\":4980:5111   */\n      tag_467\n      jump\t// in\n    tag_573:\n        /* \"#utility.yul\":4972:5111   */\n      swap1\n      pop\n        /* \"#utility.yul\":4699:5118   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5124:5287   */\n    tag_468:\n        /* \"#utility.yul\":5264:5279   */\n      0x43616e2774206265207a65726f00000000000000000000000000000000000000\n        /* \"#utility.yul\":5260:5261   */\n      0x00\n        /* \"#utility.yul\":5252:5258   */\n      dup3\n        /* \"#utility.yul\":5248:5262   */\n      add\n        /* \"#utility.yul\":5241:5280   */\n      mstore\n        /* \"#utility.yul\":5124:5287   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5293:5659   */\n    tag_469:\n        /* \"#utility.yul\":5435:5438   */\n      0x00\n        /* \"#utility.yul\":5456:5523   */\n      tag_576\n        /* \"#utility.yul\":5520:5522   */\n      0x0d\n        /* \"#utility.yul\":5515:5518   */\n      dup4\n        /* \"#utility.yul\":5456:5523   */\n      tag_465\n      jump\t// in\n    tag_576:\n        /* \"#utility.yul\":5449:5523   */\n      swap2\n      pop\n        /* \"#utility.yul\":5532:5625   */\n      tag_577\n        /* \"#utility.yul\":5621:5624   */\n      dup3\n        /* \"#utility.yul\":5532:5625   */\n      tag_468\n      jump\t// in\n    tag_577:\n        /* \"#utility.yul\":5650:5652   */\n      0x20\n        /* \"#utility.yul\":5645:5648   */\n      dup3\n        /* \"#utility.yul\":5641:5653   */\n      add\n        /* \"#utility.yul\":5634:5653   */\n      swap1\n      pop\n        /* \"#utility.yul\":5293:5659   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5665:6084   */\n    tag_150:\n        /* \"#utility.yul\":5831:5835   */\n      0x00\n        /* \"#utility.yul\":5869:5871   */\n      0x20\n        /* \"#utility.yul\":5858:5867   */\n      dup3\n        /* \"#utility.yul\":5854:5872   */\n      add\n        /* \"#utility.yul\":5846:5872   */\n      swap1\n      pop\n        /* \"#utility.yul\":5918:5927   */\n      dup2\n        /* \"#utility.yul\":5912:5916   */\n      dup2\n        /* \"#utility.yul\":5908:5928   */\n      sub\n        /* \"#utility.yul\":5904:5905   */\n      0x00\n        /* \"#utility.yul\":5893:5902   */\n      dup4\n        /* \"#utility.yul\":5889:5906   */\n      add\n        /* \"#utility.yul\":5882:5929   */\n      mstore\n        /* \"#utility.yul\":5946:6077   */\n      tag_579\n        /* \"#utility.yul\":6072:6076   */\n      dup2\n        /* \"#utility.yul\":5946:6077   */\n      tag_469\n      jump\t// in\n    tag_579:\n        /* \"#utility.yul\":5938:6077   */\n      swap1\n      pop\n        /* \"#utility.yul\":5665:6084   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6090:6271   */\n    tag_470:\n        /* \"#utility.yul\":6230:6263   */\n      0x416d6f756e742073686f756c642062652067726561746572207468616e203000\n        /* \"#utility.yul\":6226:6227   */\n      0x00\n        /* \"#utility.yul\":6218:6224   */\n      dup3\n        /* \"#utility.yul\":6214:6228   */\n      add\n        /* \"#utility.yul\":6207:6264   */\n      mstore\n        /* \"#utility.yul\":6090:6271   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6277:6643   */\n    tag_471:\n        /* \"#utility.yul\":6419:6422   */\n      0x00\n        /* \"#utility.yul\":6440:6507   */\n      tag_582\n        /* \"#utility.yul\":6504:6506   */\n      0x1f\n        /* \"#utility.yul\":6499:6502   */\n      dup4\n        /* \"#utility.yul\":6440:6507   */\n      tag_465\n      jump\t// in\n    tag_582:\n        /* \"#utility.yul\":6433:6507   */\n      swap2\n      pop\n        /* \"#utility.yul\":6516:6609   */\n      tag_583\n        /* \"#utility.yul\":6605:6608   */\n      dup3\n        /* \"#utility.yul\":6516:6609   */\n      tag_470\n      jump\t// in\n    tag_583:\n        /* \"#utility.yul\":6634:6636   */\n      0x20\n        /* \"#utility.yul\":6629:6632   */\n      dup3\n        /* \"#utility.yul\":6625:6637   */\n      add\n        /* \"#utility.yul\":6618:6637   */\n      swap1\n      pop\n        /* \"#utility.yul\":6277:6643   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6649:7068   */\n    tag_154:\n        /* \"#utility.yul\":6815:6819   */\n      0x00\n        /* \"#utility.yul\":6853:6855   */\n      0x20\n        /* \"#utility.yul\":6842:6851   */\n      dup3\n        /* \"#utility.yul\":6838:6856   */\n      add\n        /* \"#utility.yul\":6830:6856   */\n      swap1\n      pop\n        /* \"#utility.yul\":6902:6911   */\n      dup2\n        /* \"#utility.yul\":6896:6900   */\n      dup2\n        /* \"#utility.yul\":6892:6912   */\n      sub\n        /* \"#utility.yul\":6888:6889   */\n      0x00\n        /* \"#utility.yul\":6877:6886   */\n      dup4\n        /* \"#utility.yul\":6873:6890   */\n      add\n        /* \"#utility.yul\":6866:6913   */\n      mstore\n        /* \"#utility.yul\":6930:7061   */\n      tag_585\n        /* \"#utility.yul\":7056:7060   */\n      dup2\n        /* \"#utility.yul\":6930:7061   */\n      tag_471\n      jump\t// in\n    tag_585:\n        /* \"#utility.yul\":6922:7061   */\n      swap1\n      pop\n        /* \"#utility.yul\":6649:7068   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7074:7238   */\n    tag_472:\n        /* \"#utility.yul\":7214:7230   */\n      0x496e76616c696420616d6f756e74000000000000000000000000000000000000\n        /* \"#utility.yul\":7210:7211   */\n      0x00\n        /* \"#utility.yul\":7202:7208   */\n      dup3\n        /* \"#utility.yul\":7198:7212   */\n      add\n        /* \"#utility.yul\":7191:7231   */\n      mstore\n        /* \"#utility.yul\":7074:7238   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7244:7610   */\n    tag_473:\n        /* \"#utility.yul\":7386:7389   */\n      0x00\n        /* \"#utility.yul\":7407:7474   */\n      tag_588\n        /* \"#utility.yul\":7471:7473   */\n      0x0e\n        /* \"#utility.yul\":7466:7469   */\n      dup4\n        /* \"#utility.yul\":7407:7474   */\n      tag_465\n      jump\t// in\n    tag_588:\n        /* \"#utility.yul\":7400:7474   */\n      swap2\n      pop\n        /* \"#utility.yul\":7483:7576   */\n      tag_589\n        /* \"#utility.yul\":7572:7575   */\n      dup3\n        /* \"#utility.yul\":7483:7576   */\n      tag_472\n      jump\t// in\n    tag_589:\n        /* \"#utility.yul\":7601:7603   */\n      0x20\n        /* \"#utility.yul\":7596:7599   */\n      dup3\n        /* \"#utility.yul\":7592:7604   */\n      add\n        /* \"#utility.yul\":7585:7604   */\n      swap1\n      pop\n        /* \"#utility.yul\":7244:7610   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7616:8035   */\n    tag_157:\n        /* \"#utility.yul\":7782:7786   */\n      0x00\n        /* \"#utility.yul\":7820:7822   */\n      0x20\n        /* \"#utility.yul\":7809:7818   */\n      dup3\n        /* \"#utility.yul\":7805:7823   */\n      add\n        /* \"#utility.yul\":7797:7823   */\n      swap1\n      pop\n        /* \"#utility.yul\":7869:7878   */\n      dup2\n        /* \"#utility.yul\":7863:7867   */\n      dup2\n        /* \"#utility.yul\":7859:7879   */\n      sub\n        /* \"#utility.yul\":7855:7856   */\n      0x00\n        /* \"#utility.yul\":7844:7853   */\n      dup4\n        /* \"#utility.yul\":7840:7857   */\n      add\n        /* \"#utility.yul\":7833:7880   */\n      mstore\n        /* \"#utility.yul\":7897:8028   */\n      tag_591\n        /* \"#utility.yul\":8023:8027   */\n      dup2\n        /* \"#utility.yul\":7897:8028   */\n      tag_473\n      jump\t// in\n    tag_591:\n        /* \"#utility.yul\":7889:8028   */\n      swap1\n      pop\n        /* \"#utility.yul\":7616:8035   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8041:8221   */\n    tag_474:\n        /* \"#utility.yul\":8089:8166   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8086:8087   */\n      0x00\n        /* \"#utility.yul\":8079:8167   */\n      mstore\n        /* \"#utility.yul\":8186:8190   */\n      0x12\n        /* \"#utility.yul\":8183:8184   */\n      0x04\n        /* \"#utility.yul\":8176:8191   */\n      mstore\n        /* \"#utility.yul\":8210:8214   */\n      0x24\n        /* \"#utility.yul\":8207:8208   */\n      0x00\n        /* \"#utility.yul\":8200:8215   */\n      revert\n        /* \"#utility.yul\":8227:8403   */\n    tag_171:\n        /* \"#utility.yul\":8259:8260   */\n      0x00\n        /* \"#utility.yul\":8276:8296   */\n      tag_594\n        /* \"#utility.yul\":8294:8295   */\n      dup3\n        /* \"#utility.yul\":8276:8296   */\n      tag_448\n      jump\t// in\n    tag_594:\n        /* \"#utility.yul\":8271:8296   */\n      swap2\n      pop\n        /* \"#utility.yul\":8310:8330   */\n      tag_595\n        /* \"#utility.yul\":8328:8329   */\n      dup4\n        /* \"#utility.yul\":8310:8330   */\n      tag_448\n      jump\t// in\n    tag_595:\n        /* \"#utility.yul\":8305:8330   */\n      swap3\n      pop\n        /* \"#utility.yul\":8349:8350   */\n      dup3\n        /* \"#utility.yul\":8339:8374   */\n      tag_596\n      jumpi\n        /* \"#utility.yul\":8354:8372   */\n      tag_597\n      tag_474\n      jump\t// in\n    tag_597:\n        /* \"#utility.yul\":8339:8374   */\n    tag_596:\n        /* \"#utility.yul\":8395:8396   */\n      dup3\n        /* \"#utility.yul\":8392:8393   */\n      dup3\n        /* \"#utility.yul\":8388:8397   */\n      mod\n        /* \"#utility.yul\":8383:8397   */\n      swap1\n      pop\n        /* \"#utility.yul\":8227:8403   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8409:8741   */\n    tag_182:\n        /* \"#utility.yul\":8530:8534   */\n      0x00\n        /* \"#utility.yul\":8568:8570   */\n      0x40\n        /* \"#utility.yul\":8557:8566   */\n      dup3\n        /* \"#utility.yul\":8553:8571   */\n      add\n        /* \"#utility.yul\":8545:8571   */\n      swap1\n      pop\n        /* \"#utility.yul\":8581:8652   */\n      tag_599\n        /* \"#utility.yul\":8649:8650   */\n      0x00\n        /* \"#utility.yul\":8638:8647   */\n      dup4\n        /* \"#utility.yul\":8634:8651   */\n      add\n        /* \"#utility.yul\":8625:8631   */\n      dup6\n        /* \"#utility.yul\":8581:8652   */\n      tag_459\n      jump\t// in\n    tag_599:\n        /* \"#utility.yul\":8662:8734   */\n      tag_600\n        /* \"#utility.yul\":8730:8732   */\n      0x20\n        /* \"#utility.yul\":8719:8728   */\n      dup4\n        /* \"#utility.yul\":8715:8733   */\n      add\n        /* \"#utility.yul\":8706:8712   */\n      dup5\n        /* \"#utility.yul\":8662:8734   */\n      tag_449\n      jump\t// in\n    tag_600:\n        /* \"#utility.yul\":8409:8741   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8747:8913   */\n    tag_475:\n        /* \"#utility.yul\":8887:8905   */\n      0x4e6f7468696e6720746f20636c61696d00000000000000000000000000000000\n        /* \"#utility.yul\":8883:8884   */\n      0x00\n        /* \"#utility.yul\":8875:8881   */\n      dup3\n        /* \"#utility.yul\":8871:8885   */\n      add\n        /* \"#utility.yul\":8864:8906   */\n      mstore\n        /* \"#utility.yul\":8747:8913   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8919:9285   */\n    tag_476:\n        /* \"#utility.yul\":9061:9064   */\n      0x00\n        /* \"#utility.yul\":9082:9149   */\n      tag_603\n        /* \"#utility.yul\":9146:9148   */\n      0x10\n        /* \"#utility.yul\":9141:9144   */\n      dup4\n        /* \"#utility.yul\":9082:9149   */\n      tag_465\n      jump\t// in\n    tag_603:\n        /* \"#utility.yul\":9075:9149   */\n      swap2\n      pop\n        /* \"#utility.yul\":9158:9251   */\n      tag_604\n        /* \"#utility.yul\":9247:9250   */\n      dup3\n        /* \"#utility.yul\":9158:9251   */\n      tag_475\n      jump\t// in\n    tag_604:\n        /* \"#utility.yul\":9276:9278   */\n      0x20\n        /* \"#utility.yul\":9271:9274   */\n      dup3\n        /* \"#utility.yul\":9267:9279   */\n      add\n        /* \"#utility.yul\":9260:9279   */\n      swap1\n      pop\n        /* \"#utility.yul\":8919:9285   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9291:9710   */\n    tag_190:\n        /* \"#utility.yul\":9457:9461   */\n      0x00\n        /* \"#utility.yul\":9495:9497   */\n      0x20\n        /* \"#utility.yul\":9484:9493   */\n      dup3\n        /* \"#utility.yul\":9480:9498   */\n      add\n        /* \"#utility.yul\":9472:9498   */\n      swap1\n      pop\n        /* \"#utility.yul\":9544:9553   */\n      dup2\n        /* \"#utility.yul\":9538:9542   */\n      dup2\n        /* \"#utility.yul\":9534:9554   */\n      sub\n        /* \"#utility.yul\":9530:9531   */\n      0x00\n        /* \"#utility.yul\":9519:9528   */\n      dup4\n        /* \"#utility.yul\":9515:9532   */\n      add\n        /* \"#utility.yul\":9508:9555   */\n      mstore\n        /* \"#utility.yul\":9572:9703   */\n      tag_606\n        /* \"#utility.yul\":9698:9702   */\n      dup2\n        /* \"#utility.yul\":9572:9703   */\n      tag_476\n      jump\t// in\n    tag_606:\n        /* \"#utility.yul\":9564:9703   */\n      swap1\n      pop\n        /* \"#utility.yul\":9291:9710   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9716:9859   */\n    tag_477:\n        /* \"#utility.yul\":9773:9778   */\n      0x00\n        /* \"#utility.yul\":9804:9810   */\n      dup2\n        /* \"#utility.yul\":9798:9811   */\n      mload\n        /* \"#utility.yul\":9789:9811   */\n      swap1\n      pop\n        /* \"#utility.yul\":9820:9853   */\n      tag_608\n        /* \"#utility.yul\":9847:9852   */\n      dup2\n        /* \"#utility.yul\":9820:9853   */\n      tag_453\n      jump\t// in\n    tag_608:\n        /* \"#utility.yul\":9716:9859   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9865:10216   */\n    tag_196:\n        /* \"#utility.yul\":9935:9941   */\n      0x00\n        /* \"#utility.yul\":9984:9986   */\n      0x20\n        /* \"#utility.yul\":9972:9981   */\n      dup3\n        /* \"#utility.yul\":9963:9970   */\n      dup5\n        /* \"#utility.yul\":9959:9982   */\n      sub\n        /* \"#utility.yul\":9955:9987   */\n      slt\n        /* \"#utility.yul\":9952:10071   */\n      iszero\n      tag_610\n      jumpi\n        /* \"#utility.yul\":9990:10069   */\n      tag_611\n      tag_451\n      jump\t// in\n    tag_611:\n        /* \"#utility.yul\":9952:10071   */\n    tag_610:\n        /* \"#utility.yul\":10110:10111   */\n      0x00\n        /* \"#utility.yul\":10135:10199   */\n      tag_612\n        /* \"#utility.yul\":10191:10198   */\n      dup5\n        /* \"#utility.yul\":10182:10188   */\n      dup3\n        /* \"#utility.yul\":10171:10180   */\n      dup6\n        /* \"#utility.yul\":10167:10189   */\n      add\n        /* \"#utility.yul\":10135:10199   */\n      tag_477\n      jump\t// in\n    tag_612:\n        /* \"#utility.yul\":10125:10199   */\n      swap2\n      pop\n        /* \"#utility.yul\":10081:10209   */\n      pop\n        /* \"#utility.yul\":9865:10216   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10222:10385   */\n    tag_478:\n        /* \"#utility.yul\":10362:10377   */\n      0x496e73756666696369656e742100000000000000000000000000000000000000\n        /* \"#utility.yul\":10358:10359   */\n      0x00\n        /* \"#utility.yul\":10350:10356   */\n      dup3\n        /* \"#utility.yul\":10346:10360   */\n      add\n        /* \"#utility.yul\":10339:10378   */\n      mstore\n        /* \"#utility.yul\":10222:10385   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10391:10757   */\n    tag_479:\n        /* \"#utility.yul\":10533:10536   */\n      0x00\n        /* \"#utility.yul\":10554:10621   */\n      tag_615\n        /* \"#utility.yul\":10618:10620   */\n      0x0d\n        /* \"#utility.yul\":10613:10616   */\n      dup4\n        /* \"#utility.yul\":10554:10621   */\n      tag_465\n      jump\t// in\n    tag_615:\n        /* \"#utility.yul\":10547:10621   */\n      swap2\n      pop\n        /* \"#utility.yul\":10630:10723   */\n      tag_616\n        /* \"#utility.yul\":10719:10722   */\n      dup3\n        /* \"#utility.yul\":10630:10723   */\n      tag_478\n      jump\t// in\n    tag_616:\n        /* \"#utility.yul\":10748:10750   */\n      0x20\n        /* \"#utility.yul\":10743:10746   */\n      dup3\n        /* \"#utility.yul\":10739:10751   */\n      add\n        /* \"#utility.yul\":10732:10751   */\n      swap1\n      pop\n        /* \"#utility.yul\":10391:10757   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10763:11182   */\n    tag_236:\n        /* \"#utility.yul\":10929:10933   */\n      0x00\n        /* \"#utility.yul\":10967:10969   */\n      0x20\n        /* \"#utility.yul\":10956:10965   */\n      dup3\n        /* \"#utility.yul\":10952:10970   */\n      add\n        /* \"#utility.yul\":10944:10970   */\n      swap1\n      pop\n        /* \"#utility.yul\":11016:11025   */\n      dup2\n        /* \"#utility.yul\":11010:11014   */\n      dup2\n        /* \"#utility.yul\":11006:11026   */\n      sub\n        /* \"#utility.yul\":11002:11003   */\n      0x00\n        /* \"#utility.yul\":10991:11000   */\n      dup4\n        /* \"#utility.yul\":10987:11004   */\n      add\n        /* \"#utility.yul\":10980:11027   */\n      mstore\n        /* \"#utility.yul\":11044:11175   */\n      tag_618\n        /* \"#utility.yul\":11170:11174   */\n      dup2\n        /* \"#utility.yul\":11044:11175   */\n      tag_479\n      jump\t// in\n    tag_618:\n        /* \"#utility.yul\":11036:11175   */\n      swap1\n      pop\n        /* \"#utility.yul\":10763:11182   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11188:11349   */\n    tag_480:\n        /* \"#utility.yul\":11328:11341   */\n      0x43616e2774207374617274000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11324:11325   */\n      0x00\n        /* \"#utility.yul\":11316:11322   */\n      dup3\n        /* \"#utility.yul\":11312:11326   */\n      add\n        /* \"#utility.yul\":11305:11342   */\n      mstore\n        /* \"#utility.yul\":11188:11349   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11355:11721   */\n    tag_481:\n        /* \"#utility.yul\":11497:11500   */\n      0x00\n        /* \"#utility.yul\":11518:11585   */\n      tag_621\n        /* \"#utility.yul\":11582:11584   */\n      0x0b\n        /* \"#utility.yul\":11577:11580   */\n      dup4\n        /* \"#utility.yul\":11518:11585   */\n      tag_465\n      jump\t// in\n    tag_621:\n        /* \"#utility.yul\":11511:11585   */\n      swap2\n      pop\n        /* \"#utility.yul\":11594:11687   */\n      tag_622\n        /* \"#utility.yul\":11683:11686   */\n      dup3\n        /* \"#utility.yul\":11594:11687   */\n      tag_480\n      jump\t// in\n    tag_622:\n        /* \"#utility.yul\":11712:11714   */\n      0x20\n        /* \"#utility.yul\":11707:11710   */\n      dup3\n        /* \"#utility.yul\":11703:11715   */\n      add\n        /* \"#utility.yul\":11696:11715   */\n      swap1\n      pop\n        /* \"#utility.yul\":11355:11721   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11727:12146   */\n    tag_240:\n        /* \"#utility.yul\":11893:11897   */\n      0x00\n        /* \"#utility.yul\":11931:11933   */\n      0x20\n        /* \"#utility.yul\":11920:11929   */\n      dup3\n        /* \"#utility.yul\":11916:11934   */\n      add\n        /* \"#utility.yul\":11908:11934   */\n      swap1\n      pop\n        /* \"#utility.yul\":11980:11989   */\n      dup2\n        /* \"#utility.yul\":11974:11978   */\n      dup2\n        /* \"#utility.yul\":11970:11990   */\n      sub\n        /* \"#utility.yul\":11966:11967   */\n      0x00\n        /* \"#utility.yul\":11955:11964   */\n      dup4\n        /* \"#utility.yul\":11951:11968   */\n      add\n        /* \"#utility.yul\":11944:11991   */\n      mstore\n        /* \"#utility.yul\":12008:12139   */\n      tag_624\n        /* \"#utility.yul\":12134:12138   */\n      dup2\n        /* \"#utility.yul\":12008:12139   */\n      tag_481\n      jump\t// in\n    tag_624:\n        /* \"#utility.yul\":12000:12139   */\n      swap1\n      pop\n        /* \"#utility.yul\":11727:12146   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12152:12314   */\n    tag_482:\n        /* \"#utility.yul\":12292:12306   */\n      0x496e73756666696369656e740000000000000000000000000000000000000000\n        /* \"#utility.yul\":12288:12289   */\n      0x00\n        /* \"#utility.yul\":12280:12286   */\n      dup3\n        /* \"#utility.yul\":12276:12290   */\n      add\n        /* \"#utility.yul\":12269:12307   */\n      mstore\n        /* \"#utility.yul\":12152:12314   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12320:12686   */\n    tag_483:\n        /* \"#utility.yul\":12462:12465   */\n      0x00\n        /* \"#utility.yul\":12483:12550   */\n      tag_627\n        /* \"#utility.yul\":12547:12549   */\n      0x0c\n        /* \"#utility.yul\":12542:12545   */\n      dup4\n        /* \"#utility.yul\":12483:12550   */\n      tag_465\n      jump\t// in\n    tag_627:\n        /* \"#utility.yul\":12476:12550   */\n      swap2\n      pop\n        /* \"#utility.yul\":12559:12652   */\n      tag_628\n        /* \"#utility.yul\":12648:12651   */\n      dup3\n        /* \"#utility.yul\":12559:12652   */\n      tag_482\n      jump\t// in\n    tag_628:\n        /* \"#utility.yul\":12677:12679   */\n      0x20\n        /* \"#utility.yul\":12672:12675   */\n      dup3\n        /* \"#utility.yul\":12668:12680   */\n      add\n        /* \"#utility.yul\":12661:12680   */\n      swap1\n      pop\n        /* \"#utility.yul\":12320:12686   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12692:13111   */\n    tag_244:\n        /* \"#utility.yul\":12858:12862   */\n      0x00\n        /* \"#utility.yul\":12896:12898   */\n      0x20\n        /* \"#utility.yul\":12885:12894   */\n      dup3\n        /* \"#utility.yul\":12881:12899   */\n      add\n        /* \"#utility.yul\":12873:12899   */\n      swap1\n      pop\n        /* \"#utility.yul\":12945:12954   */\n      dup2\n        /* \"#utility.yul\":12939:12943   */\n      dup2\n        /* \"#utility.yul\":12935:12955   */\n      sub\n        /* \"#utility.yul\":12931:12932   */\n      0x00\n        /* \"#utility.yul\":12920:12929   */\n      dup4\n        /* \"#utility.yul\":12916:12933   */\n      add\n        /* \"#utility.yul\":12909:12956   */\n      mstore\n        /* \"#utility.yul\":12973:13104   */\n      tag_630\n        /* \"#utility.yul\":13099:13103   */\n      dup2\n        /* \"#utility.yul\":12973:13104   */\n      tag_483\n      jump\t// in\n    tag_630:\n        /* \"#utility.yul\":12965:13104   */\n      swap1\n      pop\n        /* \"#utility.yul\":12692:13111   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13117:13279   */\n    tag_484:\n        /* \"#utility.yul\":13257:13271   */\n      0x496e76616c6964204d6f64650000000000000000000000000000000000000000\n        /* \"#utility.yul\":13253:13254   */\n      0x00\n        /* \"#utility.yul\":13245:13251   */\n      dup3\n        /* \"#utility.yul\":13241:13255   */\n      add\n        /* \"#utility.yul\":13234:13272   */\n      mstore\n        /* \"#utility.yul\":13117:13279   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13285:13651   */\n    tag_485:\n        /* \"#utility.yul\":13427:13430   */\n      0x00\n        /* \"#utility.yul\":13448:13515   */\n      tag_633\n        /* \"#utility.yul\":13512:13514   */\n      0x0c\n        /* \"#utility.yul\":13507:13510   */\n      dup4\n        /* \"#utility.yul\":13448:13515   */\n      tag_465\n      jump\t// in\n    tag_633:\n        /* \"#utility.yul\":13441:13515   */\n      swap2\n      pop\n        /* \"#utility.yul\":13524:13617   */\n      tag_634\n        /* \"#utility.yul\":13613:13616   */\n      dup3\n        /* \"#utility.yul\":13524:13617   */\n      tag_484\n      jump\t// in\n    tag_634:\n        /* \"#utility.yul\":13642:13644   */\n      0x20\n        /* \"#utility.yul\":13637:13640   */\n      dup3\n        /* \"#utility.yul\":13633:13645   */\n      add\n        /* \"#utility.yul\":13626:13645   */\n      swap1\n      pop\n        /* \"#utility.yul\":13285:13651   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13657:14076   */\n    tag_260:\n        /* \"#utility.yul\":13823:13827   */\n      0x00\n        /* \"#utility.yul\":13861:13863   */\n      0x20\n        /* \"#utility.yul\":13850:13859   */\n      dup3\n        /* \"#utility.yul\":13846:13864   */\n      add\n        /* \"#utility.yul\":13838:13864   */\n      swap1\n      pop\n        /* \"#utility.yul\":13910:13919   */\n      dup2\n        /* \"#utility.yul\":13904:13908   */\n      dup2\n        /* \"#utility.yul\":13900:13920   */\n      sub\n        /* \"#utility.yul\":13896:13897   */\n      0x00\n        /* \"#utility.yul\":13885:13894   */\n      dup4\n        /* \"#utility.yul\":13881:13898   */\n      add\n        /* \"#utility.yul\":13874:13921   */\n      mstore\n        /* \"#utility.yul\":13938:14069   */\n      tag_636\n        /* \"#utility.yul\":14064:14068   */\n      dup2\n        /* \"#utility.yul\":13938:14069   */\n      tag_485\n      jump\t// in\n    tag_636:\n        /* \"#utility.yul\":13930:14069   */\n      swap1\n      pop\n        /* \"#utility.yul\":13657:14076   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14082:14255   */\n    tag_486:\n        /* \"#utility.yul\":14222:14247   */\n      0x496e76616c6964204c6f636b7570204475726174696f6e000000000000000000\n        /* \"#utility.yul\":14218:14219   */\n      0x00\n        /* \"#utility.yul\":14210:14216   */\n      dup3\n        /* \"#utility.yul\":14206:14220   */\n      add\n        /* \"#utility.yul\":14199:14248   */\n      mstore\n        /* \"#utility.yul\":14082:14255   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14261:14627   */\n    tag_487:\n        /* \"#utility.yul\":14403:14406   */\n      0x00\n        /* \"#utility.yul\":14424:14491   */\n      tag_639\n        /* \"#utility.yul\":14488:14490   */\n      0x17\n        /* \"#utility.yul\":14483:14486   */\n      dup4\n        /* \"#utility.yul\":14424:14491   */\n      tag_465\n      jump\t// in\n    tag_639:\n        /* \"#utility.yul\":14417:14491   */\n      swap2\n      pop\n        /* \"#utility.yul\":14500:14593   */\n      tag_640\n        /* \"#utility.yul\":14589:14592   */\n      dup3\n        /* \"#utility.yul\":14500:14593   */\n      tag_486\n      jump\t// in\n    tag_640:\n        /* \"#utility.yul\":14618:14620   */\n      0x20\n        /* \"#utility.yul\":14613:14616   */\n      dup3\n        /* \"#utility.yul\":14609:14621   */\n      add\n        /* \"#utility.yul\":14602:14621   */\n      swap1\n      pop\n        /* \"#utility.yul\":14261:14627   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14633:15052   */\n    tag_272:\n        /* \"#utility.yul\":14799:14803   */\n      0x00\n        /* \"#utility.yul\":14837:14839   */\n      0x20\n        /* \"#utility.yul\":14826:14835   */\n      dup3\n        /* \"#utility.yul\":14822:14840   */\n      add\n        /* \"#utility.yul\":14814:14840   */\n      swap1\n      pop\n        /* \"#utility.yul\":14886:14895   */\n      dup2\n        /* \"#utility.yul\":14880:14884   */\n      dup2\n        /* \"#utility.yul\":14876:14896   */\n      sub\n        /* \"#utility.yul\":14872:14873   */\n      0x00\n        /* \"#utility.yul\":14861:14870   */\n      dup4\n        /* \"#utility.yul\":14857:14874   */\n      add\n        /* \"#utility.yul\":14850:14897   */\n      mstore\n        /* \"#utility.yul\":14914:15045   */\n      tag_642\n        /* \"#utility.yul\":15040:15044   */\n      dup2\n        /* \"#utility.yul\":14914:15045   */\n      tag_487\n      jump\t// in\n    tag_642:\n        /* \"#utility.yul\":14906:15045   */\n      swap1\n      pop\n        /* \"#utility.yul\":14633:15052   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15058:15238   */\n    tag_488:\n        /* \"#utility.yul\":15106:15183   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15103:15104   */\n      0x00\n        /* \"#utility.yul\":15096:15184   */\n      mstore\n        /* \"#utility.yul\":15203:15207   */\n      0x11\n        /* \"#utility.yul\":15200:15201   */\n      0x04\n        /* \"#utility.yul\":15193:15208   */\n      mstore\n        /* \"#utility.yul\":15227:15231   */\n      0x24\n        /* \"#utility.yul\":15224:15225   */\n      0x00\n        /* \"#utility.yul\":15217:15232   */\n      revert\n        /* \"#utility.yul\":15244:15549   */\n    tag_281:\n        /* \"#utility.yul\":15284:15287   */\n      0x00\n        /* \"#utility.yul\":15303:15323   */\n      tag_645\n        /* \"#utility.yul\":15321:15322   */\n      dup3\n        /* \"#utility.yul\":15303:15323   */\n      tag_448\n      jump\t// in\n    tag_645:\n        /* \"#utility.yul\":15298:15323   */\n      swap2\n      pop\n        /* \"#utility.yul\":15337:15357   */\n      tag_646\n        /* \"#utility.yul\":15355:15356   */\n      dup4\n        /* \"#utility.yul\":15337:15357   */\n      tag_448\n      jump\t// in\n    tag_646:\n        /* \"#utility.yul\":15332:15357   */\n      swap3\n      pop\n        /* \"#utility.yul\":15491:15492   */\n      dup3\n        /* \"#utility.yul\":15423:15489   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":15419:15493   */\n      sub\n        /* \"#utility.yul\":15416:15417   */\n      dup3\n        /* \"#utility.yul\":15413:15494   */\n      gt\n        /* \"#utility.yul\":15410:15517   */\n      iszero\n      tag_647\n      jumpi\n        /* \"#utility.yul\":15497:15515   */\n      tag_648\n      tag_488\n      jump\t// in\n    tag_648:\n        /* \"#utility.yul\":15410:15517   */\n    tag_647:\n        /* \"#utility.yul\":15541:15542   */\n      dup3\n        /* \"#utility.yul\":15538:15539   */\n      dup3\n        /* \"#utility.yul\":15534:15543   */\n      add\n        /* \"#utility.yul\":15527:15543   */\n      swap1\n      pop\n        /* \"#utility.yul\":15244:15549   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15555:15731   */\n    tag_489:\n        /* \"#utility.yul\":15695:15723   */\n      0x496e76616c696420556e7374616b696e67204665652052617465000000000000\n        /* \"#utility.yul\":15691:15692   */\n      0x00\n        /* \"#utility.yul\":15683:15689   */\n      dup3\n        /* \"#utility.yul\":15679:15693   */\n      add\n        /* \"#utility.yul\":15672:15724   */\n      mstore\n        /* \"#utility.yul\":15555:15731   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15737:16103   */\n    tag_490:\n        /* \"#utility.yul\":15879:15882   */\n      0x00\n        /* \"#utility.yul\":15900:15967   */\n      tag_651\n        /* \"#utility.yul\":15964:15966   */\n      0x1a\n        /* \"#utility.yul\":15959:15962   */\n      dup4\n        /* \"#utility.yul\":15900:15967   */\n      tag_465\n      jump\t// in\n    tag_651:\n        /* \"#utility.yul\":15893:15967   */\n      swap2\n      pop\n        /* \"#utility.yul\":15976:16069   */\n      tag_652\n        /* \"#utility.yul\":16065:16068   */\n      dup3\n        /* \"#utility.yul\":15976:16069   */\n      tag_489\n      jump\t// in\n    tag_652:\n        /* \"#utility.yul\":16094:16096   */\n      0x20\n        /* \"#utility.yul\":16089:16092   */\n      dup3\n        /* \"#utility.yul\":16085:16097   */\n      add\n        /* \"#utility.yul\":16078:16097   */\n      swap1\n      pop\n        /* \"#utility.yul\":15737:16103   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16109:16528   */\n    tag_310:\n        /* \"#utility.yul\":16275:16279   */\n      0x00\n        /* \"#utility.yul\":16313:16315   */\n      0x20\n        /* \"#utility.yul\":16302:16311   */\n      dup3\n        /* \"#utility.yul\":16298:16316   */\n      add\n        /* \"#utility.yul\":16290:16316   */\n      swap1\n      pop\n        /* \"#utility.yul\":16362:16371   */\n      dup2\n        /* \"#utility.yul\":16356:16360   */\n      dup2\n        /* \"#utility.yul\":16352:16372   */\n      sub\n        /* \"#utility.yul\":16348:16349   */\n      0x00\n        /* \"#utility.yul\":16337:16346   */\n      dup4\n        /* \"#utility.yul\":16333:16350   */\n      add\n        /* \"#utility.yul\":16326:16373   */\n      mstore\n        /* \"#utility.yul\":16390:16521   */\n      tag_654\n        /* \"#utility.yul\":16516:16520   */\n      dup2\n        /* \"#utility.yul\":16390:16521   */\n      tag_490\n      jump\t// in\n    tag_654:\n        /* \"#utility.yul\":16382:16521   */\n      swap1\n      pop\n        /* \"#utility.yul\":16109:16528   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16534:16697   */\n    tag_491:\n        /* \"#utility.yul\":16674:16689   */\n      0x496e76616c69642076616c756500000000000000000000000000000000000000\n        /* \"#utility.yul\":16670:16671   */\n      0x00\n        /* \"#utility.yul\":16662:16668   */\n      dup3\n        /* \"#utility.yul\":16658:16672   */\n      add\n        /* \"#utility.yul\":16651:16690   */\n      mstore\n        /* \"#utility.yul\":16534:16697   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16703:17069   */\n    tag_492:\n        /* \"#utility.yul\":16845:16848   */\n      0x00\n        /* \"#utility.yul\":16866:16933   */\n      tag_657\n        /* \"#utility.yul\":16930:16932   */\n      0x0d\n        /* \"#utility.yul\":16925:16928   */\n      dup4\n        /* \"#utility.yul\":16866:16933   */\n      tag_465\n      jump\t// in\n    tag_657:\n        /* \"#utility.yul\":16859:16933   */\n      swap2\n      pop\n        /* \"#utility.yul\":16942:17035   */\n      tag_658\n        /* \"#utility.yul\":17031:17034   */\n      dup3\n        /* \"#utility.yul\":16942:17035   */\n      tag_491\n      jump\t// in\n    tag_658:\n        /* \"#utility.yul\":17060:17062   */\n      0x20\n        /* \"#utility.yul\":17055:17058   */\n      dup3\n        /* \"#utility.yul\":17051:17063   */\n      add\n        /* \"#utility.yul\":17044:17063   */\n      swap1\n      pop\n        /* \"#utility.yul\":16703:17069   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17075:17494   */\n    tag_320:\n        /* \"#utility.yul\":17241:17245   */\n      0x00\n        /* \"#utility.yul\":17279:17281   */\n      0x20\n        /* \"#utility.yul\":17268:17277   */\n      dup3\n        /* \"#utility.yul\":17264:17282   */\n      add\n        /* \"#utility.yul\":17256:17282   */\n      swap1\n      pop\n        /* \"#utility.yul\":17328:17337   */\n      dup2\n        /* \"#utility.yul\":17322:17326   */\n      dup2\n        /* \"#utility.yul\":17318:17338   */\n      sub\n        /* \"#utility.yul\":17314:17315   */\n      0x00\n        /* \"#utility.yul\":17303:17312   */\n      dup4\n        /* \"#utility.yul\":17299:17316   */\n      add\n        /* \"#utility.yul\":17292:17339   */\n      mstore\n        /* \"#utility.yul\":17356:17487   */\n      tag_660\n        /* \"#utility.yul\":17482:17486   */\n      dup2\n        /* \"#utility.yul\":17356:17487   */\n      tag_492\n      jump\t// in\n    tag_660:\n        /* \"#utility.yul\":17348:17487   */\n      swap1\n      pop\n        /* \"#utility.yul\":17075:17494   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17500:17671   */\n    tag_493:\n        /* \"#utility.yul\":17640:17663   */\n      0x4572726f723a20696e76616c6964207374616b65720000000000000000000000\n        /* \"#utility.yul\":17636:17637   */\n      0x00\n        /* \"#utility.yul\":17628:17634   */\n      dup3\n        /* \"#utility.yul\":17624:17638   */\n      add\n        /* \"#utility.yul\":17617:17664   */\n      mstore\n        /* \"#utility.yul\":17500:17671   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17677:18043   */\n    tag_494:\n        /* \"#utility.yul\":17819:17822   */\n      0x00\n        /* \"#utility.yul\":17840:17907   */\n      tag_663\n        /* \"#utility.yul\":17904:17906   */\n      0x15\n        /* \"#utility.yul\":17899:17902   */\n      dup4\n        /* \"#utility.yul\":17840:17907   */\n      tag_465\n      jump\t// in\n    tag_663:\n        /* \"#utility.yul\":17833:17907   */\n      swap2\n      pop\n        /* \"#utility.yul\":17916:18009   */\n      tag_664\n        /* \"#utility.yul\":18005:18008   */\n      dup3\n        /* \"#utility.yul\":17916:18009   */\n      tag_493\n      jump\t// in\n    tag_664:\n        /* \"#utility.yul\":18034:18036   */\n      0x20\n        /* \"#utility.yul\":18029:18032   */\n      dup3\n        /* \"#utility.yul\":18025:18037   */\n      add\n        /* \"#utility.yul\":18018:18037   */\n      swap1\n      pop\n        /* \"#utility.yul\":17677:18043   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18049:18468   */\n    tag_334:\n        /* \"#utility.yul\":18215:18219   */\n      0x00\n        /* \"#utility.yul\":18253:18255   */\n      0x20\n        /* \"#utility.yul\":18242:18251   */\n      dup3\n        /* \"#utility.yul\":18238:18256   */\n      add\n        /* \"#utility.yul\":18230:18256   */\n      swap1\n      pop\n        /* \"#utility.yul\":18302:18311   */\n      dup2\n        /* \"#utility.yul\":18296:18300   */\n      dup2\n        /* \"#utility.yul\":18292:18312   */\n      sub\n        /* \"#utility.yul\":18288:18289   */\n      0x00\n        /* \"#utility.yul\":18277:18286   */\n      dup4\n        /* \"#utility.yul\":18273:18290   */\n      add\n        /* \"#utility.yul\":18266:18313   */\n      mstore\n        /* \"#utility.yul\":18330:18461   */\n      tag_666\n        /* \"#utility.yul\":18456:18460   */\n      dup2\n        /* \"#utility.yul\":18330:18461   */\n      tag_494\n      jump\t// in\n    tag_666:\n        /* \"#utility.yul\":18322:18461   */\n      swap1\n      pop\n        /* \"#utility.yul\":18049:18468   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18474:18638   */\n    tag_495:\n        /* \"#utility.yul\":18614:18630   */\n      0x4e6f74207374616b657220796574000000000000000000000000000000000000\n        /* \"#utility.yul\":18610:18611   */\n      0x00\n        /* \"#utility.yul\":18602:18608   */\n      dup3\n        /* \"#utility.yul\":18598:18612   */\n      add\n        /* \"#utility.yul\":18591:18631   */\n      mstore\n        /* \"#utility.yul\":18474:18638   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18644:19010   */\n    tag_496:\n        /* \"#utility.yul\":18786:18789   */\n      0x00\n        /* \"#utility.yul\":18807:18874   */\n      tag_669\n        /* \"#utility.yul\":18871:18873   */\n      0x0e\n        /* \"#utility.yul\":18866:18869   */\n      dup4\n        /* \"#utility.yul\":18807:18874   */\n      tag_465\n      jump\t// in\n    tag_669:\n        /* \"#utility.yul\":18800:18874   */\n      swap2\n      pop\n        /* \"#utility.yul\":18883:18976   */\n      tag_670\n        /* \"#utility.yul\":18972:18975   */\n      dup3\n        /* \"#utility.yul\":18883:18976   */\n      tag_495\n      jump\t// in\n    tag_670:\n        /* \"#utility.yul\":19001:19003   */\n      0x20\n        /* \"#utility.yul\":18996:18999   */\n      dup3\n        /* \"#utility.yul\":18992:19004   */\n      add\n        /* \"#utility.yul\":18985:19004   */\n      swap1\n      pop\n        /* \"#utility.yul\":18644:19010   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19016:19435   */\n    tag_353:\n        /* \"#utility.yul\":19182:19186   */\n      0x00\n        /* \"#utility.yul\":19220:19222   */\n      0x20\n        /* \"#utility.yul\":19209:19218   */\n      dup3\n        /* \"#utility.yul\":19205:19223   */\n      add\n        /* \"#utility.yul\":19197:19223   */\n      swap1\n      pop\n        /* \"#utility.yul\":19269:19278   */\n      dup2\n        /* \"#utility.yul\":19263:19267   */\n      dup2\n        /* \"#utility.yul\":19259:19279   */\n      sub\n        /* \"#utility.yul\":19255:19256   */\n      0x00\n        /* \"#utility.yul\":19244:19253   */\n      dup4\n        /* \"#utility.yul\":19240:19257   */\n      add\n        /* \"#utility.yul\":19233:19280   */\n      mstore\n        /* \"#utility.yul\":19297:19428   */\n      tag_672\n        /* \"#utility.yul\":19423:19427   */\n      dup2\n        /* \"#utility.yul\":19297:19428   */\n      tag_496\n      jump\t// in\n    tag_672:\n        /* \"#utility.yul\":19289:19428   */\n      swap1\n      pop\n        /* \"#utility.yul\":19016:19435   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19441:19666   */\n    tag_497:\n        /* \"#utility.yul\":19581:19615   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":19577:19578   */\n      0x00\n        /* \"#utility.yul\":19569:19575   */\n      dup3\n        /* \"#utility.yul\":19565:19579   */\n      add\n        /* \"#utility.yul\":19558:19616   */\n      mstore\n        /* \"#utility.yul\":19650:19658   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":19645:19647   */\n      0x20\n        /* \"#utility.yul\":19637:19643   */\n      dup3\n        /* \"#utility.yul\":19633:19648   */\n      add\n        /* \"#utility.yul\":19626:19659   */\n      mstore\n        /* \"#utility.yul\":19441:19666   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19672:20038   */\n    tag_498:\n        /* \"#utility.yul\":19814:19817   */\n      0x00\n        /* \"#utility.yul\":19835:19902   */\n      tag_675\n        /* \"#utility.yul\":19899:19901   */\n      0x26\n        /* \"#utility.yul\":19894:19897   */\n      dup4\n        /* \"#utility.yul\":19835:19902   */\n      tag_465\n      jump\t// in\n    tag_675:\n        /* \"#utility.yul\":19828:19902   */\n      swap2\n      pop\n        /* \"#utility.yul\":19911:20004   */\n      tag_676\n        /* \"#utility.yul\":20000:20003   */\n      dup3\n        /* \"#utility.yul\":19911:20004   */\n      tag_497\n      jump\t// in\n    tag_676:\n        /* \"#utility.yul\":20029:20031   */\n      0x40\n        /* \"#utility.yul\":20024:20027   */\n      dup3\n        /* \"#utility.yul\":20020:20032   */\n      add\n        /* \"#utility.yul\":20013:20032   */\n      swap1\n      pop\n        /* \"#utility.yul\":19672:20038   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20044:20463   */\n    tag_380:\n        /* \"#utility.yul\":20210:20214   */\n      0x00\n        /* \"#utility.yul\":20248:20250   */\n      0x20\n        /* \"#utility.yul\":20237:20246   */\n      dup3\n        /* \"#utility.yul\":20233:20251   */\n      add\n        /* \"#utility.yul\":20225:20251   */\n      swap1\n      pop\n        /* \"#utility.yul\":20297:20306   */\n      dup2\n        /* \"#utility.yul\":20291:20295   */\n      dup2\n        /* \"#utility.yul\":20287:20307   */\n      sub\n        /* \"#utility.yul\":20283:20284   */\n      0x00\n        /* \"#utility.yul\":20272:20281   */\n      dup4\n        /* \"#utility.yul\":20268:20285   */\n      add\n        /* \"#utility.yul\":20261:20308   */\n      mstore\n        /* \"#utility.yul\":20325:20456   */\n      tag_678\n        /* \"#utility.yul\":20451:20455   */\n      dup2\n        /* \"#utility.yul\":20325:20456   */\n      tag_498\n      jump\t// in\n    tag_678:\n        /* \"#utility.yul\":20317:20456   */\n      swap1\n      pop\n        /* \"#utility.yul\":20044:20463   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20469:20660   */\n    tag_394:\n        /* \"#utility.yul\":20509:20513   */\n      0x00\n        /* \"#utility.yul\":20529:20549   */\n      tag_680\n        /* \"#utility.yul\":20547:20548   */\n      dup3\n        /* \"#utility.yul\":20529:20549   */\n      tag_448\n      jump\t// in\n    tag_680:\n        /* \"#utility.yul\":20524:20549   */\n      swap2\n      pop\n        /* \"#utility.yul\":20563:20583   */\n      tag_681\n        /* \"#utility.yul\":20581:20582   */\n      dup4\n        /* \"#utility.yul\":20563:20583   */\n      tag_448\n      jump\t// in\n    tag_681:\n        /* \"#utility.yul\":20558:20583   */\n      swap3\n      pop\n        /* \"#utility.yul\":20602:20603   */\n      dup3\n        /* \"#utility.yul\":20599:20600   */\n      dup3\n        /* \"#utility.yul\":20596:20604   */\n      lt\n        /* \"#utility.yul\":20593:20627   */\n      iszero\n      tag_682\n      jumpi\n        /* \"#utility.yul\":20607:20625   */\n      tag_683\n      tag_488\n      jump\t// in\n    tag_683:\n        /* \"#utility.yul\":20593:20627   */\n    tag_682:\n        /* \"#utility.yul\":20652:20653   */\n      dup3\n        /* \"#utility.yul\":20649:20650   */\n      dup3\n        /* \"#utility.yul\":20645:20654   */\n      sub\n        /* \"#utility.yul\":20637:20654   */\n      swap1\n      pop\n        /* \"#utility.yul\":20469:20660   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20666:20851   */\n    tag_397:\n        /* \"#utility.yul\":20706:20707   */\n      0x00\n        /* \"#utility.yul\":20723:20743   */\n      tag_685\n        /* \"#utility.yul\":20741:20742   */\n      dup3\n        /* \"#utility.yul\":20723:20743   */\n      tag_448\n      jump\t// in\n    tag_685:\n        /* \"#utility.yul\":20718:20743   */\n      swap2\n      pop\n        /* \"#utility.yul\":20757:20777   */\n      tag_686\n        /* \"#utility.yul\":20775:20776   */\n      dup4\n        /* \"#utility.yul\":20757:20777   */\n      tag_448\n      jump\t// in\n    tag_686:\n        /* \"#utility.yul\":20752:20777   */\n      swap3\n      pop\n        /* \"#utility.yul\":20796:20797   */\n      dup3\n        /* \"#utility.yul\":20786:20821   */\n      tag_687\n      jumpi\n        /* \"#utility.yul\":20801:20819   */\n      tag_688\n      tag_474\n      jump\t// in\n    tag_688:\n        /* \"#utility.yul\":20786:20821   */\n    tag_687:\n        /* \"#utility.yul\":20843:20844   */\n      dup3\n        /* \"#utility.yul\":20840:20841   */\n      dup3\n        /* \"#utility.yul\":20836:20845   */\n      div\n        /* \"#utility.yul\":20831:20845   */\n      swap1\n      pop\n        /* \"#utility.yul\":20666:20851   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20857:21205   */\n    tag_400:\n        /* \"#utility.yul\":20897:20904   */\n      0x00\n        /* \"#utility.yul\":20920:20940   */\n      tag_690\n        /* \"#utility.yul\":20938:20939   */\n      dup3\n        /* \"#utility.yul\":20920:20940   */\n      tag_448\n      jump\t// in\n    tag_690:\n        /* \"#utility.yul\":20915:20940   */\n      swap2\n      pop\n        /* \"#utility.yul\":20954:20974   */\n      tag_691\n        /* \"#utility.yul\":20972:20973   */\n      dup4\n        /* \"#utility.yul\":20954:20974   */\n      tag_448\n      jump\t// in\n    tag_691:\n        /* \"#utility.yul\":20949:20974   */\n      swap3\n      pop\n        /* \"#utility.yul\":21142:21143   */\n      dup2\n        /* \"#utility.yul\":21074:21140   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":21070:21144   */\n      div\n        /* \"#utility.yul\":21067:21068   */\n      dup4\n        /* \"#utility.yul\":21064:21145   */\n      gt\n        /* \"#utility.yul\":21059:21060   */\n      dup3\n        /* \"#utility.yul\":21052:21061   */\n      iszero\n        /* \"#utility.yul\":21045:21062   */\n      iszero\n        /* \"#utility.yul\":21041:21146   */\n      and\n        /* \"#utility.yul\":21038:21169   */\n      iszero\n      tag_692\n      jumpi\n        /* \"#utility.yul\":21149:21167   */\n      tag_693\n      tag_488\n      jump\t// in\n    tag_693:\n        /* \"#utility.yul\":21038:21169   */\n    tag_692:\n        /* \"#utility.yul\":21197:21198   */\n      dup3\n        /* \"#utility.yul\":21194:21195   */\n      dup3\n        /* \"#utility.yul\":21190:21199   */\n      mul\n        /* \"#utility.yul\":21179:21199   */\n      swap1\n      pop\n        /* \"#utility.yul\":20857:21205   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21211:21653   */\n    tag_411:\n        /* \"#utility.yul\":21360:21364   */\n      0x00\n        /* \"#utility.yul\":21398:21400   */\n      0x60\n        /* \"#utility.yul\":21387:21396   */\n      dup3\n        /* \"#utility.yul\":21383:21401   */\n      add\n        /* \"#utility.yul\":21375:21401   */\n      swap1\n      pop\n        /* \"#utility.yul\":21411:21482   */\n      tag_695\n        /* \"#utility.yul\":21479:21480   */\n      0x00\n        /* \"#utility.yul\":21468:21477   */\n      dup4\n        /* \"#utility.yul\":21464:21481   */\n      add\n        /* \"#utility.yul\":21455:21461   */\n      dup7\n        /* \"#utility.yul\":21411:21482   */\n      tag_459\n      jump\t// in\n    tag_695:\n        /* \"#utility.yul\":21492:21564   */\n      tag_696\n        /* \"#utility.yul\":21560:21562   */\n      0x20\n        /* \"#utility.yul\":21549:21558   */\n      dup4\n        /* \"#utility.yul\":21545:21563   */\n      add\n        /* \"#utility.yul\":21536:21542   */\n      dup6\n        /* \"#utility.yul\":21492:21564   */\n      tag_459\n      jump\t// in\n    tag_696:\n        /* \"#utility.yul\":21574:21646   */\n      tag_697\n        /* \"#utility.yul\":21642:21644   */\n      0x40\n        /* \"#utility.yul\":21631:21640   */\n      dup4\n        /* \"#utility.yul\":21627:21645   */\n      add\n        /* \"#utility.yul\":21618:21624   */\n      dup5\n        /* \"#utility.yul\":21574:21646   */\n      tag_449\n      jump\t// in\n    tag_697:\n        /* \"#utility.yul\":21211:21653   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21659:21749   */\n    tag_499:\n        /* \"#utility.yul\":21693:21700   */\n      0x00\n        /* \"#utility.yul\":21736:21741   */\n      dup2\n        /* \"#utility.yul\":21729:21742   */\n      iszero\n        /* \"#utility.yul\":21722:21743   */\n      iszero\n        /* \"#utility.yul\":21711:21743   */\n      swap1\n      pop\n        /* \"#utility.yul\":21659:21749   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21755:21871   */\n    tag_500:\n        /* \"#utility.yul\":21825:21846   */\n      tag_700\n        /* \"#utility.yul\":21840:21845   */\n      dup2\n        /* \"#utility.yul\":21825:21846   */\n      tag_499\n      jump\t// in\n    tag_700:\n        /* \"#utility.yul\":21818:21823   */\n      dup2\n        /* \"#utility.yul\":21815:21847   */\n      eq\n        /* \"#utility.yul\":21805:21865   */\n      tag_701\n      jumpi\n        /* \"#utility.yul\":21861:21862   */\n      0x00\n        /* \"#utility.yul\":21858:21859   */\n      dup1\n        /* \"#utility.yul\":21851:21863   */\n      revert\n        /* \"#utility.yul\":21805:21865   */\n    tag_701:\n        /* \"#utility.yul\":21755:21871   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21877:22014   */\n    tag_501:\n        /* \"#utility.yul\":21931:21936   */\n      0x00\n        /* \"#utility.yul\":21962:21968   */\n      dup2\n        /* \"#utility.yul\":21956:21969   */\n      mload\n        /* \"#utility.yul\":21947:21969   */\n      swap1\n      pop\n        /* \"#utility.yul\":21978:22008   */\n      tag_703\n        /* \"#utility.yul\":22002:22007   */\n      dup2\n        /* \"#utility.yul\":21978:22008   */\n      tag_500\n      jump\t// in\n    tag_703:\n        /* \"#utility.yul\":21877:22014   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22020:22365   */\n    tag_417:\n        /* \"#utility.yul\":22087:22093   */\n      0x00\n        /* \"#utility.yul\":22136:22138   */\n      0x20\n        /* \"#utility.yul\":22124:22133   */\n      dup3\n        /* \"#utility.yul\":22115:22122   */\n      dup5\n        /* \"#utility.yul\":22111:22134   */\n      sub\n        /* \"#utility.yul\":22107:22139   */\n      slt\n        /* \"#utility.yul\":22104:22223   */\n      iszero\n      tag_705\n      jumpi\n        /* \"#utility.yul\":22142:22221   */\n      tag_706\n      tag_451\n      jump\t// in\n    tag_706:\n        /* \"#utility.yul\":22104:22223   */\n    tag_705:\n        /* \"#utility.yul\":22262:22263   */\n      0x00\n        /* \"#utility.yul\":22287:22348   */\n      tag_707\n        /* \"#utility.yul\":22340:22347   */\n      dup5\n        /* \"#utility.yul\":22331:22337   */\n      dup3\n        /* \"#utility.yul\":22320:22329   */\n      dup6\n        /* \"#utility.yul\":22316:22338   */\n      add\n        /* \"#utility.yul\":22287:22348   */\n      tag_501\n      jump\t// in\n    tag_707:\n        /* \"#utility.yul\":22277:22348   */\n      swap2\n      pop\n        /* \"#utility.yul\":22233:22358   */\n      pop\n        /* \"#utility.yul\":22020:22365   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22371:22600   */\n    tag_502:\n        /* \"#utility.yul\":22511:22545   */\n      0x5361666542455032303a204245503230206f7065726174696f6e20646964206e\n        /* \"#utility.yul\":22507:22508   */\n      0x00\n        /* \"#utility.yul\":22499:22505   */\n      dup3\n        /* \"#utility.yul\":22495:22509   */\n      add\n        /* \"#utility.yul\":22488:22546   */\n      mstore\n        /* \"#utility.yul\":22580:22592   */\n      0x6f74207375636365656400000000000000000000000000000000000000000000\n        /* \"#utility.yul\":22575:22577   */\n      0x20\n        /* \"#utility.yul\":22567:22573   */\n      dup3\n        /* \"#utility.yul\":22563:22578   */\n      add\n        /* \"#utility.yul\":22556:22593   */\n      mstore\n        /* \"#utility.yul\":22371:22600   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22606:22972   */\n    tag_503:\n        /* \"#utility.yul\":22748:22751   */\n      0x00\n        /* \"#utility.yul\":22769:22836   */\n      tag_710\n        /* \"#utility.yul\":22833:22835   */\n      0x2a\n        /* \"#utility.yul\":22828:22831   */\n      dup4\n        /* \"#utility.yul\":22769:22836   */\n      tag_465\n      jump\t// in\n    tag_710:\n        /* \"#utility.yul\":22762:22836   */\n      swap2\n      pop\n        /* \"#utility.yul\":22845:22938   */\n      tag_711\n        /* \"#utility.yul\":22934:22937   */\n      dup3\n        /* \"#utility.yul\":22845:22938   */\n      tag_502\n      jump\t// in\n    tag_711:\n        /* \"#utility.yul\":22963:22965   */\n      0x40\n        /* \"#utility.yul\":22958:22961   */\n      dup3\n        /* \"#utility.yul\":22954:22966   */\n      add\n        /* \"#utility.yul\":22947:22966   */\n      swap1\n      pop\n        /* \"#utility.yul\":22606:22972   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22978:23397   */\n    tag_420:\n        /* \"#utility.yul\":23144:23148   */\n      0x00\n        /* \"#utility.yul\":23182:23184   */\n      0x20\n        /* \"#utility.yul\":23171:23180   */\n      dup3\n        /* \"#utility.yul\":23167:23185   */\n      add\n        /* \"#utility.yul\":23159:23185   */\n      swap1\n      pop\n        /* \"#utility.yul\":23231:23240   */\n      dup2\n        /* \"#utility.yul\":23225:23229   */\n      dup2\n        /* \"#utility.yul\":23221:23241   */\n      sub\n        /* \"#utility.yul\":23217:23218   */\n      0x00\n        /* \"#utility.yul\":23206:23215   */\n      dup4\n        /* \"#utility.yul\":23202:23219   */\n      add\n        /* \"#utility.yul\":23195:23242   */\n      mstore\n        /* \"#utility.yul\":23259:23390   */\n      tag_713\n        /* \"#utility.yul\":23385:23389   */\n      dup2\n        /* \"#utility.yul\":23259:23390   */\n      tag_503\n      jump\t// in\n    tag_713:\n        /* \"#utility.yul\":23251:23390   */\n      swap1\n      pop\n        /* \"#utility.yul\":22978:23397   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23403:23628   */\n    tag_504:\n        /* \"#utility.yul\":23543:23577   */\n      0x416464726573733a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":23539:23540   */\n      0x00\n        /* \"#utility.yul\":23531:23537   */\n      dup3\n        /* \"#utility.yul\":23527:23541   */\n      add\n        /* \"#utility.yul\":23520:23578   */\n      mstore\n        /* \"#utility.yul\":23612:23620   */\n      0x722063616c6c0000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":23607:23609   */\n      0x20\n        /* \"#utility.yul\":23599:23605   */\n      dup3\n        /* \"#utility.yul\":23595:23610   */\n      add\n        /* \"#utility.yul\":23588:23621   */\n      mstore\n        /* \"#utility.yul\":23403:23628   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23634:24000   */\n    tag_505:\n        /* \"#utility.yul\":23776:23779   */\n      0x00\n        /* \"#utility.yul\":23797:23864   */\n      tag_716\n        /* \"#utility.yul\":23861:23863   */\n      0x26\n        /* \"#utility.yul\":23856:23859   */\n      dup4\n        /* \"#utility.yul\":23797:23864   */\n      tag_465\n      jump\t// in\n    tag_716:\n        /* \"#utility.yul\":23790:23864   */\n      swap2\n      pop\n        /* \"#utility.yul\":23873:23966   */\n      tag_717\n        /* \"#utility.yul\":23962:23965   */\n      dup3\n        /* \"#utility.yul\":23873:23966   */\n      tag_504\n      jump\t// in\n    tag_717:\n        /* \"#utility.yul\":23991:23993   */\n      0x40\n        /* \"#utility.yul\":23986:23989   */\n      dup3\n        /* \"#utility.yul\":23982:23994   */\n      add\n        /* \"#utility.yul\":23975:23994   */\n      swap1\n      pop\n        /* \"#utility.yul\":23634:24000   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24006:24425   */\n    tag_427:\n        /* \"#utility.yul\":24172:24176   */\n      0x00\n        /* \"#utility.yul\":24210:24212   */\n      0x20\n        /* \"#utility.yul\":24199:24208   */\n      dup3\n        /* \"#utility.yul\":24195:24213   */\n      add\n        /* \"#utility.yul\":24187:24213   */\n      swap1\n      pop\n        /* \"#utility.yul\":24259:24268   */\n      dup2\n        /* \"#utility.yul\":24253:24257   */\n      dup2\n        /* \"#utility.yul\":24249:24269   */\n      sub\n        /* \"#utility.yul\":24245:24246   */\n      0x00\n        /* \"#utility.yul\":24234:24243   */\n      dup4\n        /* \"#utility.yul\":24230:24247   */\n      add\n        /* \"#utility.yul\":24223:24270   */\n      mstore\n        /* \"#utility.yul\":24287:24418   */\n      tag_719\n        /* \"#utility.yul\":24413:24417   */\n      dup2\n        /* \"#utility.yul\":24287:24418   */\n      tag_505\n      jump\t// in\n    tag_719:\n        /* \"#utility.yul\":24279:24418   */\n      swap1\n      pop\n        /* \"#utility.yul\":24006:24425   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24431:24610   */\n    tag_506:\n        /* \"#utility.yul\":24571:24602   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":24567:24568   */\n      0x00\n        /* \"#utility.yul\":24559:24565   */\n      dup3\n        /* \"#utility.yul\":24555:24569   */\n      add\n        /* \"#utility.yul\":24548:24603   */\n      mstore\n        /* \"#utility.yul\":24431:24610   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24616:24982   */\n    tag_507:\n        /* \"#utility.yul\":24758:24761   */\n      0x00\n        /* \"#utility.yul\":24779:24846   */\n      tag_722\n        /* \"#utility.yul\":24843:24845   */\n      0x1d\n        /* \"#utility.yul\":24838:24841   */\n      dup4\n        /* \"#utility.yul\":24779:24846   */\n      tag_465\n      jump\t// in\n    tag_722:\n        /* \"#utility.yul\":24772:24846   */\n      swap2\n      pop\n        /* \"#utility.yul\":24855:24948   */\n      tag_723\n        /* \"#utility.yul\":24944:24947   */\n      dup3\n        /* \"#utility.yul\":24855:24948   */\n      tag_506\n      jump\t// in\n    tag_723:\n        /* \"#utility.yul\":24973:24975   */\n      0x20\n        /* \"#utility.yul\":24968:24971   */\n      dup3\n        /* \"#utility.yul\":24964:24976   */\n      add\n        /* \"#utility.yul\":24957:24976   */\n      swap1\n      pop\n        /* \"#utility.yul\":24616:24982   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24988:25407   */\n    tag_432:\n        /* \"#utility.yul\":25154:25158   */\n      0x00\n        /* \"#utility.yul\":25192:25194   */\n      0x20\n        /* \"#utility.yul\":25181:25190   */\n      dup3\n        /* \"#utility.yul\":25177:25195   */\n      add\n        /* \"#utility.yul\":25169:25195   */\n      swap1\n      pop\n        /* \"#utility.yul\":25241:25250   */\n      dup2\n        /* \"#utility.yul\":25235:25239   */\n      dup2\n        /* \"#utility.yul\":25231:25251   */\n      sub\n        /* \"#utility.yul\":25227:25228   */\n      0x00\n        /* \"#utility.yul\":25216:25225   */\n      dup4\n        /* \"#utility.yul\":25212:25229   */\n      add\n        /* \"#utility.yul\":25205:25252   */\n      mstore\n        /* \"#utility.yul\":25269:25400   */\n      tag_725\n        /* \"#utility.yul\":25395:25399   */\n      dup2\n        /* \"#utility.yul\":25269:25400   */\n      tag_507\n      jump\t// in\n    tag_725:\n        /* \"#utility.yul\":25261:25400   */\n      swap1\n      pop\n        /* \"#utility.yul\":24988:25407   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25413:25511   */\n    tag_508:\n        /* \"#utility.yul\":25464:25470   */\n      0x00\n        /* \"#utility.yul\":25498:25503   */\n      dup2\n        /* \"#utility.yul\":25492:25504   */\n      mload\n        /* \"#utility.yul\":25482:25504   */\n      swap1\n      pop\n        /* \"#utility.yul\":25413:25511   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25517:25664   */\n    tag_509:\n        /* \"#utility.yul\":25618:25629   */\n      0x00\n        /* \"#utility.yul\":25655:25658   */\n      dup2\n        /* \"#utility.yul\":25640:25658   */\n      swap1\n      pop\n        /* \"#utility.yul\":25517:25664   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25670:25977   */\n    tag_510:\n        /* \"#utility.yul\":25738:25739   */\n      0x00\n        /* \"#utility.yul\":25748:25861   */\n    tag_729:\n        /* \"#utility.yul\":25762:25768   */\n      dup4\n        /* \"#utility.yul\":25759:25760   */\n      dup2\n        /* \"#utility.yul\":25756:25769   */\n      lt\n        /* \"#utility.yul\":25748:25861   */\n      iszero\n      tag_731\n      jumpi\n        /* \"#utility.yul\":25847:25848   */\n      dup1\n        /* \"#utility.yul\":25842:25845   */\n      dup3\n        /* \"#utility.yul\":25838:25849   */\n      add\n        /* \"#utility.yul\":25832:25850   */\n      mload\n        /* \"#utility.yul\":25828:25829   */\n      dup2\n        /* \"#utility.yul\":25823:25826   */\n      dup5\n        /* \"#utility.yul\":25819:25830   */\n      add\n        /* \"#utility.yul\":25812:25851   */\n      mstore\n        /* \"#utility.yul\":25784:25786   */\n      0x20\n        /* \"#utility.yul\":25781:25782   */\n      dup2\n        /* \"#utility.yul\":25777:25787   */\n      add\n        /* \"#utility.yul\":25772:25787   */\n      swap1\n      pop\n        /* \"#utility.yul\":25748:25861   */\n      jump(tag_729)\n    tag_731:\n        /* \"#utility.yul\":25879:25885   */\n      dup4\n        /* \"#utility.yul\":25876:25877   */\n      dup2\n        /* \"#utility.yul\":25873:25886   */\n      gt\n        /* \"#utility.yul\":25870:25971   */\n      iszero\n      tag_732\n      jumpi\n        /* \"#utility.yul\":25959:25960   */\n      0x00\n        /* \"#utility.yul\":25950:25956   */\n      dup5\n        /* \"#utility.yul\":25945:25948   */\n      dup5\n        /* \"#utility.yul\":25941:25957   */\n      add\n        /* \"#utility.yul\":25934:25961   */\n      mstore\n        /* \"#utility.yul\":25870:25971   */\n    tag_732:\n        /* \"#utility.yul\":25719:25977   */\n      pop\n        /* \"#utility.yul\":25670:25977   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25983:26356   */\n    tag_511:\n        /* \"#utility.yul\":26087:26090   */\n      0x00\n        /* \"#utility.yul\":26115:26153   */\n      tag_734\n        /* \"#utility.yul\":26147:26152   */\n      dup3\n        /* \"#utility.yul\":26115:26153   */\n      tag_508\n      jump\t// in\n    tag_734:\n        /* \"#utility.yul\":26169:26257   */\n      tag_735\n        /* \"#utility.yul\":26250:26256   */\n      dup2\n        /* \"#utility.yul\":26245:26248   */\n      dup6\n        /* \"#utility.yul\":26169:26257   */\n      tag_509\n      jump\t// in\n    tag_735:\n        /* \"#utility.yul\":26162:26257   */\n      swap4\n      pop\n        /* \"#utility.yul\":26266:26318   */\n      tag_736\n        /* \"#utility.yul\":26311:26317   */\n      dup2\n        /* \"#utility.yul\":26306:26309   */\n      dup6\n        /* \"#utility.yul\":26299:26303   */\n      0x20\n        /* \"#utility.yul\":26292:26297   */\n      dup7\n        /* \"#utility.yul\":26288:26304   */\n      add\n        /* \"#utility.yul\":26266:26318   */\n      tag_510\n      jump\t// in\n    tag_736:\n        /* \"#utility.yul\":26343:26349   */\n      dup1\n        /* \"#utility.yul\":26338:26341   */\n      dup5\n        /* \"#utility.yul\":26334:26350   */\n      add\n        /* \"#utility.yul\":26327:26350   */\n      swap2\n      pop\n        /* \"#utility.yul\":26091:26356   */\n      pop\n        /* \"#utility.yul\":25983:26356   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26362:26633   */\n    tag_434:\n        /* \"#utility.yul\":26492:26495   */\n      0x00\n        /* \"#utility.yul\":26514:26607   */\n      tag_738\n        /* \"#utility.yul\":26603:26606   */\n      dup3\n        /* \"#utility.yul\":26594:26600   */\n      dup5\n        /* \"#utility.yul\":26514:26607   */\n      tag_511\n      jump\t// in\n    tag_738:\n        /* \"#utility.yul\":26507:26607   */\n      swap2\n      pop\n        /* \"#utility.yul\":26624:26627   */\n      dup2\n        /* \"#utility.yul\":26617:26627   */\n      swap1\n      pop\n        /* \"#utility.yul\":26362:26633   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26639:26738   */\n    tag_512:\n        /* \"#utility.yul\":26691:26697   */\n      0x00\n        /* \"#utility.yul\":26725:26730   */\n      dup2\n        /* \"#utility.yul\":26719:26731   */\n      mload\n        /* \"#utility.yul\":26709:26731   */\n      swap1\n      pop\n        /* \"#utility.yul\":26639:26738   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26744:26846   */\n    tag_513:\n        /* \"#utility.yul\":26785:26791   */\n      0x00\n        /* \"#utility.yul\":26836:26838   */\n      0x1f\n        /* \"#utility.yul\":26832:26839   */\n      not\n        /* \"#utility.yul\":26827:26829   */\n      0x1f\n        /* \"#utility.yul\":26820:26825   */\n      dup4\n        /* \"#utility.yul\":26816:26830   */\n      add\n        /* \"#utility.yul\":26812:26840   */\n      and\n        /* \"#utility.yul\":26802:26840   */\n      swap1\n      pop\n        /* \"#utility.yul\":26744:26846   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26852:27216   */\n    tag_514:\n        /* \"#utility.yul\":26940:26943   */\n      0x00\n        /* \"#utility.yul\":26968:27007   */\n      tag_742\n        /* \"#utility.yul\":27001:27006   */\n      dup3\n        /* \"#utility.yul\":26968:27007   */\n      tag_512\n      jump\t// in\n    tag_742:\n        /* \"#utility.yul\":27023:27094   */\n      tag_743\n        /* \"#utility.yul\":27087:27093   */\n      dup2\n        /* \"#utility.yul\":27082:27085   */\n      dup6\n        /* \"#utility.yul\":27023:27094   */\n      tag_465\n      jump\t// in\n    tag_743:\n        /* \"#utility.yul\":27016:27094   */\n      swap4\n      pop\n        /* \"#utility.yul\":27103:27155   */\n      tag_744\n        /* \"#utility.yul\":27148:27154   */\n      dup2\n        /* \"#utility.yul\":27143:27146   */\n      dup6\n        /* \"#utility.yul\":27136:27140   */\n      0x20\n        /* \"#utility.yul\":27129:27134   */\n      dup7\n        /* \"#utility.yul\":27125:27141   */\n      add\n        /* \"#utility.yul\":27103:27155   */\n      tag_510\n      jump\t// in\n    tag_744:\n        /* \"#utility.yul\":27180:27209   */\n      tag_745\n        /* \"#utility.yul\":27202:27208   */\n      dup2\n        /* \"#utility.yul\":27180:27209   */\n      tag_513\n      jump\t// in\n    tag_745:\n        /* \"#utility.yul\":27175:27178   */\n      dup5\n        /* \"#utility.yul\":27171:27210   */\n      add\n        /* \"#utility.yul\":27164:27210   */\n      swap2\n      pop\n        /* \"#utility.yul\":26944:27216   */\n      pop\n        /* \"#utility.yul\":26852:27216   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27222:27535   */\n    tag_447:\n        /* \"#utility.yul\":27335:27339   */\n      0x00\n        /* \"#utility.yul\":27373:27375   */\n      0x20\n        /* \"#utility.yul\":27362:27371   */\n      dup3\n        /* \"#utility.yul\":27358:27376   */\n      add\n        /* \"#utility.yul\":27350:27376   */\n      swap1\n      pop\n        /* \"#utility.yul\":27422:27431   */\n      dup2\n        /* \"#utility.yul\":27416:27420   */\n      dup2\n        /* \"#utility.yul\":27412:27432   */\n      sub\n        /* \"#utility.yul\":27408:27409   */\n      0x00\n        /* \"#utility.yul\":27397:27406   */\n      dup4\n        /* \"#utility.yul\":27393:27410   */\n      add\n        /* \"#utility.yul\":27386:27433   */\n      mstore\n        /* \"#utility.yul\":27450:27528   */\n      tag_747\n        /* \"#utility.yul\":27523:27527   */\n      dup2\n        /* \"#utility.yul\":27514:27520   */\n      dup5\n        /* \"#utility.yul\":27450:27528   */\n      tag_514\n      jump\t// in\n    tag_747:\n        /* \"#utility.yul\":27442:27528   */\n      swap1\n      pop\n        /* \"#utility.yul\":27222:27535   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122065973e8b3407e221c545fa96307fd8580b7c9883990a872431b2c0d99b98d6fc64736f6c63430008090033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@Init_1280": {
									"entryPoint": 379,
									"id": 1280,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_1234": {
									"entryPoint": null,
									"id": 1234,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_489": {
									"entryPoint": 175,
									"id": 489,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_103": {
									"entryPoint": 183,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 576,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 599,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 530,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 498,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 493,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 550,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1199:8",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:8",
														"type": ""
													}
												],
												"src": "7:75:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:8",
														"type": ""
													}
												],
												"src": "334:126:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:8",
														"type": ""
													}
												],
												"src": "466:96:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:8"
															},
															"nodeType": "YulIf",
															"src": "621:63:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:8",
														"type": ""
													}
												],
												"src": "568:122:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:8"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:8",
														"type": ""
													}
												],
												"src": "696:143:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "922:274:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "968:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "964:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "935:32:8"
															},
															"nodeType": "YulIf",
															"src": "932:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "1061:128:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1105:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "892:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "903:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "915:6:8",
														"type": ""
													}
												],
												"src": "845:351:8"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506040516200387d3803806200387d833981810160405281019062000037919062000257565b620000576200004b620000af60201b60201c565b620000b760201b60201c565b620000676200017b60201b60201c565b80600d60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000289565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60c86003819055506105dc60018190555060646004819055506007600281905550605a6005819055506a027b46536c66c8e300000060068190555069d3c21bcecceda10000006009819055506a027b46536c66c8e30000006008819055506a05ca4ec2a79a7f67000000600781905550565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200021f82620001f2565b9050919050565b620002318162000212565b81146200023d57600080fd5b50565b600081519050620002518162000226565b92915050565b60006020828403121562000270576200026f620001ed565b5b6000620002808482850162000240565b91505092915050565b6135e480620002996000396000f3fe608060405234801561001057600080fd5b50600436106101cf5760003560e01c8063817b1cd211610104578063aedf562b116100a2578063f2fde38b11610071578063f2fde38b146104de578063f9931855146104fa578063fc0c546a1461052a578063fe600f8414610548576101cf565b8063aedf562b14610446578063c1704a1414610476578063c665d80e14610492578063ce34751f146104ae576101cf565b806391e07e7a116100de57806391e07e7a146103d65780639e447fc6146103f2578063a694fc3a1461040e578063ae5449431461042a576101cf565b8063817b1cd21461036a5780638da5cb5b14610388578063909f093e146103a6576101cf565b80634b62b70b11610171578063692642e71161014b578063692642e7146102f65780636ef3243514610312578063715018a6146103425780637e1a37861461034c576101cf565b80634b62b70b146102a05780634b77dd9e146102bc5780635715ec11146102d8576101cf565b806323b61117116101ad57806323b611171461022e5780632e1a7d4d1461024a5780634641257d146102665780634a4fbeec14610270576101cf565b80630917e776146101d457806318b2367e146101f2578063221dfe0314610210575b600080fd5b6101dc610578565b6040516101e991906127f8565b60405180910390f35b6101fa610582565b60405161020791906127f8565b60405180910390f35b61021861058c565b60405161022591906127f8565b60405180910390f35b61024860048036038101906102439190612844565b610596565b005b610264600480360381019061025f9190612844565b61065f565b005b61026e610a11565b005b61028a600480360381019061028591906128cf565b610d14565b60405161029791906127f8565b60405180910390f35b6102ba60048036038101906102b59190612844565b610ecc565b005b6102d660048036038101906102d191906128fc565b610f95565b005b6102e06113e8565b6040516102ed91906127f8565b60405180910390f35b610310600480360381019061030b9190612844565b6113f5565b005b61032c600480360381019061032791906128cf565b6114f5565b60405161033991906127f8565b60405180910390f35b61034a61163c565b005b6103546116c4565b60405161036191906127f8565b60405180910390f35b6103726116ce565b60405161037f91906127f8565b60405180910390f35b6103906116d4565b60405161039d919061294b565b60405180910390f35b6103c060048036038101906103bb9190612844565b6116fd565b6040516103cd91906127f8565b60405180910390f35b6103f060048036038101906103eb9190612844565b611798565b005b61040c60048036038101906104079190612844565b611898565b005b61042860048036038101906104239190612844565b611998565b005b610444600480360381019061043f9190612844565b611c95565b005b610460600480360381019061045b91906128cf565b611d5e565b60405161046d91906127f8565b60405180910390f35b610490600480360381019061048b9190612844565b611df5565b005b6104ac60048036038101906104a79190612844565b611ebe565b005b6104c860048036038101906104c39190612844565b611f87565b6040516104d591906127f8565b60405180910390f35b6104f860048036038101906104f391906128cf565b611fa6565b005b610514600480360381019061050f91906128cf565b61209e565b60405161052191906127f8565b60405180910390f35b6105326120ea565b60405161053f91906129c5565b60405180910390f35b610562600480360381019061055d91906128cf565b612110565b60405161056f91906127f8565b60405180910390f35b6000600c54905090565b6000600254905090565b6000600154905090565b61059e61215c565b73ffffffffffffffffffffffffffffffffffffffff166105bc6116d4565b73ffffffffffffffffffffffffffffffffffffffff1614610612576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060990612a3d565b60405180910390fd5b60008111610655576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064c90612aa9565b60405180910390fd5b8060088190555050565b600081116106a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069990612b15565b60405180910390fd5b600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154811115610727576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071e90612b81565b60405180910390fd5b61072f612164565b600081905060006107a062015180610792600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301544261233790919063ffffffff16565b61234d90919063ffffffff16565b9050600060649050600080600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002015414156108685761086061080f6201518060055461236390919063ffffffff16565b600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003015461237990919063ffffffff16565b421015610886565b6000600254846108789190612bd0565b1480156108855750600083115b5b9050806108935760015491505b6108e884600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015461233790919063ffffffff16565b600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018190555061094384600c5461233790919063ffffffff16565b600c81905550610982610973612710610965858861236390919063ffffffff16565b61234d90919063ffffffff16565b8561233790919063ffffffff16565b93506109d13385600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661238f9092919063ffffffff16565b7f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a94243643385604051610a02929190612c01565b60405180910390a15050505050565b610a19612164565b6000600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015490506000610a9d610a8e612710610a806004548661236390919063ffffffff16565b61234d90919063ffffffff16565b8361233790919063ffffffff16565b905060008111610ae2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ad990612c76565b60405180910390fd5b600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610b3d919061294b565b60206040518083038186803b158015610b5557600080fd5b505afa158015610b69573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b8d9190612cab565b811115610c4257600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610bef919061294b565b60206040518083038186803b158015610c0757600080fd5b505afa158015610c1b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c3f9190612cab565b90505b610c8f3382600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661238f9092919063ffffffff16565b6000600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055507fc9695243a805adb74c91f28311176c65b417e842d5699893cef56d18bfa48cba3382604051610d08929190612c01565b60405180910390a15050565b60006037600b60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206005015414610d695760009050610ec7565b6000600b60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002015414610e445760006007610e2162015180610e13600b60008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301544261233790919063ffffffff16565b61234d90919063ffffffff16565b610e2b9190612bd0565b14610e37576001610e3a565b60005b60ff169050610ec7565b610e5c6201518060055461236390919063ffffffff16565b610eb1600b60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301544261233790919063ffffffff16565b1015610ebe576001610ec1565b60005b60ff1690505b919050565b610ed461215c565b73ffffffffffffffffffffffffffffffffffffffff16610ef26116d4565b73ffffffffffffffffffffffffffffffffffffffff1614610f48576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f3f90612a3d565b60405180910390fd5b60008111610f8b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f8290612aa9565b60405180910390fd5b8060058190555050565b60008211610fd8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fcf90612b15565b60405180910390fd5b81600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401611034919061294b565b60206040518083038186803b15801561104c57600080fd5b505afa158015611060573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110849190612cab565b116110c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110bb90612d24565b60405180910390fd5b60006110cf33610d14565b1461110f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161110690612d90565b60405180910390fd5b60008114156111625760065482101561115d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161115490612dfc565b60405180910390fd5b6112a2565b60018114156111b5576009548210156111b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111a790612dfc565b60405180910390fd5b6112a1565b600281141561120857600854821015611203576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111fa90612dfc565b60405180910390fd5b6112a0565b600381141561125b57600754821015611256576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161124d90612dfc565b60405180910390fd5b61129f565b6000821061129e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161129590612e68565b60405180910390fd5b5b5b5b5b80600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018190555042600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301819055506037600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060050181905550600a339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506113e482611998565b5050565b6000600a80549050905090565b6113fd61215c565b73ffffffffffffffffffffffffffffffffffffffff1661141b6116d4565b73ffffffffffffffffffffffffffffffffffffffff1614611471576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161146890612a3d565b60405180910390fd5b600081116114b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114ab90612ed4565b60405180910390fd5b806002819055507f189bda9782663c67a3f95c0aa5455924c711210b00281c60ead2f0dd8dbc924c816040516114ea91906127f8565b60405180910390a150565b600080600b60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154905060006115e36127106115d5620151806115c76003546115b96115aa600b60008d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600401544261233790919063ffffffff16565b8961236390919063ffffffff16565b61236390919063ffffffff16565b61234d90919063ffffffff16565b61234d90919063ffffffff16565b905080600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001546116339190612f23565b92505050919050565b61164461215c565b73ffffffffffffffffffffffffffffffffffffffff166116626116d4565b73ffffffffffffffffffffffffffffffffffffffff16146116b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116af90612a3d565b60405180910390fd5b6116c26000612415565b565b6000600354905090565b600c5481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000806000905060008314806117135750600283145b1561172257600654905061178f565b600183141561173557600954905061178e565b600383141561174857600754905061178d565b600160001161178c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161178390612e68565b60405180910390fd5b5b5b5b80915050919050565b6117a061215c565b73ffffffffffffffffffffffffffffffffffffffff166117be6116d4565b73ffffffffffffffffffffffffffffffffffffffff1614611814576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161180b90612a3d565b60405180910390fd5b60008111611857576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161184e90612fc5565b60405180910390fd5b806001819055507f150c688dd7595bf7862b8ab1fe46756450eb7d731037942b3bbc46f3f0e21b818160405161188d91906127f8565b60405180910390a150565b6118a061215c565b73ffffffffffffffffffffffffffffffffffffffff166118be6116d4565b73ffffffffffffffffffffffffffffffffffffffff1614611914576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161190b90612a3d565b60405180910390fd5b60008111611957576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161194e90613031565b60405180910390fd5b806003819055507f1946fb78c7ca778b54d82cabaac5ba67cf446f58d0ff1f8ceaebb6150e54e44f8160405161198d91906127f8565b60405180910390a150565b600081116119db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119d290612b15565b60405180910390fd5b80600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401611a37919061294b565b60206040518083038186803b158015611a4f57600080fd5b505afa158015611a63573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a879190612cab565b11611ac7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611abe90612d24565b60405180910390fd5b6037600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206005015414611b4c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b439061309d565b60405180910390fd5b611b54612164565b611ba3333083600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166124d9909392919063ffffffff16565b611bf881600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015461237990919063ffffffff16565b600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010181905550611c5381600c5461237990919063ffffffff16565b600c819055507f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d3382604051611c8a929190612c01565b60405180910390a150565b611c9d61215c565b73ffffffffffffffffffffffffffffffffffffffff16611cbb6116d4565b73ffffffffffffffffffffffffffffffffffffffff1614611d11576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d0890612a3d565b60405180910390fd5b60008111611d54576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d4b90612aa9565b60405180910390fd5b8060078190555050565b60006037611d6b83612110565b14611dab576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611da290613109565b60405180910390fd5b600b60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201549050919050565b611dfd61215c565b73ffffffffffffffffffffffffffffffffffffffff16611e1b6116d4565b73ffffffffffffffffffffffffffffffffffffffff1614611e71576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e6890612a3d565b60405180910390fd5b60008111611eb4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611eab90612aa9565b60405180910390fd5b8060098190555050565b611ec661215c565b73ffffffffffffffffffffffffffffffffffffffff16611ee46116d4565b73ffffffffffffffffffffffffffffffffffffffff1614611f3a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f3190612a3d565b60405180910390fd5b60008111611f7d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f7490612aa9565b60405180910390fd5b8060068190555050565b600080821415611f9b576005549050611fa1565b60025490505b919050565b611fae61215c565b73ffffffffffffffffffffffffffffffffffffffff16611fcc6116d4565b73ffffffffffffffffffffffffffffffffffffffff1614612022576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161201990612a3d565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415612092576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120899061319b565b60405180910390fd5b61209b81612415565b50565b6000600b60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101549050919050565b600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600b60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600501549050919050565b600033905090565b6000600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101549050600061224f612710612241603c612233600354612225612216600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600401544261233790919063ffffffff16565b8961236390919063ffffffff16565b61236390919063ffffffff16565b61234d90919063ffffffff16565b61234d90919063ffffffff16565b90506122a681600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015461237990919063ffffffff16565b600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190555042600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600401819055505050565b6000818361234591906131bb565b905092915050565b6000818361235b91906131ef565b905092915050565b600081836123719190613220565b905092915050565b600081836123879190612f23565b905092915050565b6124108363a9059cbb60e01b84846040516024016123ae929190612c01565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050612562565b505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b61255c846323b872dd60e01b8585856040516024016124fa9392919061327a565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050612562565b50505050565b60006125c4826040518060400160405280602081526020017f5361666542455032303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166126299092919063ffffffff16565b905060008151111561262457808060200190518101906125e491906132e9565b612623576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161261a90613388565b60405180910390fd5b5b505050565b60606126388484600085612641565b90509392505050565b606082471015612686576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161267d9061341a565b60405180910390fd5b61268f85612755565b6126ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016126c590613486565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516126f79190613520565b60006040518083038185875af1925050503d8060008114612734576040519150601f19603f3d011682016040523d82523d6000602084013e612739565b606091505b5091509150612749828286612778565b92505050949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60608315612788578290506127d8565b60008351111561279b5782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016127cf919061358c565b60405180910390fd5b9392505050565b6000819050919050565b6127f2816127df565b82525050565b600060208201905061280d60008301846127e9565b92915050565b600080fd5b612821816127df565b811461282c57600080fd5b50565b60008135905061283e81612818565b92915050565b60006020828403121561285a57612859612813565b5b60006128688482850161282f565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061289c82612871565b9050919050565b6128ac81612891565b81146128b757600080fd5b50565b6000813590506128c9816128a3565b92915050565b6000602082840312156128e5576128e4612813565b5b60006128f3848285016128ba565b91505092915050565b6000806040838503121561291357612912612813565b5b60006129218582860161282f565b92505060206129328582860161282f565b9150509250929050565b61294581612891565b82525050565b6000602082019050612960600083018461293c565b92915050565b6000819050919050565b600061298b61298661298184612871565b612966565b612871565b9050919050565b600061299d82612970565b9050919050565b60006129af82612992565b9050919050565b6129bf816129a4565b82525050565b60006020820190506129da60008301846129b6565b92915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000612a276020836129e0565b9150612a32826129f1565b602082019050919050565b60006020820190508181036000830152612a5681612a1a565b9050919050565b7f43616e2774206265207a65726f00000000000000000000000000000000000000600082015250565b6000612a93600d836129e0565b9150612a9e82612a5d565b602082019050919050565b60006020820190508181036000830152612ac281612a86565b9050919050565b7f416d6f756e742073686f756c642062652067726561746572207468616e203000600082015250565b6000612aff601f836129e0565b9150612b0a82612ac9565b602082019050919050565b60006020820190508181036000830152612b2e81612af2565b9050919050565b7f496e76616c696420616d6f756e74000000000000000000000000000000000000600082015250565b6000612b6b600e836129e0565b9150612b7682612b35565b602082019050919050565b60006020820190508181036000830152612b9a81612b5e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000612bdb826127df565b9150612be6836127df565b925082612bf657612bf5612ba1565b5b828206905092915050565b6000604082019050612c16600083018561293c565b612c2360208301846127e9565b9392505050565b7f4e6f7468696e6720746f20636c61696d00000000000000000000000000000000600082015250565b6000612c606010836129e0565b9150612c6b82612c2a565b602082019050919050565b60006020820190508181036000830152612c8f81612c53565b9050919050565b600081519050612ca581612818565b92915050565b600060208284031215612cc157612cc0612813565b5b6000612ccf84828501612c96565b91505092915050565b7f496e73756666696369656e742100000000000000000000000000000000000000600082015250565b6000612d0e600d836129e0565b9150612d1982612cd8565b602082019050919050565b60006020820190508181036000830152612d3d81612d01565b9050919050565b7f43616e2774207374617274000000000000000000000000000000000000000000600082015250565b6000612d7a600b836129e0565b9150612d8582612d44565b602082019050919050565b60006020820190508181036000830152612da981612d6d565b9050919050565b7f496e73756666696369656e740000000000000000000000000000000000000000600082015250565b6000612de6600c836129e0565b9150612df182612db0565b602082019050919050565b60006020820190508181036000830152612e1581612dd9565b9050919050565b7f496e76616c6964204d6f64650000000000000000000000000000000000000000600082015250565b6000612e52600c836129e0565b9150612e5d82612e1c565b602082019050919050565b60006020820190508181036000830152612e8181612e45565b9050919050565b7f496e76616c6964204c6f636b7570204475726174696f6e000000000000000000600082015250565b6000612ebe6017836129e0565b9150612ec982612e88565b602082019050919050565b60006020820190508181036000830152612eed81612eb1565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612f2e826127df565b9150612f39836127df565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115612f6e57612f6d612ef4565b5b828201905092915050565b7f496e76616c696420556e7374616b696e67204665652052617465000000000000600082015250565b6000612faf601a836129e0565b9150612fba82612f79565b602082019050919050565b60006020820190508181036000830152612fde81612fa2565b9050919050565b7f496e76616c69642076616c756500000000000000000000000000000000000000600082015250565b600061301b600d836129e0565b915061302682612fe5565b602082019050919050565b6000602082019050818103600083015261304a8161300e565b9050919050565b7f4572726f723a20696e76616c6964207374616b65720000000000000000000000600082015250565b60006130876015836129e0565b915061309282613051565b602082019050919050565b600060208201905081810360008301526130b68161307a565b9050919050565b7f4e6f74207374616b657220796574000000000000000000000000000000000000600082015250565b60006130f3600e836129e0565b91506130fe826130bd565b602082019050919050565b60006020820190508181036000830152613122816130e6565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006131856026836129e0565b915061319082613129565b604082019050919050565b600060208201905081810360008301526131b481613178565b9050919050565b60006131c6826127df565b91506131d1836127df565b9250828210156131e4576131e3612ef4565b5b828203905092915050565b60006131fa826127df565b9150613205836127df565b92508261321557613214612ba1565b5b828204905092915050565b600061322b826127df565b9150613236836127df565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561326f5761326e612ef4565b5b828202905092915050565b600060608201905061328f600083018661293c565b61329c602083018561293c565b6132a960408301846127e9565b949350505050565b60008115159050919050565b6132c6816132b1565b81146132d157600080fd5b50565b6000815190506132e3816132bd565b92915050565b6000602082840312156132ff576132fe612813565b5b600061330d848285016132d4565b91505092915050565b7f5361666542455032303a204245503230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b6000613372602a836129e0565b915061337d82613316565b604082019050919050565b600060208201905081810360008301526133a181613365565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b60006134046026836129e0565b915061340f826133a8565b604082019050919050565b60006020820190508181036000830152613433816133f7565b9050919050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b6000613470601d836129e0565b915061347b8261343a565b602082019050919050565b6000602082019050818103600083015261349f81613463565b9050919050565b600081519050919050565b600081905092915050565b60005b838110156134da5780820151818401526020810190506134bf565b838111156134e9576000848401525b50505050565b60006134fa826134a6565b61350481856134b1565b93506135148185602086016134bc565b80840191505092915050565b600061352c82846134ef565b915081905092915050565b600081519050919050565b6000601f19601f8301169050919050565b600061355e82613537565b61356881856129e0565b93506135788185602086016134bc565b61358181613542565b840191505092915050565b600060208201905081810360008301526135a68184613553565b90509291505056fea264697066735822122065973e8b3407e221c545fa96307fd8580b7c9883990a872431b2c0d99b98d6fc64736f6c63430008090033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x387D CODESIZE SUB DUP1 PUSH3 0x387D DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x257 JUMP JUMPDEST PUSH3 0x57 PUSH3 0x4B PUSH3 0xAF PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xB7 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x67 PUSH3 0x17B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP1 PUSH1 0xD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH3 0x289 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0xC8 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x5DC PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x64 PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH1 0x7 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x5A PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH11 0x27B46536C66C8E3000000 PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH10 0xD3C21BCECCEDA1000000 PUSH1 0x9 DUP2 SWAP1 SSTORE POP PUSH11 0x27B46536C66C8E3000000 PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH11 0x5CA4EC2A79A7F67000000 PUSH1 0x7 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x21F DUP3 PUSH3 0x1F2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x231 DUP2 PUSH3 0x212 JUMP JUMPDEST DUP2 EQ PUSH3 0x23D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x251 DUP2 PUSH3 0x226 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x270 JUMPI PUSH3 0x26F PUSH3 0x1ED JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x280 DUP5 DUP3 DUP6 ADD PUSH3 0x240 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x35E4 DUP1 PUSH3 0x299 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1CF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x817B1CD2 GT PUSH2 0x104 JUMPI DUP1 PUSH4 0xAEDF562B GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xF2FDE38B GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4DE JUMPI DUP1 PUSH4 0xF9931855 EQ PUSH2 0x4FA JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x52A JUMPI DUP1 PUSH4 0xFE600F84 EQ PUSH2 0x548 JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0xAEDF562B EQ PUSH2 0x446 JUMPI DUP1 PUSH4 0xC1704A14 EQ PUSH2 0x476 JUMPI DUP1 PUSH4 0xC665D80E EQ PUSH2 0x492 JUMPI DUP1 PUSH4 0xCE34751F EQ PUSH2 0x4AE JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x91E07E7A GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x91E07E7A EQ PUSH2 0x3D6 JUMPI DUP1 PUSH4 0x9E447FC6 EQ PUSH2 0x3F2 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x40E JUMPI DUP1 PUSH4 0xAE544943 EQ PUSH2 0x42A JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x817B1CD2 EQ PUSH2 0x36A JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x388 JUMPI DUP1 PUSH4 0x909F093E EQ PUSH2 0x3A6 JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x4B62B70B GT PUSH2 0x171 JUMPI DUP1 PUSH4 0x692642E7 GT PUSH2 0x14B JUMPI DUP1 PUSH4 0x692642E7 EQ PUSH2 0x2F6 JUMPI DUP1 PUSH4 0x6EF32435 EQ PUSH2 0x312 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x342 JUMPI DUP1 PUSH4 0x7E1A3786 EQ PUSH2 0x34C JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x4B62B70B EQ PUSH2 0x2A0 JUMPI DUP1 PUSH4 0x4B77DD9E EQ PUSH2 0x2BC JUMPI DUP1 PUSH4 0x5715EC11 EQ PUSH2 0x2D8 JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x23B61117 GT PUSH2 0x1AD JUMPI DUP1 PUSH4 0x23B61117 EQ PUSH2 0x22E JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x24A JUMPI DUP1 PUSH4 0x4641257D EQ PUSH2 0x266 JUMPI DUP1 PUSH4 0x4A4FBEEC EQ PUSH2 0x270 JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x917E776 EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0x18B2367E EQ PUSH2 0x1F2 JUMPI DUP1 PUSH4 0x221DFE03 EQ PUSH2 0x210 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DC PUSH2 0x578 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0x27F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FA PUSH2 0x582 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x207 SWAP2 SWAP1 PUSH2 0x27F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x218 PUSH2 0x58C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x225 SWAP2 SWAP1 PUSH2 0x27F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x248 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x243 SWAP2 SWAP1 PUSH2 0x2844 JUMP JUMPDEST PUSH2 0x596 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x264 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25F SWAP2 SWAP1 PUSH2 0x2844 JUMP JUMPDEST PUSH2 0x65F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x26E PUSH2 0xA11 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x28A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x285 SWAP2 SWAP1 PUSH2 0x28CF JUMP JUMPDEST PUSH2 0xD14 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x297 SWAP2 SWAP1 PUSH2 0x27F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B5 SWAP2 SWAP1 PUSH2 0x2844 JUMP JUMPDEST PUSH2 0xECC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D1 SWAP2 SWAP1 PUSH2 0x28FC JUMP JUMPDEST PUSH2 0xF95 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2E0 PUSH2 0x13E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2ED SWAP2 SWAP1 PUSH2 0x27F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x310 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30B SWAP2 SWAP1 PUSH2 0x2844 JUMP JUMPDEST PUSH2 0x13F5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x32C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x327 SWAP2 SWAP1 PUSH2 0x28CF JUMP JUMPDEST PUSH2 0x14F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x339 SWAP2 SWAP1 PUSH2 0x27F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34A PUSH2 0x163C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x354 PUSH2 0x16C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x361 SWAP2 SWAP1 PUSH2 0x27F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x372 PUSH2 0x16CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x37F SWAP2 SWAP1 PUSH2 0x27F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x390 PUSH2 0x16D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x39D SWAP2 SWAP1 PUSH2 0x294B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3BB SWAP2 SWAP1 PUSH2 0x2844 JUMP JUMPDEST PUSH2 0x16FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3CD SWAP2 SWAP1 PUSH2 0x27F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3EB SWAP2 SWAP1 PUSH2 0x2844 JUMP JUMPDEST PUSH2 0x1798 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x40C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x407 SWAP2 SWAP1 PUSH2 0x2844 JUMP JUMPDEST PUSH2 0x1898 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x428 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x423 SWAP2 SWAP1 PUSH2 0x2844 JUMP JUMPDEST PUSH2 0x1998 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x444 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x43F SWAP2 SWAP1 PUSH2 0x2844 JUMP JUMPDEST PUSH2 0x1C95 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x460 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45B SWAP2 SWAP1 PUSH2 0x28CF JUMP JUMPDEST PUSH2 0x1D5E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x46D SWAP2 SWAP1 PUSH2 0x27F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x490 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x48B SWAP2 SWAP1 PUSH2 0x2844 JUMP JUMPDEST PUSH2 0x1DF5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4AC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4A7 SWAP2 SWAP1 PUSH2 0x2844 JUMP JUMPDEST PUSH2 0x1EBE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4C8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4C3 SWAP2 SWAP1 PUSH2 0x2844 JUMP JUMPDEST PUSH2 0x1F87 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D5 SWAP2 SWAP1 PUSH2 0x27F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4F8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4F3 SWAP2 SWAP1 PUSH2 0x28CF JUMP JUMPDEST PUSH2 0x1FA6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x514 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50F SWAP2 SWAP1 PUSH2 0x28CF JUMP JUMPDEST PUSH2 0x209E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x521 SWAP2 SWAP1 PUSH2 0x27F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x532 PUSH2 0x20EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x53F SWAP2 SWAP1 PUSH2 0x29C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x562 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x55D SWAP2 SWAP1 PUSH2 0x28CF JUMP JUMPDEST PUSH2 0x2110 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x56F SWAP2 SWAP1 PUSH2 0x27F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0xC SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x59E PUSH2 0x215C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x5BC PUSH2 0x16D4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x612 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x609 SWAP1 PUSH2 0x2A3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x655 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64C SWAP1 PUSH2 0x2AA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x8 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x6A2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x699 SWAP1 PUSH2 0x2B15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD DUP2 GT ISZERO PUSH2 0x727 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x71E SWAP1 PUSH2 0x2B81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x72F PUSH2 0x2164 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x0 PUSH2 0x7A0 PUSH3 0x15180 PUSH2 0x792 PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD TIMESTAMP PUSH2 0x2337 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x234D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x64 SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD EQ ISZERO PUSH2 0x868 JUMPI PUSH2 0x860 PUSH2 0x80F PUSH3 0x15180 PUSH1 0x5 SLOAD PUSH2 0x2363 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x2379 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x886 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD DUP5 PUSH2 0x878 SWAP2 SWAP1 PUSH2 0x2BD0 JUMP JUMPDEST EQ DUP1 ISZERO PUSH2 0x885 JUMPI POP PUSH1 0x0 DUP4 GT JUMPDEST JUMPDEST SWAP1 POP DUP1 PUSH2 0x893 JUMPI PUSH1 0x1 SLOAD SWAP2 POP JUMPDEST PUSH2 0x8E8 DUP5 PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x2337 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x943 DUP5 PUSH1 0xC SLOAD PUSH2 0x2337 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xC DUP2 SWAP1 SSTORE POP PUSH2 0x982 PUSH2 0x973 PUSH2 0x2710 PUSH2 0x965 DUP6 DUP9 PUSH2 0x2363 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x234D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 PUSH2 0x2337 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP4 POP PUSH2 0x9D1 CALLER DUP6 PUSH1 0xD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x238F SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH32 0x884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364 CALLER DUP6 PUSH1 0x40 MLOAD PUSH2 0xA02 SWAP3 SWAP2 SWAP1 PUSH2 0x2C01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH2 0xA19 PUSH2 0x2164 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP1 POP PUSH1 0x0 PUSH2 0xA9D PUSH2 0xA8E PUSH2 0x2710 PUSH2 0xA80 PUSH1 0x4 SLOAD DUP7 PUSH2 0x2363 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x234D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 PUSH2 0x2337 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0xAE2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAD9 SWAP1 PUSH2 0x2C76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB3D SWAP2 SWAP1 PUSH2 0x294B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB69 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB8D SWAP2 SWAP1 PUSH2 0x2CAB JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0xC42 JUMPI PUSH1 0xD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEF SWAP2 SWAP1 PUSH2 0x294B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC07 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC1B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC3F SWAP2 SWAP1 PUSH2 0x2CAB JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0xC8F CALLER DUP3 PUSH1 0xD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x238F SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH32 0xC9695243A805ADB74C91F28311176C65B417E842D5699893CEF56D18BFA48CBA CALLER DUP3 PUSH1 0x40 MLOAD PUSH2 0xD08 SWAP3 SWAP2 SWAP1 PUSH2 0x2C01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x37 PUSH1 0xB PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD EQ PUSH2 0xD69 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0xEC7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD EQ PUSH2 0xE44 JUMPI PUSH1 0x0 PUSH1 0x7 PUSH2 0xE21 PUSH3 0x15180 PUSH2 0xE13 PUSH1 0xB PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD TIMESTAMP PUSH2 0x2337 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x234D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xE2B SWAP2 SWAP1 PUSH2 0x2BD0 JUMP JUMPDEST EQ PUSH2 0xE37 JUMPI PUSH1 0x1 PUSH2 0xE3A JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH2 0xEC7 JUMP JUMPDEST PUSH2 0xE5C PUSH3 0x15180 PUSH1 0x5 SLOAD PUSH2 0x2363 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xEB1 PUSH1 0xB PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD TIMESTAMP PUSH2 0x2337 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST LT ISZERO PUSH2 0xEBE JUMPI PUSH1 0x1 PUSH2 0xEC1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0xFF AND SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xED4 PUSH2 0x215C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xEF2 PUSH2 0x16D4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF48 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF3F SWAP1 PUSH2 0x2A3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xF8B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF82 SWAP1 PUSH2 0x2AA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0xFD8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFCF SWAP1 PUSH2 0x2B15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0xD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1034 SWAP2 SWAP1 PUSH2 0x294B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x104C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1060 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1084 SWAP2 SWAP1 PUSH2 0x2CAB JUMP JUMPDEST GT PUSH2 0x10C4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10BB SWAP1 PUSH2 0x2D24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x10CF CALLER PUSH2 0xD14 JUMP JUMPDEST EQ PUSH2 0x110F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1106 SWAP1 PUSH2 0x2D90 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0x1162 JUMPI PUSH1 0x6 SLOAD DUP3 LT ISZERO PUSH2 0x115D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1154 SWAP1 PUSH2 0x2DFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12A2 JUMP JUMPDEST PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x11B5 JUMPI PUSH1 0x9 SLOAD DUP3 LT ISZERO PUSH2 0x11B0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11A7 SWAP1 PUSH2 0x2DFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12A1 JUMP JUMPDEST PUSH1 0x2 DUP2 EQ ISZERO PUSH2 0x1208 JUMPI PUSH1 0x8 SLOAD DUP3 LT ISZERO PUSH2 0x1203 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11FA SWAP1 PUSH2 0x2DFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12A0 JUMP JUMPDEST PUSH1 0x3 DUP2 EQ ISZERO PUSH2 0x125B JUMPI PUSH1 0x7 SLOAD DUP3 LT ISZERO PUSH2 0x1256 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x124D SWAP1 PUSH2 0x2DFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x129F JUMP JUMPDEST PUSH1 0x0 DUP3 LT PUSH2 0x129E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1295 SWAP1 PUSH2 0x2E68 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST JUMPDEST JUMPDEST JUMPDEST DUP1 PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x37 PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD DUP2 SWAP1 SSTORE POP PUSH1 0xA CALLER SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x13E4 DUP3 PUSH2 0x1998 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x13FD PUSH2 0x215C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x141B PUSH2 0x16D4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1471 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1468 SWAP1 PUSH2 0x2A3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x14B4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14AB SWAP1 PUSH2 0x2ED4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH32 0x189BDA9782663C67A3F95C0AA5455924C711210B00281C60EAD2F0DD8DBC924C DUP2 PUSH1 0x40 MLOAD PUSH2 0x14EA SWAP2 SWAP1 PUSH2 0x27F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xB PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP PUSH1 0x0 PUSH2 0x15E3 PUSH2 0x2710 PUSH2 0x15D5 PUSH3 0x15180 PUSH2 0x15C7 PUSH1 0x3 SLOAD PUSH2 0x15B9 PUSH2 0x15AA PUSH1 0xB PUSH1 0x0 DUP14 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD SLOAD TIMESTAMP PUSH2 0x2337 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP10 PUSH2 0x2363 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2363 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x234D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x234D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH2 0x1633 SWAP2 SWAP1 PUSH2 0x2F23 JUMP JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1644 PUSH2 0x215C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1662 PUSH2 0x16D4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x16B8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16AF SWAP1 PUSH2 0x2A3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x16C2 PUSH1 0x0 PUSH2 0x2415 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 DUP4 EQ DUP1 PUSH2 0x1713 JUMPI POP PUSH1 0x2 DUP4 EQ JUMPDEST ISZERO PUSH2 0x1722 JUMPI PUSH1 0x6 SLOAD SWAP1 POP PUSH2 0x178F JUMP JUMPDEST PUSH1 0x1 DUP4 EQ ISZERO PUSH2 0x1735 JUMPI PUSH1 0x9 SLOAD SWAP1 POP PUSH2 0x178E JUMP JUMPDEST PUSH1 0x3 DUP4 EQ ISZERO PUSH2 0x1748 JUMPI PUSH1 0x7 SLOAD SWAP1 POP PUSH2 0x178D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 GT PUSH2 0x178C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1783 SWAP1 PUSH2 0x2E68 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST JUMPDEST JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17A0 PUSH2 0x215C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x17BE PUSH2 0x16D4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1814 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x180B SWAP1 PUSH2 0x2A3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x1857 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x184E SWAP1 PUSH2 0x2FC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH32 0x150C688DD7595BF7862B8AB1FE46756450EB7D731037942B3BBC46F3F0E21B81 DUP2 PUSH1 0x40 MLOAD PUSH2 0x188D SWAP2 SWAP1 PUSH2 0x27F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x18A0 PUSH2 0x215C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x18BE PUSH2 0x16D4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1914 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x190B SWAP1 PUSH2 0x2A3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x1957 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x194E SWAP1 PUSH2 0x3031 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH32 0x1946FB78C7CA778B54D82CABAAC5BA67CF446F58D0FF1F8CEAEBB6150E54E44F DUP2 PUSH1 0x40 MLOAD PUSH2 0x198D SWAP2 SWAP1 PUSH2 0x27F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x19DB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19D2 SWAP1 PUSH2 0x2B15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A37 SWAP2 SWAP1 PUSH2 0x294B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1A4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A63 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1A87 SWAP2 SWAP1 PUSH2 0x2CAB JUMP JUMPDEST GT PUSH2 0x1AC7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1ABE SWAP1 PUSH2 0x2D24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x37 PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD EQ PUSH2 0x1B4C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B43 SWAP1 PUSH2 0x309D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1B54 PUSH2 0x2164 JUMP JUMPDEST PUSH2 0x1BA3 CALLER ADDRESS DUP4 PUSH1 0xD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x24D9 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1BF8 DUP2 PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x2379 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x1C53 DUP2 PUSH1 0xC SLOAD PUSH2 0x2379 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xC DUP2 SWAP1 SSTORE POP PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D CALLER DUP3 PUSH1 0x40 MLOAD PUSH2 0x1C8A SWAP3 SWAP2 SWAP1 PUSH2 0x2C01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x1C9D PUSH2 0x215C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1CBB PUSH2 0x16D4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1D11 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D08 SWAP1 PUSH2 0x2A3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x1D54 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D4B SWAP1 PUSH2 0x2AA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x37 PUSH2 0x1D6B DUP4 PUSH2 0x2110 JUMP JUMPDEST EQ PUSH2 0x1DAB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DA2 SWAP1 PUSH2 0x3109 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xB PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DFD PUSH2 0x215C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1E1B PUSH2 0x16D4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1E71 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E68 SWAP1 PUSH2 0x2A3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x1EB4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1EAB SWAP1 PUSH2 0x2AA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x9 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x1EC6 PUSH2 0x215C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1EE4 PUSH2 0x16D4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1F3A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F31 SWAP1 PUSH2 0x2A3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x1F7D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F74 SWAP1 PUSH2 0x2AA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EQ ISZERO PUSH2 0x1F9B JUMPI PUSH1 0x5 SLOAD SWAP1 POP PUSH2 0x1FA1 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FAE PUSH2 0x215C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1FCC PUSH2 0x16D4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2022 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2019 SWAP1 PUSH2 0x2A3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2092 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2089 SWAP1 PUSH2 0x319B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x209B DUP2 PUSH2 0x2415 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP PUSH1 0x0 PUSH2 0x224F PUSH2 0x2710 PUSH2 0x2241 PUSH1 0x3C PUSH2 0x2233 PUSH1 0x3 SLOAD PUSH2 0x2225 PUSH2 0x2216 PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD SLOAD TIMESTAMP PUSH2 0x2337 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP10 PUSH2 0x2363 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2363 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x234D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x234D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x22A6 DUP2 PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH2 0x2379 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x2345 SWAP2 SWAP1 PUSH2 0x31BB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x235B SWAP2 SWAP1 PUSH2 0x31EF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x2371 SWAP2 SWAP1 PUSH2 0x3220 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x2387 SWAP2 SWAP1 PUSH2 0x2F23 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2410 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x23AE SWAP3 SWAP2 SWAP1 PUSH2 0x2C01 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x2562 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x255C DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x24FA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x327A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x2562 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25C4 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666542455032303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2629 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x2624 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x25E4 SWAP2 SWAP1 PUSH2 0x32E9 JUMP JUMPDEST PUSH2 0x2623 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x261A SWAP1 PUSH2 0x3388 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2638 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x2641 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x2686 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x267D SWAP1 PUSH2 0x341A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x268F DUP6 PUSH2 0x2755 JUMP JUMPDEST PUSH2 0x26CE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x26C5 SWAP1 PUSH2 0x3486 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x26F7 SWAP2 SWAP1 PUSH2 0x3520 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2734 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2739 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x2749 DUP3 DUP3 DUP7 PUSH2 0x2778 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x2788 JUMPI DUP3 SWAP1 POP PUSH2 0x27D8 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0x279B JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x27CF SWAP2 SWAP1 PUSH2 0x358C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x27F2 DUP2 PUSH2 0x27DF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x280D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x27E9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2821 DUP2 PUSH2 0x27DF JUMP JUMPDEST DUP2 EQ PUSH2 0x282C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x283E DUP2 PUSH2 0x2818 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x285A JUMPI PUSH2 0x2859 PUSH2 0x2813 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2868 DUP5 DUP3 DUP6 ADD PUSH2 0x282F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x289C DUP3 PUSH2 0x2871 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x28AC DUP2 PUSH2 0x2891 JUMP JUMPDEST DUP2 EQ PUSH2 0x28B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x28C9 DUP2 PUSH2 0x28A3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x28E5 JUMPI PUSH2 0x28E4 PUSH2 0x2813 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x28F3 DUP5 DUP3 DUP6 ADD PUSH2 0x28BA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2913 JUMPI PUSH2 0x2912 PUSH2 0x2813 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2921 DUP6 DUP3 DUP7 ADD PUSH2 0x282F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2932 DUP6 DUP3 DUP7 ADD PUSH2 0x282F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2945 DUP2 PUSH2 0x2891 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2960 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x293C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x298B PUSH2 0x2986 PUSH2 0x2981 DUP5 PUSH2 0x2871 JUMP JUMPDEST PUSH2 0x2966 JUMP JUMPDEST PUSH2 0x2871 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x299D DUP3 PUSH2 0x2970 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29AF DUP3 PUSH2 0x2992 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x29BF DUP2 PUSH2 0x29A4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x29DA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x29B6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A27 PUSH1 0x20 DUP4 PUSH2 0x29E0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A32 DUP3 PUSH2 0x29F1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2A56 DUP2 PUSH2 0x2A1A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E2774206265207A65726F00000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A93 PUSH1 0xD DUP4 PUSH2 0x29E0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A9E DUP3 PUSH2 0x2A5D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2AC2 DUP2 PUSH2 0x2A86 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416D6F756E742073686F756C642062652067726561746572207468616E203000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AFF PUSH1 0x1F DUP4 PUSH2 0x29E0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B0A DUP3 PUSH2 0x2AC9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2B2E DUP2 PUSH2 0x2AF2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420616D6F756E74000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B6B PUSH1 0xE DUP4 PUSH2 0x29E0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B76 DUP3 PUSH2 0x2B35 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2B9A DUP2 PUSH2 0x2B5E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2BDB DUP3 PUSH2 0x27DF JUMP JUMPDEST SWAP2 POP PUSH2 0x2BE6 DUP4 PUSH2 0x27DF JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2BF6 JUMPI PUSH2 0x2BF5 PUSH2 0x2BA1 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2C16 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x293C JUMP JUMPDEST PUSH2 0x2C23 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x27E9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E6F7468696E6720746F20636C61696D00000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C60 PUSH1 0x10 DUP4 PUSH2 0x29E0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C6B DUP3 PUSH2 0x2C2A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2C8F DUP2 PUSH2 0x2C53 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2CA5 DUP2 PUSH2 0x2818 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2CC1 JUMPI PUSH2 0x2CC0 PUSH2 0x2813 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2CCF DUP5 DUP3 DUP6 ADD PUSH2 0x2C96 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742100000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D0E PUSH1 0xD DUP4 PUSH2 0x29E0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D19 DUP3 PUSH2 0x2CD8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2D3D DUP2 PUSH2 0x2D01 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E2774207374617274000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D7A PUSH1 0xB DUP4 PUSH2 0x29E0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D85 DUP3 PUSH2 0x2D44 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2DA9 DUP2 PUSH2 0x2D6D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E740000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DE6 PUSH1 0xC DUP4 PUSH2 0x29E0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2DF1 DUP3 PUSH2 0x2DB0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2E15 DUP2 PUSH2 0x2DD9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C6964204D6F64650000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E52 PUSH1 0xC DUP4 PUSH2 0x29E0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E5D DUP3 PUSH2 0x2E1C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2E81 DUP2 PUSH2 0x2E45 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C6964204C6F636B7570204475726174696F6E000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2EBE PUSH1 0x17 DUP4 PUSH2 0x29E0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2EC9 DUP3 PUSH2 0x2E88 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2EED DUP2 PUSH2 0x2EB1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2F2E DUP3 PUSH2 0x27DF JUMP JUMPDEST SWAP2 POP PUSH2 0x2F39 DUP4 PUSH2 0x27DF JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x2F6E JUMPI PUSH2 0x2F6D PUSH2 0x2EF4 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420556E7374616B696E67204665652052617465000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2FAF PUSH1 0x1A DUP4 PUSH2 0x29E0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2FBA DUP3 PUSH2 0x2F79 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2FDE DUP2 PUSH2 0x2FA2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C69642076616C756500000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x301B PUSH1 0xD DUP4 PUSH2 0x29E0 JUMP JUMPDEST SWAP2 POP PUSH2 0x3026 DUP3 PUSH2 0x2FE5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x304A DUP2 PUSH2 0x300E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4572726F723A20696E76616C6964207374616B65720000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3087 PUSH1 0x15 DUP4 PUSH2 0x29E0 JUMP JUMPDEST SWAP2 POP PUSH2 0x3092 DUP3 PUSH2 0x3051 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x30B6 DUP2 PUSH2 0x307A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F74207374616B657220796574000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30F3 PUSH1 0xE DUP4 PUSH2 0x29E0 JUMP JUMPDEST SWAP2 POP PUSH2 0x30FE DUP3 PUSH2 0x30BD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3122 DUP2 PUSH2 0x30E6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3185 PUSH1 0x26 DUP4 PUSH2 0x29E0 JUMP JUMPDEST SWAP2 POP PUSH2 0x3190 DUP3 PUSH2 0x3129 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x31B4 DUP2 PUSH2 0x3178 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x31C6 DUP3 PUSH2 0x27DF JUMP JUMPDEST SWAP2 POP PUSH2 0x31D1 DUP4 PUSH2 0x27DF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x31E4 JUMPI PUSH2 0x31E3 PUSH2 0x2EF4 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x31FA DUP3 PUSH2 0x27DF JUMP JUMPDEST SWAP2 POP PUSH2 0x3205 DUP4 PUSH2 0x27DF JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x3215 JUMPI PUSH2 0x3214 PUSH2 0x2BA1 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x322B DUP3 PUSH2 0x27DF JUMP JUMPDEST SWAP2 POP PUSH2 0x3236 DUP4 PUSH2 0x27DF JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x326F JUMPI PUSH2 0x326E PUSH2 0x2EF4 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x328F PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x293C JUMP JUMPDEST PUSH2 0x329C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x293C JUMP JUMPDEST PUSH2 0x32A9 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x27E9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x32C6 DUP2 PUSH2 0x32B1 JUMP JUMPDEST DUP2 EQ PUSH2 0x32D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x32E3 DUP2 PUSH2 0x32BD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x32FF JUMPI PUSH2 0x32FE PUSH2 0x2813 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x330D DUP5 DUP3 DUP6 ADD PUSH2 0x32D4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5361666542455032303A204245503230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3372 PUSH1 0x2A DUP4 PUSH2 0x29E0 JUMP JUMPDEST SWAP2 POP PUSH2 0x337D DUP3 PUSH2 0x3316 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x33A1 DUP2 PUSH2 0x3365 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3404 PUSH1 0x26 DUP4 PUSH2 0x29E0 JUMP JUMPDEST SWAP2 POP PUSH2 0x340F DUP3 PUSH2 0x33A8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3433 DUP2 PUSH2 0x33F7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3470 PUSH1 0x1D DUP4 PUSH2 0x29E0 JUMP JUMPDEST SWAP2 POP PUSH2 0x347B DUP3 PUSH2 0x343A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x349F DUP2 PUSH2 0x3463 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x34DA JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x34BF JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x34E9 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34FA DUP3 PUSH2 0x34A6 JUMP JUMPDEST PUSH2 0x3504 DUP2 DUP6 PUSH2 0x34B1 JUMP JUMPDEST SWAP4 POP PUSH2 0x3514 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x34BC JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x352C DUP3 DUP5 PUSH2 0x34EF JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x355E DUP3 PUSH2 0x3537 JUMP JUMPDEST PUSH2 0x3568 DUP2 DUP6 PUSH2 0x29E0 JUMP JUMPDEST SWAP4 POP PUSH2 0x3578 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x34BC JUMP JUMPDEST PUSH2 0x3581 DUP2 PUSH2 0x3542 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x35A6 DUP2 DUP5 PUSH2 0x3553 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH6 0x973E8B3407E2 0x21 0xC5 GASLIMIT STATICCALL SWAP7 ADDRESS PUSH32 0xD8580B7C9883990A872431B2C0D99B98D6FC64736F6C63430008090033000000 ",
							"sourceMap": "260:9897:7:-:0;;;1666:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;921:32:0;940:12;:10;;;:12;;:::i;:::-;921:18;;;:32;;:::i;:::-;1715:6:7;:4;;;:6;;:::i;:::-;1747;1732:5;;:22;;;;;;;;;;;;;;;;;;1666:96;260:9897;;640:96:3;693:7;719:10;712:17;;640:96;:::o;2270:187:0:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;1770:355:7:-;1830:3;1816:11;:17;;;;1875:4;1855:17;:24;;;;1907:3;1890:14;:20;;;;1936:1;1921:12;:16;;;;1964:2;1948:13;:18;;;;1997:7;1977:17;:27;;;;2035:4;2015:17;:24;;;;2070:8;2050:17;:28;;;;2109:8;2089:17;:28;;;;1770:355::o;88:117:8:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;260:9897:7:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_callOptionalReturn_1129": {
									"entryPoint": 9570,
									"id": 1129,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_489": {
									"entryPoint": 8540,
									"id": 489,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_103": {
									"entryPoint": 9237,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@add_675": {
									"entryPoint": 9081,
									"id": 675,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@div_720": {
									"entryPoint": 9037,
									"id": 720,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@eventPeriod_1698": {
									"entryPoint": 1410,
									"id": 1698,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@functionCallWithValue_341": {
									"entryPoint": 9793,
									"id": 341,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@functionCall_271": {
									"entryPoint": 9769,
									"id": 271,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getMinimumStakingAmount_2183": {
									"entryPoint": 5885,
									"id": 2183,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getNumberofStakers_1558": {
									"entryPoint": 5096,
									"id": 1558,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getRewardRate_1674": {
									"entryPoint": 5828,
									"id": 1674,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getStakerMode_1580": {
									"entryPoint": 7518,
									"id": 1580,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getTotalStaked_1549": {
									"entryPoint": 1400,
									"id": 1549,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@harvest_2134": {
									"entryPoint": 2577,
									"id": 2134,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isContract_200": {
									"entryPoint": 10069,
									"id": 200,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isLocked_1653": {
									"entryPoint": 3348,
									"id": 1653,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isStartStaking_1593": {
									"entryPoint": 8464,
									"id": 1593,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@lockupPeriod_1690": {
									"entryPoint": 8071,
									"id": 1690,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mul_705": {
									"entryPoint": 9059,
									"id": 705,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@owner_32": {
									"entryPoint": 5844,
									"id": 32,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_60": {
									"entryPoint": 5692,
									"id": 60,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardToHarvest_1752": {
									"entryPoint": 5365,
									"id": 1752,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeTransferFrom_972": {
									"entryPoint": 9433,
									"id": 972,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_946": {
									"entryPoint": 9103,
									"id": 946,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@setCopperMinAmount_2019": {
									"entryPoint": 7669,
									"id": 2019,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setEventPeriod_1939": {
									"entryPoint": 5109,
									"id": 1939,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setGoldMinAmount_2057": {
									"entryPoint": 7317,
									"id": 2057,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setLockupTime_1981": {
									"entryPoint": 3788,
									"id": 1981,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setRewardRate_1916": {
									"entryPoint": 6296,
									"id": 1916,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setSilverMinAmount_2038": {
									"entryPoint": 1430,
									"id": 2038,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setThreeMonthMinAmount_2000": {
									"entryPoint": 7870,
									"id": 2000,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setUnstakingFeeRate_1962": {
									"entryPoint": 6040,
									"id": 1962,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stake_1541": {
									"entryPoint": 6552,
									"id": 1541,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stakedAmount_1666": {
									"entryPoint": 8350,
									"id": 1666,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@startStaking_1463": {
									"entryPoint": 3989,
									"id": 1463,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@sub_690": {
									"entryPoint": 9015,
									"id": 690,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@token_1189": {
									"entryPoint": 8426,
									"id": 1189,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalStaked_1186": {
									"entryPoint": 5838,
									"id": 1186,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_83": {
									"entryPoint": 8102,
									"id": 83,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@unstakingFeeLate_1706": {
									"entryPoint": 1420,
									"id": 1706,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@updateReward_1340": {
									"entryPoint": 8548,
									"id": 1340,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@verifyCallResult_476": {
									"entryPoint": 10104,
									"id": 476,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@withdraw_1893": {
									"entryPoint": 1631,
									"id": 1893,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 10426,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 13012,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 10287,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 11414,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 10447,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 13033,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 10308,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 11435,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 10492,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 10556,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 13551,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_contract$_IBEP20_$912_to_t_address_fromStack": {
									"entryPoint": 10678,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 13651,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0d617be88096c346284999e0c326580edf46a27365999d8d83893f396c546e11_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11737,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11347,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12410,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 13157,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12664,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_2c0bb5e0c4ac567371ecbd023733bd581a3977e4ec4f3ce35a1885aefc6bd283_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12518,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11102,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 13303,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10994,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10778,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12302,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 13411,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12194,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11953,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10886,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_deac108a7d54cf66b12f6e883ab8551f52667d7b9815f115365cc11ce5c44062_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11845,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e6e278564af6d8c908aa9321b451f41be1c60de060e90719489e8365cbf57f9f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11629,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11521,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 10217,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 13600,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 10571,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 12922,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 11265,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IBEP20_$912__to_t_address__fromStack_reversed": {
									"entryPoint": 10693,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 13708,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0d617be88096c346284999e0c326580edf46a27365999d8d83893f396c546e11__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11772,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11382,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12445,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 13192,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12699,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2c0bb5e0c4ac567371ecbd023733bd581a3977e4ec4f3ce35a1885aefc6bd283__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12553,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11137,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 13338,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11029,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10813,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12337,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 13446,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12229,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11988,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10921,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_deac108a7d54cf66b12f6e883ab8551f52667d7b9815f115365cc11ce5c44062__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11880,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e6e278564af6d8c908aa9321b451f41be1c60de060e90719489e8365cbf57f9f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11664,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11556,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 10232,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 13478,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 13623,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 13489,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 10720,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 12067,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 12783,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 12832,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 12731,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 10385,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 12977,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 10353,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 10207,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IBEP20_$912_to_t_address": {
									"entryPoint": 10660,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 10642,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 10608,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 13500,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 10598,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mod_t_uint256": {
									"entryPoint": 11216,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 12020,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 11169,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 10259,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 13634,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_0d617be88096c346284999e0c326580edf46a27365999d8d83893f396c546e11": {
									"entryPoint": 11696,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3": {
									"entryPoint": 11306,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684": {
									"entryPoint": 12369,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082": {
									"entryPoint": 13078,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 12585,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_2c0bb5e0c4ac567371ecbd023733bd581a3977e4ec4f3ce35a1885aefc6bd283": {
									"entryPoint": 12477,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1": {
									"entryPoint": 11061,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c": {
									"entryPoint": 13224,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580": {
									"entryPoint": 10953,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 10737,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6": {
									"entryPoint": 12261,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad": {
									"entryPoint": 13370,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3": {
									"entryPoint": 12153,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561": {
									"entryPoint": 11912,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2": {
									"entryPoint": 10845,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_deac108a7d54cf66b12f6e883ab8551f52667d7b9815f115365cc11ce5c44062": {
									"entryPoint": 11804,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e6e278564af6d8c908aa9321b451f41be1c60de060e90719489e8365cbf57f9f": {
									"entryPoint": 11588,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811": {
									"entryPoint": 11480,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 10403,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 12989,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 10264,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:27538:8",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:32:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:16:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "73:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:8",
														"type": ""
													}
												],
												"src": "7:77:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "155:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "165:37:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "165:37:8"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "143:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "150:3:8",
														"type": ""
													}
												],
												"src": "90:118:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "312:124:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "322:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "345:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "330:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "426:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "358:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "358:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "284:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "296:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "307:4:8",
														"type": ""
													}
												],
												"src": "214:222:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "482:35:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "492:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "508:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "502:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "502:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "492:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "475:6:8",
														"type": ""
													}
												],
												"src": "442:75:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "612:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "629:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "632:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "622:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "622:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "622:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "523:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "735:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "752:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "755:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "745:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "745:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "745:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "646:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "812:79:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "869:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "878:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "881:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "871:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "871:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "871:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "835:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "860:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "842:17:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "842:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "832:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "832:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "825:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "825:43:8"
															},
															"nodeType": "YulIf",
															"src": "822:63:8"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "805:5:8",
														"type": ""
													}
												],
												"src": "769:122:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "949:87:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "959:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "981:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "968:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "968:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "959:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1024:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "997:26:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "997:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "997:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "927:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "935:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "943:5:8",
														"type": ""
													}
												],
												"src": "897:139:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1108:263:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1154:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1156:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1156:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1156:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1129:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1138:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1125:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1125:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1150:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1121:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1121:32:8"
															},
															"nodeType": "YulIf",
															"src": "1118:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "1247:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1262:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1276:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1266:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1291:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1326:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1337:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1322:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1322:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1346:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1301:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1301:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1291:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1078:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1089:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1101:6:8",
														"type": ""
													}
												],
												"src": "1042:329:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1422:81:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1432:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1447:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1454:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1443:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1443:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1432:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1404:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1414:7:8",
														"type": ""
													}
												],
												"src": "1377:126:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1554:51:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1564:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1593:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1575:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1575:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1564:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1536:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1546:7:8",
														"type": ""
													}
												],
												"src": "1509:96:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1654:79:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1711:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1720:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1723:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1713:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1713:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1713:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1677:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1702:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1684:17:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1684:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1674:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1674:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1667:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1667:43:8"
															},
															"nodeType": "YulIf",
															"src": "1664:63:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1647:5:8",
														"type": ""
													}
												],
												"src": "1611:122:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1791:87:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1801:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1823:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1810:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1810:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1801:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1866:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1839:26:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1839:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1839:33:8"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1769:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1777:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1785:5:8",
														"type": ""
													}
												],
												"src": "1739:139:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1950:263:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1996:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1998:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1998:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1998:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1971:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1980:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1967:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1967:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1992:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1963:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1963:32:8"
															},
															"nodeType": "YulIf",
															"src": "1960:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "2089:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2104:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2118:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2108:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2133:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2168:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2179:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2164:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2164:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2188:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2143:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2143:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2133:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1920:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1931:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1943:6:8",
														"type": ""
													}
												],
												"src": "1884:329:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2302:391:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2348:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2350:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2350:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2350:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2323:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2332:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2319:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2319:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2344:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2315:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2315:32:8"
															},
															"nodeType": "YulIf",
															"src": "2312:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "2441:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2456:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2470:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2460:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2485:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2520:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2531:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2516:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2516:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2540:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2495:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2495:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2485:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2568:118:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2583:16:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2597:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2587:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2613:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2648:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2659:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2644:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2644:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2668:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2623:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2623:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2613:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2264:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2275:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2287:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2295:6:8",
														"type": ""
													}
												],
												"src": "2219:474:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2764:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2781:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2804:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2786:17:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2786:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2774:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2774:37:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2774:37:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2752:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2759:3:8",
														"type": ""
													}
												],
												"src": "2699:118:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2921:124:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2931:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2943:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2954:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2939:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2939:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2931:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3011:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3024:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3035:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3020:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3020:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2967:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2967:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2967:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2893:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2905:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2916:4:8",
														"type": ""
													}
												],
												"src": "2823:222:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3083:28:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3093:12:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3100:5:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "3093:3:8"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3069:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "3079:3:8",
														"type": ""
													}
												],
												"src": "3051:60:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3177:82:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3187:66:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3245:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nodeType": "YulIdentifier",
																					"src": "3227:17:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3227:24:8"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "3218:8:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3218:34:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "3200:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3200:53:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "3187:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3157:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "3167:9:8",
														"type": ""
													}
												],
												"src": "3117:142:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3325:66:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3335:50:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3379:5:8"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "3348:30:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3348:37:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "3335:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3305:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "3315:9:8",
														"type": ""
													}
												],
												"src": "3265:126:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3471:66:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3481:50:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3525:5:8"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "3494:30:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3494:37:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "3481:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IBEP20_$912_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3451:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "3461:9:8",
														"type": ""
													}
												],
												"src": "3397:140:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3622:80:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3639:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3689:5:8"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IBEP20_$912_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3644:44:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3644:51:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3632:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3632:64:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3632:64:8"
														}
													]
												},
												"name": "abi_encode_t_contract$_IBEP20_$912_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3610:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3617:3:8",
														"type": ""
													}
												],
												"src": "3543:159:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3820:138:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3830:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3842:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3853:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3838:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3838:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3830:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3924:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3937:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3948:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3933:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3933:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IBEP20_$912_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3866:57:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3866:85:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3866:85:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IBEP20_$912__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3792:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3804:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3815:4:8",
														"type": ""
													}
												],
												"src": "3708:250:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4060:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4077:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4082:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4070:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4070:19:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4070:19:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4098:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4117:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4122:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4113:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4113:14:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "4098:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4032:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4037:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "4048:11:8",
														"type": ""
													}
												],
												"src": "3964:169:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4245:76:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4267:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4275:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4263:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4263:14:8"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4279:34:8",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4256:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4256:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4256:58:8"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "4237:6:8",
														"type": ""
													}
												],
												"src": "4139:182:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4473:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4483:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4549:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4554:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4490:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4490:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4483:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4655:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "4566:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4566:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4566:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4668:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4679:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4684:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4675:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4675:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4668:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4461:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4469:3:8",
														"type": ""
													}
												],
												"src": "4327:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4870:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4880:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4892:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4903:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4888:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4888:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4880:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4927:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4938:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4923:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4923:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4946:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4952:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4942:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4942:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4916:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4916:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4916:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4972:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "5106:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4980:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4980:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4972:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4850:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4865:4:8",
														"type": ""
													}
												],
												"src": "4699:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5230:57:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5252:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5260:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5248:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5248:14:8"
																	},
																	{
																		"hexValue": "43616e2774206265207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5264:15:8",
																		"type": "",
																		"value": "Can't be zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5241:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5241:39:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5241:39:8"
														}
													]
												},
												"name": "store_literal_in_memory_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5222:6:8",
														"type": ""
													}
												],
												"src": "5124:163:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5439:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5449:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5515:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5520:2:8",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5456:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5456:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5449:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5621:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2",
																	"nodeType": "YulIdentifier",
																	"src": "5532:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5532:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5532:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5634:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5645:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5650:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5641:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5641:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5634:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5427:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5435:3:8",
														"type": ""
													}
												],
												"src": "5293:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5836:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5846:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5858:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5869:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5854:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5854:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5846:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5893:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5904:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5889:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5889:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "5912:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5918:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5908:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5908:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5882:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5882:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5882:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5938:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6072:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5946:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5946:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5938:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5816:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5831:4:8",
														"type": ""
													}
												],
												"src": "5665:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6196:75:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6218:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6226:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6214:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6214:14:8"
																	},
																	{
																		"hexValue": "416d6f756e742073686f756c642062652067726561746572207468616e2030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6230:33:8",
																		"type": "",
																		"value": "Amount should be greater than 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6207:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6207:57:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6207:57:8"
														}
													]
												},
												"name": "store_literal_in_memory_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6188:6:8",
														"type": ""
													}
												],
												"src": "6090:181:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6423:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6433:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6499:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6504:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6440:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6440:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6433:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6605:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580",
																	"nodeType": "YulIdentifier",
																	"src": "6516:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6516:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6516:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6618:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6629:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6634:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6625:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6625:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6618:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6411:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6419:3:8",
														"type": ""
													}
												],
												"src": "6277:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6820:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6830:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6842:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6853:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6838:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6838:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6830:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6877:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6888:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6873:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6873:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6896:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6902:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6892:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6892:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6866:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6866:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6866:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6922:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7056:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6930:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6930:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6922:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6800:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6815:4:8",
														"type": ""
													}
												],
												"src": "6649:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7180:58:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7202:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7210:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7198:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7198:14:8"
																	},
																	{
																		"hexValue": "496e76616c696420616d6f756e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7214:16:8",
																		"type": "",
																		"value": "Invalid amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7191:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7191:40:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7191:40:8"
														}
													]
												},
												"name": "store_literal_in_memory_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7172:6:8",
														"type": ""
													}
												],
												"src": "7074:164:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7390:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7400:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7466:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7471:2:8",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7407:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7407:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7400:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7572:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1",
																	"nodeType": "YulIdentifier",
																	"src": "7483:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7483:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7483:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7585:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7596:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7601:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7592:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7592:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7585:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7378:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7386:3:8",
														"type": ""
													}
												],
												"src": "7244:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7787:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7797:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7809:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7820:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7805:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7805:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7797:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7844:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7855:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7840:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7840:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7863:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7869:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7859:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7859:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7833:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7833:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7833:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7889:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8023:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7897:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7897:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7889:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7767:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7782:4:8",
														"type": ""
													}
												],
												"src": "7616:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8069:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8086:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8089:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8079:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8079:88:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8079:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8183:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8186:4:8",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8176:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8176:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8176:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8207:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8210:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8200:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8200:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8200:15:8"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "8041:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8261:142:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8271:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8294:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8276:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8276:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "8271:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8305:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8328:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8310:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8310:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "8305:1:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8352:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "8354:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8354:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8354:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8349:1:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8342:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8342:9:8"
															},
															"nodeType": "YulIf",
															"src": "8339:35:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8383:14:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8392:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8395:1:8"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nodeType": "YulIdentifier",
																	"src": "8388:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8388:9:8"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "8383:1:8"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8250:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8253:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "8259:1:8",
														"type": ""
													}
												],
												"src": "8227:176:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8535:206:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8545:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8557:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8568:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8553:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8553:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8545:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8625:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8638:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8649:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8634:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8634:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8581:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8581:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8581:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "8706:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8719:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8730:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8715:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8715:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8662:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8662:72:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8662:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8499:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8511:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8519:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8530:4:8",
														"type": ""
													}
												],
												"src": "8409:332:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8853:60:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8875:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8883:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8871:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8871:14:8"
																	},
																	{
																		"hexValue": "4e6f7468696e6720746f20636c61696d",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8887:18:8",
																		"type": "",
																		"value": "Nothing to claim"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8864:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8864:42:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8864:42:8"
														}
													]
												},
												"name": "store_literal_in_memory_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8845:6:8",
														"type": ""
													}
												],
												"src": "8747:166:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9065:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9075:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9141:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9146:2:8",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9082:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9082:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9075:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9247:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3",
																	"nodeType": "YulIdentifier",
																	"src": "9158:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9158:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9158:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9260:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9271:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9276:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9267:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9267:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9260:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9053:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9061:3:8",
														"type": ""
													}
												],
												"src": "8919:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9462:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9472:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9484:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9495:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9480:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9480:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9472:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9519:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9530:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9515:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9515:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9538:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9544:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9534:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9534:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9508:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9508:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9508:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9564:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9698:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9572:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9572:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9564:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9442:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9457:4:8",
														"type": ""
													}
												],
												"src": "9291:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9779:80:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9789:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "9804:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9798:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9798:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "9789:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9847:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9820:26:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9820:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9820:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "9757:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9765:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9773:5:8",
														"type": ""
													}
												],
												"src": "9716:143:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9942:274:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9988:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "9990:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9990:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9990:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9963:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9972:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9959:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9959:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9984:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9955:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9955:32:8"
															},
															"nodeType": "YulIf",
															"src": "9952:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "10081:128:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10096:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10110:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10100:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10125:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10171:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10182:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10167:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10167:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10191:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "10135:31:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10135:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "10125:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9912:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9923:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9935:6:8",
														"type": ""
													}
												],
												"src": "9865:351:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10328:57:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10350:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10358:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10346:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10346:14:8"
																	},
																	{
																		"hexValue": "496e73756666696369656e7421",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10362:15:8",
																		"type": "",
																		"value": "Insufficient!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10339:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10339:39:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10339:39:8"
														}
													]
												},
												"name": "store_literal_in_memory_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10320:6:8",
														"type": ""
													}
												],
												"src": "10222:163:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10537:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10547:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10613:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10618:2:8",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10554:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10554:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10547:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10719:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811",
																	"nodeType": "YulIdentifier",
																	"src": "10630:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10630:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10630:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10732:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10743:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10748:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10739:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10739:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10732:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10525:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10533:3:8",
														"type": ""
													}
												],
												"src": "10391:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10934:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10944:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10956:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10967:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10952:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10952:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10944:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10991:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11002:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10987:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10987:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11010:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11016:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11006:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11006:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10980:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10980:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10980:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11036:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11170:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11044:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11044:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11036:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10914:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10929:4:8",
														"type": ""
													}
												],
												"src": "10763:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11294:55:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11316:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11324:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11312:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11312:14:8"
																	},
																	{
																		"hexValue": "43616e2774207374617274",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11328:13:8",
																		"type": "",
																		"value": "Can't start"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11305:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11305:37:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11305:37:8"
														}
													]
												},
												"name": "store_literal_in_memory_e6e278564af6d8c908aa9321b451f41be1c60de060e90719489e8365cbf57f9f",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11286:6:8",
														"type": ""
													}
												],
												"src": "11188:161:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11501:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11511:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11577:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11582:2:8",
																		"type": "",
																		"value": "11"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11518:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11518:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11511:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11683:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e6e278564af6d8c908aa9321b451f41be1c60de060e90719489e8365cbf57f9f",
																	"nodeType": "YulIdentifier",
																	"src": "11594:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11594:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11594:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11696:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11707:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11712:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11703:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11703:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11696:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e6e278564af6d8c908aa9321b451f41be1c60de060e90719489e8365cbf57f9f_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11489:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11497:3:8",
														"type": ""
													}
												],
												"src": "11355:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11898:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11908:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11920:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11931:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11916:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11916:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11908:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11955:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11966:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11951:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11951:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11974:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11980:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11970:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11970:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11944:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11944:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11944:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12000:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12134:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e6e278564af6d8c908aa9321b451f41be1c60de060e90719489e8365cbf57f9f_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12008:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12008:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12000:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e6e278564af6d8c908aa9321b451f41be1c60de060e90719489e8365cbf57f9f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11878:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11893:4:8",
														"type": ""
													}
												],
												"src": "11727:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12258:56:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12280:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12288:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12276:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12276:14:8"
																	},
																	{
																		"hexValue": "496e73756666696369656e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12292:14:8",
																		"type": "",
																		"value": "Insufficient"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12269:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12269:38:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12269:38:8"
														}
													]
												},
												"name": "store_literal_in_memory_0d617be88096c346284999e0c326580edf46a27365999d8d83893f396c546e11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12250:6:8",
														"type": ""
													}
												],
												"src": "12152:162:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12466:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12476:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12542:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12547:2:8",
																		"type": "",
																		"value": "12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12483:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12483:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12476:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12648:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0d617be88096c346284999e0c326580edf46a27365999d8d83893f396c546e11",
																	"nodeType": "YulIdentifier",
																	"src": "12559:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12559:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12559:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12661:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12672:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12677:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12668:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12668:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12661:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0d617be88096c346284999e0c326580edf46a27365999d8d83893f396c546e11_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12454:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12462:3:8",
														"type": ""
													}
												],
												"src": "12320:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12863:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12873:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12885:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12896:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12881:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12881:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12873:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12920:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12931:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12916:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12916:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12939:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12945:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12935:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12935:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12909:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12909:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12909:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12965:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13099:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0d617be88096c346284999e0c326580edf46a27365999d8d83893f396c546e11_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12973:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12973:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12965:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0d617be88096c346284999e0c326580edf46a27365999d8d83893f396c546e11__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12843:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12858:4:8",
														"type": ""
													}
												],
												"src": "12692:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13223:56:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13245:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13253:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13241:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13241:14:8"
																	},
																	{
																		"hexValue": "496e76616c6964204d6f6465",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13257:14:8",
																		"type": "",
																		"value": "Invalid Mode"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13234:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13234:38:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13234:38:8"
														}
													]
												},
												"name": "store_literal_in_memory_deac108a7d54cf66b12f6e883ab8551f52667d7b9815f115365cc11ce5c44062",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13215:6:8",
														"type": ""
													}
												],
												"src": "13117:162:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13431:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13441:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13507:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13512:2:8",
																		"type": "",
																		"value": "12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13448:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13448:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13441:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13613:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_deac108a7d54cf66b12f6e883ab8551f52667d7b9815f115365cc11ce5c44062",
																	"nodeType": "YulIdentifier",
																	"src": "13524:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13524:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13524:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13626:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13637:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13642:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13633:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13633:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13626:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_deac108a7d54cf66b12f6e883ab8551f52667d7b9815f115365cc11ce5c44062_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13419:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13427:3:8",
														"type": ""
													}
												],
												"src": "13285:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13828:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13838:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13850:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13861:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13846:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13846:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13838:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13885:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13896:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13881:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13881:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13904:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13910:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13900:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13900:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13874:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13874:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13874:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13930:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14064:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_deac108a7d54cf66b12f6e883ab8551f52667d7b9815f115365cc11ce5c44062_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13938:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13938:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13930:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_deac108a7d54cf66b12f6e883ab8551f52667d7b9815f115365cc11ce5c44062__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13808:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13823:4:8",
														"type": ""
													}
												],
												"src": "13657:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14188:67:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14210:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14218:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14206:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14206:14:8"
																	},
																	{
																		"hexValue": "496e76616c6964204c6f636b7570204475726174696f6e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14222:25:8",
																		"type": "",
																		"value": "Invalid Lockup Duration"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14199:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14199:49:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14199:49:8"
														}
													]
												},
												"name": "store_literal_in_memory_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14180:6:8",
														"type": ""
													}
												],
												"src": "14082:173:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14407:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14417:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14483:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14488:2:8",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14424:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14424:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14417:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14589:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561",
																	"nodeType": "YulIdentifier",
																	"src": "14500:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14500:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14500:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14602:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14613:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14618:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14609:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14609:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14602:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14395:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14403:3:8",
														"type": ""
													}
												],
												"src": "14261:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14804:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14814:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14826:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14837:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14822:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14822:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14814:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14861:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14872:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14857:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14857:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14880:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14886:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14876:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14876:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14850:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14850:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14850:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14906:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15040:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14914:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14914:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14906:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14784:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14799:4:8",
														"type": ""
													}
												],
												"src": "14633:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15086:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15103:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15106:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15096:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15096:88:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15096:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15200:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15203:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15193:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15193:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15193:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15224:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15227:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "15217:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15217:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15217:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "15058:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15288:261:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15298:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15321:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "15303:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15303:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "15298:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "15332:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15355:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "15337:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15337:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "15332:1:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15495:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "15497:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15497:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15497:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15416:1:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15423:66:8",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "15491:1:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15419:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15419:74:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "15413:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15413:81:8"
															},
															"nodeType": "YulIf",
															"src": "15410:107:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15527:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15538:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15541:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15534:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15534:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "15527:3:8"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "15275:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "15278:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "15284:3:8",
														"type": ""
													}
												],
												"src": "15244:305:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15661:70:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15683:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15691:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15679:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15679:14:8"
																	},
																	{
																		"hexValue": "496e76616c696420556e7374616b696e67204665652052617465",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15695:28:8",
																		"type": "",
																		"value": "Invalid Unstaking Fee Rate"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15672:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15672:52:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15672:52:8"
														}
													]
												},
												"name": "store_literal_in_memory_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "15653:6:8",
														"type": ""
													}
												],
												"src": "15555:176:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15883:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15893:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15959:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15964:2:8",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15900:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15900:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "15893:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16065:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3",
																	"nodeType": "YulIdentifier",
																	"src": "15976:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15976:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15976:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16078:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16089:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16094:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16085:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16085:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "16078:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15871:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "15879:3:8",
														"type": ""
													}
												],
												"src": "15737:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16280:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16290:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16302:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16313:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16298:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16298:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16290:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16337:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16348:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16333:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16333:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "16356:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16362:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16352:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16352:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16326:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16326:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16326:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16382:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16516:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16390:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16390:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16382:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16260:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16275:4:8",
														"type": ""
													}
												],
												"src": "16109:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16640:57:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16662:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16670:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16658:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16658:14:8"
																	},
																	{
																		"hexValue": "496e76616c69642076616c7565",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16674:15:8",
																		"type": "",
																		"value": "Invalid value"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16651:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16651:39:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16651:39:8"
														}
													]
												},
												"name": "store_literal_in_memory_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "16632:6:8",
														"type": ""
													}
												],
												"src": "16534:163:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16849:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16859:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16925:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16930:2:8",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16866:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16866:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16859:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17031:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6",
																	"nodeType": "YulIdentifier",
																	"src": "16942:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16942:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16942:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17044:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17055:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17060:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17051:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17051:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "17044:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16837:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16845:3:8",
														"type": ""
													}
												],
												"src": "16703:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17246:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17256:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17268:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17279:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17264:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17264:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17256:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17303:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17314:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17299:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17299:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "17322:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17328:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17318:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17318:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17292:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17292:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17292:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17348:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "17482:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17356:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17356:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17348:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17226:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17241:4:8",
														"type": ""
													}
												],
												"src": "17075:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17606:65:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17628:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17636:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17624:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17624:14:8"
																	},
																	{
																		"hexValue": "4572726f723a20696e76616c6964207374616b6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17640:23:8",
																		"type": "",
																		"value": "Error: invalid staker"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17617:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17617:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17617:47:8"
														}
													]
												},
												"name": "store_literal_in_memory_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "17598:6:8",
														"type": ""
													}
												],
												"src": "17500:171:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17823:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17833:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17899:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17904:2:8",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17840:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17840:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "17833:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18005:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684",
																	"nodeType": "YulIdentifier",
																	"src": "17916:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17916:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17916:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18018:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18029:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18034:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18025:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18025:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "18018:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "17811:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "17819:3:8",
														"type": ""
													}
												],
												"src": "17677:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18220:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18230:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18242:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18253:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18238:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18238:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18230:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18277:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18288:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18273:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18273:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "18296:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18302:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18292:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18292:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18266:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18266:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18266:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18322:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "18456:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18330:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18330:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18322:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18200:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18215:4:8",
														"type": ""
													}
												],
												"src": "18049:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18580:58:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "18602:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18610:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18598:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18598:14:8"
																	},
																	{
																		"hexValue": "4e6f74207374616b657220796574",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18614:16:8",
																		"type": "",
																		"value": "Not staker yet"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18591:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18591:40:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18591:40:8"
														}
													]
												},
												"name": "store_literal_in_memory_2c0bb5e0c4ac567371ecbd023733bd581a3977e4ec4f3ce35a1885aefc6bd283",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "18572:6:8",
														"type": ""
													}
												],
												"src": "18474:164:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18790:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18800:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18866:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18871:2:8",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18807:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18807:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "18800:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18972:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2c0bb5e0c4ac567371ecbd023733bd581a3977e4ec4f3ce35a1885aefc6bd283",
																	"nodeType": "YulIdentifier",
																	"src": "18883:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18883:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18883:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18985:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18996:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19001:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18992:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18992:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "18985:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2c0bb5e0c4ac567371ecbd023733bd581a3977e4ec4f3ce35a1885aefc6bd283_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "18778:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "18786:3:8",
														"type": ""
													}
												],
												"src": "18644:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19187:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19197:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19209:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19220:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19205:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19205:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19197:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19244:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19255:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19240:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19240:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "19263:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19269:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19259:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19259:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19233:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19233:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19233:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19289:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "19423:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2c0bb5e0c4ac567371ecbd023733bd581a3977e4ec4f3ce35a1885aefc6bd283_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19297:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19297:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19289:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2c0bb5e0c4ac567371ecbd023733bd581a3977e4ec4f3ce35a1885aefc6bd283__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19167:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19182:4:8",
														"type": ""
													}
												],
												"src": "19016:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19547:119:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "19569:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19577:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19565:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19565:14:8"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19581:34:8",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19558:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19558:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19558:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "19637:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19645:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19633:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19633:15:8"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19650:8:8",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19626:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19626:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19626:33:8"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "19539:6:8",
														"type": ""
													}
												],
												"src": "19441:225:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19818:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19828:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19894:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19899:2:8",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19835:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19835:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "19828:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20000:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "19911:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19911:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19911:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20013:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20024:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20029:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20020:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20020:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "20013:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "19806:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "19814:3:8",
														"type": ""
													}
												],
												"src": "19672:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20215:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20225:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20237:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20248:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20233:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20233:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20225:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20272:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20283:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20268:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20268:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "20291:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20297:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20287:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20287:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20261:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20261:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20261:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20317:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "20451:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20325:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20325:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20317:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20195:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20210:4:8",
														"type": ""
													}
												],
												"src": "20044:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20514:146:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20524:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "20547:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "20529:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20529:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "20524:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "20558:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "20581:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "20563:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20563:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "20558:1:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20605:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "20607:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20607:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20607:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "20599:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "20602:1:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "20596:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20596:8:8"
															},
															"nodeType": "YulIf",
															"src": "20593:34:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20637:17:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "20649:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "20652:1:8"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "20645:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20645:9:8"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "20637:4:8"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "20500:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "20503:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "20509:4:8",
														"type": ""
													}
												],
												"src": "20469:191:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20708:143:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20718:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "20741:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "20723:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20723:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "20718:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "20752:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "20775:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "20757:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20757:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "20752:1:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20799:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "20801:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20801:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20801:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "20796:1:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "20789:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20789:9:8"
															},
															"nodeType": "YulIf",
															"src": "20786:35:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20831:14:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "20840:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "20843:1:8"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "20836:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20836:9:8"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "20831:1:8"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "20697:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "20700:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "20706:1:8",
														"type": ""
													}
												],
												"src": "20666:185:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20905:300:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20915:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "20938:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "20920:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20920:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "20915:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "20949:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "20972:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "20954:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20954:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "20949:1:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "21147:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "21149:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21149:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "21149:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "21059:1:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "21052:6:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "21052:9:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "21045:6:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21045:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "21067:1:8"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "21074:66:8",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "21142:1:8"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "21070:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "21070:74:8"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "21064:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21064:81:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "21041:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21041:105:8"
															},
															"nodeType": "YulIf",
															"src": "21038:131:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21179:20:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "21194:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "21197:1:8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "21190:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21190:9:8"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "21179:7:8"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "20888:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "20891:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "20897:7:8",
														"type": ""
													}
												],
												"src": "20857:348:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21365:288:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21375:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21387:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21398:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21383:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21383:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21375:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "21455:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21468:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21479:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21464:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21464:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21411:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21411:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21411:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "21536:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21549:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21560:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21545:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21545:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21492:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21492:72:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21492:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "21618:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21631:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21642:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21627:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21627:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21574:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21574:72:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21574:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21321:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "21333:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "21341:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "21349:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "21360:4:8",
														"type": ""
													}
												],
												"src": "21211:442:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21701:48:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21711:32:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "21736:5:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "21729:6:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21729:13:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "21722:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21722:21:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "21711:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "21683:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "21693:7:8",
														"type": ""
													}
												],
												"src": "21659:90:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21795:76:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "21849:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "21858:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "21861:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "21851:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21851:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "21851:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "21818:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "21840:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "21825:14:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "21825:21:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "21815:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21815:32:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "21808:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21808:40:8"
															},
															"nodeType": "YulIf",
															"src": "21805:60:8"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "21788:5:8",
														"type": ""
													}
												],
												"src": "21755:116:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21937:77:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21947:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "21962:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "21956:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21956:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "21947:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "22002:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "21978:23:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21978:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21978:30:8"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "21915:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "21923:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "21931:5:8",
														"type": ""
													}
												],
												"src": "21877:137:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22094:271:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "22140:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "22142:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "22142:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "22142:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "22115:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22124:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "22111:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22111:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22136:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "22107:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22107:32:8"
															},
															"nodeType": "YulIf",
															"src": "22104:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "22233:125:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "22248:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22262:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "22252:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "22277:71:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "22320:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "22331:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "22316:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "22316:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "22340:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "22287:28:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22287:61:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "22277:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "22064:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "22075:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "22087:6:8",
														"type": ""
													}
												],
												"src": "22020:345:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22477:123:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "22499:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22507:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22495:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22495:14:8"
																	},
																	{
																		"hexValue": "5361666542455032303a204245503230206f7065726174696f6e20646964206e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22511:34:8",
																		"type": "",
																		"value": "SafeBEP20: BEP20 operation did n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22488:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22488:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22488:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "22567:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22575:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22563:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22563:15:8"
																	},
																	{
																		"hexValue": "6f742073756363656564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22580:12:8",
																		"type": "",
																		"value": "ot succeed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22556:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22556:37:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22556:37:8"
														}
													]
												},
												"name": "store_literal_in_memory_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "22469:6:8",
														"type": ""
													}
												],
												"src": "22371:229:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22752:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22762:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22828:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22833:2:8",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22769:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22769:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "22762:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22934:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082",
																	"nodeType": "YulIdentifier",
																	"src": "22845:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22845:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22845:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22947:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22958:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22963:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22954:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22954:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "22947:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "22740:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "22748:3:8",
														"type": ""
													}
												],
												"src": "22606:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23149:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23159:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "23171:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23182:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23167:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "23167:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23159:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23206:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23217:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23202:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23202:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "23225:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23231:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "23221:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23221:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23195:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "23195:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23195:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23251:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "23385:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23259:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "23259:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23251:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "23129:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "23144:4:8",
														"type": ""
													}
												],
												"src": "22978:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23509:119:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "23531:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23539:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23527:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23527:14:8"
																	},
																	{
																		"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "23543:34:8",
																		"type": "",
																		"value": "Address: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23520:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "23520:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23520:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "23599:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23607:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23595:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23595:15:8"
																	},
																	{
																		"hexValue": "722063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "23612:8:8",
																		"type": "",
																		"value": "r call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23588:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "23588:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23588:33:8"
														}
													]
												},
												"name": "store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "23501:6:8",
														"type": ""
													}
												],
												"src": "23403:225:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23780:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23790:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23856:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23861:2:8",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23797:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "23797:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "23790:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23962:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																	"nodeType": "YulIdentifier",
																	"src": "23873:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "23873:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23873:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23975:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23986:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23991:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23982:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "23982:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "23975:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "23768:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "23776:3:8",
														"type": ""
													}
												],
												"src": "23634:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24177:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24187:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "24199:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24210:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24195:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "24195:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24187:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24234:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24245:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24230:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24230:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "24253:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24259:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "24249:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24249:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24223:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "24223:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24223:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24279:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "24413:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24287:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "24287:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24279:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "24157:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "24172:4:8",
														"type": ""
													}
												],
												"src": "24006:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24537:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "24559:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24567:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24555:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24555:14:8"
																	},
																	{
																		"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "24571:31:8",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24548:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "24548:55:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24548:55:8"
														}
													]
												},
												"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "24529:6:8",
														"type": ""
													}
												],
												"src": "24431:179:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24762:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24772:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24838:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24843:2:8",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24779:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "24779:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "24772:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24944:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																	"nodeType": "YulIdentifier",
																	"src": "24855:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "24855:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24855:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24957:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24968:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24973:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24964:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "24964:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "24957:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "24750:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "24758:3:8",
														"type": ""
													}
												],
												"src": "24616:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25159:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25169:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "25181:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25192:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25177:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "25177:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "25169:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25216:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25227:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25212:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25212:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "25235:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25241:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "25231:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25231:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25205:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "25205:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25205:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25261:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "25395:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "25269:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "25269:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "25261:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "25139:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "25154:4:8",
														"type": ""
													}
												],
												"src": "24988:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25471:40:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25482:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "25498:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "25492:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "25492:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "25482:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "25454:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "25464:6:8",
														"type": ""
													}
												],
												"src": "25413:98:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25630:34:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25640:18:8",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "25655:3:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "25640:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "25602:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "25607:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "25618:11:8",
														"type": ""
													}
												],
												"src": "25517:147:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25719:258:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "25729:10:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "25738:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "25733:1:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "25798:63:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "25823:3:8"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "25828:1:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "25819:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "25819:11:8"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "25842:3:8"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "25847:1:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "25838:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "25838:11:8"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "25832:5:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "25832:18:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "25812:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "25812:39:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "25812:39:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "25759:1:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "25762:6:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "25756:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "25756:13:8"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "25770:19:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "25772:15:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "25781:1:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "25784:2:8",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "25777:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "25777:10:8"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "25772:1:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "25752:3:8",
																"statements": []
															},
															"src": "25748:113:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "25895:76:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "25945:3:8"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "25950:6:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "25941:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "25941:16:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "25959:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "25934:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "25934:27:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "25934:27:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "25876:1:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "25879:6:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "25873:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "25873:13:8"
															},
															"nodeType": "YulIf",
															"src": "25870:101:8"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "25701:3:8",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "25706:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "25711:6:8",
														"type": ""
													}
												],
												"src": "25670:307:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26091:265:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "26101:52:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "26147:5:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "26115:31:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "26115:38:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "26105:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "26162:95:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26245:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "26250:6:8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "26169:75:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "26169:88:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "26162:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "26292:5:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26299:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26288:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26288:16:8"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26306:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "26311:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "26266:21:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "26266:52:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26266:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "26327:23:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26338:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "26343:6:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "26334:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "26334:16:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "26327:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "26072:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "26079:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "26087:3:8",
														"type": ""
													}
												],
												"src": "25983:373:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26496:137:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26507:100:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "26594:6:8"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26603:3:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "26514:79:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "26514:93:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "26507:3:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "26617:10:8",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "26624:3:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "26617:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "26475:3:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "26481:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "26492:3:8",
														"type": ""
													}
												],
												"src": "26362:271:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26698:40:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26709:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "26725:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "26719:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "26719:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "26709:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "26681:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "26691:6:8",
														"type": ""
													}
												],
												"src": "26639:99:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26792:54:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26802:38:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "26820:5:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26827:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26816:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26816:14:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26836:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "26832:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26832:7:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "26812:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "26812:28:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "26802:6:8"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "26775:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "26785:6:8",
														"type": ""
													}
												],
												"src": "26744:102:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26944:272:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "26954:53:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "27001:5:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "26968:32:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "26968:39:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "26958:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "27016:78:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "27082:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "27087:6:8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "27023:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "27023:71:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "27016:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "27129:5:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27136:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27125:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27125:16:8"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "27143:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "27148:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "27103:21:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "27103:52:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27103:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "27164:46:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "27175:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "27202:6:8"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "27180:21:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27180:29:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "27171:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "27171:39:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "27164:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "26925:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "26932:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "26940:3:8",
														"type": ""
													}
												],
												"src": "26852:364:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27340:195:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27350:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "27362:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27373:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "27358:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "27358:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "27350:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27397:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27408:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27393:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27393:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "27416:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27422:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "27412:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27412:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27386:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "27386:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27386:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "27442:86:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "27514:6:8"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "27523:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "27450:63:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "27450:78:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "27442:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "27312:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "27324:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "27335:4:8",
														"type": ""
													}
												],
												"src": "27222:313:8"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IBEP20_$912_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IBEP20_$912_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IBEP20_$912_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IBEP20_$912__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IBEP20_$912_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Can't be zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580(memPtr) {\n\n        mstore(add(memPtr, 0), \"Amount should be greater than 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid amount\")\n\n    }\n\n    function abi_encode_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Nothing to claim\")\n\n    }\n\n    function abi_encode_t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient!\")\n\n    }\n\n    function abi_encode_t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_e6e278564af6d8c908aa9321b451f41be1c60de060e90719489e8365cbf57f9f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Can't start\")\n\n    }\n\n    function abi_encode_t_stringliteral_e6e278564af6d8c908aa9321b451f41be1c60de060e90719489e8365cbf57f9f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 11)\n        store_literal_in_memory_e6e278564af6d8c908aa9321b451f41be1c60de060e90719489e8365cbf57f9f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e6e278564af6d8c908aa9321b451f41be1c60de060e90719489e8365cbf57f9f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e6e278564af6d8c908aa9321b451f41be1c60de060e90719489e8365cbf57f9f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0d617be88096c346284999e0c326580edf46a27365999d8d83893f396c546e11(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient\")\n\n    }\n\n    function abi_encode_t_stringliteral_0d617be88096c346284999e0c326580edf46a27365999d8d83893f396c546e11_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 12)\n        store_literal_in_memory_0d617be88096c346284999e0c326580edf46a27365999d8d83893f396c546e11(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0d617be88096c346284999e0c326580edf46a27365999d8d83893f396c546e11__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0d617be88096c346284999e0c326580edf46a27365999d8d83893f396c546e11_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_deac108a7d54cf66b12f6e883ab8551f52667d7b9815f115365cc11ce5c44062(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid Mode\")\n\n    }\n\n    function abi_encode_t_stringliteral_deac108a7d54cf66b12f6e883ab8551f52667d7b9815f115365cc11ce5c44062_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 12)\n        store_literal_in_memory_deac108a7d54cf66b12f6e883ab8551f52667d7b9815f115365cc11ce5c44062(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_deac108a7d54cf66b12f6e883ab8551f52667d7b9815f115365cc11ce5c44062__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_deac108a7d54cf66b12f6e883ab8551f52667d7b9815f115365cc11ce5c44062_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid Lockup Duration\")\n\n    }\n\n    function abi_encode_t_stringliteral_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function store_literal_in_memory_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid Unstaking Fee Rate\")\n\n    }\n\n    function abi_encode_t_stringliteral_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid value\")\n\n    }\n\n    function abi_encode_t_stringliteral_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684(memPtr) {\n\n        mstore(add(memPtr, 0), \"Error: invalid staker\")\n\n    }\n\n    function abi_encode_t_stringliteral_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_2c0bb5e0c4ac567371ecbd023733bd581a3977e4ec4f3ce35a1885aefc6bd283(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not staker yet\")\n\n    }\n\n    function abi_encode_t_stringliteral_2c0bb5e0c4ac567371ecbd023733bd581a3977e4ec4f3ce35a1885aefc6bd283_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_2c0bb5e0c4ac567371ecbd023733bd581a3977e4ec4f3ce35a1885aefc6bd283(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2c0bb5e0c4ac567371ecbd023733bd581a3977e4ec4f3ce35a1885aefc6bd283__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2c0bb5e0c4ac567371ecbd023733bd581a3977e4ec4f3ce35a1885aefc6bd283_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeBEP20: BEP20 operation did n\")\n\n        mstore(add(memPtr, 32), \"ot succeed\")\n\n    }\n\n    function abi_encode_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: insufficient balance fo\")\n\n        mstore(add(memPtr, 32), \"r call\")\n\n    }\n\n    function abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: call to non-contract\")\n\n    }\n\n    function abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101cf5760003560e01c8063817b1cd211610104578063aedf562b116100a2578063f2fde38b11610071578063f2fde38b146104de578063f9931855146104fa578063fc0c546a1461052a578063fe600f8414610548576101cf565b8063aedf562b14610446578063c1704a1414610476578063c665d80e14610492578063ce34751f146104ae576101cf565b806391e07e7a116100de57806391e07e7a146103d65780639e447fc6146103f2578063a694fc3a1461040e578063ae5449431461042a576101cf565b8063817b1cd21461036a5780638da5cb5b14610388578063909f093e146103a6576101cf565b80634b62b70b11610171578063692642e71161014b578063692642e7146102f65780636ef3243514610312578063715018a6146103425780637e1a37861461034c576101cf565b80634b62b70b146102a05780634b77dd9e146102bc5780635715ec11146102d8576101cf565b806323b61117116101ad57806323b611171461022e5780632e1a7d4d1461024a5780634641257d146102665780634a4fbeec14610270576101cf565b80630917e776146101d457806318b2367e146101f2578063221dfe0314610210575b600080fd5b6101dc610578565b6040516101e991906127f8565b60405180910390f35b6101fa610582565b60405161020791906127f8565b60405180910390f35b61021861058c565b60405161022591906127f8565b60405180910390f35b61024860048036038101906102439190612844565b610596565b005b610264600480360381019061025f9190612844565b61065f565b005b61026e610a11565b005b61028a600480360381019061028591906128cf565b610d14565b60405161029791906127f8565b60405180910390f35b6102ba60048036038101906102b59190612844565b610ecc565b005b6102d660048036038101906102d191906128fc565b610f95565b005b6102e06113e8565b6040516102ed91906127f8565b60405180910390f35b610310600480360381019061030b9190612844565b6113f5565b005b61032c600480360381019061032791906128cf565b6114f5565b60405161033991906127f8565b60405180910390f35b61034a61163c565b005b6103546116c4565b60405161036191906127f8565b60405180910390f35b6103726116ce565b60405161037f91906127f8565b60405180910390f35b6103906116d4565b60405161039d919061294b565b60405180910390f35b6103c060048036038101906103bb9190612844565b6116fd565b6040516103cd91906127f8565b60405180910390f35b6103f060048036038101906103eb9190612844565b611798565b005b61040c60048036038101906104079190612844565b611898565b005b61042860048036038101906104239190612844565b611998565b005b610444600480360381019061043f9190612844565b611c95565b005b610460600480360381019061045b91906128cf565b611d5e565b60405161046d91906127f8565b60405180910390f35b610490600480360381019061048b9190612844565b611df5565b005b6104ac60048036038101906104a79190612844565b611ebe565b005b6104c860048036038101906104c39190612844565b611f87565b6040516104d591906127f8565b60405180910390f35b6104f860048036038101906104f391906128cf565b611fa6565b005b610514600480360381019061050f91906128cf565b61209e565b60405161052191906127f8565b60405180910390f35b6105326120ea565b60405161053f91906129c5565b60405180910390f35b610562600480360381019061055d91906128cf565b612110565b60405161056f91906127f8565b60405180910390f35b6000600c54905090565b6000600254905090565b6000600154905090565b61059e61215c565b73ffffffffffffffffffffffffffffffffffffffff166105bc6116d4565b73ffffffffffffffffffffffffffffffffffffffff1614610612576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060990612a3d565b60405180910390fd5b60008111610655576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064c90612aa9565b60405180910390fd5b8060088190555050565b600081116106a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069990612b15565b60405180910390fd5b600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154811115610727576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071e90612b81565b60405180910390fd5b61072f612164565b600081905060006107a062015180610792600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301544261233790919063ffffffff16565b61234d90919063ffffffff16565b9050600060649050600080600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002015414156108685761086061080f6201518060055461236390919063ffffffff16565b600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003015461237990919063ffffffff16565b421015610886565b6000600254846108789190612bd0565b1480156108855750600083115b5b9050806108935760015491505b6108e884600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015461233790919063ffffffff16565b600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018190555061094384600c5461233790919063ffffffff16565b600c81905550610982610973612710610965858861236390919063ffffffff16565b61234d90919063ffffffff16565b8561233790919063ffffffff16565b93506109d13385600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661238f9092919063ffffffff16565b7f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a94243643385604051610a02929190612c01565b60405180910390a15050505050565b610a19612164565b6000600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015490506000610a9d610a8e612710610a806004548661236390919063ffffffff16565b61234d90919063ffffffff16565b8361233790919063ffffffff16565b905060008111610ae2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ad990612c76565b60405180910390fd5b600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610b3d919061294b565b60206040518083038186803b158015610b5557600080fd5b505afa158015610b69573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b8d9190612cab565b811115610c4257600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610bef919061294b565b60206040518083038186803b158015610c0757600080fd5b505afa158015610c1b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c3f9190612cab565b90505b610c8f3382600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661238f9092919063ffffffff16565b6000600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055507fc9695243a805adb74c91f28311176c65b417e842d5699893cef56d18bfa48cba3382604051610d08929190612c01565b60405180910390a15050565b60006037600b60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206005015414610d695760009050610ec7565b6000600b60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002015414610e445760006007610e2162015180610e13600b60008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301544261233790919063ffffffff16565b61234d90919063ffffffff16565b610e2b9190612bd0565b14610e37576001610e3a565b60005b60ff169050610ec7565b610e5c6201518060055461236390919063ffffffff16565b610eb1600b60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301544261233790919063ffffffff16565b1015610ebe576001610ec1565b60005b60ff1690505b919050565b610ed461215c565b73ffffffffffffffffffffffffffffffffffffffff16610ef26116d4565b73ffffffffffffffffffffffffffffffffffffffff1614610f48576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f3f90612a3d565b60405180910390fd5b60008111610f8b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f8290612aa9565b60405180910390fd5b8060058190555050565b60008211610fd8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fcf90612b15565b60405180910390fd5b81600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401611034919061294b565b60206040518083038186803b15801561104c57600080fd5b505afa158015611060573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110849190612cab565b116110c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110bb90612d24565b60405180910390fd5b60006110cf33610d14565b1461110f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161110690612d90565b60405180910390fd5b60008114156111625760065482101561115d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161115490612dfc565b60405180910390fd5b6112a2565b60018114156111b5576009548210156111b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111a790612dfc565b60405180910390fd5b6112a1565b600281141561120857600854821015611203576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111fa90612dfc565b60405180910390fd5b6112a0565b600381141561125b57600754821015611256576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161124d90612dfc565b60405180910390fd5b61129f565b6000821061129e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161129590612e68565b60405180910390fd5b5b5b5b5b80600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018190555042600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301819055506037600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060050181905550600a339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506113e482611998565b5050565b6000600a80549050905090565b6113fd61215c565b73ffffffffffffffffffffffffffffffffffffffff1661141b6116d4565b73ffffffffffffffffffffffffffffffffffffffff1614611471576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161146890612a3d565b60405180910390fd5b600081116114b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114ab90612ed4565b60405180910390fd5b806002819055507f189bda9782663c67a3f95c0aa5455924c711210b00281c60ead2f0dd8dbc924c816040516114ea91906127f8565b60405180910390a150565b600080600b60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154905060006115e36127106115d5620151806115c76003546115b96115aa600b60008d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600401544261233790919063ffffffff16565b8961236390919063ffffffff16565b61236390919063ffffffff16565b61234d90919063ffffffff16565b61234d90919063ffffffff16565b905080600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001546116339190612f23565b92505050919050565b61164461215c565b73ffffffffffffffffffffffffffffffffffffffff166116626116d4565b73ffffffffffffffffffffffffffffffffffffffff16146116b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116af90612a3d565b60405180910390fd5b6116c26000612415565b565b6000600354905090565b600c5481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000806000905060008314806117135750600283145b1561172257600654905061178f565b600183141561173557600954905061178e565b600383141561174857600754905061178d565b600160001161178c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161178390612e68565b60405180910390fd5b5b5b5b80915050919050565b6117a061215c565b73ffffffffffffffffffffffffffffffffffffffff166117be6116d4565b73ffffffffffffffffffffffffffffffffffffffff1614611814576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161180b90612a3d565b60405180910390fd5b60008111611857576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161184e90612fc5565b60405180910390fd5b806001819055507f150c688dd7595bf7862b8ab1fe46756450eb7d731037942b3bbc46f3f0e21b818160405161188d91906127f8565b60405180910390a150565b6118a061215c565b73ffffffffffffffffffffffffffffffffffffffff166118be6116d4565b73ffffffffffffffffffffffffffffffffffffffff1614611914576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161190b90612a3d565b60405180910390fd5b60008111611957576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161194e90613031565b60405180910390fd5b806003819055507f1946fb78c7ca778b54d82cabaac5ba67cf446f58d0ff1f8ceaebb6150e54e44f8160405161198d91906127f8565b60405180910390a150565b600081116119db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119d290612b15565b60405180910390fd5b80600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401611a37919061294b565b60206040518083038186803b158015611a4f57600080fd5b505afa158015611a63573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a879190612cab565b11611ac7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611abe90612d24565b60405180910390fd5b6037600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206005015414611b4c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b439061309d565b60405180910390fd5b611b54612164565b611ba3333083600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166124d9909392919063ffffffff16565b611bf881600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015461237990919063ffffffff16565b600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010181905550611c5381600c5461237990919063ffffffff16565b600c819055507f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d3382604051611c8a929190612c01565b60405180910390a150565b611c9d61215c565b73ffffffffffffffffffffffffffffffffffffffff16611cbb6116d4565b73ffffffffffffffffffffffffffffffffffffffff1614611d11576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d0890612a3d565b60405180910390fd5b60008111611d54576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d4b90612aa9565b60405180910390fd5b8060078190555050565b60006037611d6b83612110565b14611dab576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611da290613109565b60405180910390fd5b600b60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201549050919050565b611dfd61215c565b73ffffffffffffffffffffffffffffffffffffffff16611e1b6116d4565b73ffffffffffffffffffffffffffffffffffffffff1614611e71576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e6890612a3d565b60405180910390fd5b60008111611eb4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611eab90612aa9565b60405180910390fd5b8060098190555050565b611ec661215c565b73ffffffffffffffffffffffffffffffffffffffff16611ee46116d4565b73ffffffffffffffffffffffffffffffffffffffff1614611f3a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f3190612a3d565b60405180910390fd5b60008111611f7d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f7490612aa9565b60405180910390fd5b8060068190555050565b600080821415611f9b576005549050611fa1565b60025490505b919050565b611fae61215c565b73ffffffffffffffffffffffffffffffffffffffff16611fcc6116d4565b73ffffffffffffffffffffffffffffffffffffffff1614612022576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161201990612a3d565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415612092576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120899061319b565b60405180910390fd5b61209b81612415565b50565b6000600b60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101549050919050565b600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600b60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600501549050919050565b600033905090565b6000600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101549050600061224f612710612241603c612233600354612225612216600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600401544261233790919063ffffffff16565b8961236390919063ffffffff16565b61236390919063ffffffff16565b61234d90919063ffffffff16565b61234d90919063ffffffff16565b90506122a681600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015461237990919063ffffffff16565b600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190555042600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600401819055505050565b6000818361234591906131bb565b905092915050565b6000818361235b91906131ef565b905092915050565b600081836123719190613220565b905092915050565b600081836123879190612f23565b905092915050565b6124108363a9059cbb60e01b84846040516024016123ae929190612c01565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050612562565b505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b61255c846323b872dd60e01b8585856040516024016124fa9392919061327a565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050612562565b50505050565b60006125c4826040518060400160405280602081526020017f5361666542455032303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166126299092919063ffffffff16565b905060008151111561262457808060200190518101906125e491906132e9565b612623576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161261a90613388565b60405180910390fd5b5b505050565b60606126388484600085612641565b90509392505050565b606082471015612686576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161267d9061341a565b60405180910390fd5b61268f85612755565b6126ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016126c590613486565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516126f79190613520565b60006040518083038185875af1925050503d8060008114612734576040519150601f19603f3d011682016040523d82523d6000602084013e612739565b606091505b5091509150612749828286612778565b92505050949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60608315612788578290506127d8565b60008351111561279b5782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016127cf919061358c565b60405180910390fd5b9392505050565b6000819050919050565b6127f2816127df565b82525050565b600060208201905061280d60008301846127e9565b92915050565b600080fd5b612821816127df565b811461282c57600080fd5b50565b60008135905061283e81612818565b92915050565b60006020828403121561285a57612859612813565b5b60006128688482850161282f565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061289c82612871565b9050919050565b6128ac81612891565b81146128b757600080fd5b50565b6000813590506128c9816128a3565b92915050565b6000602082840312156128e5576128e4612813565b5b60006128f3848285016128ba565b91505092915050565b6000806040838503121561291357612912612813565b5b60006129218582860161282f565b92505060206129328582860161282f565b9150509250929050565b61294581612891565b82525050565b6000602082019050612960600083018461293c565b92915050565b6000819050919050565b600061298b61298661298184612871565b612966565b612871565b9050919050565b600061299d82612970565b9050919050565b60006129af82612992565b9050919050565b6129bf816129a4565b82525050565b60006020820190506129da60008301846129b6565b92915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000612a276020836129e0565b9150612a32826129f1565b602082019050919050565b60006020820190508181036000830152612a5681612a1a565b9050919050565b7f43616e2774206265207a65726f00000000000000000000000000000000000000600082015250565b6000612a93600d836129e0565b9150612a9e82612a5d565b602082019050919050565b60006020820190508181036000830152612ac281612a86565b9050919050565b7f416d6f756e742073686f756c642062652067726561746572207468616e203000600082015250565b6000612aff601f836129e0565b9150612b0a82612ac9565b602082019050919050565b60006020820190508181036000830152612b2e81612af2565b9050919050565b7f496e76616c696420616d6f756e74000000000000000000000000000000000000600082015250565b6000612b6b600e836129e0565b9150612b7682612b35565b602082019050919050565b60006020820190508181036000830152612b9a81612b5e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000612bdb826127df565b9150612be6836127df565b925082612bf657612bf5612ba1565b5b828206905092915050565b6000604082019050612c16600083018561293c565b612c2360208301846127e9565b9392505050565b7f4e6f7468696e6720746f20636c61696d00000000000000000000000000000000600082015250565b6000612c606010836129e0565b9150612c6b82612c2a565b602082019050919050565b60006020820190508181036000830152612c8f81612c53565b9050919050565b600081519050612ca581612818565b92915050565b600060208284031215612cc157612cc0612813565b5b6000612ccf84828501612c96565b91505092915050565b7f496e73756666696369656e742100000000000000000000000000000000000000600082015250565b6000612d0e600d836129e0565b9150612d1982612cd8565b602082019050919050565b60006020820190508181036000830152612d3d81612d01565b9050919050565b7f43616e2774207374617274000000000000000000000000000000000000000000600082015250565b6000612d7a600b836129e0565b9150612d8582612d44565b602082019050919050565b60006020820190508181036000830152612da981612d6d565b9050919050565b7f496e73756666696369656e740000000000000000000000000000000000000000600082015250565b6000612de6600c836129e0565b9150612df182612db0565b602082019050919050565b60006020820190508181036000830152612e1581612dd9565b9050919050565b7f496e76616c6964204d6f64650000000000000000000000000000000000000000600082015250565b6000612e52600c836129e0565b9150612e5d82612e1c565b602082019050919050565b60006020820190508181036000830152612e8181612e45565b9050919050565b7f496e76616c6964204c6f636b7570204475726174696f6e000000000000000000600082015250565b6000612ebe6017836129e0565b9150612ec982612e88565b602082019050919050565b60006020820190508181036000830152612eed81612eb1565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612f2e826127df565b9150612f39836127df565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115612f6e57612f6d612ef4565b5b828201905092915050565b7f496e76616c696420556e7374616b696e67204665652052617465000000000000600082015250565b6000612faf601a836129e0565b9150612fba82612f79565b602082019050919050565b60006020820190508181036000830152612fde81612fa2565b9050919050565b7f496e76616c69642076616c756500000000000000000000000000000000000000600082015250565b600061301b600d836129e0565b915061302682612fe5565b602082019050919050565b6000602082019050818103600083015261304a8161300e565b9050919050565b7f4572726f723a20696e76616c6964207374616b65720000000000000000000000600082015250565b60006130876015836129e0565b915061309282613051565b602082019050919050565b600060208201905081810360008301526130b68161307a565b9050919050565b7f4e6f74207374616b657220796574000000000000000000000000000000000000600082015250565b60006130f3600e836129e0565b91506130fe826130bd565b602082019050919050565b60006020820190508181036000830152613122816130e6565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006131856026836129e0565b915061319082613129565b604082019050919050565b600060208201905081810360008301526131b481613178565b9050919050565b60006131c6826127df565b91506131d1836127df565b9250828210156131e4576131e3612ef4565b5b828203905092915050565b60006131fa826127df565b9150613205836127df565b92508261321557613214612ba1565b5b828204905092915050565b600061322b826127df565b9150613236836127df565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561326f5761326e612ef4565b5b828202905092915050565b600060608201905061328f600083018661293c565b61329c602083018561293c565b6132a960408301846127e9565b949350505050565b60008115159050919050565b6132c6816132b1565b81146132d157600080fd5b50565b6000815190506132e3816132bd565b92915050565b6000602082840312156132ff576132fe612813565b5b600061330d848285016132d4565b91505092915050565b7f5361666542455032303a204245503230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b6000613372602a836129e0565b915061337d82613316565b604082019050919050565b600060208201905081810360008301526133a181613365565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b60006134046026836129e0565b915061340f826133a8565b604082019050919050565b60006020820190508181036000830152613433816133f7565b9050919050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b6000613470601d836129e0565b915061347b8261343a565b602082019050919050565b6000602082019050818103600083015261349f81613463565b9050919050565b600081519050919050565b600081905092915050565b60005b838110156134da5780820151818401526020810190506134bf565b838111156134e9576000848401525b50505050565b60006134fa826134a6565b61350481856134b1565b93506135148185602086016134bc565b80840191505092915050565b600061352c82846134ef565b915081905092915050565b600081519050919050565b6000601f19601f8301169050919050565b600061355e82613537565b61356881856129e0565b93506135788185602086016134bc565b61358181613542565b840191505092915050565b600060208201905081810360008301526135a68184613553565b90509291505056fea264697066735822122065973e8b3407e221c545fa96307fd8580b7c9883990a872431b2c0d99b98d6fc64736f6c63430008090033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1CF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x817B1CD2 GT PUSH2 0x104 JUMPI DUP1 PUSH4 0xAEDF562B GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xF2FDE38B GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4DE JUMPI DUP1 PUSH4 0xF9931855 EQ PUSH2 0x4FA JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x52A JUMPI DUP1 PUSH4 0xFE600F84 EQ PUSH2 0x548 JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0xAEDF562B EQ PUSH2 0x446 JUMPI DUP1 PUSH4 0xC1704A14 EQ PUSH2 0x476 JUMPI DUP1 PUSH4 0xC665D80E EQ PUSH2 0x492 JUMPI DUP1 PUSH4 0xCE34751F EQ PUSH2 0x4AE JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x91E07E7A GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x91E07E7A EQ PUSH2 0x3D6 JUMPI DUP1 PUSH4 0x9E447FC6 EQ PUSH2 0x3F2 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x40E JUMPI DUP1 PUSH4 0xAE544943 EQ PUSH2 0x42A JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x817B1CD2 EQ PUSH2 0x36A JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x388 JUMPI DUP1 PUSH4 0x909F093E EQ PUSH2 0x3A6 JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x4B62B70B GT PUSH2 0x171 JUMPI DUP1 PUSH4 0x692642E7 GT PUSH2 0x14B JUMPI DUP1 PUSH4 0x692642E7 EQ PUSH2 0x2F6 JUMPI DUP1 PUSH4 0x6EF32435 EQ PUSH2 0x312 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x342 JUMPI DUP1 PUSH4 0x7E1A3786 EQ PUSH2 0x34C JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x4B62B70B EQ PUSH2 0x2A0 JUMPI DUP1 PUSH4 0x4B77DD9E EQ PUSH2 0x2BC JUMPI DUP1 PUSH4 0x5715EC11 EQ PUSH2 0x2D8 JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x23B61117 GT PUSH2 0x1AD JUMPI DUP1 PUSH4 0x23B61117 EQ PUSH2 0x22E JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x24A JUMPI DUP1 PUSH4 0x4641257D EQ PUSH2 0x266 JUMPI DUP1 PUSH4 0x4A4FBEEC EQ PUSH2 0x270 JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x917E776 EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0x18B2367E EQ PUSH2 0x1F2 JUMPI DUP1 PUSH4 0x221DFE03 EQ PUSH2 0x210 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DC PUSH2 0x578 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0x27F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FA PUSH2 0x582 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x207 SWAP2 SWAP1 PUSH2 0x27F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x218 PUSH2 0x58C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x225 SWAP2 SWAP1 PUSH2 0x27F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x248 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x243 SWAP2 SWAP1 PUSH2 0x2844 JUMP JUMPDEST PUSH2 0x596 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x264 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25F SWAP2 SWAP1 PUSH2 0x2844 JUMP JUMPDEST PUSH2 0x65F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x26E PUSH2 0xA11 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x28A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x285 SWAP2 SWAP1 PUSH2 0x28CF JUMP JUMPDEST PUSH2 0xD14 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x297 SWAP2 SWAP1 PUSH2 0x27F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B5 SWAP2 SWAP1 PUSH2 0x2844 JUMP JUMPDEST PUSH2 0xECC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D1 SWAP2 SWAP1 PUSH2 0x28FC JUMP JUMPDEST PUSH2 0xF95 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2E0 PUSH2 0x13E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2ED SWAP2 SWAP1 PUSH2 0x27F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x310 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30B SWAP2 SWAP1 PUSH2 0x2844 JUMP JUMPDEST PUSH2 0x13F5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x32C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x327 SWAP2 SWAP1 PUSH2 0x28CF JUMP JUMPDEST PUSH2 0x14F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x339 SWAP2 SWAP1 PUSH2 0x27F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34A PUSH2 0x163C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x354 PUSH2 0x16C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x361 SWAP2 SWAP1 PUSH2 0x27F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x372 PUSH2 0x16CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x37F SWAP2 SWAP1 PUSH2 0x27F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x390 PUSH2 0x16D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x39D SWAP2 SWAP1 PUSH2 0x294B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3BB SWAP2 SWAP1 PUSH2 0x2844 JUMP JUMPDEST PUSH2 0x16FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3CD SWAP2 SWAP1 PUSH2 0x27F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3EB SWAP2 SWAP1 PUSH2 0x2844 JUMP JUMPDEST PUSH2 0x1798 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x40C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x407 SWAP2 SWAP1 PUSH2 0x2844 JUMP JUMPDEST PUSH2 0x1898 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x428 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x423 SWAP2 SWAP1 PUSH2 0x2844 JUMP JUMPDEST PUSH2 0x1998 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x444 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x43F SWAP2 SWAP1 PUSH2 0x2844 JUMP JUMPDEST PUSH2 0x1C95 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x460 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45B SWAP2 SWAP1 PUSH2 0x28CF JUMP JUMPDEST PUSH2 0x1D5E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x46D SWAP2 SWAP1 PUSH2 0x27F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x490 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x48B SWAP2 SWAP1 PUSH2 0x2844 JUMP JUMPDEST PUSH2 0x1DF5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4AC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4A7 SWAP2 SWAP1 PUSH2 0x2844 JUMP JUMPDEST PUSH2 0x1EBE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4C8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4C3 SWAP2 SWAP1 PUSH2 0x2844 JUMP JUMPDEST PUSH2 0x1F87 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D5 SWAP2 SWAP1 PUSH2 0x27F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4F8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4F3 SWAP2 SWAP1 PUSH2 0x28CF JUMP JUMPDEST PUSH2 0x1FA6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x514 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50F SWAP2 SWAP1 PUSH2 0x28CF JUMP JUMPDEST PUSH2 0x209E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x521 SWAP2 SWAP1 PUSH2 0x27F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x532 PUSH2 0x20EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x53F SWAP2 SWAP1 PUSH2 0x29C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x562 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x55D SWAP2 SWAP1 PUSH2 0x28CF JUMP JUMPDEST PUSH2 0x2110 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x56F SWAP2 SWAP1 PUSH2 0x27F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0xC SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x59E PUSH2 0x215C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x5BC PUSH2 0x16D4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x612 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x609 SWAP1 PUSH2 0x2A3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x655 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64C SWAP1 PUSH2 0x2AA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x8 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x6A2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x699 SWAP1 PUSH2 0x2B15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD DUP2 GT ISZERO PUSH2 0x727 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x71E SWAP1 PUSH2 0x2B81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x72F PUSH2 0x2164 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x0 PUSH2 0x7A0 PUSH3 0x15180 PUSH2 0x792 PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD TIMESTAMP PUSH2 0x2337 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x234D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x64 SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD EQ ISZERO PUSH2 0x868 JUMPI PUSH2 0x860 PUSH2 0x80F PUSH3 0x15180 PUSH1 0x5 SLOAD PUSH2 0x2363 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x2379 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x886 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD DUP5 PUSH2 0x878 SWAP2 SWAP1 PUSH2 0x2BD0 JUMP JUMPDEST EQ DUP1 ISZERO PUSH2 0x885 JUMPI POP PUSH1 0x0 DUP4 GT JUMPDEST JUMPDEST SWAP1 POP DUP1 PUSH2 0x893 JUMPI PUSH1 0x1 SLOAD SWAP2 POP JUMPDEST PUSH2 0x8E8 DUP5 PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x2337 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x943 DUP5 PUSH1 0xC SLOAD PUSH2 0x2337 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xC DUP2 SWAP1 SSTORE POP PUSH2 0x982 PUSH2 0x973 PUSH2 0x2710 PUSH2 0x965 DUP6 DUP9 PUSH2 0x2363 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x234D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 PUSH2 0x2337 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP4 POP PUSH2 0x9D1 CALLER DUP6 PUSH1 0xD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x238F SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH32 0x884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364 CALLER DUP6 PUSH1 0x40 MLOAD PUSH2 0xA02 SWAP3 SWAP2 SWAP1 PUSH2 0x2C01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH2 0xA19 PUSH2 0x2164 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP1 POP PUSH1 0x0 PUSH2 0xA9D PUSH2 0xA8E PUSH2 0x2710 PUSH2 0xA80 PUSH1 0x4 SLOAD DUP7 PUSH2 0x2363 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x234D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 PUSH2 0x2337 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0xAE2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAD9 SWAP1 PUSH2 0x2C76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB3D SWAP2 SWAP1 PUSH2 0x294B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB69 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB8D SWAP2 SWAP1 PUSH2 0x2CAB JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0xC42 JUMPI PUSH1 0xD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEF SWAP2 SWAP1 PUSH2 0x294B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC07 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC1B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC3F SWAP2 SWAP1 PUSH2 0x2CAB JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0xC8F CALLER DUP3 PUSH1 0xD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x238F SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH32 0xC9695243A805ADB74C91F28311176C65B417E842D5699893CEF56D18BFA48CBA CALLER DUP3 PUSH1 0x40 MLOAD PUSH2 0xD08 SWAP3 SWAP2 SWAP1 PUSH2 0x2C01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x37 PUSH1 0xB PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD EQ PUSH2 0xD69 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0xEC7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD EQ PUSH2 0xE44 JUMPI PUSH1 0x0 PUSH1 0x7 PUSH2 0xE21 PUSH3 0x15180 PUSH2 0xE13 PUSH1 0xB PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD TIMESTAMP PUSH2 0x2337 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x234D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xE2B SWAP2 SWAP1 PUSH2 0x2BD0 JUMP JUMPDEST EQ PUSH2 0xE37 JUMPI PUSH1 0x1 PUSH2 0xE3A JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH2 0xEC7 JUMP JUMPDEST PUSH2 0xE5C PUSH3 0x15180 PUSH1 0x5 SLOAD PUSH2 0x2363 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xEB1 PUSH1 0xB PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD TIMESTAMP PUSH2 0x2337 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST LT ISZERO PUSH2 0xEBE JUMPI PUSH1 0x1 PUSH2 0xEC1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0xFF AND SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xED4 PUSH2 0x215C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xEF2 PUSH2 0x16D4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF48 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF3F SWAP1 PUSH2 0x2A3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xF8B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF82 SWAP1 PUSH2 0x2AA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0xFD8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFCF SWAP1 PUSH2 0x2B15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0xD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1034 SWAP2 SWAP1 PUSH2 0x294B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x104C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1060 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1084 SWAP2 SWAP1 PUSH2 0x2CAB JUMP JUMPDEST GT PUSH2 0x10C4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10BB SWAP1 PUSH2 0x2D24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x10CF CALLER PUSH2 0xD14 JUMP JUMPDEST EQ PUSH2 0x110F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1106 SWAP1 PUSH2 0x2D90 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0x1162 JUMPI PUSH1 0x6 SLOAD DUP3 LT ISZERO PUSH2 0x115D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1154 SWAP1 PUSH2 0x2DFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12A2 JUMP JUMPDEST PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x11B5 JUMPI PUSH1 0x9 SLOAD DUP3 LT ISZERO PUSH2 0x11B0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11A7 SWAP1 PUSH2 0x2DFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12A1 JUMP JUMPDEST PUSH1 0x2 DUP2 EQ ISZERO PUSH2 0x1208 JUMPI PUSH1 0x8 SLOAD DUP3 LT ISZERO PUSH2 0x1203 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11FA SWAP1 PUSH2 0x2DFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12A0 JUMP JUMPDEST PUSH1 0x3 DUP2 EQ ISZERO PUSH2 0x125B JUMPI PUSH1 0x7 SLOAD DUP3 LT ISZERO PUSH2 0x1256 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x124D SWAP1 PUSH2 0x2DFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x129F JUMP JUMPDEST PUSH1 0x0 DUP3 LT PUSH2 0x129E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1295 SWAP1 PUSH2 0x2E68 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST JUMPDEST JUMPDEST JUMPDEST DUP1 PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x37 PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD DUP2 SWAP1 SSTORE POP PUSH1 0xA CALLER SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x13E4 DUP3 PUSH2 0x1998 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x13FD PUSH2 0x215C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x141B PUSH2 0x16D4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1471 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1468 SWAP1 PUSH2 0x2A3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x14B4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14AB SWAP1 PUSH2 0x2ED4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH32 0x189BDA9782663C67A3F95C0AA5455924C711210B00281C60EAD2F0DD8DBC924C DUP2 PUSH1 0x40 MLOAD PUSH2 0x14EA SWAP2 SWAP1 PUSH2 0x27F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xB PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP PUSH1 0x0 PUSH2 0x15E3 PUSH2 0x2710 PUSH2 0x15D5 PUSH3 0x15180 PUSH2 0x15C7 PUSH1 0x3 SLOAD PUSH2 0x15B9 PUSH2 0x15AA PUSH1 0xB PUSH1 0x0 DUP14 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD SLOAD TIMESTAMP PUSH2 0x2337 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP10 PUSH2 0x2363 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2363 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x234D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x234D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH2 0x1633 SWAP2 SWAP1 PUSH2 0x2F23 JUMP JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1644 PUSH2 0x215C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1662 PUSH2 0x16D4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x16B8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16AF SWAP1 PUSH2 0x2A3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x16C2 PUSH1 0x0 PUSH2 0x2415 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 DUP4 EQ DUP1 PUSH2 0x1713 JUMPI POP PUSH1 0x2 DUP4 EQ JUMPDEST ISZERO PUSH2 0x1722 JUMPI PUSH1 0x6 SLOAD SWAP1 POP PUSH2 0x178F JUMP JUMPDEST PUSH1 0x1 DUP4 EQ ISZERO PUSH2 0x1735 JUMPI PUSH1 0x9 SLOAD SWAP1 POP PUSH2 0x178E JUMP JUMPDEST PUSH1 0x3 DUP4 EQ ISZERO PUSH2 0x1748 JUMPI PUSH1 0x7 SLOAD SWAP1 POP PUSH2 0x178D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 GT PUSH2 0x178C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1783 SWAP1 PUSH2 0x2E68 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST JUMPDEST JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17A0 PUSH2 0x215C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x17BE PUSH2 0x16D4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1814 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x180B SWAP1 PUSH2 0x2A3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x1857 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x184E SWAP1 PUSH2 0x2FC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH32 0x150C688DD7595BF7862B8AB1FE46756450EB7D731037942B3BBC46F3F0E21B81 DUP2 PUSH1 0x40 MLOAD PUSH2 0x188D SWAP2 SWAP1 PUSH2 0x27F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x18A0 PUSH2 0x215C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x18BE PUSH2 0x16D4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1914 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x190B SWAP1 PUSH2 0x2A3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x1957 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x194E SWAP1 PUSH2 0x3031 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH32 0x1946FB78C7CA778B54D82CABAAC5BA67CF446F58D0FF1F8CEAEBB6150E54E44F DUP2 PUSH1 0x40 MLOAD PUSH2 0x198D SWAP2 SWAP1 PUSH2 0x27F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x19DB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19D2 SWAP1 PUSH2 0x2B15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A37 SWAP2 SWAP1 PUSH2 0x294B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1A4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A63 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1A87 SWAP2 SWAP1 PUSH2 0x2CAB JUMP JUMPDEST GT PUSH2 0x1AC7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1ABE SWAP1 PUSH2 0x2D24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x37 PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD EQ PUSH2 0x1B4C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B43 SWAP1 PUSH2 0x309D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1B54 PUSH2 0x2164 JUMP JUMPDEST PUSH2 0x1BA3 CALLER ADDRESS DUP4 PUSH1 0xD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x24D9 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1BF8 DUP2 PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x2379 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x1C53 DUP2 PUSH1 0xC SLOAD PUSH2 0x2379 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xC DUP2 SWAP1 SSTORE POP PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D CALLER DUP3 PUSH1 0x40 MLOAD PUSH2 0x1C8A SWAP3 SWAP2 SWAP1 PUSH2 0x2C01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x1C9D PUSH2 0x215C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1CBB PUSH2 0x16D4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1D11 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D08 SWAP1 PUSH2 0x2A3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x1D54 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D4B SWAP1 PUSH2 0x2AA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x37 PUSH2 0x1D6B DUP4 PUSH2 0x2110 JUMP JUMPDEST EQ PUSH2 0x1DAB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DA2 SWAP1 PUSH2 0x3109 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xB PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DFD PUSH2 0x215C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1E1B PUSH2 0x16D4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1E71 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E68 SWAP1 PUSH2 0x2A3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x1EB4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1EAB SWAP1 PUSH2 0x2AA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x9 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x1EC6 PUSH2 0x215C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1EE4 PUSH2 0x16D4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1F3A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F31 SWAP1 PUSH2 0x2A3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x1F7D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F74 SWAP1 PUSH2 0x2AA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EQ ISZERO PUSH2 0x1F9B JUMPI PUSH1 0x5 SLOAD SWAP1 POP PUSH2 0x1FA1 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FAE PUSH2 0x215C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1FCC PUSH2 0x16D4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2022 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2019 SWAP1 PUSH2 0x2A3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2092 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2089 SWAP1 PUSH2 0x319B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x209B DUP2 PUSH2 0x2415 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP PUSH1 0x0 PUSH2 0x224F PUSH2 0x2710 PUSH2 0x2241 PUSH1 0x3C PUSH2 0x2233 PUSH1 0x3 SLOAD PUSH2 0x2225 PUSH2 0x2216 PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD SLOAD TIMESTAMP PUSH2 0x2337 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP10 PUSH2 0x2363 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2363 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x234D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x234D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x22A6 DUP2 PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH2 0x2379 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x2345 SWAP2 SWAP1 PUSH2 0x31BB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x235B SWAP2 SWAP1 PUSH2 0x31EF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x2371 SWAP2 SWAP1 PUSH2 0x3220 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x2387 SWAP2 SWAP1 PUSH2 0x2F23 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2410 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x23AE SWAP3 SWAP2 SWAP1 PUSH2 0x2C01 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x2562 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x255C DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x24FA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x327A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x2562 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25C4 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666542455032303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2629 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x2624 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x25E4 SWAP2 SWAP1 PUSH2 0x32E9 JUMP JUMPDEST PUSH2 0x2623 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x261A SWAP1 PUSH2 0x3388 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2638 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x2641 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x2686 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x267D SWAP1 PUSH2 0x341A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x268F DUP6 PUSH2 0x2755 JUMP JUMPDEST PUSH2 0x26CE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x26C5 SWAP1 PUSH2 0x3486 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x26F7 SWAP2 SWAP1 PUSH2 0x3520 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2734 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2739 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x2749 DUP3 DUP3 DUP7 PUSH2 0x2778 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x2788 JUMPI DUP3 SWAP1 POP PUSH2 0x27D8 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0x279B JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x27CF SWAP2 SWAP1 PUSH2 0x358C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x27F2 DUP2 PUSH2 0x27DF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x280D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x27E9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2821 DUP2 PUSH2 0x27DF JUMP JUMPDEST DUP2 EQ PUSH2 0x282C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x283E DUP2 PUSH2 0x2818 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x285A JUMPI PUSH2 0x2859 PUSH2 0x2813 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2868 DUP5 DUP3 DUP6 ADD PUSH2 0x282F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x289C DUP3 PUSH2 0x2871 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x28AC DUP2 PUSH2 0x2891 JUMP JUMPDEST DUP2 EQ PUSH2 0x28B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x28C9 DUP2 PUSH2 0x28A3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x28E5 JUMPI PUSH2 0x28E4 PUSH2 0x2813 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x28F3 DUP5 DUP3 DUP6 ADD PUSH2 0x28BA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2913 JUMPI PUSH2 0x2912 PUSH2 0x2813 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2921 DUP6 DUP3 DUP7 ADD PUSH2 0x282F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2932 DUP6 DUP3 DUP7 ADD PUSH2 0x282F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2945 DUP2 PUSH2 0x2891 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2960 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x293C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x298B PUSH2 0x2986 PUSH2 0x2981 DUP5 PUSH2 0x2871 JUMP JUMPDEST PUSH2 0x2966 JUMP JUMPDEST PUSH2 0x2871 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x299D DUP3 PUSH2 0x2970 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29AF DUP3 PUSH2 0x2992 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x29BF DUP2 PUSH2 0x29A4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x29DA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x29B6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A27 PUSH1 0x20 DUP4 PUSH2 0x29E0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A32 DUP3 PUSH2 0x29F1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2A56 DUP2 PUSH2 0x2A1A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E2774206265207A65726F00000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A93 PUSH1 0xD DUP4 PUSH2 0x29E0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A9E DUP3 PUSH2 0x2A5D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2AC2 DUP2 PUSH2 0x2A86 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416D6F756E742073686F756C642062652067726561746572207468616E203000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AFF PUSH1 0x1F DUP4 PUSH2 0x29E0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B0A DUP3 PUSH2 0x2AC9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2B2E DUP2 PUSH2 0x2AF2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420616D6F756E74000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B6B PUSH1 0xE DUP4 PUSH2 0x29E0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B76 DUP3 PUSH2 0x2B35 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2B9A DUP2 PUSH2 0x2B5E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2BDB DUP3 PUSH2 0x27DF JUMP JUMPDEST SWAP2 POP PUSH2 0x2BE6 DUP4 PUSH2 0x27DF JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2BF6 JUMPI PUSH2 0x2BF5 PUSH2 0x2BA1 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2C16 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x293C JUMP JUMPDEST PUSH2 0x2C23 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x27E9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E6F7468696E6720746F20636C61696D00000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C60 PUSH1 0x10 DUP4 PUSH2 0x29E0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C6B DUP3 PUSH2 0x2C2A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2C8F DUP2 PUSH2 0x2C53 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2CA5 DUP2 PUSH2 0x2818 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2CC1 JUMPI PUSH2 0x2CC0 PUSH2 0x2813 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2CCF DUP5 DUP3 DUP6 ADD PUSH2 0x2C96 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742100000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D0E PUSH1 0xD DUP4 PUSH2 0x29E0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D19 DUP3 PUSH2 0x2CD8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2D3D DUP2 PUSH2 0x2D01 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E2774207374617274000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D7A PUSH1 0xB DUP4 PUSH2 0x29E0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D85 DUP3 PUSH2 0x2D44 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2DA9 DUP2 PUSH2 0x2D6D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E740000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DE6 PUSH1 0xC DUP4 PUSH2 0x29E0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2DF1 DUP3 PUSH2 0x2DB0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2E15 DUP2 PUSH2 0x2DD9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C6964204D6F64650000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E52 PUSH1 0xC DUP4 PUSH2 0x29E0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E5D DUP3 PUSH2 0x2E1C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2E81 DUP2 PUSH2 0x2E45 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C6964204C6F636B7570204475726174696F6E000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2EBE PUSH1 0x17 DUP4 PUSH2 0x29E0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2EC9 DUP3 PUSH2 0x2E88 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2EED DUP2 PUSH2 0x2EB1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2F2E DUP3 PUSH2 0x27DF JUMP JUMPDEST SWAP2 POP PUSH2 0x2F39 DUP4 PUSH2 0x27DF JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x2F6E JUMPI PUSH2 0x2F6D PUSH2 0x2EF4 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420556E7374616B696E67204665652052617465000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2FAF PUSH1 0x1A DUP4 PUSH2 0x29E0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2FBA DUP3 PUSH2 0x2F79 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2FDE DUP2 PUSH2 0x2FA2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C69642076616C756500000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x301B PUSH1 0xD DUP4 PUSH2 0x29E0 JUMP JUMPDEST SWAP2 POP PUSH2 0x3026 DUP3 PUSH2 0x2FE5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x304A DUP2 PUSH2 0x300E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4572726F723A20696E76616C6964207374616B65720000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3087 PUSH1 0x15 DUP4 PUSH2 0x29E0 JUMP JUMPDEST SWAP2 POP PUSH2 0x3092 DUP3 PUSH2 0x3051 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x30B6 DUP2 PUSH2 0x307A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F74207374616B657220796574000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30F3 PUSH1 0xE DUP4 PUSH2 0x29E0 JUMP JUMPDEST SWAP2 POP PUSH2 0x30FE DUP3 PUSH2 0x30BD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3122 DUP2 PUSH2 0x30E6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3185 PUSH1 0x26 DUP4 PUSH2 0x29E0 JUMP JUMPDEST SWAP2 POP PUSH2 0x3190 DUP3 PUSH2 0x3129 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x31B4 DUP2 PUSH2 0x3178 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x31C6 DUP3 PUSH2 0x27DF JUMP JUMPDEST SWAP2 POP PUSH2 0x31D1 DUP4 PUSH2 0x27DF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x31E4 JUMPI PUSH2 0x31E3 PUSH2 0x2EF4 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x31FA DUP3 PUSH2 0x27DF JUMP JUMPDEST SWAP2 POP PUSH2 0x3205 DUP4 PUSH2 0x27DF JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x3215 JUMPI PUSH2 0x3214 PUSH2 0x2BA1 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x322B DUP3 PUSH2 0x27DF JUMP JUMPDEST SWAP2 POP PUSH2 0x3236 DUP4 PUSH2 0x27DF JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x326F JUMPI PUSH2 0x326E PUSH2 0x2EF4 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x328F PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x293C JUMP JUMPDEST PUSH2 0x329C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x293C JUMP JUMPDEST PUSH2 0x32A9 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x27E9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x32C6 DUP2 PUSH2 0x32B1 JUMP JUMPDEST DUP2 EQ PUSH2 0x32D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x32E3 DUP2 PUSH2 0x32BD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x32FF JUMPI PUSH2 0x32FE PUSH2 0x2813 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x330D DUP5 DUP3 DUP6 ADD PUSH2 0x32D4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5361666542455032303A204245503230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3372 PUSH1 0x2A DUP4 PUSH2 0x29E0 JUMP JUMPDEST SWAP2 POP PUSH2 0x337D DUP3 PUSH2 0x3316 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x33A1 DUP2 PUSH2 0x3365 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3404 PUSH1 0x26 DUP4 PUSH2 0x29E0 JUMP JUMPDEST SWAP2 POP PUSH2 0x340F DUP3 PUSH2 0x33A8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3433 DUP2 PUSH2 0x33F7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3470 PUSH1 0x1D DUP4 PUSH2 0x29E0 JUMP JUMPDEST SWAP2 POP PUSH2 0x347B DUP3 PUSH2 0x343A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x349F DUP2 PUSH2 0x3463 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x34DA JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x34BF JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x34E9 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34FA DUP3 PUSH2 0x34A6 JUMP JUMPDEST PUSH2 0x3504 DUP2 DUP6 PUSH2 0x34B1 JUMP JUMPDEST SWAP4 POP PUSH2 0x3514 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x34BC JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x352C DUP3 DUP5 PUSH2 0x34EF JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x355E DUP3 PUSH2 0x3537 JUMP JUMPDEST PUSH2 0x3568 DUP2 DUP6 PUSH2 0x29E0 JUMP JUMPDEST SWAP4 POP PUSH2 0x3578 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x34BC JUMP JUMPDEST PUSH2 0x3581 DUP2 PUSH2 0x3542 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x35A6 DUP2 DUP5 PUSH2 0x3553 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH6 0x973E8B3407E2 0x21 0xC5 GASLIMIT STATICCALL SWAP7 ADDRESS PUSH32 0xD8580B7C9883990A872431B2C0D99B98D6FC64736F6C63430008090033000000 ",
							"sourceMap": "260:9897:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4219:95;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5609:101;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5718:103;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8720:172;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6313:1072;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;9123:595;;;:::i;:::-;;4766:417;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8158:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2666:897;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4322:103;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7632:236;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5880:386;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1668:101:0;;;:::i;:::-;;5339:94:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1206:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1036:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9726:428:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7876:274;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7397:227;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3631:580;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;8900:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4433:189;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8540:172;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;8344:184;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5441:160;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1918:198:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5195:136:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1239:19;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4634:124;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4219:95;4266:7;4295:11;;4288:18;;4219:95;:::o;5609:101::-;5653:7;5690:12;;5683:19;;5609:101;:::o;5718:103::-;5767:7;5796:17;;5789:24;;5718:103;:::o;8720:172::-;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;8822:1:7::1;8809:10;:14;8800:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;8874:10;8854:17;:30;;;;8720:172:::0;:::o;6313:1072::-;6393:1;6384:6;:10;6376:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;6459:7;:19;6467:10;6459:19;;;;;;;;;;;;;;;:32;;;6449:6;:42;;6441:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;6523:14;:12;:14::i;:::-;6548:27;6578:6;6548:36;;6595:14;6612:67;6672:6;6612:55;6632:7;:19;6640:10;6632:19;;;;;;;;;;;;;;;:34;;;6612:15;:19;;:55;;;;:::i;:::-;:59;;:67;;;;:::i;:::-;6595:84;;6690:11;6704:3;6690:17;;6718:21;6770:1;6742:7;:19;6750:10;6742:19;;;;;;;;;;;;;;;:24;;;:29;;:172;;6849:65;6888:25;6906:6;6888:13;;:17;;:25;;;;:::i;:::-;6849:7;:19;6857:10;6849:19;;;;;;;;;;;;;;;:34;;;:38;;:65;;;;:::i;:::-;6830:15;:84;;6742:172;;;6799:1;6783:12;;6774:6;:21;;;;:::i;:::-;:26;:40;;;;;6813:1;6804:6;:10;6774:40;6742:172;6718:196;;6930:16;6925:73;;6969:17;;6963:23;;6925:73;7043:57;7080:19;7043:7;:19;7051:10;7043:19;;;;;;;;;;;;;;;:32;;;:36;;:57;;;;:::i;:::-;7008:7;:19;7016:10;7008:19;;;;;;;;;;;;;;;:32;;:92;;;;7125:36;7141:19;7125:11;;:15;;:36;;;;:::i;:::-;7111:11;:50;;;;7194:62;7218:37;7251:3;7218:28;7242:3;7218:19;:23;;:28;;;;:::i;:::-;:32;;:37;;;;:::i;:::-;7194:19;:23;;:62;;;;:::i;:::-;7172:84;;7267:51;7286:10;7298:19;7267:5;;;;;;;;;;;:18;;;;:51;;;;;:::i;:::-;7336:41;7345:10;7357:19;7336:41;;;;;;;:::i;:::-;;;;;;;;6355:1030;;;;6313:1072;:::o;9123:595::-;9169:14;:12;:14::i;:::-;9204:17;9224:7;:19;9232:10;9224:19;;;;;;;;;;;;;;;:39;;;9204:59;;9274:21;9298:53;9312:38;9346:3;9312:29;9326:14;;9312:9;:13;;:29;;;;:::i;:::-;:33;;:38;;;;:::i;:::-;9298:9;:13;;:53;;;;:::i;:::-;9274:77;;9396:1;9380:13;:17;9372:46;;;;;;;;;;;;:::i;:::-;;;;;;;;;9449:5;;;;;;;;;;;:15;;;9473:4;9449:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9433:13;:46;9429:111;;;9510:5;;;;;;;;;;;:15;;;9534:4;9510:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9494:46;;9429:111;9551:45;9570:10;9582:13;9551:5;;;;;;;;;;;:18;;;;:45;;;;;:::i;:::-;9649:1;9607:7;:19;9615:10;9607:19;;;;;;;;;;;;;;;:39;;:43;;;;9676:34;9684:10;9696:13;9676:34;;;;;;;:::i;:::-;;;;;;;;9148:570;;9123:595::o;4766:417::-;4823:7;4877:2;4849:7;:17;4857:8;4849:17;;;;;;;;;;;;;;;:24;;;:30;4845:57;;4901:1;4894:8;;;;4845:57;4943:1;4917:7;:17;4925:8;4917:17;;;;;;;;;;;;;;;:22;;;:27;4913:262;;5039:1;5034;4966:65;5024:6;4966:53;4986:7;:17;4994:8;4986:17;;;;;;;;;;;;;;;:32;;;4966:15;:19;;:53;;;;:::i;:::-;:57;;:65;;;;:::i;:::-;:69;;;;:::i;:::-;:74;:82;;5047:1;4966:82;;;5043:1;4966:82;4959:89;;;;;;4913:262;5142:25;5160:6;5142:13;;:17;;:25;;;;:::i;:::-;5085:53;5105:7;:17;5113:8;5105:17;;;;;;;;;;;;;;;:32;;;5085:15;:19;;:53;;;;:::i;:::-;:82;;:90;;5174:1;5085:90;;;5170:1;5085:90;5078:97;;;;4766:417;;;;:::o;8158:178::-;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;8262:1:7::1;8249:10;:14;8241:40;;;;;;;;;;;;:::i;:::-;;;;;;;;;8318:10;8302:13;:26;;;;8158:178:::0;:::o;2666:897::-;2768:1;2758:7;:11;2750:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;2854:7;2824:5;;;;;;;;;;;:15;;;2840:10;2824:27;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:37;2816:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;2922:1;2898:20;2907:10;2898:8;:20::i;:::-;:25;2890:49;;;;;;;;;;;;:::i;:::-;;;;;;;;;2973:1;2964:5;:10;2960:376;;;2995:17;;2984:7;:28;;2976:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;2960:376;;;3058:1;3049:5;:10;3045:291;;;3080:17;;3069:7;:28;;3061:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;3045:291;;;3143:1;3134:5;:10;3130:206;;;3165:17;;3154:7;:28;;3146:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;3130:206;;;3228:1;3219:5;:10;3215:121;;;3250:17;;3239:7;:28;;3231:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;3215:121;;;3318:1;3308:7;:11;3300:36;;;;;;;;;;;;:::i;:::-;;;;;;;;;3215:121;3130:206;3045:291;2960:376;3384:5;3357:7;:19;3365:10;3357:19;;;;;;;;;;;;;;;:24;;:32;;;;3437:15;3400:7;:19;3408:10;3400:19;;;;;;;;;;;;;;;:34;;:52;;;;3492:2;3463:7;:19;3471:10;3463:19;;;;;;;;;;;;;;;:26;;:31;;;;3505:8;3519:10;3505:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3541:14;3547:7;3541:5;:14::i;:::-;2666:897;;:::o;4322:103::-;4373:7;4402:8;:15;;;;4395:22;;4322:103;:::o;7632:236::-;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;7743:1:7::1;7727:13;:17;7719:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;7800:13;7785:12;:28;;;;7831:29;7846:13;7831:29;;;;;;:::i;:::-;;;;;;;;7632:236:::0;:::o;5880:386::-;5944:7;5973:26;6002:7;:17;6010:8;6002:17;;;;;;;;;;;;;;;:30;;;5973:59;;6043:17;6063:116;6175:3;6063:107;6163:6;6063:95;6146:11;;6063:78;6086:54;6106:7;:17;6114:8;6106:17;;;;;;;;;;;;;;;:33;;;6086:15;:19;;:54;;;;:::i;:::-;6063:18;:22;;:78;;;;:::i;:::-;:82;;:95;;;;:::i;:::-;:99;;:107;;;;:::i;:::-;:111;;:116;;;;:::i;:::-;6043:136;;6249:9;6207:7;:19;6215:10;6207:19;;;;;;;;;;;;;;;:39;;;:51;;;;:::i;:::-;6200:58;;;;5880:386;;;:::o;1668:101:0:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;5339:94:7:-;5385:7;5414:11;;5407:18;;5339:94;:::o;1206:26::-;;;;:::o;1036:85:0:-;1082:7;1108:6;;;;;;;;;;;1101:13;;1036:85;:::o;9726:428:7:-;9795:7;9825:23;9851:1;9825:27;;9878:1;9869:5;:10;:24;;;;9892:1;9883:5;:10;9869:24;9865:246;;;9913:17;;9895:35;;9865:246;;;9959:1;9950:5;:10;9946:165;;;9980:17;;9962:35;;9946:165;;;10026:1;10017:5;:10;10013:98;;;10047:17;;10029:35;;10013:98;;;10093:1;10089;:5;10080:31;;;;;;;;;;;;:::i;:::-;;;;;;;;;10013:98;9946:165;9865:246;10131:15;10124:22;;;9726:428;;;:::o;7876:274::-;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;8002:1:7::1;7981:18;:22;7973:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;8067:18;8047:17;:38;;;;8103:39;8123:18;8103:39;;;;;;:::i;:::-;;;;;;;;7876:274:::0;:::o;7397:227::-;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;7505:1:7::1;7490:12;:16;7482:42;;;;;;;;;;;;:::i;:::-;;;;;;;;;7559:12;7545:11;:26;;;;7589:27;7603:12;7589:27;;;;;;:::i;:::-;;;;;;;;7397:227:::0;:::o;3631:580::-;3708:1;3698:7;:11;3690:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;3794:7;3764:5;;;;;;;;;;;:15;;;3780:10;3764:27;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:37;3756:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;3868:2;3838:7;:19;3846:10;3838:19;;;;;;;;;;;;;;;:26;;;:32;3830:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;3917:14;:12;:14::i;:::-;3952:58;3975:10;3995:4;4002:7;3952:5;;;;;;;;;;;:22;;;;:58;;;;;;:::i;:::-;4056:45;4093:7;4056;:19;4064:10;4056:19;;;;;;;;;;;;;;;:32;;;:36;;:45;;;;:::i;:::-;4021:7;:19;4029:10;4021:19;;;;;;;;;;;;;;;:32;;:80;;;;4126:24;4142:7;4126:11;;:15;;:24;;;;:::i;:::-;4112:11;:38;;;;4176:27;4183:10;4195:7;4176:27;;;;;;;:::i;:::-;;;;;;;;3631:580;:::o;8900:178::-;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;9000:1:7::1;8987:10;:14;8978:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;9060:10;9040:17;:30;;;;8900:178:::0;:::o;4433:189::-;4495:7;4553:2;4525:24;4540:8;4525:14;:24::i;:::-;:30;4517:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;4592:7;:17;4600:8;4592:17;;;;;;;;;;;;;;;:22;;;4585:29;;4433:189;;;:::o;8540:172::-;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;8642:1:7::1;8629:10;:14;8620:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;8694:10;8674:17;:30;;;;8540:172:::0;:::o;8344:184::-;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;8458:1:7::1;8445:10;:14;8436:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;8510:10;8490:17;:30;;;;8344:184:::0;:::o;5441:160::-;5498:7;5540:1;5532:4;:9;5528:35;;;5550:13;;5543:20;;;;5528:35;5581:12;;5574:19;;5441:160;;;;:::o;1918:198:0:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2026:1:::1;2006:22;;:8;:22;;;;1998:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;5195:136:7:-;5256:7;5293;:17;5301:8;5293:17;;;;;;;;;;;;;;;:30;;;5286:37;;5195:136;;;:::o;1239:19::-;;;;;;;;;;;;;:::o;4634:124::-;4697:7;4726;:17;4734:8;4726:17;;;;;;;;;;;;;;;:24;;;4719:31;;4634:124;;;:::o;640:96:3:-;693:7;719:10;712:17;;640:96;:::o;2200:454:7:-;2252:26;2281:7;:19;2289:10;2281:19;;;;;;;;;;;;;;;:32;;;2252:61;;2334:17;2354:121;2471:3;2354:112;2456:9;2354:97;2439:11;;2354:80;2377:56;2397:7;:19;2405:10;2397:19;;;;;;;;;;;;;;;:35;;;2377:15;:19;;:56;;;;:::i;:::-;2354:18;:22;;:80;;;;:::i;:::-;:84;;:97;;;;:::i;:::-;:101;;:112;;;;:::i;:::-;:116;;:121;;;;:::i;:::-;2334:141;;2528:54;2572:9;2528:7;:19;2536:10;2528:19;;;;;;;;;;;;;;;:39;;;:43;;:54;;;;:::i;:::-;2486:7;:19;2494:10;2486:19;;;;;;;;;;;;;;;:39;;:96;;;;2631:15;2593:7;:19;2601:10;2593:19;;;;;;;;;;;;;;;:35;;:53;;;;2231:423;;2200:454::o;3108:96:4:-;3166:7;3196:1;3192;:5;;;;:::i;:::-;3185:12;;3108:96;;;;:::o;3836:::-;3894:7;3924:1;3920;:5;;;;:::i;:::-;3913:12;;3836:96;;;;:::o;3451:::-;3509:7;3539:1;3535;:5;;;;:::i;:::-;3528:12;;3451:96;;;;:::o;2741:::-;2799:7;2829:1;2825;:5;;;;:::i;:::-;2818:12;;2741:96;;;;:::o;290:177:6:-;373:86;393:5;423:23;;;448:2;452:5;400:58;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;373:19;:86::i;:::-;290:177;;;:::o;2270:187:0:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;475:205:6:-;576:96;596:5;626:27;;;655:4;661:2;665:5;603:68;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;576:19;:96::i;:::-;475:205;;;;:::o;2599:769::-;3031:23;3057:69;3085:4;3057:69;;;;;;;;;;;;;;;;;3065:5;3057:27;;;;:69;;;;;:::i;:::-;3031:95;;3161:1;3141:10;:17;:21;3137:224;;;3283:10;3272:30;;;;;;;;;;;;:::i;:::-;3264:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;3137:224;2669:699;2599:769;;:::o;3861:223:2:-;3994:12;4025:52;4047:6;4055:4;4061:1;4064:12;4025:21;:52::i;:::-;4018:59;;3861:223;;;;;:::o;4948:499::-;5113:12;5170:5;5145:21;:30;;5137:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;5236:18;5247:6;5236:10;:18::i;:::-;5228:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;5300:12;5314:23;5341:6;:11;;5360:5;5367:4;5341:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5299:73;;;;5389:51;5406:7;5415:10;5427:12;5389:16;:51::i;:::-;5382:58;;;;4948:499;;;;;;:::o;1175:320::-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;7561:692::-;7707:12;7735:7;7731:516;;;7765:10;7758:17;;;;7731:516;7896:1;7876:10;:17;:21;7872:365;;;8070:10;8064:17;8130:15;8117:10;8113:2;8109:19;8102:44;7872:365;8209:12;8202:20;;;;;;;;;;;:::i;:::-;;;;;;;;7561:692;;;;;;:::o;7:77:8:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;523:117::-;632:1;629;622:12;769:122;842:24;860:5;842:24;:::i;:::-;835:5;832:35;822:63;;881:1;878;871:12;822:63;769:122;:::o;897:139::-;943:5;981:6;968:20;959:29;;997:33;1024:5;997:33;:::i;:::-;897:139;;;;:::o;1042:329::-;1101:6;1150:2;1138:9;1129:7;1125:23;1121:32;1118:119;;;1156:79;;:::i;:::-;1118:119;1276:1;1301:53;1346:7;1337:6;1326:9;1322:22;1301:53;:::i;:::-;1291:63;;1247:117;1042:329;;;;:::o;1377:126::-;1414:7;1454:42;1447:5;1443:54;1432:65;;1377:126;;;:::o;1509:96::-;1546:7;1575:24;1593:5;1575:24;:::i;:::-;1564:35;;1509:96;;;:::o;1611:122::-;1684:24;1702:5;1684:24;:::i;:::-;1677:5;1674:35;1664:63;;1723:1;1720;1713:12;1664:63;1611:122;:::o;1739:139::-;1785:5;1823:6;1810:20;1801:29;;1839:33;1866:5;1839:33;:::i;:::-;1739:139;;;;:::o;1884:329::-;1943:6;1992:2;1980:9;1971:7;1967:23;1963:32;1960:119;;;1998:79;;:::i;:::-;1960:119;2118:1;2143:53;2188:7;2179:6;2168:9;2164:22;2143:53;:::i;:::-;2133:63;;2089:117;1884:329;;;;:::o;2219:474::-;2287:6;2295;2344:2;2332:9;2323:7;2319:23;2315:32;2312:119;;;2350:79;;:::i;:::-;2312:119;2470:1;2495:53;2540:7;2531:6;2520:9;2516:22;2495:53;:::i;:::-;2485:63;;2441:117;2597:2;2623:53;2668:7;2659:6;2648:9;2644:22;2623:53;:::i;:::-;2613:63;;2568:118;2219:474;;;;;:::o;2699:118::-;2786:24;2804:5;2786:24;:::i;:::-;2781:3;2774:37;2699:118;;:::o;2823:222::-;2916:4;2954:2;2943:9;2939:18;2931:26;;2967:71;3035:1;3024:9;3020:17;3011:6;2967:71;:::i;:::-;2823:222;;;;:::o;3051:60::-;3079:3;3100:5;3093:12;;3051:60;;;:::o;3117:142::-;3167:9;3200:53;3218:34;3227:24;3245:5;3227:24;:::i;:::-;3218:34;:::i;:::-;3200:53;:::i;:::-;3187:66;;3117:142;;;:::o;3265:126::-;3315:9;3348:37;3379:5;3348:37;:::i;:::-;3335:50;;3265:126;;;:::o;3397:140::-;3461:9;3494:37;3525:5;3494:37;:::i;:::-;3481:50;;3397:140;;;:::o;3543:159::-;3644:51;3689:5;3644:51;:::i;:::-;3639:3;3632:64;3543:159;;:::o;3708:250::-;3815:4;3853:2;3842:9;3838:18;3830:26;;3866:85;3948:1;3937:9;3933:17;3924:6;3866:85;:::i;:::-;3708:250;;;;:::o;3964:169::-;4048:11;4082:6;4077:3;4070:19;4122:4;4117:3;4113:14;4098:29;;3964:169;;;;:::o;4139:182::-;4279:34;4275:1;4267:6;4263:14;4256:58;4139:182;:::o;4327:366::-;4469:3;4490:67;4554:2;4549:3;4490:67;:::i;:::-;4483:74;;4566:93;4655:3;4566:93;:::i;:::-;4684:2;4679:3;4675:12;4668:19;;4327:366;;;:::o;4699:419::-;4865:4;4903:2;4892:9;4888:18;4880:26;;4952:9;4946:4;4942:20;4938:1;4927:9;4923:17;4916:47;4980:131;5106:4;4980:131;:::i;:::-;4972:139;;4699:419;;;:::o;5124:163::-;5264:15;5260:1;5252:6;5248:14;5241:39;5124:163;:::o;5293:366::-;5435:3;5456:67;5520:2;5515:3;5456:67;:::i;:::-;5449:74;;5532:93;5621:3;5532:93;:::i;:::-;5650:2;5645:3;5641:12;5634:19;;5293:366;;;:::o;5665:419::-;5831:4;5869:2;5858:9;5854:18;5846:26;;5918:9;5912:4;5908:20;5904:1;5893:9;5889:17;5882:47;5946:131;6072:4;5946:131;:::i;:::-;5938:139;;5665:419;;;:::o;6090:181::-;6230:33;6226:1;6218:6;6214:14;6207:57;6090:181;:::o;6277:366::-;6419:3;6440:67;6504:2;6499:3;6440:67;:::i;:::-;6433:74;;6516:93;6605:3;6516:93;:::i;:::-;6634:2;6629:3;6625:12;6618:19;;6277:366;;;:::o;6649:419::-;6815:4;6853:2;6842:9;6838:18;6830:26;;6902:9;6896:4;6892:20;6888:1;6877:9;6873:17;6866:47;6930:131;7056:4;6930:131;:::i;:::-;6922:139;;6649:419;;;:::o;7074:164::-;7214:16;7210:1;7202:6;7198:14;7191:40;7074:164;:::o;7244:366::-;7386:3;7407:67;7471:2;7466:3;7407:67;:::i;:::-;7400:74;;7483:93;7572:3;7483:93;:::i;:::-;7601:2;7596:3;7592:12;7585:19;;7244:366;;;:::o;7616:419::-;7782:4;7820:2;7809:9;7805:18;7797:26;;7869:9;7863:4;7859:20;7855:1;7844:9;7840:17;7833:47;7897:131;8023:4;7897:131;:::i;:::-;7889:139;;7616:419;;;:::o;8041:180::-;8089:77;8086:1;8079:88;8186:4;8183:1;8176:15;8210:4;8207:1;8200:15;8227:176;8259:1;8276:20;8294:1;8276:20;:::i;:::-;8271:25;;8310:20;8328:1;8310:20;:::i;:::-;8305:25;;8349:1;8339:35;;8354:18;;:::i;:::-;8339:35;8395:1;8392;8388:9;8383:14;;8227:176;;;;:::o;8409:332::-;8530:4;8568:2;8557:9;8553:18;8545:26;;8581:71;8649:1;8638:9;8634:17;8625:6;8581:71;:::i;:::-;8662:72;8730:2;8719:9;8715:18;8706:6;8662:72;:::i;:::-;8409:332;;;;;:::o;8747:166::-;8887:18;8883:1;8875:6;8871:14;8864:42;8747:166;:::o;8919:366::-;9061:3;9082:67;9146:2;9141:3;9082:67;:::i;:::-;9075:74;;9158:93;9247:3;9158:93;:::i;:::-;9276:2;9271:3;9267:12;9260:19;;8919:366;;;:::o;9291:419::-;9457:4;9495:2;9484:9;9480:18;9472:26;;9544:9;9538:4;9534:20;9530:1;9519:9;9515:17;9508:47;9572:131;9698:4;9572:131;:::i;:::-;9564:139;;9291:419;;;:::o;9716:143::-;9773:5;9804:6;9798:13;9789:22;;9820:33;9847:5;9820:33;:::i;:::-;9716:143;;;;:::o;9865:351::-;9935:6;9984:2;9972:9;9963:7;9959:23;9955:32;9952:119;;;9990:79;;:::i;:::-;9952:119;10110:1;10135:64;10191:7;10182:6;10171:9;10167:22;10135:64;:::i;:::-;10125:74;;10081:128;9865:351;;;;:::o;10222:163::-;10362:15;10358:1;10350:6;10346:14;10339:39;10222:163;:::o;10391:366::-;10533:3;10554:67;10618:2;10613:3;10554:67;:::i;:::-;10547:74;;10630:93;10719:3;10630:93;:::i;:::-;10748:2;10743:3;10739:12;10732:19;;10391:366;;;:::o;10763:419::-;10929:4;10967:2;10956:9;10952:18;10944:26;;11016:9;11010:4;11006:20;11002:1;10991:9;10987:17;10980:47;11044:131;11170:4;11044:131;:::i;:::-;11036:139;;10763:419;;;:::o;11188:161::-;11328:13;11324:1;11316:6;11312:14;11305:37;11188:161;:::o;11355:366::-;11497:3;11518:67;11582:2;11577:3;11518:67;:::i;:::-;11511:74;;11594:93;11683:3;11594:93;:::i;:::-;11712:2;11707:3;11703:12;11696:19;;11355:366;;;:::o;11727:419::-;11893:4;11931:2;11920:9;11916:18;11908:26;;11980:9;11974:4;11970:20;11966:1;11955:9;11951:17;11944:47;12008:131;12134:4;12008:131;:::i;:::-;12000:139;;11727:419;;;:::o;12152:162::-;12292:14;12288:1;12280:6;12276:14;12269:38;12152:162;:::o;12320:366::-;12462:3;12483:67;12547:2;12542:3;12483:67;:::i;:::-;12476:74;;12559:93;12648:3;12559:93;:::i;:::-;12677:2;12672:3;12668:12;12661:19;;12320:366;;;:::o;12692:419::-;12858:4;12896:2;12885:9;12881:18;12873:26;;12945:9;12939:4;12935:20;12931:1;12920:9;12916:17;12909:47;12973:131;13099:4;12973:131;:::i;:::-;12965:139;;12692:419;;;:::o;13117:162::-;13257:14;13253:1;13245:6;13241:14;13234:38;13117:162;:::o;13285:366::-;13427:3;13448:67;13512:2;13507:3;13448:67;:::i;:::-;13441:74;;13524:93;13613:3;13524:93;:::i;:::-;13642:2;13637:3;13633:12;13626:19;;13285:366;;;:::o;13657:419::-;13823:4;13861:2;13850:9;13846:18;13838:26;;13910:9;13904:4;13900:20;13896:1;13885:9;13881:17;13874:47;13938:131;14064:4;13938:131;:::i;:::-;13930:139;;13657:419;;;:::o;14082:173::-;14222:25;14218:1;14210:6;14206:14;14199:49;14082:173;:::o;14261:366::-;14403:3;14424:67;14488:2;14483:3;14424:67;:::i;:::-;14417:74;;14500:93;14589:3;14500:93;:::i;:::-;14618:2;14613:3;14609:12;14602:19;;14261:366;;;:::o;14633:419::-;14799:4;14837:2;14826:9;14822:18;14814:26;;14886:9;14880:4;14876:20;14872:1;14861:9;14857:17;14850:47;14914:131;15040:4;14914:131;:::i;:::-;14906:139;;14633:419;;;:::o;15058:180::-;15106:77;15103:1;15096:88;15203:4;15200:1;15193:15;15227:4;15224:1;15217:15;15244:305;15284:3;15303:20;15321:1;15303:20;:::i;:::-;15298:25;;15337:20;15355:1;15337:20;:::i;:::-;15332:25;;15491:1;15423:66;15419:74;15416:1;15413:81;15410:107;;;15497:18;;:::i;:::-;15410:107;15541:1;15538;15534:9;15527:16;;15244:305;;;;:::o;15555:176::-;15695:28;15691:1;15683:6;15679:14;15672:52;15555:176;:::o;15737:366::-;15879:3;15900:67;15964:2;15959:3;15900:67;:::i;:::-;15893:74;;15976:93;16065:3;15976:93;:::i;:::-;16094:2;16089:3;16085:12;16078:19;;15737:366;;;:::o;16109:419::-;16275:4;16313:2;16302:9;16298:18;16290:26;;16362:9;16356:4;16352:20;16348:1;16337:9;16333:17;16326:47;16390:131;16516:4;16390:131;:::i;:::-;16382:139;;16109:419;;;:::o;16534:163::-;16674:15;16670:1;16662:6;16658:14;16651:39;16534:163;:::o;16703:366::-;16845:3;16866:67;16930:2;16925:3;16866:67;:::i;:::-;16859:74;;16942:93;17031:3;16942:93;:::i;:::-;17060:2;17055:3;17051:12;17044:19;;16703:366;;;:::o;17075:419::-;17241:4;17279:2;17268:9;17264:18;17256:26;;17328:9;17322:4;17318:20;17314:1;17303:9;17299:17;17292:47;17356:131;17482:4;17356:131;:::i;:::-;17348:139;;17075:419;;;:::o;17500:171::-;17640:23;17636:1;17628:6;17624:14;17617:47;17500:171;:::o;17677:366::-;17819:3;17840:67;17904:2;17899:3;17840:67;:::i;:::-;17833:74;;17916:93;18005:3;17916:93;:::i;:::-;18034:2;18029:3;18025:12;18018:19;;17677:366;;;:::o;18049:419::-;18215:4;18253:2;18242:9;18238:18;18230:26;;18302:9;18296:4;18292:20;18288:1;18277:9;18273:17;18266:47;18330:131;18456:4;18330:131;:::i;:::-;18322:139;;18049:419;;;:::o;18474:164::-;18614:16;18610:1;18602:6;18598:14;18591:40;18474:164;:::o;18644:366::-;18786:3;18807:67;18871:2;18866:3;18807:67;:::i;:::-;18800:74;;18883:93;18972:3;18883:93;:::i;:::-;19001:2;18996:3;18992:12;18985:19;;18644:366;;;:::o;19016:419::-;19182:4;19220:2;19209:9;19205:18;19197:26;;19269:9;19263:4;19259:20;19255:1;19244:9;19240:17;19233:47;19297:131;19423:4;19297:131;:::i;:::-;19289:139;;19016:419;;;:::o;19441:225::-;19581:34;19577:1;19569:6;19565:14;19558:58;19650:8;19645:2;19637:6;19633:15;19626:33;19441:225;:::o;19672:366::-;19814:3;19835:67;19899:2;19894:3;19835:67;:::i;:::-;19828:74;;19911:93;20000:3;19911:93;:::i;:::-;20029:2;20024:3;20020:12;20013:19;;19672:366;;;:::o;20044:419::-;20210:4;20248:2;20237:9;20233:18;20225:26;;20297:9;20291:4;20287:20;20283:1;20272:9;20268:17;20261:47;20325:131;20451:4;20325:131;:::i;:::-;20317:139;;20044:419;;;:::o;20469:191::-;20509:4;20529:20;20547:1;20529:20;:::i;:::-;20524:25;;20563:20;20581:1;20563:20;:::i;:::-;20558:25;;20602:1;20599;20596:8;20593:34;;;20607:18;;:::i;:::-;20593:34;20652:1;20649;20645:9;20637:17;;20469:191;;;;:::o;20666:185::-;20706:1;20723:20;20741:1;20723:20;:::i;:::-;20718:25;;20757:20;20775:1;20757:20;:::i;:::-;20752:25;;20796:1;20786:35;;20801:18;;:::i;:::-;20786:35;20843:1;20840;20836:9;20831:14;;20666:185;;;;:::o;20857:348::-;20897:7;20920:20;20938:1;20920:20;:::i;:::-;20915:25;;20954:20;20972:1;20954:20;:::i;:::-;20949:25;;21142:1;21074:66;21070:74;21067:1;21064:81;21059:1;21052:9;21045:17;21041:105;21038:131;;;21149:18;;:::i;:::-;21038:131;21197:1;21194;21190:9;21179:20;;20857:348;;;;:::o;21211:442::-;21360:4;21398:2;21387:9;21383:18;21375:26;;21411:71;21479:1;21468:9;21464:17;21455:6;21411:71;:::i;:::-;21492:72;21560:2;21549:9;21545:18;21536:6;21492:72;:::i;:::-;21574;21642:2;21631:9;21627:18;21618:6;21574:72;:::i;:::-;21211:442;;;;;;:::o;21659:90::-;21693:7;21736:5;21729:13;21722:21;21711:32;;21659:90;;;:::o;21755:116::-;21825:21;21840:5;21825:21;:::i;:::-;21818:5;21815:32;21805:60;;21861:1;21858;21851:12;21805:60;21755:116;:::o;21877:137::-;21931:5;21962:6;21956:13;21947:22;;21978:30;22002:5;21978:30;:::i;:::-;21877:137;;;;:::o;22020:345::-;22087:6;22136:2;22124:9;22115:7;22111:23;22107:32;22104:119;;;22142:79;;:::i;:::-;22104:119;22262:1;22287:61;22340:7;22331:6;22320:9;22316:22;22287:61;:::i;:::-;22277:71;;22233:125;22020:345;;;;:::o;22371:229::-;22511:34;22507:1;22499:6;22495:14;22488:58;22580:12;22575:2;22567:6;22563:15;22556:37;22371:229;:::o;22606:366::-;22748:3;22769:67;22833:2;22828:3;22769:67;:::i;:::-;22762:74;;22845:93;22934:3;22845:93;:::i;:::-;22963:2;22958:3;22954:12;22947:19;;22606:366;;;:::o;22978:419::-;23144:4;23182:2;23171:9;23167:18;23159:26;;23231:9;23225:4;23221:20;23217:1;23206:9;23202:17;23195:47;23259:131;23385:4;23259:131;:::i;:::-;23251:139;;22978:419;;;:::o;23403:225::-;23543:34;23539:1;23531:6;23527:14;23520:58;23612:8;23607:2;23599:6;23595:15;23588:33;23403:225;:::o;23634:366::-;23776:3;23797:67;23861:2;23856:3;23797:67;:::i;:::-;23790:74;;23873:93;23962:3;23873:93;:::i;:::-;23991:2;23986:3;23982:12;23975:19;;23634:366;;;:::o;24006:419::-;24172:4;24210:2;24199:9;24195:18;24187:26;;24259:9;24253:4;24249:20;24245:1;24234:9;24230:17;24223:47;24287:131;24413:4;24287:131;:::i;:::-;24279:139;;24006:419;;;:::o;24431:179::-;24571:31;24567:1;24559:6;24555:14;24548:55;24431:179;:::o;24616:366::-;24758:3;24779:67;24843:2;24838:3;24779:67;:::i;:::-;24772:74;;24855:93;24944:3;24855:93;:::i;:::-;24973:2;24968:3;24964:12;24957:19;;24616:366;;;:::o;24988:419::-;25154:4;25192:2;25181:9;25177:18;25169:26;;25241:9;25235:4;25231:20;25227:1;25216:9;25212:17;25205:47;25269:131;25395:4;25269:131;:::i;:::-;25261:139;;24988:419;;;:::o;25413:98::-;25464:6;25498:5;25492:12;25482:22;;25413:98;;;:::o;25517:147::-;25618:11;25655:3;25640:18;;25517:147;;;;:::o;25670:307::-;25738:1;25748:113;25762:6;25759:1;25756:13;25748:113;;;25847:1;25842:3;25838:11;25832:18;25828:1;25823:3;25819:11;25812:39;25784:2;25781:1;25777:10;25772:15;;25748:113;;;25879:6;25876:1;25873:13;25870:101;;;25959:1;25950:6;25945:3;25941:16;25934:27;25870:101;25719:258;25670:307;;;:::o;25983:373::-;26087:3;26115:38;26147:5;26115:38;:::i;:::-;26169:88;26250:6;26245:3;26169:88;:::i;:::-;26162:95;;26266:52;26311:6;26306:3;26299:4;26292:5;26288:16;26266:52;:::i;:::-;26343:6;26338:3;26334:16;26327:23;;26091:265;25983:373;;;;:::o;26362:271::-;26492:3;26514:93;26603:3;26594:6;26514:93;:::i;:::-;26507:100;;26624:3;26617:10;;26362:271;;;;:::o;26639:99::-;26691:6;26725:5;26719:12;26709:22;;26639:99;;;:::o;26744:102::-;26785:6;26836:2;26832:7;26827:2;26820:5;26816:14;26812:28;26802:38;;26744:102;;;:::o;26852:364::-;26940:3;26968:39;27001:5;26968:39;:::i;:::-;27023:71;27087:6;27082:3;27023:71;:::i;:::-;27016:78;;27103:52;27148:6;27143:3;27136:4;27129:5;27125:16;27103:52;:::i;:::-;27180:29;27202:6;27180:29;:::i;:::-;27175:3;27171:39;27164:46;;26944:272;26852:364;;;;:::o;27222:313::-;27335:4;27373:2;27362:9;27358:18;27350:26;;27422:9;27416:4;27412:20;27408:1;27397:9;27393:17;27386:47;27450:78;27523:4;27514:6;27450:78;:::i;:::-;27442:86;;27222:313;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2759200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"eventPeriod()": "2506",
								"getMinimumStakingAmount(uint256)": "infinite",
								"getNumberofStakers()": "2535",
								"getRewardRate()": "2548",
								"getStakerMode(address)": "5154",
								"getTotalStaked()": "2484",
								"harvest()": "infinite",
								"isLocked(address)": "infinite",
								"isStartStaking(address)": "2957",
								"lockupPeriod(uint256)": "infinite",
								"owner()": "2590",
								"renounceOwnership()": "30463",
								"rewardToHarvest(address)": "infinite",
								"setCopperMinAmount(uint256)": "24850",
								"setEventPeriod(uint256)": "infinite",
								"setGoldMinAmount(uint256)": "24894",
								"setLockupTime(uint256)": "24829",
								"setRewardRate(uint256)": "infinite",
								"setSilverMinAmount(uint256)": "24829",
								"setThreeMonthMinAmount(uint256)": "24872",
								"setUnstakingFeeRate(uint256)": "infinite",
								"stake(uint256)": "infinite",
								"stakedAmount(address)": "2913",
								"startStaking(uint256,uint256)": "infinite",
								"token()": "infinite",
								"totalStaked()": "2475",
								"transferOwnership(address)": "30767",
								"unstakingFeeLate()": "2528",
								"withdraw(uint256)": "infinite"
							},
							"internal": {
								"Init()": "infinite",
								"updateReward()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 260,
									"end": 10157,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 260,
									"end": 10157,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 260,
									"end": 10157,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1666,
									"end": 1762,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 1666,
									"end": 1762,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1666,
									"end": 1762,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1666,
									"end": 1762,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1666,
									"end": 1762,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1666,
									"end": 1762,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1666,
									"end": 1762,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1666,
									"end": 1762,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1666,
									"end": 1762,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1666,
									"end": 1762,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1666,
									"end": 1762,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1666,
									"end": 1762,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1666,
									"end": 1762,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1666,
									"end": 1762,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 1666,
									"end": 1762,
									"name": "CODESIZE",
									"source": 7
								},
								{
									"begin": 1666,
									"end": 1762,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 1666,
									"end": 1762,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1666,
									"end": 1762,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 1666,
									"end": 1762,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1666,
									"end": 1762,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 1666,
									"end": 1762,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1666,
									"end": 1762,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1666,
									"end": 1762,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1666,
									"end": 1762,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1666,
									"end": 1762,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1666,
									"end": 1762,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1666,
									"end": 1762,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1666,
									"end": 1762,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1666,
									"end": 1762,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 1666,
									"end": 1762,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1666,
									"end": 1762,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1666,
									"end": 1762,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 1666,
									"end": 1762,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 1666,
									"end": 1762,
									"name": "tag",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 1666,
									"end": 1762,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 921,
									"end": 953,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 940,
									"end": 952,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 940,
									"end": 952,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 921,
									"end": 939,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 921,
									"end": 953,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1715,
									"end": 1721,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 1715,
									"end": 1719,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 1715,
									"end": 1719,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1715,
									"end": 1719,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 1715,
									"end": 1721,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1715,
									"end": 1721,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 1715,
									"end": 1721,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 1715,
									"end": 1721,
									"name": "tag",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 1715,
									"end": 1721,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1747,
									"end": 1753,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1732,
									"end": 1737,
									"name": "PUSH",
									"source": 7,
									"value": "D"
								},
								{
									"begin": 1732,
									"end": 1737,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1732,
									"end": 1754,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 1732,
									"end": 1754,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 1732,
									"end": 1754,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1732,
									"end": 1754,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 1732,
									"end": 1754,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1732,
									"end": 1754,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1732,
									"end": 1754,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1732,
									"end": 1754,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 1732,
									"end": 1754,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1732,
									"end": 1754,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1732,
									"end": 1754,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1732,
									"end": 1754,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1732,
									"end": 1754,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1732,
									"end": 1754,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1732,
									"end": 1754,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1732,
									"end": 1754,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1732,
									"end": 1754,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1732,
									"end": 1754,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1666,
									"end": 1762,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 260,
									"end": 10157,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 260,
									"end": 10157,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2368,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2387,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2384,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2378,
									"end": 2384,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2441,
									"end": 2449,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2431,
									"end": 2439,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2333,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 1770,
									"end": 2125,
									"name": "tag",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 1770,
									"end": 2125,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1830,
									"end": 1833,
									"name": "PUSH",
									"source": 7,
									"value": "C8"
								},
								{
									"begin": 1816,
									"end": 1827,
									"name": "PUSH",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 1816,
									"end": 1833,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1816,
									"end": 1833,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1816,
									"end": 1833,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1816,
									"end": 1833,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1875,
									"end": 1879,
									"name": "PUSH",
									"source": 7,
									"value": "5DC"
								},
								{
									"begin": 1855,
									"end": 1872,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1855,
									"end": 1879,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1855,
									"end": 1879,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1855,
									"end": 1879,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1855,
									"end": 1879,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1907,
									"end": 1910,
									"name": "PUSH",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 1890,
									"end": 1904,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1890,
									"end": 1910,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1890,
									"end": 1910,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1890,
									"end": 1910,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1890,
									"end": 1910,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1936,
									"end": 1937,
									"name": "PUSH",
									"source": 7,
									"value": "7"
								},
								{
									"begin": 1921,
									"end": 1933,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 1921,
									"end": 1937,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1921,
									"end": 1937,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1921,
									"end": 1937,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1921,
									"end": 1937,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1964,
									"end": 1966,
									"name": "PUSH",
									"source": 7,
									"value": "5A"
								},
								{
									"begin": 1948,
									"end": 1961,
									"name": "PUSH",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 1948,
									"end": 1966,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1948,
									"end": 1966,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1948,
									"end": 1966,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1948,
									"end": 1966,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1997,
									"end": 2004,
									"name": "PUSH",
									"source": 7,
									"value": "27B46536C66C8E3000000"
								},
								{
									"begin": 1977,
									"end": 1994,
									"name": "PUSH",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 1977,
									"end": 2004,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1977,
									"end": 2004,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1977,
									"end": 2004,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1977,
									"end": 2004,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2035,
									"end": 2039,
									"name": "PUSH",
									"source": 7,
									"value": "D3C21BCECCEDA1000000"
								},
								{
									"begin": 2015,
									"end": 2032,
									"name": "PUSH",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 2015,
									"end": 2039,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2015,
									"end": 2039,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2015,
									"end": 2039,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2015,
									"end": 2039,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2070,
									"end": 2078,
									"name": "PUSH",
									"source": 7,
									"value": "27B46536C66C8E3000000"
								},
								{
									"begin": 2050,
									"end": 2067,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 2050,
									"end": 2078,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2050,
									"end": 2078,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2050,
									"end": 2078,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2050,
									"end": 2078,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2109,
									"end": 2117,
									"name": "PUSH",
									"source": 7,
									"value": "5CA4EC2A79A7F67000000"
								},
								{
									"begin": 2089,
									"end": 2106,
									"name": "PUSH",
									"source": 7,
									"value": "7"
								},
								{
									"begin": 2089,
									"end": 2117,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2089,
									"end": 2117,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2089,
									"end": 2117,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2089,
									"end": 2117,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1770,
									"end": 2125,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 8,
									"value": "19"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "31"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 8,
									"value": "31"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 8,
									"value": "23"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "33"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 8,
									"value": "33"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "34"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 8,
									"value": "34"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "36"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "23"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 8,
									"value": "36"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "19"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 260,
									"end": 10157,
									"name": "tag",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 260,
									"end": 10157,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 260,
									"end": 10157,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 260,
									"end": 10157,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 260,
									"end": 10157,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 260,
									"end": 10157,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 260,
									"end": 10157,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 260,
									"end": 10157,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 260,
									"end": 10157,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122065973e8b3407e221c545fa96307fd8580b7c9883990a872431b2c0d99b98d6fc64736f6c63430008090033",
									".code": [
										{
											"begin": 260,
											"end": 10157,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "PUSH",
											"source": 7,
											"value": "817B1CD2"
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "PUSH",
											"source": 7,
											"value": "AEDF562B"
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "PUSH",
											"source": 7,
											"value": "F2FDE38B"
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "PUSH",
											"source": 7,
											"value": "F2FDE38B"
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "PUSH",
											"source": 7,
											"value": "F9931855"
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "PUSH",
											"source": 7,
											"value": "FC0C546A"
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "PUSH",
											"source": 7,
											"value": "FE600F84"
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "tag",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "PUSH",
											"source": 7,
											"value": "AEDF562B"
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "PUSH",
											"source": 7,
											"value": "C1704A14"
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "PUSH",
											"source": 7,
											"value": "C665D80E"
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "PUSH",
											"source": 7,
											"value": "CE34751F"
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "tag",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "PUSH",
											"source": 7,
											"value": "91E07E7A"
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "PUSH",
											"source": 7,
											"value": "91E07E7A"
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "PUSH",
											"source": 7,
											"value": "9E447FC6"
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "PUSH",
											"source": 7,
											"value": "A694FC3A"
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "PUSH",
											"source": 7,
											"value": "AE544943"
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "tag",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "PUSH",
											"source": 7,
											"value": "817B1CD2"
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "PUSH",
											"source": 7,
											"value": "8DA5CB5B"
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "PUSH",
											"source": 7,
											"value": "909F093E"
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "tag",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "PUSH",
											"source": 7,
											"value": "4B62B70B"
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "PUSH",
											"source": 7,
											"value": "692642E7"
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "PUSH",
											"source": 7,
											"value": "692642E7"
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "PUSH",
											"source": 7,
											"value": "6EF32435"
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "PUSH",
											"source": 7,
											"value": "715018A6"
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "PUSH",
											"source": 7,
											"value": "7E1A3786"
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "tag",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "PUSH",
											"source": 7,
											"value": "4B62B70B"
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "PUSH",
											"source": 7,
											"value": "4B77DD9E"
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "PUSH",
											"source": 7,
											"value": "5715EC11"
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "tag",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "PUSH",
											"source": 7,
											"value": "23B61117"
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "PUSH",
											"source": 7,
											"value": "23B61117"
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "PUSH",
											"source": 7,
											"value": "2E1A7D4D"
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "PUSH",
											"source": 7,
											"value": "4641257D"
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "PUSH",
											"source": 7,
											"value": "4A4FBEEC"
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "tag",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "PUSH",
											"source": 7,
											"value": "917E776"
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "PUSH",
											"source": 7,
											"value": "18B2367E"
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "PUSH",
											"source": 7,
											"value": "221DFE03"
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "tag",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 10157,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4219,
											"end": 4314,
											"name": "tag",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 4219,
											"end": 4314,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4219,
											"end": 4314,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 4219,
											"end": 4314,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4219,
											"end": 4314,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4219,
											"end": 4314,
											"name": "tag",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 4219,
											"end": 4314,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4219,
											"end": 4314,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4219,
											"end": 4314,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4219,
											"end": 4314,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 4219,
											"end": 4314,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4219,
											"end": 4314,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4219,
											"end": 4314,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 4219,
											"end": 4314,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4219,
											"end": 4314,
											"name": "tag",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 4219,
											"end": 4314,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4219,
											"end": 4314,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4219,
											"end": 4314,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4219,
											"end": 4314,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4219,
											"end": 4314,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4219,
											"end": 4314,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4219,
											"end": 4314,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4219,
											"end": 4314,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 5609,
											"end": 5710,
											"name": "tag",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5609,
											"end": 5710,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5609,
											"end": 5710,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 5609,
											"end": 5710,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 5609,
											"end": 5710,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5609,
											"end": 5710,
											"name": "tag",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 5609,
											"end": 5710,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5609,
											"end": 5710,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5609,
											"end": 5710,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5609,
											"end": 5710,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 5609,
											"end": 5710,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5609,
											"end": 5710,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5609,
											"end": 5710,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 5609,
											"end": 5710,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5609,
											"end": 5710,
											"name": "tag",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 5609,
											"end": 5710,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5609,
											"end": 5710,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5609,
											"end": 5710,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5609,
											"end": 5710,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5609,
											"end": 5710,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5609,
											"end": 5710,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5609,
											"end": 5710,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5609,
											"end": 5710,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 5718,
											"end": 5821,
											"name": "tag",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 5718,
											"end": 5821,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5718,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 5718,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 5718,
											"end": 5821,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5718,
											"end": 5821,
											"name": "tag",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 5718,
											"end": 5821,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5718,
											"end": 5821,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5718,
											"end": 5821,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5718,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 5718,
											"end": 5821,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5718,
											"end": 5821,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5718,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 5718,
											"end": 5821,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5718,
											"end": 5821,
											"name": "tag",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 5718,
											"end": 5821,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5718,
											"end": 5821,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5718,
											"end": 5821,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5718,
											"end": 5821,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5718,
											"end": 5821,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5718,
											"end": 5821,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5718,
											"end": 5821,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5718,
											"end": 5821,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 8720,
											"end": 8892,
											"name": "tag",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 8720,
											"end": 8892,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8720,
											"end": 8892,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 8720,
											"end": 8892,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8720,
											"end": 8892,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8720,
											"end": 8892,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 8720,
											"end": 8892,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8720,
											"end": 8892,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8720,
											"end": 8892,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8720,
											"end": 8892,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8720,
											"end": 8892,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 8720,
											"end": 8892,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8720,
											"end": 8892,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8720,
											"end": 8892,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 8720,
											"end": 8892,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8720,
											"end": 8892,
											"name": "tag",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 8720,
											"end": 8892,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8720,
											"end": 8892,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 8720,
											"end": 8892,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8720,
											"end": 8892,
											"name": "tag",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 8720,
											"end": 8892,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8720,
											"end": 8892,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 6313,
											"end": 7385,
											"name": "tag",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 6313,
											"end": 7385,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6313,
											"end": 7385,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 6313,
											"end": 7385,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6313,
											"end": 7385,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6313,
											"end": 7385,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 6313,
											"end": 7385,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6313,
											"end": 7385,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6313,
											"end": 7385,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6313,
											"end": 7385,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6313,
											"end": 7385,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 6313,
											"end": 7385,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6313,
											"end": 7385,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6313,
											"end": 7385,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 6313,
											"end": 7385,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6313,
											"end": 7385,
											"name": "tag",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 6313,
											"end": 7385,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6313,
											"end": 7385,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 6313,
											"end": 7385,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6313,
											"end": 7385,
											"name": "tag",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 6313,
											"end": 7385,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6313,
											"end": 7385,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 9123,
											"end": 9718,
											"name": "tag",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 9123,
											"end": 9718,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9123,
											"end": 9718,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 9123,
											"end": 9718,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 9123,
											"end": 9718,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9123,
											"end": 9718,
											"name": "tag",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 9123,
											"end": 9718,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9123,
											"end": 9718,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 4766,
											"end": 5183,
											"name": "tag",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 4766,
											"end": 5183,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4766,
											"end": 5183,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 4766,
											"end": 5183,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4766,
											"end": 5183,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4766,
											"end": 5183,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 4766,
											"end": 5183,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4766,
											"end": 5183,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4766,
											"end": 5183,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4766,
											"end": 5183,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4766,
											"end": 5183,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 4766,
											"end": 5183,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4766,
											"end": 5183,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4766,
											"end": 5183,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 4766,
											"end": 5183,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4766,
											"end": 5183,
											"name": "tag",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 4766,
											"end": 5183,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4766,
											"end": 5183,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 4766,
											"end": 5183,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4766,
											"end": 5183,
											"name": "tag",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 4766,
											"end": 5183,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4766,
											"end": 5183,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4766,
											"end": 5183,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4766,
											"end": 5183,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 4766,
											"end": 5183,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4766,
											"end": 5183,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4766,
											"end": 5183,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 4766,
											"end": 5183,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4766,
											"end": 5183,
											"name": "tag",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 4766,
											"end": 5183,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4766,
											"end": 5183,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4766,
											"end": 5183,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4766,
											"end": 5183,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4766,
											"end": 5183,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4766,
											"end": 5183,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4766,
											"end": 5183,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4766,
											"end": 5183,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 8158,
											"end": 8336,
											"name": "tag",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 8158,
											"end": 8336,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8158,
											"end": 8336,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 8158,
											"end": 8336,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8158,
											"end": 8336,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8158,
											"end": 8336,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 8158,
											"end": 8336,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8158,
											"end": 8336,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8158,
											"end": 8336,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8158,
											"end": 8336,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8158,
											"end": 8336,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 8158,
											"end": 8336,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8158,
											"end": 8336,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8158,
											"end": 8336,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 8158,
											"end": 8336,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8158,
											"end": 8336,
											"name": "tag",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 8158,
											"end": 8336,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8158,
											"end": 8336,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 8158,
											"end": 8336,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8158,
											"end": 8336,
											"name": "tag",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 8158,
											"end": 8336,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8158,
											"end": 8336,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 2666,
											"end": 3563,
											"name": "tag",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 2666,
											"end": 3563,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2666,
											"end": 3563,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 2666,
											"end": 3563,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2666,
											"end": 3563,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2666,
											"end": 3563,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2666,
											"end": 3563,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2666,
											"end": 3563,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2666,
											"end": 3563,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2666,
											"end": 3563,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2666,
											"end": 3563,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 2666,
											"end": 3563,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2666,
											"end": 3563,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2666,
											"end": 3563,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 2666,
											"end": 3563,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2666,
											"end": 3563,
											"name": "tag",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 2666,
											"end": 3563,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2666,
											"end": 3563,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 2666,
											"end": 3563,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2666,
											"end": 3563,
											"name": "tag",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 2666,
											"end": 3563,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2666,
											"end": 3563,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 4322,
											"end": 4425,
											"name": "tag",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 4322,
											"end": 4425,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4322,
											"end": 4425,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 4322,
											"end": 4425,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 4322,
											"end": 4425,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4322,
											"end": 4425,
											"name": "tag",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 4322,
											"end": 4425,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4322,
											"end": 4425,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4322,
											"end": 4425,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4322,
											"end": 4425,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 4322,
											"end": 4425,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4322,
											"end": 4425,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4322,
											"end": 4425,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 4322,
											"end": 4425,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4322,
											"end": 4425,
											"name": "tag",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 4322,
											"end": 4425,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4322,
											"end": 4425,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4322,
											"end": 4425,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4322,
											"end": 4425,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4322,
											"end": 4425,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4322,
											"end": 4425,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4322,
											"end": 4425,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4322,
											"end": 4425,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 7632,
											"end": 7868,
											"name": "tag",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 7632,
											"end": 7868,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7632,
											"end": 7868,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 7632,
											"end": 7868,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7632,
											"end": 7868,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7632,
											"end": 7868,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 7632,
											"end": 7868,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7632,
											"end": 7868,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7632,
											"end": 7868,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7632,
											"end": 7868,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7632,
											"end": 7868,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 7632,
											"end": 7868,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7632,
											"end": 7868,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7632,
											"end": 7868,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 7632,
											"end": 7868,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7632,
											"end": 7868,
											"name": "tag",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 7632,
											"end": 7868,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7632,
											"end": 7868,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 7632,
											"end": 7868,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7632,
											"end": 7868,
											"name": "tag",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 7632,
											"end": 7868,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7632,
											"end": 7868,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 5880,
											"end": 6266,
											"name": "tag",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 5880,
											"end": 6266,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5880,
											"end": 6266,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 5880,
											"end": 6266,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5880,
											"end": 6266,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5880,
											"end": 6266,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 5880,
											"end": 6266,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5880,
											"end": 6266,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5880,
											"end": 6266,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5880,
											"end": 6266,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5880,
											"end": 6266,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 5880,
											"end": 6266,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5880,
											"end": 6266,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5880,
											"end": 6266,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 5880,
											"end": 6266,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5880,
											"end": 6266,
											"name": "tag",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 5880,
											"end": 6266,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5880,
											"end": 6266,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 5880,
											"end": 6266,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5880,
											"end": 6266,
											"name": "tag",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 5880,
											"end": 6266,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5880,
											"end": 6266,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5880,
											"end": 6266,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5880,
											"end": 6266,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 5880,
											"end": 6266,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5880,
											"end": 6266,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5880,
											"end": 6266,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 5880,
											"end": 6266,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5880,
											"end": 6266,
											"name": "tag",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 5880,
											"end": 6266,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5880,
											"end": 6266,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5880,
											"end": 6266,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5880,
											"end": 6266,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5880,
											"end": 6266,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5880,
											"end": 6266,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5880,
											"end": 6266,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5880,
											"end": 6266,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 5339,
											"end": 5433,
											"name": "tag",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 5339,
											"end": 5433,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5339,
											"end": 5433,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 5339,
											"end": 5433,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 5339,
											"end": 5433,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5339,
											"end": 5433,
											"name": "tag",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 5339,
											"end": 5433,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5339,
											"end": 5433,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5339,
											"end": 5433,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5339,
											"end": 5433,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 5339,
											"end": 5433,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5339,
											"end": 5433,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5339,
											"end": 5433,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 5339,
											"end": 5433,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5339,
											"end": 5433,
											"name": "tag",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 5339,
											"end": 5433,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5339,
											"end": 5433,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5339,
											"end": 5433,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5339,
											"end": 5433,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5339,
											"end": 5433,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5339,
											"end": 5433,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5339,
											"end": 5433,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5339,
											"end": 5433,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1206,
											"end": 1232,
											"name": "tag",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 1206,
											"end": 1232,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1206,
											"end": 1232,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 1206,
											"end": 1232,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 1206,
											"end": 1232,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1206,
											"end": 1232,
											"name": "tag",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 1206,
											"end": 1232,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1206,
											"end": 1232,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1206,
											"end": 1232,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1206,
											"end": 1232,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 1206,
											"end": 1232,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1206,
											"end": 1232,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1206,
											"end": 1232,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 1206,
											"end": 1232,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1206,
											"end": 1232,
											"name": "tag",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 1206,
											"end": 1232,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1206,
											"end": 1232,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1206,
											"end": 1232,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1206,
											"end": 1232,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1206,
											"end": 1232,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1206,
											"end": 1232,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1206,
											"end": 1232,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1206,
											"end": 1232,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 9726,
											"end": 10154,
											"name": "tag",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 9726,
											"end": 10154,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9726,
											"end": 10154,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 9726,
											"end": 10154,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9726,
											"end": 10154,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9726,
											"end": 10154,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 9726,
											"end": 10154,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9726,
											"end": 10154,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9726,
											"end": 10154,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9726,
											"end": 10154,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9726,
											"end": 10154,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 9726,
											"end": 10154,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9726,
											"end": 10154,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9726,
											"end": 10154,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 9726,
											"end": 10154,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9726,
											"end": 10154,
											"name": "tag",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 9726,
											"end": 10154,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9726,
											"end": 10154,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 9726,
											"end": 10154,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9726,
											"end": 10154,
											"name": "tag",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 9726,
											"end": 10154,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9726,
											"end": 10154,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9726,
											"end": 10154,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9726,
											"end": 10154,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 9726,
											"end": 10154,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9726,
											"end": 10154,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9726,
											"end": 10154,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 9726,
											"end": 10154,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9726,
											"end": 10154,
											"name": "tag",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 9726,
											"end": 10154,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9726,
											"end": 10154,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9726,
											"end": 10154,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9726,
											"end": 10154,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9726,
											"end": 10154,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9726,
											"end": 10154,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9726,
											"end": 10154,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9726,
											"end": 10154,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 7876,
											"end": 8150,
											"name": "tag",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7876,
											"end": 8150,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7876,
											"end": 8150,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 7876,
											"end": 8150,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7876,
											"end": 8150,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7876,
											"end": 8150,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 7876,
											"end": 8150,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7876,
											"end": 8150,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7876,
											"end": 8150,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7876,
											"end": 8150,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7876,
											"end": 8150,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 7876,
											"end": 8150,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7876,
											"end": 8150,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7876,
											"end": 8150,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 7876,
											"end": 8150,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7876,
											"end": 8150,
											"name": "tag",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 7876,
											"end": 8150,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7876,
											"end": 8150,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 7876,
											"end": 8150,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7876,
											"end": 8150,
											"name": "tag",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 7876,
											"end": 8150,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7876,
											"end": 8150,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 7397,
											"end": 7624,
											"name": "tag",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 7397,
											"end": 7624,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7397,
											"end": 7624,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 7397,
											"end": 7624,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7397,
											"end": 7624,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7397,
											"end": 7624,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 7397,
											"end": 7624,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7397,
											"end": 7624,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7397,
											"end": 7624,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7397,
											"end": 7624,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7397,
											"end": 7624,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 7397,
											"end": 7624,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7397,
											"end": 7624,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7397,
											"end": 7624,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 7397,
											"end": 7624,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7397,
											"end": 7624,
											"name": "tag",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 7397,
											"end": 7624,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7397,
											"end": 7624,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 7397,
											"end": 7624,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7397,
											"end": 7624,
											"name": "tag",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 7397,
											"end": 7624,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7397,
											"end": 7624,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 3631,
											"end": 4211,
											"name": "tag",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 3631,
											"end": 4211,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3631,
											"end": 4211,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 3631,
											"end": 4211,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3631,
											"end": 4211,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3631,
											"end": 4211,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 3631,
											"end": 4211,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3631,
											"end": 4211,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3631,
											"end": 4211,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3631,
											"end": 4211,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3631,
											"end": 4211,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 3631,
											"end": 4211,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3631,
											"end": 4211,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3631,
											"end": 4211,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 3631,
											"end": 4211,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3631,
											"end": 4211,
											"name": "tag",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 3631,
											"end": 4211,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3631,
											"end": 4211,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 3631,
											"end": 4211,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3631,
											"end": 4211,
											"name": "tag",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 3631,
											"end": 4211,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3631,
											"end": 4211,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 8900,
											"end": 9078,
											"name": "tag",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 8900,
											"end": 9078,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8900,
											"end": 9078,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 8900,
											"end": 9078,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8900,
											"end": 9078,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8900,
											"end": 9078,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 8900,
											"end": 9078,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8900,
											"end": 9078,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8900,
											"end": 9078,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8900,
											"end": 9078,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8900,
											"end": 9078,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 8900,
											"end": 9078,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8900,
											"end": 9078,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8900,
											"end": 9078,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 8900,
											"end": 9078,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8900,
											"end": 9078,
											"name": "tag",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 8900,
											"end": 9078,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8900,
											"end": 9078,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 8900,
											"end": 9078,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8900,
											"end": 9078,
											"name": "tag",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 8900,
											"end": 9078,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8900,
											"end": 9078,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 4433,
											"end": 4622,
											"name": "tag",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4433,
											"end": 4622,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4433,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 4433,
											"end": 4622,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4433,
											"end": 4622,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4433,
											"end": 4622,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 4433,
											"end": 4622,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4433,
											"end": 4622,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4433,
											"end": 4622,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4433,
											"end": 4622,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4433,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 4433,
											"end": 4622,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4433,
											"end": 4622,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4433,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 4433,
											"end": 4622,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4433,
											"end": 4622,
											"name": "tag",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 4433,
											"end": 4622,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4433,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 4433,
											"end": 4622,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4433,
											"end": 4622,
											"name": "tag",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 4433,
											"end": 4622,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4433,
											"end": 4622,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4433,
											"end": 4622,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4433,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 4433,
											"end": 4622,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4433,
											"end": 4622,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4433,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 4433,
											"end": 4622,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4433,
											"end": 4622,
											"name": "tag",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 4433,
											"end": 4622,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4433,
											"end": 4622,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4433,
											"end": 4622,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4433,
											"end": 4622,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4433,
											"end": 4622,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4433,
											"end": 4622,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4433,
											"end": 4622,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4433,
											"end": 4622,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 8540,
											"end": 8712,
											"name": "tag",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 8540,
											"end": 8712,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8540,
											"end": 8712,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 8540,
											"end": 8712,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8540,
											"end": 8712,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8540,
											"end": 8712,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 8540,
											"end": 8712,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8540,
											"end": 8712,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8540,
											"end": 8712,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8540,
											"end": 8712,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8540,
											"end": 8712,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 8540,
											"end": 8712,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8540,
											"end": 8712,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8540,
											"end": 8712,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 8540,
											"end": 8712,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8540,
											"end": 8712,
											"name": "tag",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 8540,
											"end": 8712,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8540,
											"end": 8712,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 8540,
											"end": 8712,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8540,
											"end": 8712,
											"name": "tag",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 8540,
											"end": 8712,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8540,
											"end": 8712,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 8344,
											"end": 8528,
											"name": "tag",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 8344,
											"end": 8528,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8344,
											"end": 8528,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 8344,
											"end": 8528,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8344,
											"end": 8528,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8344,
											"end": 8528,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 8344,
											"end": 8528,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8344,
											"end": 8528,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8344,
											"end": 8528,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8344,
											"end": 8528,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8344,
											"end": 8528,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 8344,
											"end": 8528,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8344,
											"end": 8528,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8344,
											"end": 8528,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 8344,
											"end": 8528,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8344,
											"end": 8528,
											"name": "tag",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 8344,
											"end": 8528,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8344,
											"end": 8528,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 8344,
											"end": 8528,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8344,
											"end": 8528,
											"name": "tag",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 8344,
											"end": 8528,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8344,
											"end": 8528,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 5441,
											"end": 5601,
											"name": "tag",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 5441,
											"end": 5601,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5441,
											"end": 5601,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 5441,
											"end": 5601,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5441,
											"end": 5601,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5441,
											"end": 5601,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 5441,
											"end": 5601,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5441,
											"end": 5601,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5441,
											"end": 5601,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5441,
											"end": 5601,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5441,
											"end": 5601,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 5441,
											"end": 5601,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5441,
											"end": 5601,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5441,
											"end": 5601,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 5441,
											"end": 5601,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5441,
											"end": 5601,
											"name": "tag",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 5441,
											"end": 5601,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5441,
											"end": 5601,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 5441,
											"end": 5601,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5441,
											"end": 5601,
											"name": "tag",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 5441,
											"end": 5601,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5441,
											"end": 5601,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5441,
											"end": 5601,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5441,
											"end": 5601,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 5441,
											"end": 5601,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5441,
											"end": 5601,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5441,
											"end": 5601,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 5441,
											"end": 5601,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5441,
											"end": 5601,
											"name": "tag",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 5441,
											"end": 5601,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5441,
											"end": 5601,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5441,
											"end": 5601,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5441,
											"end": 5601,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5441,
											"end": 5601,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5441,
											"end": 5601,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5441,
											"end": 5601,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5441,
											"end": 5601,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 5195,
											"end": 5331,
											"name": "tag",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 5195,
											"end": 5331,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5195,
											"end": 5331,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 5195,
											"end": 5331,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5195,
											"end": 5331,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5195,
											"end": 5331,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 5195,
											"end": 5331,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5195,
											"end": 5331,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5195,
											"end": 5331,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5195,
											"end": 5331,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5195,
											"end": 5331,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 5195,
											"end": 5331,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5195,
											"end": 5331,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5195,
											"end": 5331,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 5195,
											"end": 5331,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5195,
											"end": 5331,
											"name": "tag",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 5195,
											"end": 5331,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5195,
											"end": 5331,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 5195,
											"end": 5331,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5195,
											"end": 5331,
											"name": "tag",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 5195,
											"end": 5331,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5195,
											"end": 5331,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5195,
											"end": 5331,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5195,
											"end": 5331,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 5195,
											"end": 5331,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5195,
											"end": 5331,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5195,
											"end": 5331,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 5195,
											"end": 5331,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5195,
											"end": 5331,
											"name": "tag",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 5195,
											"end": 5331,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5195,
											"end": 5331,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5195,
											"end": 5331,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5195,
											"end": 5331,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5195,
											"end": 5331,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5195,
											"end": 5331,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5195,
											"end": 5331,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5195,
											"end": 5331,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 4634,
											"end": 4758,
											"name": "tag",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 4634,
											"end": 4758,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4634,
											"end": 4758,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 4634,
											"end": 4758,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4634,
											"end": 4758,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4634,
											"end": 4758,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 4634,
											"end": 4758,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4634,
											"end": 4758,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4634,
											"end": 4758,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4634,
											"end": 4758,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4634,
											"end": 4758,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 4634,
											"end": 4758,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4634,
											"end": 4758,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4634,
											"end": 4758,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 4634,
											"end": 4758,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4634,
											"end": 4758,
											"name": "tag",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 4634,
											"end": 4758,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4634,
											"end": 4758,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 4634,
											"end": 4758,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4634,
											"end": 4758,
											"name": "tag",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 4634,
											"end": 4758,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4634,
											"end": 4758,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4634,
											"end": 4758,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4634,
											"end": 4758,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 4634,
											"end": 4758,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4634,
											"end": 4758,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4634,
											"end": 4758,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 4634,
											"end": 4758,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4634,
											"end": 4758,
											"name": "tag",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 4634,
											"end": 4758,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4634,
											"end": 4758,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4634,
											"end": 4758,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4634,
											"end": 4758,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4634,
											"end": 4758,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4634,
											"end": 4758,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4634,
											"end": 4758,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4634,
											"end": 4758,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 4219,
											"end": 4314,
											"name": "tag",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4219,
											"end": 4314,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4266,
											"end": 4273,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4295,
											"end": 4306,
											"name": "PUSH",
											"source": 7,
											"value": "C"
										},
										{
											"begin": 4295,
											"end": 4306,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4288,
											"end": 4306,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4288,
											"end": 4306,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4219,
											"end": 4314,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4219,
											"end": 4314,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 5609,
											"end": 5710,
											"name": "tag",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 5609,
											"end": 5710,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5653,
											"end": 5660,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5690,
											"end": 5702,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 5690,
											"end": 5702,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5683,
											"end": 5702,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5683,
											"end": 5702,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5609,
											"end": 5710,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5609,
											"end": 5710,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 5718,
											"end": 5821,
											"name": "tag",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 5718,
											"end": 5821,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5767,
											"end": 5774,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5796,
											"end": 5813,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 5796,
											"end": 5813,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5789,
											"end": 5813,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5789,
											"end": 5813,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5718,
											"end": 5821,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5718,
											"end": 5821,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 8720,
											"end": 8892,
											"name": "tag",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 8720,
											"end": 8892,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8822,
											"end": 8823,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8809,
											"end": 8819,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8809,
											"end": 8823,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 8800,
											"end": 8841,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 8800,
											"end": 8841,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8800,
											"end": 8841,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8800,
											"end": 8841,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8800,
											"end": 8841,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8800,
											"end": 8841,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8800,
											"end": 8841,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8800,
											"end": 8841,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8800,
											"end": 8841,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8800,
											"end": 8841,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 8800,
											"end": 8841,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8800,
											"end": 8841,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 8800,
											"end": 8841,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8800,
											"end": 8841,
											"name": "tag",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 8800,
											"end": 8841,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8800,
											"end": 8841,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8800,
											"end": 8841,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8800,
											"end": 8841,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8800,
											"end": 8841,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8800,
											"end": 8841,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8800,
											"end": 8841,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8800,
											"end": 8841,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8800,
											"end": 8841,
											"name": "tag",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 8800,
											"end": 8841,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8874,
											"end": 8884,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8854,
											"end": 8871,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 8854,
											"end": 8884,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8854,
											"end": 8884,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8854,
											"end": 8884,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 8854,
											"end": 8884,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8720,
											"end": 8892,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8720,
											"end": 8892,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 6313,
											"end": 7385,
											"name": "tag",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 6313,
											"end": 7385,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6393,
											"end": 6394,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6384,
											"end": 6390,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6384,
											"end": 6394,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 6376,
											"end": 6430,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 6376,
											"end": 6430,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6376,
											"end": 6430,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6376,
											"end": 6430,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6376,
											"end": 6430,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6376,
											"end": 6430,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6376,
											"end": 6430,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6376,
											"end": 6430,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6376,
											"end": 6430,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6376,
											"end": 6430,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 6376,
											"end": 6430,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6376,
											"end": 6430,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 6376,
											"end": 6430,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6376,
											"end": 6430,
											"name": "tag",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 6376,
											"end": 6430,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6376,
											"end": 6430,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6376,
											"end": 6430,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6376,
											"end": 6430,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6376,
											"end": 6430,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6376,
											"end": 6430,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6376,
											"end": 6430,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6376,
											"end": 6430,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6376,
											"end": 6430,
											"name": "tag",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 6376,
											"end": 6430,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6459,
											"end": 6466,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 6459,
											"end": 6478,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6467,
											"end": 6477,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 6459,
											"end": 6478,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6459,
											"end": 6478,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6459,
											"end": 6478,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6459,
											"end": 6478,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6459,
											"end": 6478,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6459,
											"end": 6478,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6459,
											"end": 6478,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6459,
											"end": 6478,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6459,
											"end": 6478,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6459,
											"end": 6478,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6459,
											"end": 6478,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6459,
											"end": 6478,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6459,
											"end": 6478,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6459,
											"end": 6478,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6459,
											"end": 6478,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 6459,
											"end": 6491,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 6459,
											"end": 6491,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6459,
											"end": 6491,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6449,
											"end": 6455,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6449,
											"end": 6491,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 6449,
											"end": 6491,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6441,
											"end": 6510,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 6441,
											"end": 6510,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6441,
											"end": 6510,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6441,
											"end": 6510,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6441,
											"end": 6510,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6441,
											"end": 6510,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6441,
											"end": 6510,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6441,
											"end": 6510,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6441,
											"end": 6510,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6441,
											"end": 6510,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 6441,
											"end": 6510,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6441,
											"end": 6510,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 6441,
											"end": 6510,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6441,
											"end": 6510,
											"name": "tag",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 6441,
											"end": 6510,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6441,
											"end": 6510,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6441,
											"end": 6510,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6441,
											"end": 6510,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6441,
											"end": 6510,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6441,
											"end": 6510,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6441,
											"end": 6510,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6441,
											"end": 6510,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6441,
											"end": 6510,
											"name": "tag",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 6441,
											"end": 6510,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6523,
											"end": 6537,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 6523,
											"end": 6535,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 6523,
											"end": 6537,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6523,
											"end": 6537,
											"name": "tag",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 6523,
											"end": 6537,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6548,
											"end": 6575,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6578,
											"end": 6584,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6548,
											"end": 6584,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6548,
											"end": 6584,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6595,
											"end": 6609,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6612,
											"end": 6679,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 6672,
											"end": 6678,
											"name": "PUSH",
											"source": 7,
											"value": "15180"
										},
										{
											"begin": 6612,
											"end": 6667,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 6632,
											"end": 6639,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 6632,
											"end": 6651,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6640,
											"end": 6650,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 6632,
											"end": 6651,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6632,
											"end": 6651,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6632,
											"end": 6651,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6632,
											"end": 6651,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6632,
											"end": 6651,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6632,
											"end": 6651,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6632,
											"end": 6651,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6632,
											"end": 6651,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6632,
											"end": 6651,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6632,
											"end": 6651,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6632,
											"end": 6651,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6632,
											"end": 6651,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6632,
											"end": 6651,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6632,
											"end": 6651,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6632,
											"end": 6651,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 6632,
											"end": 6666,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 6632,
											"end": 6666,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6632,
											"end": 6666,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6612,
											"end": 6627,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 6612,
											"end": 6631,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 6612,
											"end": 6631,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6612,
											"end": 6667,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6612,
											"end": 6667,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6612,
											"end": 6667,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6612,
											"end": 6667,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6612,
											"end": 6667,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6612,
											"end": 6667,
											"name": "tag",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 6612,
											"end": 6667,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6612,
											"end": 6671,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 6612,
											"end": 6671,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6612,
											"end": 6679,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6612,
											"end": 6679,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6612,
											"end": 6679,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6612,
											"end": 6679,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6612,
											"end": 6679,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6612,
											"end": 6679,
											"name": "tag",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 6612,
											"end": 6679,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6595,
											"end": 6679,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6595,
											"end": 6679,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6690,
											"end": 6701,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6704,
											"end": 6707,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 6690,
											"end": 6707,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6690,
											"end": 6707,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6718,
											"end": 6739,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6770,
											"end": 6771,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6742,
											"end": 6749,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 6742,
											"end": 6761,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6750,
											"end": 6760,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 6742,
											"end": 6761,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6742,
											"end": 6761,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6742,
											"end": 6761,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6742,
											"end": 6761,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6742,
											"end": 6761,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6742,
											"end": 6761,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6742,
											"end": 6761,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6742,
											"end": 6761,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6742,
											"end": 6761,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6742,
											"end": 6761,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6742,
											"end": 6761,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6742,
											"end": 6761,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6742,
											"end": 6761,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6742,
											"end": 6761,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6742,
											"end": 6761,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 6742,
											"end": 6766,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 6742,
											"end": 6766,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6742,
											"end": 6766,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6742,
											"end": 6771,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 6742,
											"end": 6771,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6742,
											"end": 6914,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 6742,
											"end": 6914,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6849,
											"end": 6914,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 6888,
											"end": 6913,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 6906,
											"end": 6912,
											"name": "PUSH",
											"source": 7,
											"value": "15180"
										},
										{
											"begin": 6888,
											"end": 6901,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 6888,
											"end": 6901,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6888,
											"end": 6905,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 6888,
											"end": 6905,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6888,
											"end": 6913,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6888,
											"end": 6913,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6888,
											"end": 6913,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6888,
											"end": 6913,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6888,
											"end": 6913,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6888,
											"end": 6913,
											"name": "tag",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 6888,
											"end": 6913,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6849,
											"end": 6856,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 6849,
											"end": 6868,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6857,
											"end": 6867,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 6849,
											"end": 6868,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6849,
											"end": 6868,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6849,
											"end": 6868,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6849,
											"end": 6868,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6849,
											"end": 6868,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6849,
											"end": 6868,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6849,
											"end": 6868,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6849,
											"end": 6868,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6849,
											"end": 6868,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6849,
											"end": 6868,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6849,
											"end": 6868,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6849,
											"end": 6868,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6849,
											"end": 6868,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6849,
											"end": 6868,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6849,
											"end": 6868,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 6849,
											"end": 6883,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 6849,
											"end": 6883,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6849,
											"end": 6883,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6849,
											"end": 6887,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 6849,
											"end": 6887,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6849,
											"end": 6914,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6849,
											"end": 6914,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6849,
											"end": 6914,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6849,
											"end": 6914,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6849,
											"end": 6914,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6849,
											"end": 6914,
											"name": "tag",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 6849,
											"end": 6914,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6830,
											"end": 6845,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 6830,
											"end": 6914,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 6830,
											"end": 6914,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6742,
											"end": 6914,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 6742,
											"end": 6914,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6742,
											"end": 6914,
											"name": "tag",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 6742,
											"end": 6914,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6799,
											"end": 6800,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6783,
											"end": 6795,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 6783,
											"end": 6795,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6774,
											"end": 6780,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6774,
											"end": 6795,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 6774,
											"end": 6795,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6774,
											"end": 6795,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6774,
											"end": 6795,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 6774,
											"end": 6795,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6774,
											"end": 6795,
											"name": "tag",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 6774,
											"end": 6795,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6774,
											"end": 6800,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 6774,
											"end": 6814,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6774,
											"end": 6814,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6774,
											"end": 6814,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 6774,
											"end": 6814,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6774,
											"end": 6814,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6813,
											"end": 6814,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6804,
											"end": 6810,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6804,
											"end": 6814,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 6774,
											"end": 6814,
											"name": "tag",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 6774,
											"end": 6814,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6742,
											"end": 6914,
											"name": "tag",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 6742,
											"end": 6914,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6718,
											"end": 6914,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6718,
											"end": 6914,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6925,
											"end": 6998,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 6925,
											"end": 6998,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6969,
											"end": 6986,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 6969,
											"end": 6986,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6963,
											"end": 6986,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6963,
											"end": 6986,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6925,
											"end": 6998,
											"name": "tag",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 6925,
											"end": 6998,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7043,
											"end": 7100,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 7080,
											"end": 7099,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7043,
											"end": 7050,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 7043,
											"end": 7062,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7051,
											"end": 7061,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 7043,
											"end": 7062,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7043,
											"end": 7062,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7043,
											"end": 7062,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7043,
											"end": 7062,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7043,
											"end": 7062,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7043,
											"end": 7062,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7043,
											"end": 7062,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7043,
											"end": 7062,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7043,
											"end": 7062,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7043,
											"end": 7062,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7043,
											"end": 7062,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7043,
											"end": 7062,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7043,
											"end": 7062,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7043,
											"end": 7062,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7043,
											"end": 7062,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 7043,
											"end": 7075,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 7043,
											"end": 7075,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7043,
											"end": 7075,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7043,
											"end": 7079,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 7043,
											"end": 7079,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7043,
											"end": 7100,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7043,
											"end": 7100,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7043,
											"end": 7100,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7043,
											"end": 7100,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7043,
											"end": 7100,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7043,
											"end": 7100,
											"name": "tag",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 7043,
											"end": 7100,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7008,
											"end": 7015,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 7008,
											"end": 7027,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7016,
											"end": 7026,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 7008,
											"end": 7027,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7008,
											"end": 7027,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7008,
											"end": 7027,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7008,
											"end": 7027,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7008,
											"end": 7027,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7008,
											"end": 7027,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7008,
											"end": 7027,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7008,
											"end": 7027,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7008,
											"end": 7027,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7008,
											"end": 7027,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7008,
											"end": 7027,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7008,
											"end": 7027,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7008,
											"end": 7027,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7008,
											"end": 7027,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7008,
											"end": 7027,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 7008,
											"end": 7040,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 7008,
											"end": 7040,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7008,
											"end": 7100,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7008,
											"end": 7100,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7008,
											"end": 7100,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 7008,
											"end": 7100,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7125,
											"end": 7161,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 7141,
											"end": 7160,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7125,
											"end": 7136,
											"name": "PUSH",
											"source": 7,
											"value": "C"
										},
										{
											"begin": 7125,
											"end": 7136,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7125,
											"end": 7140,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 7125,
											"end": 7140,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7125,
											"end": 7161,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7125,
											"end": 7161,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7125,
											"end": 7161,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7125,
											"end": 7161,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7125,
											"end": 7161,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7125,
											"end": 7161,
											"name": "tag",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 7125,
											"end": 7161,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7111,
											"end": 7122,
											"name": "PUSH",
											"source": 7,
											"value": "C"
										},
										{
											"begin": 7111,
											"end": 7161,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7111,
											"end": 7161,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7111,
											"end": 7161,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 7111,
											"end": 7161,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7194,
											"end": 7256,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 7218,
											"end": 7255,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 7251,
											"end": 7254,
											"name": "PUSH",
											"source": 7,
											"value": "2710"
										},
										{
											"begin": 7218,
											"end": 7246,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 7242,
											"end": 7245,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7218,
											"end": 7237,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 7218,
											"end": 7241,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 7218,
											"end": 7241,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7218,
											"end": 7246,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7218,
											"end": 7246,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7218,
											"end": 7246,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7218,
											"end": 7246,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7218,
											"end": 7246,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7218,
											"end": 7246,
											"name": "tag",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 7218,
											"end": 7246,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7218,
											"end": 7250,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 7218,
											"end": 7250,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7218,
											"end": 7255,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7218,
											"end": 7255,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7218,
											"end": 7255,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7218,
											"end": 7255,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7218,
											"end": 7255,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7218,
											"end": 7255,
											"name": "tag",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 7218,
											"end": 7255,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7194,
											"end": 7213,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7194,
											"end": 7217,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 7194,
											"end": 7217,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7194,
											"end": 7256,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7194,
											"end": 7256,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7194,
											"end": 7256,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7194,
											"end": 7256,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7194,
											"end": 7256,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7194,
											"end": 7256,
											"name": "tag",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 7194,
											"end": 7256,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7172,
											"end": 7256,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 7172,
											"end": 7256,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7267,
											"end": 7318,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 7286,
											"end": 7296,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 7298,
											"end": 7317,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7267,
											"end": 7272,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 7267,
											"end": 7272,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7267,
											"end": 7272,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7267,
											"end": 7272,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7267,
											"end": 7272,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7267,
											"end": 7272,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 7267,
											"end": 7272,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 7267,
											"end": 7272,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7267,
											"end": 7272,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 7267,
											"end": 7272,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7267,
											"end": 7272,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7267,
											"end": 7285,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7267,
											"end": 7285,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7267,
											"end": 7285,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 7267,
											"end": 7285,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7267,
											"end": 7318,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7267,
											"end": 7318,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7267,
											"end": 7318,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7267,
											"end": 7318,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7267,
											"end": 7318,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7267,
											"end": 7318,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7267,
											"end": 7318,
											"name": "tag",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 7267,
											"end": 7318,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7336,
											"end": 7377,
											"name": "PUSH",
											"source": 7,
											"value": "884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364"
										},
										{
											"begin": 7345,
											"end": 7355,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 7357,
											"end": 7376,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7336,
											"end": 7377,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7336,
											"end": 7377,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7336,
											"end": 7377,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 7336,
											"end": 7377,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7336,
											"end": 7377,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7336,
											"end": 7377,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7336,
											"end": 7377,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 7336,
											"end": 7377,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7336,
											"end": 7377,
											"name": "tag",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 7336,
											"end": 7377,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7336,
											"end": 7377,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7336,
											"end": 7377,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7336,
											"end": 7377,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7336,
											"end": 7377,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7336,
											"end": 7377,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7336,
											"end": 7377,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7336,
											"end": 7377,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 6355,
											"end": 7385,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6355,
											"end": 7385,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6355,
											"end": 7385,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6355,
											"end": 7385,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6313,
											"end": 7385,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6313,
											"end": 7385,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 9123,
											"end": 9718,
											"name": "tag",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 9123,
											"end": 9718,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9169,
											"end": 9183,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 9169,
											"end": 9181,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 9169,
											"end": 9183,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9169,
											"end": 9183,
											"name": "tag",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 9169,
											"end": 9183,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9204,
											"end": 9221,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9224,
											"end": 9231,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 9224,
											"end": 9243,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9232,
											"end": 9242,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 9224,
											"end": 9243,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9224,
											"end": 9243,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9224,
											"end": 9243,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9224,
											"end": 9243,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9224,
											"end": 9243,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9224,
											"end": 9243,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9224,
											"end": 9243,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9224,
											"end": 9243,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9224,
											"end": 9243,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9224,
											"end": 9243,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9224,
											"end": 9243,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9224,
											"end": 9243,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9224,
											"end": 9243,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9224,
											"end": 9243,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9224,
											"end": 9243,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 9224,
											"end": 9263,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9224,
											"end": 9263,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9224,
											"end": 9263,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 9204,
											"end": 9263,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9204,
											"end": 9263,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9274,
											"end": 9295,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9298,
											"end": 9351,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 9312,
											"end": 9350,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 9346,
											"end": 9349,
											"name": "PUSH",
											"source": 7,
											"value": "2710"
										},
										{
											"begin": 9312,
											"end": 9341,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 9326,
											"end": 9340,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9326,
											"end": 9340,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 9312,
											"end": 9321,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 9312,
											"end": 9325,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 9312,
											"end": 9325,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9312,
											"end": 9341,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9312,
											"end": 9341,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9312,
											"end": 9341,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9312,
											"end": 9341,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9312,
											"end": 9341,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9312,
											"end": 9341,
											"name": "tag",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 9312,
											"end": 9341,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9312,
											"end": 9345,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 9312,
											"end": 9345,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9312,
											"end": 9350,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9312,
											"end": 9350,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9312,
											"end": 9350,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9312,
											"end": 9350,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9312,
											"end": 9350,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9312,
											"end": 9350,
											"name": "tag",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 9312,
											"end": 9350,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9298,
											"end": 9307,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9298,
											"end": 9311,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 9298,
											"end": 9311,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9298,
											"end": 9351,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9298,
											"end": 9351,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9298,
											"end": 9351,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9298,
											"end": 9351,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9298,
											"end": 9351,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9298,
											"end": 9351,
											"name": "tag",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 9298,
											"end": 9351,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9274,
											"end": 9351,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9274,
											"end": 9351,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9396,
											"end": 9397,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9380,
											"end": 9393,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9380,
											"end": 9397,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 9372,
											"end": 9418,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 9372,
											"end": 9418,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9372,
											"end": 9418,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9372,
											"end": 9418,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9372,
											"end": 9418,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9372,
											"end": 9418,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9372,
											"end": 9418,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9372,
											"end": 9418,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9372,
											"end": 9418,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9372,
											"end": 9418,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 9372,
											"end": 9418,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9372,
											"end": 9418,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 9372,
											"end": 9418,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9372,
											"end": 9418,
											"name": "tag",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 9372,
											"end": 9418,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9372,
											"end": 9418,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9372,
											"end": 9418,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9372,
											"end": 9418,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9372,
											"end": 9418,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9372,
											"end": 9418,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9372,
											"end": 9418,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9372,
											"end": 9418,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 9372,
											"end": 9418,
											"name": "tag",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 9372,
											"end": 9418,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9449,
											"end": 9454,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 9449,
											"end": 9454,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9449,
											"end": 9454,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9449,
											"end": 9454,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 9449,
											"end": 9454,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9449,
											"end": 9454,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 9449,
											"end": 9454,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 9449,
											"end": 9454,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9449,
											"end": 9454,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 9449,
											"end": 9454,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9449,
											"end": 9454,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9449,
											"end": 9464,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9449,
											"end": 9464,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9449,
											"end": 9464,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 9473,
											"end": 9477,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 9449,
											"end": 9479,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9449,
											"end": 9479,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9449,
											"end": 9479,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9449,
											"end": 9479,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9449,
											"end": 9479,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9449,
											"end": 9479,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 9449,
											"end": 9479,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 9449,
											"end": 9479,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9449,
											"end": 9479,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9449,
											"end": 9479,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9449,
											"end": 9479,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9449,
											"end": 9479,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 9449,
											"end": 9479,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9449,
											"end": 9479,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9449,
											"end": 9479,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 9449,
											"end": 9479,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9449,
											"end": 9479,
											"name": "tag",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 9449,
											"end": 9479,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9449,
											"end": 9479,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9449,
											"end": 9479,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9449,
											"end": 9479,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9449,
											"end": 9479,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9449,
											"end": 9479,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9449,
											"end": 9479,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9449,
											"end": 9479,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9449,
											"end": 9479,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 9449,
											"end": 9479,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9449,
											"end": 9479,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 9449,
											"end": 9479,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9449,
											"end": 9479,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9449,
											"end": 9479,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9449,
											"end": 9479,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 9449,
											"end": 9479,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9449,
											"end": 9479,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9449,
											"end": 9479,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9449,
											"end": 9479,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 9449,
											"end": 9479,
											"name": "tag",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 9449,
											"end": 9479,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9449,
											"end": 9479,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9449,
											"end": 9479,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 9449,
											"end": 9479,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 9449,
											"end": 9479,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9449,
											"end": 9479,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9449,
											"end": 9479,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9449,
											"end": 9479,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 9449,
											"end": 9479,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9449,
											"end": 9479,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 9449,
											"end": 9479,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9449,
											"end": 9479,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9449,
											"end": 9479,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 9449,
											"end": 9479,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 9449,
											"end": 9479,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9449,
											"end": 9479,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 9449,
											"end": 9479,
											"name": "tag",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 9449,
											"end": 9479,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9449,
											"end": 9479,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9449,
											"end": 9479,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9449,
											"end": 9479,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9449,
											"end": 9479,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9449,
											"end": 9479,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9449,
											"end": 9479,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9449,
											"end": 9479,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 9449,
											"end": 9479,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 9449,
											"end": 9479,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 9449,
											"end": 9479,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 9449,
											"end": 9479,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9449,
											"end": 9479,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9449,
											"end": 9479,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9449,
											"end": 9479,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9449,
											"end": 9479,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9449,
											"end": 9479,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9449,
											"end": 9479,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9449,
											"end": 9479,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9449,
											"end": 9479,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9449,
											"end": 9479,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9449,
											"end": 9479,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9449,
											"end": 9479,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9449,
											"end": 9479,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 9449,
											"end": 9479,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9449,
											"end": 9479,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9449,
											"end": 9479,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 9449,
											"end": 9479,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9449,
											"end": 9479,
											"name": "tag",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 9449,
											"end": 9479,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9433,
											"end": 9446,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9433,
											"end": 9479,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 9429,
											"end": 9540,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9429,
											"end": 9540,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 9429,
											"end": 9540,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9510,
											"end": 9515,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 9510,
											"end": 9515,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9510,
											"end": 9515,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9510,
											"end": 9515,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 9510,
											"end": 9515,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9510,
											"end": 9515,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 9510,
											"end": 9515,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 9510,
											"end": 9515,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9510,
											"end": 9515,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 9510,
											"end": 9515,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9510,
											"end": 9515,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9510,
											"end": 9525,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9510,
											"end": 9525,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9510,
											"end": 9525,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 9534,
											"end": 9538,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 9510,
											"end": 9540,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9510,
											"end": 9540,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9510,
											"end": 9540,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9510,
											"end": 9540,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9510,
											"end": 9540,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9510,
											"end": 9540,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 9510,
											"end": 9540,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 9510,
											"end": 9540,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9510,
											"end": 9540,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9510,
											"end": 9540,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9510,
											"end": 9540,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9510,
											"end": 9540,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 9510,
											"end": 9540,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9510,
											"end": 9540,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9510,
											"end": 9540,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 9510,
											"end": 9540,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9510,
											"end": 9540,
											"name": "tag",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 9510,
											"end": 9540,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9510,
											"end": 9540,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9510,
											"end": 9540,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9510,
											"end": 9540,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9510,
											"end": 9540,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9510,
											"end": 9540,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9510,
											"end": 9540,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9510,
											"end": 9540,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9510,
											"end": 9540,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 9510,
											"end": 9540,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9510,
											"end": 9540,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 9510,
											"end": 9540,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9510,
											"end": 9540,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9510,
											"end": 9540,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9510,
											"end": 9540,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 9510,
											"end": 9540,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9510,
											"end": 9540,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9510,
											"end": 9540,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9510,
											"end": 9540,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 9510,
											"end": 9540,
											"name": "tag",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 9510,
											"end": 9540,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9510,
											"end": 9540,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9510,
											"end": 9540,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 9510,
											"end": 9540,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 9510,
											"end": 9540,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9510,
											"end": 9540,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9510,
											"end": 9540,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9510,
											"end": 9540,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 9510,
											"end": 9540,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9510,
											"end": 9540,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 9510,
											"end": 9540,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9510,
											"end": 9540,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9510,
											"end": 9540,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 9510,
											"end": 9540,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 9510,
											"end": 9540,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9510,
											"end": 9540,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 9510,
											"end": 9540,
											"name": "tag",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 9510,
											"end": 9540,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9510,
											"end": 9540,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9510,
											"end": 9540,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9510,
											"end": 9540,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9510,
											"end": 9540,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9510,
											"end": 9540,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9510,
											"end": 9540,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9510,
											"end": 9540,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 9510,
											"end": 9540,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 9510,
											"end": 9540,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 9510,
											"end": 9540,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 9510,
											"end": 9540,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9510,
											"end": 9540,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9510,
											"end": 9540,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9510,
											"end": 9540,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9510,
											"end": 9540,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9510,
											"end": 9540,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9510,
											"end": 9540,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9510,
											"end": 9540,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9510,
											"end": 9540,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9510,
											"end": 9540,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9510,
											"end": 9540,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9510,
											"end": 9540,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9510,
											"end": 9540,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 9510,
											"end": 9540,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9510,
											"end": 9540,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9510,
											"end": 9540,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 9510,
											"end": 9540,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9510,
											"end": 9540,
											"name": "tag",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 9510,
											"end": 9540,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9494,
											"end": 9540,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9494,
											"end": 9540,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9429,
											"end": 9540,
											"name": "tag",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 9429,
											"end": 9540,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9551,
											"end": 9596,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 9570,
											"end": 9580,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 9582,
											"end": 9595,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9551,
											"end": 9556,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 9551,
											"end": 9556,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9551,
											"end": 9556,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9551,
											"end": 9556,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 9551,
											"end": 9556,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9551,
											"end": 9556,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 9551,
											"end": 9556,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 9551,
											"end": 9556,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9551,
											"end": 9556,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 9551,
											"end": 9556,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9551,
											"end": 9556,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9551,
											"end": 9569,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9551,
											"end": 9569,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9551,
											"end": 9569,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 9551,
											"end": 9569,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9551,
											"end": 9596,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9551,
											"end": 9596,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9551,
											"end": 9596,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9551,
											"end": 9596,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9551,
											"end": 9596,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9551,
											"end": 9596,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9551,
											"end": 9596,
											"name": "tag",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 9551,
											"end": 9596,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9649,
											"end": 9650,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9607,
											"end": 9614,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 9607,
											"end": 9626,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9615,
											"end": 9625,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 9607,
											"end": 9626,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9607,
											"end": 9626,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9607,
											"end": 9626,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9607,
											"end": 9626,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9607,
											"end": 9626,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9607,
											"end": 9626,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9607,
											"end": 9626,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9607,
											"end": 9626,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9607,
											"end": 9626,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9607,
											"end": 9626,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9607,
											"end": 9626,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9607,
											"end": 9626,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9607,
											"end": 9626,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9607,
											"end": 9626,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9607,
											"end": 9626,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 9607,
											"end": 9646,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9607,
											"end": 9646,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9607,
											"end": 9650,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9607,
											"end": 9650,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9607,
											"end": 9650,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 9607,
											"end": 9650,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9676,
											"end": 9710,
											"name": "PUSH",
											"source": 7,
											"value": "C9695243A805ADB74C91F28311176C65B417E842D5699893CEF56D18BFA48CBA"
										},
										{
											"begin": 9684,
											"end": 9694,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 9696,
											"end": 9709,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9676,
											"end": 9710,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9676,
											"end": 9710,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9676,
											"end": 9710,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 9676,
											"end": 9710,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9676,
											"end": 9710,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9676,
											"end": 9710,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9676,
											"end": 9710,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 9676,
											"end": 9710,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9676,
											"end": 9710,
											"name": "tag",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 9676,
											"end": 9710,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9676,
											"end": 9710,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9676,
											"end": 9710,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9676,
											"end": 9710,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9676,
											"end": 9710,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9676,
											"end": 9710,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9676,
											"end": 9710,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9676,
											"end": 9710,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 9148,
											"end": 9718,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9148,
											"end": 9718,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9123,
											"end": 9718,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 4766,
											"end": 5183,
											"name": "tag",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 4766,
											"end": 5183,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4823,
											"end": 4830,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4877,
											"end": 4879,
											"name": "PUSH",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 4849,
											"end": 4856,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 4849,
											"end": 4866,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4857,
											"end": 4865,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4849,
											"end": 4866,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4849,
											"end": 4866,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4849,
											"end": 4866,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4849,
											"end": 4866,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4849,
											"end": 4866,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4849,
											"end": 4866,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4849,
											"end": 4866,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4849,
											"end": 4866,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4849,
											"end": 4866,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4849,
											"end": 4866,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4849,
											"end": 4866,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4849,
											"end": 4866,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4849,
											"end": 4866,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4849,
											"end": 4866,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4849,
											"end": 4866,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4849,
											"end": 4873,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 4849,
											"end": 4873,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4849,
											"end": 4873,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4849,
											"end": 4879,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4845,
											"end": 4902,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 4845,
											"end": 4902,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4901,
											"end": 4902,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4894,
											"end": 4902,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4894,
											"end": 4902,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4894,
											"end": 4902,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 4894,
											"end": 4902,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4845,
											"end": 4902,
											"name": "tag",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 4845,
											"end": 4902,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4943,
											"end": 4944,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4917,
											"end": 4924,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 4917,
											"end": 4934,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4925,
											"end": 4933,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4917,
											"end": 4934,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4917,
											"end": 4934,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4917,
											"end": 4934,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4917,
											"end": 4934,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4917,
											"end": 4934,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4917,
											"end": 4934,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4917,
											"end": 4934,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4917,
											"end": 4934,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4917,
											"end": 4934,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4917,
											"end": 4934,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4917,
											"end": 4934,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4917,
											"end": 4934,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4917,
											"end": 4934,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4917,
											"end": 4934,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4917,
											"end": 4934,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4917,
											"end": 4939,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 4917,
											"end": 4939,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4917,
											"end": 4939,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4917,
											"end": 4944,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4913,
											"end": 5175,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 4913,
											"end": 5175,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5039,
											"end": 5040,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5034,
											"end": 5035,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 4966,
											"end": 5031,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 5024,
											"end": 5030,
											"name": "PUSH",
											"source": 7,
											"value": "15180"
										},
										{
											"begin": 4966,
											"end": 5019,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 4986,
											"end": 4993,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 4986,
											"end": 5003,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4994,
											"end": 5002,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 4986,
											"end": 5003,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4986,
											"end": 5003,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4986,
											"end": 5003,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4986,
											"end": 5003,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4986,
											"end": 5003,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4986,
											"end": 5003,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4986,
											"end": 5003,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4986,
											"end": 5003,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4986,
											"end": 5003,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4986,
											"end": 5003,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4986,
											"end": 5003,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4986,
											"end": 5003,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4986,
											"end": 5003,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4986,
											"end": 5003,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4986,
											"end": 5003,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4986,
											"end": 5018,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 4986,
											"end": 5018,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4986,
											"end": 5018,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4966,
											"end": 4981,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 4966,
											"end": 4985,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 4966,
											"end": 4985,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4966,
											"end": 5019,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4966,
											"end": 5019,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4966,
											"end": 5019,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4966,
											"end": 5019,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4966,
											"end": 5019,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4966,
											"end": 5019,
											"name": "tag",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 4966,
											"end": 5019,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4966,
											"end": 5023,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 4966,
											"end": 5023,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4966,
											"end": 5031,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4966,
											"end": 5031,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4966,
											"end": 5031,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4966,
											"end": 5031,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4966,
											"end": 5031,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4966,
											"end": 5031,
											"name": "tag",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 4966,
											"end": 5031,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4966,
											"end": 5035,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 4966,
											"end": 5035,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4966,
											"end": 5035,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4966,
											"end": 5035,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 4966,
											"end": 5035,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4966,
											"end": 5035,
											"name": "tag",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 4966,
											"end": 5035,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4966,
											"end": 5040,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4966,
											"end": 5048,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 4966,
											"end": 5048,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5047,
											"end": 5048,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4966,
											"end": 5048,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 4966,
											"end": 5048,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4966,
											"end": 5048,
											"name": "tag",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 4966,
											"end": 5048,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5043,
											"end": 5044,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4966,
											"end": 5048,
											"name": "tag",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 4966,
											"end": 5048,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4959,
											"end": 5048,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 4959,
											"end": 5048,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4959,
											"end": 5048,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4959,
											"end": 5048,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4959,
											"end": 5048,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 4959,
											"end": 5048,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4913,
											"end": 5175,
											"name": "tag",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 4913,
											"end": 5175,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5142,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 5160,
											"end": 5166,
											"name": "PUSH",
											"source": 7,
											"value": "15180"
										},
										{
											"begin": 5142,
											"end": 5155,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 5142,
											"end": 5155,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5142,
											"end": 5159,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 5142,
											"end": 5159,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5142,
											"end": 5167,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5142,
											"end": 5167,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5142,
											"end": 5167,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5142,
											"end": 5167,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5142,
											"end": 5167,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5142,
											"end": 5167,
											"name": "tag",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 5142,
											"end": 5167,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5085,
											"end": 5138,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 5105,
											"end": 5112,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 5105,
											"end": 5122,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5113,
											"end": 5121,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5105,
											"end": 5122,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5105,
											"end": 5122,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5105,
											"end": 5122,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5105,
											"end": 5122,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5105,
											"end": 5122,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5105,
											"end": 5122,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5105,
											"end": 5122,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5105,
											"end": 5122,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5105,
											"end": 5122,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5105,
											"end": 5122,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5105,
											"end": 5122,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5105,
											"end": 5122,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5105,
											"end": 5122,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5105,
											"end": 5122,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5105,
											"end": 5122,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 5105,
											"end": 5137,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 5105,
											"end": 5137,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5105,
											"end": 5137,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5085,
											"end": 5100,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 5085,
											"end": 5104,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 5085,
											"end": 5104,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5085,
											"end": 5138,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5085,
											"end": 5138,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5085,
											"end": 5138,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5085,
											"end": 5138,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5085,
											"end": 5138,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5085,
											"end": 5138,
											"name": "tag",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 5085,
											"end": 5138,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5085,
											"end": 5167,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 5085,
											"end": 5167,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5085,
											"end": 5175,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 5085,
											"end": 5175,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5174,
											"end": 5175,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 5085,
											"end": 5175,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 5085,
											"end": 5175,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5085,
											"end": 5175,
											"name": "tag",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 5085,
											"end": 5175,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5170,
											"end": 5171,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5085,
											"end": 5175,
											"name": "tag",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 5085,
											"end": 5175,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5078,
											"end": 5175,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 5078,
											"end": 5175,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5078,
											"end": 5175,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5078,
											"end": 5175,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4766,
											"end": 5183,
											"name": "tag",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 4766,
											"end": 5183,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4766,
											"end": 5183,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4766,
											"end": 5183,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4766,
											"end": 5183,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4766,
											"end": 5183,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 8158,
											"end": 8336,
											"name": "tag",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 8158,
											"end": 8336,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8262,
											"end": 8263,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8249,
											"end": 8259,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8249,
											"end": 8263,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 8241,
											"end": 8281,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 8241,
											"end": 8281,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8241,
											"end": 8281,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8241,
											"end": 8281,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8241,
											"end": 8281,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8241,
											"end": 8281,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8241,
											"end": 8281,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8241,
											"end": 8281,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8241,
											"end": 8281,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8241,
											"end": 8281,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 8241,
											"end": 8281,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8241,
											"end": 8281,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 8241,
											"end": 8281,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8241,
											"end": 8281,
											"name": "tag",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 8241,
											"end": 8281,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8241,
											"end": 8281,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8241,
											"end": 8281,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8241,
											"end": 8281,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8241,
											"end": 8281,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8241,
											"end": 8281,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8241,
											"end": 8281,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8241,
											"end": 8281,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8241,
											"end": 8281,
											"name": "tag",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 8241,
											"end": 8281,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8318,
											"end": 8328,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8302,
											"end": 8315,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 8302,
											"end": 8328,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8302,
											"end": 8328,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8302,
											"end": 8328,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 8302,
											"end": 8328,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8158,
											"end": 8336,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8158,
											"end": 8336,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2666,
											"end": 3563,
											"name": "tag",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 2666,
											"end": 3563,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2768,
											"end": 2769,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2758,
											"end": 2765,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2758,
											"end": 2769,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2750,
											"end": 2805,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 2750,
											"end": 2805,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2750,
											"end": 2805,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2750,
											"end": 2805,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2750,
											"end": 2805,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2750,
											"end": 2805,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2750,
											"end": 2805,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2750,
											"end": 2805,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2750,
											"end": 2805,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2750,
											"end": 2805,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 2750,
											"end": 2805,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2750,
											"end": 2805,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 2750,
											"end": 2805,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2750,
											"end": 2805,
											"name": "tag",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 2750,
											"end": 2805,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2750,
											"end": 2805,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2750,
											"end": 2805,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2750,
											"end": 2805,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2750,
											"end": 2805,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2750,
											"end": 2805,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2750,
											"end": 2805,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2750,
											"end": 2805,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2750,
											"end": 2805,
											"name": "tag",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 2750,
											"end": 2805,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2854,
											"end": 2861,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2824,
											"end": 2829,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 2824,
											"end": 2829,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2824,
											"end": 2829,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2824,
											"end": 2829,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2824,
											"end": 2829,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2824,
											"end": 2829,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2824,
											"end": 2829,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2824,
											"end": 2829,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2824,
											"end": 2829,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 2824,
											"end": 2829,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2824,
											"end": 2829,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2824,
											"end": 2839,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2824,
											"end": 2839,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2824,
											"end": 2839,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 2840,
											"end": 2850,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "tag",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "tag",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "tag",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "tag",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2824,
											"end": 2861,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2816,
											"end": 2879,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 2816,
											"end": 2879,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2816,
											"end": 2879,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2816,
											"end": 2879,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2816,
											"end": 2879,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2816,
											"end": 2879,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2816,
											"end": 2879,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2816,
											"end": 2879,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2816,
											"end": 2879,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2816,
											"end": 2879,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 2816,
											"end": 2879,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2816,
											"end": 2879,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 2816,
											"end": 2879,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2816,
											"end": 2879,
											"name": "tag",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 2816,
											"end": 2879,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2816,
											"end": 2879,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2816,
											"end": 2879,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2816,
											"end": 2879,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2816,
											"end": 2879,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2816,
											"end": 2879,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2816,
											"end": 2879,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2816,
											"end": 2879,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2816,
											"end": 2879,
											"name": "tag",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 2816,
											"end": 2879,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2922,
											"end": 2923,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2898,
											"end": 2918,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 2907,
											"end": 2917,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2898,
											"end": 2906,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 2898,
											"end": 2918,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2898,
											"end": 2918,
											"name": "tag",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 2898,
											"end": 2918,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2898,
											"end": 2923,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2890,
											"end": 2939,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 2890,
											"end": 2939,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2890,
											"end": 2939,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2890,
											"end": 2939,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2890,
											"end": 2939,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2890,
											"end": 2939,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2890,
											"end": 2939,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2890,
											"end": 2939,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2890,
											"end": 2939,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2890,
											"end": 2939,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 2890,
											"end": 2939,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2890,
											"end": 2939,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 2890,
											"end": 2939,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2890,
											"end": 2939,
											"name": "tag",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 2890,
											"end": 2939,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2890,
											"end": 2939,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2890,
											"end": 2939,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2890,
											"end": 2939,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2890,
											"end": 2939,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2890,
											"end": 2939,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2890,
											"end": 2939,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2890,
											"end": 2939,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2890,
											"end": 2939,
											"name": "tag",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 2890,
											"end": 2939,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2973,
											"end": 2974,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2964,
											"end": 2969,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2964,
											"end": 2974,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2960,
											"end": 3336,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2960,
											"end": 3336,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 2960,
											"end": 3336,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2995,
											"end": 3012,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 2995,
											"end": 3012,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2984,
											"end": 2991,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2984,
											"end": 3012,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 2984,
											"end": 3012,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2976,
											"end": 3029,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 2976,
											"end": 3029,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2976,
											"end": 3029,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2976,
											"end": 3029,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2976,
											"end": 3029,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2976,
											"end": 3029,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2976,
											"end": 3029,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2976,
											"end": 3029,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2976,
											"end": 3029,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2976,
											"end": 3029,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 2976,
											"end": 3029,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2976,
											"end": 3029,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 2976,
											"end": 3029,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2976,
											"end": 3029,
											"name": "tag",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 2976,
											"end": 3029,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2976,
											"end": 3029,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2976,
											"end": 3029,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2976,
											"end": 3029,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2976,
											"end": 3029,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2976,
											"end": 3029,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2976,
											"end": 3029,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2976,
											"end": 3029,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2976,
											"end": 3029,
											"name": "tag",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 2976,
											"end": 3029,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2960,
											"end": 3336,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 2960,
											"end": 3336,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2960,
											"end": 3336,
											"name": "tag",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 2960,
											"end": 3336,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3058,
											"end": 3059,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3049,
											"end": 3054,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3049,
											"end": 3059,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 3045,
											"end": 3336,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3045,
											"end": 3336,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 3045,
											"end": 3336,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3080,
											"end": 3097,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 3080,
											"end": 3097,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3069,
											"end": 3076,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3069,
											"end": 3097,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3069,
											"end": 3097,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3061,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 3061,
											"end": 3114,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3061,
											"end": 3114,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3061,
											"end": 3114,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3061,
											"end": 3114,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3061,
											"end": 3114,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3061,
											"end": 3114,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3061,
											"end": 3114,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3061,
											"end": 3114,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3061,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 3061,
											"end": 3114,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3061,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 3061,
											"end": 3114,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3061,
											"end": 3114,
											"name": "tag",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 3061,
											"end": 3114,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3061,
											"end": 3114,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3061,
											"end": 3114,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3061,
											"end": 3114,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3061,
											"end": 3114,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3061,
											"end": 3114,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3061,
											"end": 3114,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3061,
											"end": 3114,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3061,
											"end": 3114,
											"name": "tag",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 3061,
											"end": 3114,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3045,
											"end": 3336,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 3045,
											"end": 3336,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3045,
											"end": 3336,
											"name": "tag",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 3045,
											"end": 3336,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3143,
											"end": 3144,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 3134,
											"end": 3139,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3134,
											"end": 3144,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 3130,
											"end": 3336,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3130,
											"end": 3336,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 3130,
											"end": 3336,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3165,
											"end": 3182,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 3165,
											"end": 3182,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3154,
											"end": 3161,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3154,
											"end": 3182,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3154,
											"end": 3182,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3146,
											"end": 3199,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 3146,
											"end": 3199,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3146,
											"end": 3199,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3146,
											"end": 3199,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3146,
											"end": 3199,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3146,
											"end": 3199,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3146,
											"end": 3199,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3146,
											"end": 3199,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3146,
											"end": 3199,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3146,
											"end": 3199,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 3146,
											"end": 3199,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3146,
											"end": 3199,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 3146,
											"end": 3199,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3146,
											"end": 3199,
											"name": "tag",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 3146,
											"end": 3199,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3146,
											"end": 3199,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3146,
											"end": 3199,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3146,
											"end": 3199,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3146,
											"end": 3199,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3146,
											"end": 3199,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3146,
											"end": 3199,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3146,
											"end": 3199,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3146,
											"end": 3199,
											"name": "tag",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 3146,
											"end": 3199,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3130,
											"end": 3336,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 3130,
											"end": 3336,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3130,
											"end": 3336,
											"name": "tag",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 3130,
											"end": 3336,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3228,
											"end": 3229,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 3219,
											"end": 3224,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3219,
											"end": 3229,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 3215,
											"end": 3336,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3215,
											"end": 3336,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 3215,
											"end": 3336,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3250,
											"end": 3267,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 3250,
											"end": 3267,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3239,
											"end": 3246,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3239,
											"end": 3267,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3239,
											"end": 3267,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3231,
											"end": 3284,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 3231,
											"end": 3284,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3231,
											"end": 3284,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3231,
											"end": 3284,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3231,
											"end": 3284,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3231,
											"end": 3284,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3231,
											"end": 3284,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3231,
											"end": 3284,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3231,
											"end": 3284,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3231,
											"end": 3284,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 3231,
											"end": 3284,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3231,
											"end": 3284,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 3231,
											"end": 3284,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3231,
											"end": 3284,
											"name": "tag",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 3231,
											"end": 3284,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3231,
											"end": 3284,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3231,
											"end": 3284,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3231,
											"end": 3284,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3231,
											"end": 3284,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3231,
											"end": 3284,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3231,
											"end": 3284,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3231,
											"end": 3284,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3231,
											"end": 3284,
											"name": "tag",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 3231,
											"end": 3284,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3215,
											"end": 3336,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 3215,
											"end": 3336,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3215,
											"end": 3336,
											"name": "tag",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 3215,
											"end": 3336,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3318,
											"end": 3319,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3308,
											"end": 3315,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3308,
											"end": 3319,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3300,
											"end": 3336,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 3300,
											"end": 3336,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3300,
											"end": 3336,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3300,
											"end": 3336,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3300,
											"end": 3336,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3300,
											"end": 3336,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3300,
											"end": 3336,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3300,
											"end": 3336,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3300,
											"end": 3336,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3300,
											"end": 3336,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 3300,
											"end": 3336,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3300,
											"end": 3336,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 3300,
											"end": 3336,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3300,
											"end": 3336,
											"name": "tag",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 3300,
											"end": 3336,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3300,
											"end": 3336,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3300,
											"end": 3336,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3300,
											"end": 3336,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3300,
											"end": 3336,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3300,
											"end": 3336,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3300,
											"end": 3336,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3300,
											"end": 3336,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3300,
											"end": 3336,
											"name": "tag",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 3300,
											"end": 3336,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3215,
											"end": 3336,
											"name": "tag",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 3215,
											"end": 3336,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3130,
											"end": 3336,
											"name": "tag",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 3130,
											"end": 3336,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3045,
											"end": 3336,
											"name": "tag",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 3045,
											"end": 3336,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2960,
											"end": 3336,
											"name": "tag",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 2960,
											"end": 3336,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3384,
											"end": 3389,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3357,
											"end": 3364,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 3357,
											"end": 3376,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3365,
											"end": 3375,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3357,
											"end": 3376,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3357,
											"end": 3376,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3357,
											"end": 3376,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3357,
											"end": 3376,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3357,
											"end": 3376,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3357,
											"end": 3376,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3357,
											"end": 3376,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3357,
											"end": 3376,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3357,
											"end": 3376,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3357,
											"end": 3376,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3357,
											"end": 3376,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3357,
											"end": 3376,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3357,
											"end": 3376,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3357,
											"end": 3376,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3357,
											"end": 3376,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3357,
											"end": 3381,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 3357,
											"end": 3381,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3357,
											"end": 3389,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3357,
											"end": 3389,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3357,
											"end": 3389,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3357,
											"end": 3389,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3437,
											"end": 3452,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 3400,
											"end": 3407,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 3400,
											"end": 3419,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3408,
											"end": 3418,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3400,
											"end": 3419,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3400,
											"end": 3419,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3400,
											"end": 3419,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3400,
											"end": 3419,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3400,
											"end": 3419,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3400,
											"end": 3419,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3400,
											"end": 3419,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3400,
											"end": 3419,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3400,
											"end": 3419,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3400,
											"end": 3419,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3400,
											"end": 3419,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3400,
											"end": 3419,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3400,
											"end": 3419,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3400,
											"end": 3419,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3419,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3400,
											"end": 3434,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 3400,
											"end": 3434,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3400,
											"end": 3452,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3400,
											"end": 3452,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3400,
											"end": 3452,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3400,
											"end": 3452,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3492,
											"end": 3494,
											"name": "PUSH",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 3463,
											"end": 3470,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 3463,
											"end": 3482,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3471,
											"end": 3481,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3482,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3463,
											"end": 3482,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3482,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3463,
											"end": 3482,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3482,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3482,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3482,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3463,
											"end": 3482,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3482,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3482,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3482,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3482,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3463,
											"end": 3482,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3482,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3463,
											"end": 3482,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3489,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 3463,
											"end": 3489,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3494,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3494,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3494,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3494,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3505,
											"end": 3513,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 3519,
											"end": 3529,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3505,
											"end": 3530,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3505,
											"end": 3530,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3505,
											"end": 3530,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3505,
											"end": 3530,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3505,
											"end": 3530,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3505,
											"end": 3530,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3505,
											"end": 3530,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3505,
											"end": 3530,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3505,
											"end": 3530,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3505,
											"end": 3530,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3505,
											"end": 3530,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3505,
											"end": 3530,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3505,
											"end": 3530,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3505,
											"end": 3530,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3505,
											"end": 3530,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3505,
											"end": 3530,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3505,
											"end": 3530,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3505,
											"end": 3530,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3505,
											"end": 3530,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3505,
											"end": 3530,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3505,
											"end": 3530,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3505,
											"end": 3530,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3505,
											"end": 3530,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3505,
											"end": 3530,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3505,
											"end": 3530,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3505,
											"end": 3530,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3505,
											"end": 3530,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3505,
											"end": 3530,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3505,
											"end": 3530,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3505,
											"end": 3530,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3505,
											"end": 3530,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 3505,
											"end": 3530,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 3505,
											"end": 3530,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3505,
											"end": 3530,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3505,
											"end": 3530,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3505,
											"end": 3530,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3505,
											"end": 3530,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3505,
											"end": 3530,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 3505,
											"end": 3530,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3505,
											"end": 3530,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3505,
											"end": 3530,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3505,
											"end": 3530,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3505,
											"end": 3530,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3505,
											"end": 3530,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3505,
											"end": 3530,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 3505,
											"end": 3530,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3505,
											"end": 3530,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3505,
											"end": 3530,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3541,
											"end": 3555,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 3547,
											"end": 3554,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3541,
											"end": 3546,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 3541,
											"end": 3555,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3541,
											"end": 3555,
											"name": "tag",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 3541,
											"end": 3555,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2666,
											"end": 3563,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2666,
											"end": 3563,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2666,
											"end": 3563,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 4322,
											"end": 4425,
											"name": "tag",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 4322,
											"end": 4425,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4373,
											"end": 4380,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4402,
											"end": 4410,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 4402,
											"end": 4417,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4402,
											"end": 4417,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4402,
											"end": 4417,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4402,
											"end": 4417,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4395,
											"end": 4417,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4395,
											"end": 4417,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4322,
											"end": 4425,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4322,
											"end": 4425,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 7632,
											"end": 7868,
											"name": "tag",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 7632,
											"end": 7868,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7743,
											"end": 7744,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7727,
											"end": 7740,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7727,
											"end": 7744,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 7719,
											"end": 7772,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 7719,
											"end": 7772,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7719,
											"end": 7772,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7719,
											"end": 7772,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7719,
											"end": 7772,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7719,
											"end": 7772,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7719,
											"end": 7772,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7719,
											"end": 7772,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7719,
											"end": 7772,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7719,
											"end": 7772,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 7719,
											"end": 7772,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7719,
											"end": 7772,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 7719,
											"end": 7772,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7719,
											"end": 7772,
											"name": "tag",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 7719,
											"end": 7772,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7719,
											"end": 7772,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7719,
											"end": 7772,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7719,
											"end": 7772,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7719,
											"end": 7772,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7719,
											"end": 7772,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7719,
											"end": 7772,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7719,
											"end": 7772,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7719,
											"end": 7772,
											"name": "tag",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 7719,
											"end": 7772,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7800,
											"end": 7813,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7785,
											"end": 7797,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 7785,
											"end": 7813,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7785,
											"end": 7813,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7785,
											"end": 7813,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 7785,
											"end": 7813,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7831,
											"end": 7860,
											"name": "PUSH",
											"source": 7,
											"value": "189BDA9782663C67A3F95C0AA5455924C711210B00281C60EAD2F0DD8DBC924C"
										},
										{
											"begin": 7846,
											"end": 7859,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7831,
											"end": 7860,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7831,
											"end": 7860,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7831,
											"end": 7860,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 7831,
											"end": 7860,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7831,
											"end": 7860,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7831,
											"end": 7860,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 7831,
											"end": 7860,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7831,
											"end": 7860,
											"name": "tag",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 7831,
											"end": 7860,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7831,
											"end": 7860,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7831,
											"end": 7860,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7831,
											"end": 7860,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7831,
											"end": 7860,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7831,
											"end": 7860,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7831,
											"end": 7860,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7831,
											"end": 7860,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 7632,
											"end": 7868,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7632,
											"end": 7868,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 5880,
											"end": 6266,
											"name": "tag",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 5880,
											"end": 6266,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5944,
											"end": 5951,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5973,
											"end": 5999,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6002,
											"end": 6009,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 6002,
											"end": 6019,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6010,
											"end": 6018,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6002,
											"end": 6019,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6002,
											"end": 6019,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6002,
											"end": 6019,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6002,
											"end": 6019,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6002,
											"end": 6019,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6002,
											"end": 6019,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6002,
											"end": 6019,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6002,
											"end": 6019,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6002,
											"end": 6019,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6002,
											"end": 6019,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6002,
											"end": 6019,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6002,
											"end": 6019,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6002,
											"end": 6019,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6002,
											"end": 6019,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6002,
											"end": 6019,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 6002,
											"end": 6032,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 6002,
											"end": 6032,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6002,
											"end": 6032,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5973,
											"end": 6032,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5973,
											"end": 6032,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6043,
											"end": 6060,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6063,
											"end": 6179,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 6175,
											"end": 6178,
											"name": "PUSH",
											"source": 7,
											"value": "2710"
										},
										{
											"begin": 6063,
											"end": 6170,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 6163,
											"end": 6169,
											"name": "PUSH",
											"source": 7,
											"value": "15180"
										},
										{
											"begin": 6063,
											"end": 6158,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 6146,
											"end": 6157,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 6146,
											"end": 6157,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6063,
											"end": 6141,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 6086,
											"end": 6140,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 6106,
											"end": 6113,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 6106,
											"end": 6123,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6114,
											"end": 6122,
											"name": "DUP14",
											"source": 7
										},
										{
											"begin": 6106,
											"end": 6123,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6106,
											"end": 6123,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6106,
											"end": 6123,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6106,
											"end": 6123,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6106,
											"end": 6123,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6106,
											"end": 6123,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6106,
											"end": 6123,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6106,
											"end": 6123,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6106,
											"end": 6123,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6106,
											"end": 6123,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6106,
											"end": 6123,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6106,
											"end": 6123,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6106,
											"end": 6123,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6106,
											"end": 6123,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6106,
											"end": 6123,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 6106,
											"end": 6139,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6106,
											"end": 6139,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6106,
											"end": 6139,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6086,
											"end": 6101,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 6086,
											"end": 6105,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 6086,
											"end": 6105,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6086,
											"end": 6140,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6086,
											"end": 6140,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6086,
											"end": 6140,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6086,
											"end": 6140,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6086,
											"end": 6140,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6086,
											"end": 6140,
											"name": "tag",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 6086,
											"end": 6140,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6063,
											"end": 6081,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 6063,
											"end": 6085,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 6063,
											"end": 6085,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6063,
											"end": 6141,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6063,
											"end": 6141,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6063,
											"end": 6141,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6063,
											"end": 6141,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6063,
											"end": 6141,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6063,
											"end": 6141,
											"name": "tag",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 6063,
											"end": 6141,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6063,
											"end": 6145,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 6063,
											"end": 6145,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6063,
											"end": 6158,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6063,
											"end": 6158,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6063,
											"end": 6158,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6063,
											"end": 6158,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6063,
											"end": 6158,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6063,
											"end": 6158,
											"name": "tag",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 6063,
											"end": 6158,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6063,
											"end": 6162,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 6063,
											"end": 6162,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6063,
											"end": 6170,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6063,
											"end": 6170,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6063,
											"end": 6170,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6063,
											"end": 6170,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6063,
											"end": 6170,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6063,
											"end": 6170,
											"name": "tag",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 6063,
											"end": 6170,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6063,
											"end": 6174,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 6063,
											"end": 6174,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6063,
											"end": 6179,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6063,
											"end": 6179,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6063,
											"end": 6179,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6063,
											"end": 6179,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6063,
											"end": 6179,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6063,
											"end": 6179,
											"name": "tag",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 6063,
											"end": 6179,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6043,
											"end": 6179,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6043,
											"end": 6179,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6249,
											"end": 6258,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6207,
											"end": 6214,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 6207,
											"end": 6226,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6215,
											"end": 6225,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 6207,
											"end": 6226,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6207,
											"end": 6226,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6207,
											"end": 6226,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6207,
											"end": 6226,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6207,
											"end": 6226,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6207,
											"end": 6226,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6207,
											"end": 6226,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6207,
											"end": 6226,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6207,
											"end": 6226,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6207,
											"end": 6226,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6207,
											"end": 6226,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6207,
											"end": 6226,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6207,
											"end": 6226,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6207,
											"end": 6226,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6207,
											"end": 6226,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 6207,
											"end": 6246,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6207,
											"end": 6246,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6207,
											"end": 6246,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6207,
											"end": 6258,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 6207,
											"end": 6258,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6207,
											"end": 6258,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6207,
											"end": 6258,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 6207,
											"end": 6258,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6207,
											"end": 6258,
											"name": "tag",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 6207,
											"end": 6258,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6200,
											"end": 6258,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6200,
											"end": 6258,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6200,
											"end": 6258,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6200,
											"end": 6258,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5880,
											"end": 6266,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5880,
											"end": 6266,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5880,
											"end": 6266,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5880,
											"end": 6266,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "tag",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5339,
											"end": 5433,
											"name": "tag",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 5339,
											"end": 5433,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5385,
											"end": 5392,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5414,
											"end": 5425,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 5414,
											"end": 5425,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5407,
											"end": 5425,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5407,
											"end": 5425,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5339,
											"end": 5433,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5339,
											"end": 5433,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1206,
											"end": 1232,
											"name": "tag",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 1206,
											"end": 1232,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1206,
											"end": 1232,
											"name": "PUSH",
											"source": 7,
											"value": "C"
										},
										{
											"begin": 1206,
											"end": 1232,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1206,
											"end": 1232,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1206,
											"end": 1232,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1114,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9726,
											"end": 10154,
											"name": "tag",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 9726,
											"end": 10154,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9795,
											"end": 9802,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9825,
											"end": 9848,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9851,
											"end": 9852,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9825,
											"end": 9852,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9825,
											"end": 9852,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9878,
											"end": 9879,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9869,
											"end": 9874,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9869,
											"end": 9879,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 9869,
											"end": 9893,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9869,
											"end": 9893,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 9869,
											"end": 9893,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9869,
											"end": 9893,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9892,
											"end": 9893,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 9883,
											"end": 9888,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9883,
											"end": 9893,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 9869,
											"end": 9893,
											"name": "tag",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 9869,
											"end": 9893,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9865,
											"end": 10111,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9865,
											"end": 10111,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 9865,
											"end": 10111,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9913,
											"end": 9930,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 9913,
											"end": 9930,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 9895,
											"end": 9930,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9895,
											"end": 9930,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9865,
											"end": 10111,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 9865,
											"end": 10111,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9865,
											"end": 10111,
											"name": "tag",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 9865,
											"end": 10111,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9959,
											"end": 9960,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 9950,
											"end": 9955,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9950,
											"end": 9960,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 9946,
											"end": 10111,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9946,
											"end": 10111,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 9946,
											"end": 10111,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9980,
											"end": 9997,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 9980,
											"end": 9997,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 9962,
											"end": 9997,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9962,
											"end": 9997,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9946,
											"end": 10111,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 9946,
											"end": 10111,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9946,
											"end": 10111,
											"name": "tag",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 9946,
											"end": 10111,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10026,
											"end": 10027,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 10017,
											"end": 10022,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10017,
											"end": 10027,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 10013,
											"end": 10111,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10013,
											"end": 10111,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 10013,
											"end": 10111,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10047,
											"end": 10064,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 10047,
											"end": 10064,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 10029,
											"end": 10064,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10029,
											"end": 10064,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10013,
											"end": 10111,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 10013,
											"end": 10111,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10013,
											"end": 10111,
											"name": "tag",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 10013,
											"end": 10111,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10093,
											"end": 10094,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 10089,
											"end": 10090,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10089,
											"end": 10094,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 10080,
											"end": 10111,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 10080,
											"end": 10111,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10080,
											"end": 10111,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10080,
											"end": 10111,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 10080,
											"end": 10111,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10080,
											"end": 10111,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10080,
											"end": 10111,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10080,
											"end": 10111,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 10080,
											"end": 10111,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10080,
											"end": 10111,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 10080,
											"end": 10111,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10080,
											"end": 10111,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 10080,
											"end": 10111,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 10080,
											"end": 10111,
											"name": "tag",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 10080,
											"end": 10111,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10080,
											"end": 10111,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10080,
											"end": 10111,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 10080,
											"end": 10111,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10080,
											"end": 10111,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10080,
											"end": 10111,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 10080,
											"end": 10111,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10080,
											"end": 10111,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 10080,
											"end": 10111,
											"name": "tag",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 10080,
											"end": 10111,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10013,
											"end": 10111,
											"name": "tag",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 10013,
											"end": 10111,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9946,
											"end": 10111,
											"name": "tag",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 9946,
											"end": 10111,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9865,
											"end": 10111,
											"name": "tag",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 9865,
											"end": 10111,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10131,
											"end": 10146,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10124,
											"end": 10146,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10124,
											"end": 10146,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10124,
											"end": 10146,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9726,
											"end": 10154,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9726,
											"end": 10154,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9726,
											"end": 10154,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9726,
											"end": 10154,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 7876,
											"end": 8150,
											"name": "tag",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 7876,
											"end": 8150,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8002,
											"end": 8003,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7981,
											"end": 7999,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7981,
											"end": 8003,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 7973,
											"end": 8034,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 7973,
											"end": 8034,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7973,
											"end": 8034,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7973,
											"end": 8034,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7973,
											"end": 8034,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7973,
											"end": 8034,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7973,
											"end": 8034,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7973,
											"end": 8034,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7973,
											"end": 8034,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7973,
											"end": 8034,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 7973,
											"end": 8034,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7973,
											"end": 8034,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 7973,
											"end": 8034,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7973,
											"end": 8034,
											"name": "tag",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 7973,
											"end": 8034,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7973,
											"end": 8034,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7973,
											"end": 8034,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7973,
											"end": 8034,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7973,
											"end": 8034,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7973,
											"end": 8034,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7973,
											"end": 8034,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7973,
											"end": 8034,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7973,
											"end": 8034,
											"name": "tag",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 7973,
											"end": 8034,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8067,
											"end": 8085,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8047,
											"end": 8064,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 8047,
											"end": 8085,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8047,
											"end": 8085,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8047,
											"end": 8085,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 8047,
											"end": 8085,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8103,
											"end": 8142,
											"name": "PUSH",
											"source": 7,
											"value": "150C688DD7595BF7862B8AB1FE46756450EB7D731037942B3BBC46F3F0E21B81"
										},
										{
											"begin": 8123,
											"end": 8141,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8103,
											"end": 8142,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8103,
											"end": 8142,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8103,
											"end": 8142,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 8103,
											"end": 8142,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8103,
											"end": 8142,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8103,
											"end": 8142,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 8103,
											"end": 8142,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8103,
											"end": 8142,
											"name": "tag",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 8103,
											"end": 8142,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8103,
											"end": 8142,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8103,
											"end": 8142,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8103,
											"end": 8142,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8103,
											"end": 8142,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8103,
											"end": 8142,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8103,
											"end": 8142,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8103,
											"end": 8142,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 7876,
											"end": 8150,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7876,
											"end": 8150,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 7397,
											"end": 7624,
											"name": "tag",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 7397,
											"end": 7624,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7505,
											"end": 7506,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7490,
											"end": 7502,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7490,
											"end": 7506,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 7482,
											"end": 7524,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 7482,
											"end": 7524,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7482,
											"end": 7524,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7482,
											"end": 7524,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7482,
											"end": 7524,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7482,
											"end": 7524,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7482,
											"end": 7524,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7482,
											"end": 7524,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7482,
											"end": 7524,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7482,
											"end": 7524,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 7482,
											"end": 7524,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7482,
											"end": 7524,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 7482,
											"end": 7524,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7482,
											"end": 7524,
											"name": "tag",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 7482,
											"end": 7524,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7482,
											"end": 7524,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7482,
											"end": 7524,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7482,
											"end": 7524,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7482,
											"end": 7524,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7482,
											"end": 7524,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7482,
											"end": 7524,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7482,
											"end": 7524,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7482,
											"end": 7524,
											"name": "tag",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 7482,
											"end": 7524,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7559,
											"end": 7571,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7545,
											"end": 7556,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 7545,
											"end": 7571,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7545,
											"end": 7571,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7545,
											"end": 7571,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 7545,
											"end": 7571,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7589,
											"end": 7616,
											"name": "PUSH",
											"source": 7,
											"value": "1946FB78C7CA778B54D82CABAAC5BA67CF446F58D0FF1F8CEAEBB6150E54E44F"
										},
										{
											"begin": 7603,
											"end": 7615,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7589,
											"end": 7616,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7589,
											"end": 7616,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7589,
											"end": 7616,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 7589,
											"end": 7616,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7589,
											"end": 7616,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7589,
											"end": 7616,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 7589,
											"end": 7616,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7589,
											"end": 7616,
											"name": "tag",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 7589,
											"end": 7616,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7589,
											"end": 7616,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7589,
											"end": 7616,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7589,
											"end": 7616,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7589,
											"end": 7616,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7589,
											"end": 7616,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7589,
											"end": 7616,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7589,
											"end": 7616,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 7397,
											"end": 7624,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7397,
											"end": 7624,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 3631,
											"end": 4211,
											"name": "tag",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 3631,
											"end": 4211,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3708,
											"end": 3709,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3698,
											"end": 3705,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3698,
											"end": 3709,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3690,
											"end": 3745,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "323"
										},
										{
											"begin": 3690,
											"end": 3745,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3690,
											"end": 3745,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3690,
											"end": 3745,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3690,
											"end": 3745,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3690,
											"end": 3745,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3690,
											"end": 3745,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3690,
											"end": 3745,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3690,
											"end": 3745,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3690,
											"end": 3745,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "324"
										},
										{
											"begin": 3690,
											"end": 3745,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3690,
											"end": 3745,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 3690,
											"end": 3745,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3690,
											"end": 3745,
											"name": "tag",
											"source": 7,
											"value": "324"
										},
										{
											"begin": 3690,
											"end": 3745,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3690,
											"end": 3745,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3690,
											"end": 3745,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3690,
											"end": 3745,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3690,
											"end": 3745,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3690,
											"end": 3745,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3690,
											"end": 3745,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3690,
											"end": 3745,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3690,
											"end": 3745,
											"name": "tag",
											"source": 7,
											"value": "323"
										},
										{
											"begin": 3690,
											"end": 3745,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3794,
											"end": 3801,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3764,
											"end": 3769,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 3764,
											"end": 3769,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3764,
											"end": 3769,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3764,
											"end": 3769,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3764,
											"end": 3769,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3764,
											"end": 3769,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 3764,
											"end": 3769,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 3764,
											"end": 3769,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3764,
											"end": 3769,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 3764,
											"end": 3769,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3764,
											"end": 3769,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3764,
											"end": 3779,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3764,
											"end": 3779,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3764,
											"end": 3779,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 3780,
											"end": 3790,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "325"
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "tag",
											"source": 7,
											"value": "325"
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "326"
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "tag",
											"source": 7,
											"value": "326"
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "328"
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "tag",
											"source": 7,
											"value": "328"
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "329"
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "tag",
											"source": 7,
											"value": "329"
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3764,
											"end": 3801,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3756,
											"end": 3819,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 3756,
											"end": 3819,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3756,
											"end": 3819,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3756,
											"end": 3819,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3756,
											"end": 3819,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3756,
											"end": 3819,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3756,
											"end": 3819,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3756,
											"end": 3819,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3756,
											"end": 3819,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3756,
											"end": 3819,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "331"
										},
										{
											"begin": 3756,
											"end": 3819,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3756,
											"end": 3819,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 3756,
											"end": 3819,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3756,
											"end": 3819,
											"name": "tag",
											"source": 7,
											"value": "331"
										},
										{
											"begin": 3756,
											"end": 3819,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3756,
											"end": 3819,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3756,
											"end": 3819,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3756,
											"end": 3819,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3756,
											"end": 3819,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3756,
											"end": 3819,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3756,
											"end": 3819,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3756,
											"end": 3819,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3756,
											"end": 3819,
											"name": "tag",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 3756,
											"end": 3819,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3868,
											"end": 3870,
											"name": "PUSH",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 3838,
											"end": 3845,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 3838,
											"end": 3857,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3846,
											"end": 3856,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3838,
											"end": 3857,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3838,
											"end": 3857,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3838,
											"end": 3857,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3838,
											"end": 3857,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3838,
											"end": 3857,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3838,
											"end": 3857,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3838,
											"end": 3857,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3838,
											"end": 3857,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3838,
											"end": 3857,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3838,
											"end": 3857,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3838,
											"end": 3857,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3838,
											"end": 3857,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3838,
											"end": 3857,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3838,
											"end": 3857,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3838,
											"end": 3857,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3838,
											"end": 3864,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 3838,
											"end": 3864,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3838,
											"end": 3864,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3838,
											"end": 3870,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 3830,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "332"
										},
										{
											"begin": 3830,
											"end": 3896,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3830,
											"end": 3896,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3830,
											"end": 3896,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3830,
											"end": 3896,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3830,
											"end": 3896,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3830,
											"end": 3896,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3830,
											"end": 3896,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3830,
											"end": 3896,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3830,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "333"
										},
										{
											"begin": 3830,
											"end": 3896,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3830,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "334"
										},
										{
											"begin": 3830,
											"end": 3896,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3830,
											"end": 3896,
											"name": "tag",
											"source": 7,
											"value": "333"
										},
										{
											"begin": 3830,
											"end": 3896,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3830,
											"end": 3896,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3830,
											"end": 3896,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3830,
											"end": 3896,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3830,
											"end": 3896,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3830,
											"end": 3896,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3830,
											"end": 3896,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3830,
											"end": 3896,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3830,
											"end": 3896,
											"name": "tag",
											"source": 7,
											"value": "332"
										},
										{
											"begin": 3830,
											"end": 3896,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3917,
											"end": 3931,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 3917,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 3917,
											"end": 3931,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3917,
											"end": 3931,
											"name": "tag",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 3917,
											"end": 3931,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3952,
											"end": 4010,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "336"
										},
										{
											"begin": 3975,
											"end": 3985,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3995,
											"end": 3999,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 4002,
											"end": 4009,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3952,
											"end": 3957,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 3952,
											"end": 3957,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3957,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3952,
											"end": 3957,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3952,
											"end": 3957,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3952,
											"end": 3957,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 3952,
											"end": 3957,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 3952,
											"end": 3957,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3952,
											"end": 3957,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 3952,
											"end": 3957,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3957,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3952,
											"end": 3974,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3974,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3952,
											"end": 3974,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "337"
										},
										{
											"begin": 3952,
											"end": 3974,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3952,
											"end": 4010,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3952,
											"end": 4010,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3952,
											"end": 4010,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3952,
											"end": 4010,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3952,
											"end": 4010,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 4010,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3952,
											"end": 4010,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3952,
											"end": 4010,
											"name": "tag",
											"source": 7,
											"value": "336"
										},
										{
											"begin": 3952,
											"end": 4010,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4056,
											"end": 4101,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 4093,
											"end": 4100,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4056,
											"end": 4063,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 4056,
											"end": 4075,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4064,
											"end": 4074,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4056,
											"end": 4075,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4056,
											"end": 4075,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4056,
											"end": 4075,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4056,
											"end": 4075,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4056,
											"end": 4075,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4056,
											"end": 4075,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4056,
											"end": 4075,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4056,
											"end": 4075,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4056,
											"end": 4075,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4056,
											"end": 4075,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4056,
											"end": 4075,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4056,
											"end": 4075,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4056,
											"end": 4075,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4056,
											"end": 4075,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4056,
											"end": 4075,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4056,
											"end": 4088,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4056,
											"end": 4088,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4056,
											"end": 4088,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4056,
											"end": 4092,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 4056,
											"end": 4092,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4056,
											"end": 4101,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4056,
											"end": 4101,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4056,
											"end": 4101,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4056,
											"end": 4101,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4056,
											"end": 4101,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4056,
											"end": 4101,
											"name": "tag",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 4056,
											"end": 4101,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4021,
											"end": 4028,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 4021,
											"end": 4040,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4029,
											"end": 4039,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4021,
											"end": 4040,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4021,
											"end": 4040,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4021,
											"end": 4040,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4021,
											"end": 4040,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4021,
											"end": 4040,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4021,
											"end": 4040,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4021,
											"end": 4040,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4021,
											"end": 4040,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4021,
											"end": 4040,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4021,
											"end": 4040,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4021,
											"end": 4040,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4021,
											"end": 4040,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4021,
											"end": 4040,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4021,
											"end": 4040,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4021,
											"end": 4040,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4021,
											"end": 4053,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4021,
											"end": 4053,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4021,
											"end": 4101,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4021,
											"end": 4101,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4021,
											"end": 4101,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 4021,
											"end": 4101,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4126,
											"end": 4150,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "339"
										},
										{
											"begin": 4142,
											"end": 4149,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4126,
											"end": 4137,
											"name": "PUSH",
											"source": 7,
											"value": "C"
										},
										{
											"begin": 4126,
											"end": 4137,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4126,
											"end": 4141,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 4126,
											"end": 4141,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4126,
											"end": 4150,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4126,
											"end": 4150,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4126,
											"end": 4150,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4126,
											"end": 4150,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4126,
											"end": 4150,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4126,
											"end": 4150,
											"name": "tag",
											"source": 7,
											"value": "339"
										},
										{
											"begin": 4126,
											"end": 4150,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4112,
											"end": 4123,
											"name": "PUSH",
											"source": 7,
											"value": "C"
										},
										{
											"begin": 4112,
											"end": 4150,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4112,
											"end": 4150,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4112,
											"end": 4150,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 4112,
											"end": 4150,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4176,
											"end": 4203,
											"name": "PUSH",
											"source": 7,
											"value": "9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D"
										},
										{
											"begin": 4183,
											"end": 4193,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4195,
											"end": 4202,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4176,
											"end": 4203,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4176,
											"end": 4203,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4176,
											"end": 4203,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 4176,
											"end": 4203,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4176,
											"end": 4203,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4176,
											"end": 4203,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4176,
											"end": 4203,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 4176,
											"end": 4203,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4176,
											"end": 4203,
											"name": "tag",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 4176,
											"end": 4203,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4176,
											"end": 4203,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4176,
											"end": 4203,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4176,
											"end": 4203,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4176,
											"end": 4203,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4176,
											"end": 4203,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4176,
											"end": 4203,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4176,
											"end": 4203,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 3631,
											"end": 4211,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3631,
											"end": 4211,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 8900,
											"end": 9078,
											"name": "tag",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 8900,
											"end": 9078,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "342"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "342"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "343"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "343"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "345"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "345"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9000,
											"end": 9001,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8987,
											"end": 8997,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8987,
											"end": 9001,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 8978,
											"end": 9019,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "347"
										},
										{
											"begin": 8978,
											"end": 9019,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8978,
											"end": 9019,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8978,
											"end": 9019,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8978,
											"end": 9019,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8978,
											"end": 9019,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8978,
											"end": 9019,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8978,
											"end": 9019,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8978,
											"end": 9019,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8978,
											"end": 9019,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "348"
										},
										{
											"begin": 8978,
											"end": 9019,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8978,
											"end": 9019,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 8978,
											"end": 9019,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8978,
											"end": 9019,
											"name": "tag",
											"source": 7,
											"value": "348"
										},
										{
											"begin": 8978,
											"end": 9019,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8978,
											"end": 9019,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8978,
											"end": 9019,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8978,
											"end": 9019,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8978,
											"end": 9019,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8978,
											"end": 9019,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8978,
											"end": 9019,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8978,
											"end": 9019,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8978,
											"end": 9019,
											"name": "tag",
											"source": 7,
											"value": "347"
										},
										{
											"begin": 8978,
											"end": 9019,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9060,
											"end": 9070,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9040,
											"end": 9057,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 9040,
											"end": 9070,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9040,
											"end": 9070,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9040,
											"end": 9070,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 9040,
											"end": 9070,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8900,
											"end": 9078,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8900,
											"end": 9078,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 4433,
											"end": 4622,
											"name": "tag",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 4433,
											"end": 4622,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4495,
											"end": 4502,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4553,
											"end": 4555,
											"name": "PUSH",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 4525,
											"end": 4549,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "350"
										},
										{
											"begin": 4540,
											"end": 4548,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4525,
											"end": 4539,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 4525,
											"end": 4549,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4525,
											"end": 4549,
											"name": "tag",
											"source": 7,
											"value": "350"
										},
										{
											"begin": 4525,
											"end": 4549,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4525,
											"end": 4555,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4517,
											"end": 4574,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 4517,
											"end": 4574,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4517,
											"end": 4574,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4517,
											"end": 4574,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4517,
											"end": 4574,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4517,
											"end": 4574,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4517,
											"end": 4574,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4517,
											"end": 4574,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4517,
											"end": 4574,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4517,
											"end": 4574,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 4517,
											"end": 4574,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4517,
											"end": 4574,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "353"
										},
										{
											"begin": 4517,
											"end": 4574,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4517,
											"end": 4574,
											"name": "tag",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 4517,
											"end": 4574,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4517,
											"end": 4574,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4517,
											"end": 4574,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4517,
											"end": 4574,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4517,
											"end": 4574,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4517,
											"end": 4574,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4517,
											"end": 4574,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4517,
											"end": 4574,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4517,
											"end": 4574,
											"name": "tag",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 4517,
											"end": 4574,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4592,
											"end": 4599,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 4592,
											"end": 4609,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4600,
											"end": 4608,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4592,
											"end": 4609,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4592,
											"end": 4609,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4592,
											"end": 4609,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4592,
											"end": 4609,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4592,
											"end": 4609,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4592,
											"end": 4609,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4592,
											"end": 4609,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4592,
											"end": 4609,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4592,
											"end": 4609,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4592,
											"end": 4609,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4592,
											"end": 4609,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4592,
											"end": 4609,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4592,
											"end": 4609,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4592,
											"end": 4609,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4592,
											"end": 4609,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4592,
											"end": 4614,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 4592,
											"end": 4614,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4592,
											"end": 4614,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4585,
											"end": 4614,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4585,
											"end": 4614,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4433,
											"end": 4622,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4433,
											"end": 4622,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4433,
											"end": 4622,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4433,
											"end": 4622,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 8540,
											"end": 8712,
											"name": "tag",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 8540,
											"end": 8712,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "357"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "358"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "358"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "357"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8642,
											"end": 8643,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8629,
											"end": 8639,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8629,
											"end": 8643,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 8620,
											"end": 8661,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "360"
										},
										{
											"begin": 8620,
											"end": 8661,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8620,
											"end": 8661,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8620,
											"end": 8661,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8620,
											"end": 8661,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8620,
											"end": 8661,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8620,
											"end": 8661,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8620,
											"end": 8661,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8620,
											"end": 8661,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8620,
											"end": 8661,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "361"
										},
										{
											"begin": 8620,
											"end": 8661,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8620,
											"end": 8661,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 8620,
											"end": 8661,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8620,
											"end": 8661,
											"name": "tag",
											"source": 7,
											"value": "361"
										},
										{
											"begin": 8620,
											"end": 8661,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8620,
											"end": 8661,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8620,
											"end": 8661,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8620,
											"end": 8661,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8620,
											"end": 8661,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8620,
											"end": 8661,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8620,
											"end": 8661,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8620,
											"end": 8661,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8620,
											"end": 8661,
											"name": "tag",
											"source": 7,
											"value": "360"
										},
										{
											"begin": 8620,
											"end": 8661,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8694,
											"end": 8704,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8674,
											"end": 8691,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 8674,
											"end": 8704,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8674,
											"end": 8704,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8674,
											"end": 8704,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 8674,
											"end": 8704,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8540,
											"end": 8712,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8540,
											"end": 8712,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 8344,
											"end": 8528,
											"name": "tag",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 8344,
											"end": 8528,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "363"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "363"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "364"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "364"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "365"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "366"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "366"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "365"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8458,
											"end": 8459,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8445,
											"end": 8455,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8445,
											"end": 8459,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 8436,
											"end": 8477,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "368"
										},
										{
											"begin": 8436,
											"end": 8477,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8436,
											"end": 8477,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8436,
											"end": 8477,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8436,
											"end": 8477,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8436,
											"end": 8477,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8436,
											"end": 8477,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8436,
											"end": 8477,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8436,
											"end": 8477,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8436,
											"end": 8477,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "369"
										},
										{
											"begin": 8436,
											"end": 8477,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8436,
											"end": 8477,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 8436,
											"end": 8477,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8436,
											"end": 8477,
											"name": "tag",
											"source": 7,
											"value": "369"
										},
										{
											"begin": 8436,
											"end": 8477,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8436,
											"end": 8477,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8436,
											"end": 8477,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8436,
											"end": 8477,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8436,
											"end": 8477,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8436,
											"end": 8477,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8436,
											"end": 8477,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8436,
											"end": 8477,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8436,
											"end": 8477,
											"name": "tag",
											"source": 7,
											"value": "368"
										},
										{
											"begin": 8436,
											"end": 8477,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8510,
											"end": 8520,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8490,
											"end": 8507,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 8490,
											"end": 8520,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8490,
											"end": 8520,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8490,
											"end": 8520,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 8490,
											"end": 8520,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8344,
											"end": 8528,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8344,
											"end": 8528,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 5441,
											"end": 5601,
											"name": "tag",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 5441,
											"end": 5601,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5498,
											"end": 5505,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5540,
											"end": 5541,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5532,
											"end": 5536,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5532,
											"end": 5541,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 5528,
											"end": 5563,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5528,
											"end": 5563,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "371"
										},
										{
											"begin": 5528,
											"end": 5563,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5550,
											"end": 5563,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 5550,
											"end": 5563,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5543,
											"end": 5563,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5543,
											"end": 5563,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5543,
											"end": 5563,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "370"
										},
										{
											"begin": 5543,
											"end": 5563,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5528,
											"end": 5563,
											"name": "tag",
											"source": 7,
											"value": "371"
										},
										{
											"begin": 5528,
											"end": 5563,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5581,
											"end": 5593,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 5581,
											"end": 5593,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5574,
											"end": 5593,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5574,
											"end": 5593,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5441,
											"end": 5601,
											"name": "tag",
											"source": 7,
											"value": "370"
										},
										{
											"begin": 5441,
											"end": 5601,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5441,
											"end": 5601,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5441,
											"end": 5601,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5441,
											"end": 5601,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5441,
											"end": 5601,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "373"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "373"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "374"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "374"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "375"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "376"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "376"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "375"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2026,
											"end": 2027,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2014,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "378"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "379"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "380"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "tag",
											"source": 0,
											"value": "379"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "tag",
											"source": 0,
											"value": "378"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "381"
										},
										{
											"begin": 2100,
											"end": 2108,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2099,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "tag",
											"source": 0,
											"value": "381"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5195,
											"end": 5331,
											"name": "tag",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 5195,
											"end": 5331,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5256,
											"end": 5263,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5293,
											"end": 5300,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 5293,
											"end": 5310,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5301,
											"end": 5309,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5293,
											"end": 5310,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5293,
											"end": 5310,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5293,
											"end": 5310,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5293,
											"end": 5310,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5293,
											"end": 5310,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5293,
											"end": 5310,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5293,
											"end": 5310,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5293,
											"end": 5310,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5293,
											"end": 5310,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5293,
											"end": 5310,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5293,
											"end": 5310,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5293,
											"end": 5310,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5293,
											"end": 5310,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5293,
											"end": 5310,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5293,
											"end": 5310,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 5293,
											"end": 5323,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 5293,
											"end": 5323,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5293,
											"end": 5323,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5286,
											"end": 5323,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5286,
											"end": 5323,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5195,
											"end": 5331,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5195,
											"end": 5331,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5195,
											"end": 5331,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5195,
											"end": 5331,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 4634,
											"end": 4758,
											"name": "tag",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 4634,
											"end": 4758,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4697,
											"end": 4704,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4726,
											"end": 4733,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 4726,
											"end": 4743,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4734,
											"end": 4742,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4726,
											"end": 4743,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4726,
											"end": 4743,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4726,
											"end": 4743,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4726,
											"end": 4743,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4726,
											"end": 4743,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4726,
											"end": 4743,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4726,
											"end": 4743,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4726,
											"end": 4743,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4726,
											"end": 4743,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4726,
											"end": 4743,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4726,
											"end": 4743,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4726,
											"end": 4743,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4726,
											"end": 4743,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4726,
											"end": 4743,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4726,
											"end": 4743,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4726,
											"end": 4750,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 4726,
											"end": 4750,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4726,
											"end": 4750,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4719,
											"end": 4750,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4719,
											"end": 4750,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4634,
											"end": 4758,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4634,
											"end": 4758,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4634,
											"end": 4758,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4634,
											"end": 4758,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2200,
											"end": 2654,
											"name": "tag",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 2200,
											"end": 2654,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2252,
											"end": 2278,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2281,
											"end": 2288,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 2281,
											"end": 2300,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2289,
											"end": 2299,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2300,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2281,
											"end": 2300,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2300,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2281,
											"end": 2300,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2300,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2300,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2300,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2281,
											"end": 2300,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2300,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2300,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2300,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2300,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2281,
											"end": 2300,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2300,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2281,
											"end": 2300,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2313,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2281,
											"end": 2313,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2313,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2252,
											"end": 2313,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2252,
											"end": 2313,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2334,
											"end": 2351,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2354,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "386"
										},
										{
											"begin": 2471,
											"end": 2474,
											"name": "PUSH",
											"source": 7,
											"value": "2710"
										},
										{
											"begin": 2354,
											"end": 2466,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "387"
										},
										{
											"begin": 2456,
											"end": 2465,
											"name": "PUSH",
											"source": 7,
											"value": "3C"
										},
										{
											"begin": 2354,
											"end": 2451,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "388"
										},
										{
											"begin": 2439,
											"end": 2450,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 2439,
											"end": 2450,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2354,
											"end": 2434,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "389"
										},
										{
											"begin": 2377,
											"end": 2433,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "390"
										},
										{
											"begin": 2397,
											"end": 2404,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 2397,
											"end": 2416,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2405,
											"end": 2415,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2397,
											"end": 2416,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2397,
											"end": 2416,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2397,
											"end": 2416,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2397,
											"end": 2416,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2397,
											"end": 2416,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2397,
											"end": 2416,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2397,
											"end": 2416,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2397,
											"end": 2416,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2397,
											"end": 2416,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2397,
											"end": 2416,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2397,
											"end": 2416,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2397,
											"end": 2416,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2397,
											"end": 2416,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2397,
											"end": 2416,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2397,
											"end": 2416,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2397,
											"end": 2432,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2397,
											"end": 2432,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2397,
											"end": 2432,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2377,
											"end": 2392,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 2377,
											"end": 2396,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 2377,
											"end": 2396,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2377,
											"end": 2433,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2377,
											"end": 2433,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2377,
											"end": 2433,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2377,
											"end": 2433,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2377,
											"end": 2433,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2377,
											"end": 2433,
											"name": "tag",
											"source": 7,
											"value": "390"
										},
										{
											"begin": 2377,
											"end": 2433,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2354,
											"end": 2372,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 2354,
											"end": 2376,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 2354,
											"end": 2376,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2354,
											"end": 2434,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2354,
											"end": 2434,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2354,
											"end": 2434,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2354,
											"end": 2434,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2354,
											"end": 2434,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2354,
											"end": 2434,
											"name": "tag",
											"source": 7,
											"value": "389"
										},
										{
											"begin": 2354,
											"end": 2434,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2354,
											"end": 2438,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 2354,
											"end": 2438,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2354,
											"end": 2451,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2354,
											"end": 2451,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2354,
											"end": 2451,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2354,
											"end": 2451,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2354,
											"end": 2451,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2354,
											"end": 2451,
											"name": "tag",
											"source": 7,
											"value": "388"
										},
										{
											"begin": 2354,
											"end": 2451,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2354,
											"end": 2455,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 2354,
											"end": 2455,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2354,
											"end": 2466,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2354,
											"end": 2466,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2354,
											"end": 2466,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2354,
											"end": 2466,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2354,
											"end": 2466,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2354,
											"end": 2466,
											"name": "tag",
											"source": 7,
											"value": "387"
										},
										{
											"begin": 2354,
											"end": 2466,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2354,
											"end": 2470,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 2354,
											"end": 2470,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2354,
											"end": 2475,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2354,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2354,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2354,
											"end": 2475,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2354,
											"end": 2475,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2354,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "386"
										},
										{
											"begin": 2354,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2334,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2334,
											"end": 2475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2528,
											"end": 2582,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "391"
										},
										{
											"begin": 2572,
											"end": 2581,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2528,
											"end": 2535,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 2528,
											"end": 2547,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2536,
											"end": 2546,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2528,
											"end": 2547,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2528,
											"end": 2547,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2528,
											"end": 2547,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2528,
											"end": 2547,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2528,
											"end": 2547,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2528,
											"end": 2547,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2528,
											"end": 2547,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2528,
											"end": 2547,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2528,
											"end": 2547,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2528,
											"end": 2547,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2528,
											"end": 2547,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2528,
											"end": 2547,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2528,
											"end": 2547,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2528,
											"end": 2547,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2528,
											"end": 2547,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2528,
											"end": 2567,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2528,
											"end": 2567,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2528,
											"end": 2567,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2528,
											"end": 2571,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 2528,
											"end": 2571,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2528,
											"end": 2582,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2528,
											"end": 2582,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2528,
											"end": 2582,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2528,
											"end": 2582,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2528,
											"end": 2582,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2528,
											"end": 2582,
											"name": "tag",
											"source": 7,
											"value": "391"
										},
										{
											"begin": 2528,
											"end": 2582,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2486,
											"end": 2493,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 2486,
											"end": 2505,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2494,
											"end": 2504,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2486,
											"end": 2505,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2486,
											"end": 2505,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2486,
											"end": 2505,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2486,
											"end": 2505,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2486,
											"end": 2505,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2486,
											"end": 2505,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2486,
											"end": 2505,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2486,
											"end": 2505,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2486,
											"end": 2505,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2486,
											"end": 2505,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2486,
											"end": 2505,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2486,
											"end": 2505,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2486,
											"end": 2505,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2486,
											"end": 2505,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2486,
											"end": 2505,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2486,
											"end": 2525,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2486,
											"end": 2525,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2486,
											"end": 2582,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2486,
											"end": 2582,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2486,
											"end": 2582,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2486,
											"end": 2582,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2631,
											"end": 2646,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 2593,
											"end": 2600,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 2593,
											"end": 2612,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2601,
											"end": 2611,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2593,
											"end": 2612,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2593,
											"end": 2612,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2593,
											"end": 2612,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2593,
											"end": 2612,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2593,
											"end": 2612,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2593,
											"end": 2612,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2593,
											"end": 2612,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2593,
											"end": 2612,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2593,
											"end": 2612,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2593,
											"end": 2612,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2593,
											"end": 2612,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2593,
											"end": 2612,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2593,
											"end": 2612,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2593,
											"end": 2612,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2593,
											"end": 2612,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2593,
											"end": 2628,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2593,
											"end": 2628,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2593,
											"end": 2646,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2593,
											"end": 2646,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2593,
											"end": 2646,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2593,
											"end": 2646,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2231,
											"end": 2654,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2231,
											"end": 2654,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2200,
											"end": 2654,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "tag",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3166,
											"end": 3173,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3196,
											"end": 3197,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3192,
											"end": 3193,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "393"
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "394"
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "tag",
											"source": 4,
											"value": "393"
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3185,
											"end": 3197,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3185,
											"end": 3197,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "tag",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3894,
											"end": 3901,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3924,
											"end": 3925,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3920,
											"end": 3921,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "396"
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "397"
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "tag",
											"source": 4,
											"value": "396"
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3913,
											"end": 3925,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3913,
											"end": 3925,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "tag",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3509,
											"end": 3516,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3539,
											"end": 3540,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3535,
											"end": 3536,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "399"
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "400"
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "tag",
											"source": 4,
											"value": "399"
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3528,
											"end": 3540,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3528,
											"end": 3540,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "tag",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2799,
											"end": 2806,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2829,
											"end": 2830,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2825,
											"end": 2826,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "402"
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "281"
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "tag",
											"source": 4,
											"value": "402"
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2818,
											"end": 2830,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2818,
											"end": 2830,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 290,
											"end": 467,
											"name": "tag",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 290,
											"end": 467,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 373,
											"end": 459,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "404"
										},
										{
											"begin": 393,
											"end": 398,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 423,
											"end": 446,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 423,
											"end": 446,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 423,
											"end": 446,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 448,
											"end": 450,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 452,
											"end": 457,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "405"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "tag",
											"source": 6,
											"value": "405"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 373,
											"end": 392,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "406"
										},
										{
											"begin": 373,
											"end": 459,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 373,
											"end": 459,
											"name": "tag",
											"source": 6,
											"value": "404"
										},
										{
											"begin": 373,
											"end": 459,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 290,
											"end": 467,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 290,
											"end": 467,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 290,
											"end": 467,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 290,
											"end": 467,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "tag",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2368,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2387,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2384,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2378,
											"end": 2384,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2449,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2431,
											"end": 2439,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2333,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 475,
											"end": 680,
											"name": "tag",
											"source": 6,
											"value": "337"
										},
										{
											"begin": 475,
											"end": 680,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 576,
											"end": 672,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "409"
										},
										{
											"begin": 596,
											"end": 601,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 626,
											"end": 653,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 626,
											"end": 653,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 626,
											"end": 653,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 655,
											"end": 659,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 661,
											"end": 663,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 665,
											"end": 670,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "410"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "411"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "tag",
											"source": 6,
											"value": "410"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 576,
											"end": 595,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "406"
										},
										{
											"begin": 576,
											"end": 672,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 576,
											"end": 672,
											"name": "tag",
											"source": 6,
											"value": "409"
										},
										{
											"begin": 576,
											"end": 672,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 475,
											"end": 680,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 475,
											"end": 680,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 475,
											"end": 680,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 475,
											"end": 680,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 475,
											"end": 680,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2599,
											"end": 3368,
											"name": "tag",
											"source": 6,
											"value": "406"
										},
										{
											"begin": 2599,
											"end": 3368,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3031,
											"end": 3054,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "413"
										},
										{
											"begin": 3085,
											"end": 3089,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "PUSH",
											"source": 6,
											"value": "5361666542455032303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3065,
											"end": 3070,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3084,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3057,
											"end": 3084,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "414"
										},
										{
											"begin": 3057,
											"end": 3084,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "tag",
											"source": 6,
											"value": "413"
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3031,
											"end": 3126,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3031,
											"end": 3126,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3161,
											"end": 3162,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3141,
											"end": 3151,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 3158,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 3162,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3361,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "415"
										},
										{
											"begin": 3137,
											"end": 3361,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3283,
											"end": 3293,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "416"
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "417"
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "tag",
											"source": 6,
											"value": "416"
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "418"
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "419"
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "420"
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "tag",
											"source": 6,
											"value": "419"
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "tag",
											"source": 6,
											"value": "418"
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3361,
											"name": "tag",
											"source": 6,
											"value": "415"
										},
										{
											"begin": 3137,
											"end": 3361,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2669,
											"end": 3368,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2599,
											"end": 3368,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2599,
											"end": 3368,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2599,
											"end": 3368,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "tag",
											"source": 2,
											"value": "414"
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3994,
											"end": 4006,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "422"
										},
										{
											"begin": 4047,
											"end": 4053,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4055,
											"end": 4059,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4061,
											"end": 4062,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4064,
											"end": 4076,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4025,
											"end": 4046,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "423"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "tag",
											"source": 2,
											"value": "422"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4018,
											"end": 4077,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4018,
											"end": 4077,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "tag",
											"source": 2,
											"value": "423"
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5113,
											"end": 5125,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 5170,
											"end": 5175,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5145,
											"end": 5166,
											"name": "SELFBALANCE",
											"source": 2
										},
										{
											"begin": 5145,
											"end": 5175,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 5145,
											"end": 5175,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "425"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "426"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "427"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "tag",
											"source": 2,
											"value": "426"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "tag",
											"source": 2,
											"value": "425"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5236,
											"end": 5254,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "428"
										},
										{
											"begin": 5247,
											"end": 5253,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5236,
											"end": 5246,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "429"
										},
										{
											"begin": 5236,
											"end": 5254,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5236,
											"end": 5254,
											"name": "tag",
											"source": 2,
											"value": "428"
										},
										{
											"begin": 5236,
											"end": 5254,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "430"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "431"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "432"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "tag",
											"source": 2,
											"value": "431"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "tag",
											"source": 2,
											"value": "430"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5300,
											"end": 5312,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5314,
											"end": 5337,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5347,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5352,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5341,
											"end": 5352,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5360,
											"end": 5365,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5367,
											"end": 5371,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "433"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "434"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "tag",
											"source": 2,
											"value": "433"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "437"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "3F"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "436"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "tag",
											"source": 2,
											"value": "437"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "tag",
											"source": 2,
											"value": "436"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "438"
										},
										{
											"begin": 5406,
											"end": 5413,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5415,
											"end": 5425,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5427,
											"end": 5439,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5389,
											"end": 5405,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "439"
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "tag",
											"source": 2,
											"value": "438"
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5382,
											"end": 5440,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5382,
											"end": 5440,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5382,
											"end": 5440,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5382,
											"end": 5440,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "tag",
											"source": 2,
											"value": "429"
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1235,
											"end": 1239,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1487,
											"end": 1488,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1465,
											"end": 1472,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1458,
											"end": 1488,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1458,
											"end": 1488,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "tag",
											"source": 2,
											"value": "439"
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7707,
											"end": 7719,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 7735,
											"end": 7742,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7731,
											"end": 8247,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7731,
											"end": 8247,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "442"
										},
										{
											"begin": 7731,
											"end": 8247,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7765,
											"end": 7775,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7758,
											"end": 7775,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7758,
											"end": 7775,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7758,
											"end": 7775,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "441"
										},
										{
											"begin": 7758,
											"end": 7775,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7731,
											"end": 8247,
											"name": "tag",
											"source": 2,
											"value": "442"
										},
										{
											"begin": 7731,
											"end": 8247,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7896,
											"end": 7897,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7876,
											"end": 7886,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7876,
											"end": 7893,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7876,
											"end": 7897,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 7872,
											"end": 8237,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7872,
											"end": 8237,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "444"
										},
										{
											"begin": 7872,
											"end": 8237,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8070,
											"end": 8080,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8064,
											"end": 8081,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8130,
											"end": 8145,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8117,
											"end": 8127,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8113,
											"end": 8115,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8109,
											"end": 8128,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8102,
											"end": 8146,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7872,
											"end": 8237,
											"name": "tag",
											"source": 2,
											"value": "444"
										},
										{
											"begin": 7872,
											"end": 8237,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8209,
											"end": 8221,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "446"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "447"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "tag",
											"source": 2,
											"value": "446"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "tag",
											"source": 2,
											"value": "441"
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 8,
											"value": "448"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 8,
											"value": "449"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "518"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "448"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 8,
											"value": "518"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "520"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "449"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 8,
											"value": "520"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 523,
											"end": 640,
											"name": "tag",
											"source": 8,
											"value": "451"
										},
										{
											"begin": 523,
											"end": 640,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 632,
											"end": 633,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 630,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 622,
											"end": 634,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 769,
											"end": 891,
											"name": "tag",
											"source": 8,
											"value": "453"
										},
										{
											"begin": 769,
											"end": 891,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 842,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "525"
										},
										{
											"begin": 860,
											"end": 865,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 842,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "448"
										},
										{
											"begin": 842,
											"end": 866,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 842,
											"end": 866,
											"name": "tag",
											"source": 8,
											"value": "525"
										},
										{
											"begin": 842,
											"end": 866,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 835,
											"end": 840,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 832,
											"end": 867,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 822,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "526"
										},
										{
											"begin": 822,
											"end": 885,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 881,
											"end": 882,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 878,
											"end": 879,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 871,
											"end": 883,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 822,
											"end": 885,
											"name": "tag",
											"source": 8,
											"value": "526"
										},
										{
											"begin": 822,
											"end": 885,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 769,
											"end": 891,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 769,
											"end": 891,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "tag",
											"source": 8,
											"value": "454"
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 943,
											"end": 948,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 981,
											"end": 987,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 968,
											"end": 988,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 959,
											"end": 988,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 959,
											"end": 988,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "528"
										},
										{
											"begin": 1024,
											"end": 1029,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "453"
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "tag",
											"source": 8,
											"value": "528"
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "tag",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1150,
											"end": 1152,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1138,
											"end": 1147,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1129,
											"end": 1136,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1125,
											"end": 1148,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1121,
											"end": 1153,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "530"
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "531"
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "451"
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "tag",
											"source": 8,
											"value": "531"
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "tag",
											"source": 8,
											"value": "530"
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1276,
											"end": 1277,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "532"
										},
										{
											"begin": 1346,
											"end": 1353,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1337,
											"end": 1343,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1326,
											"end": 1335,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1322,
											"end": 1344,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "454"
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "tag",
											"source": 8,
											"value": "532"
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1291,
											"end": 1354,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1291,
											"end": 1354,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1247,
											"end": 1364,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "tag",
											"source": 8,
											"value": "455"
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1414,
											"end": 1421,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1454,
											"end": 1496,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1447,
											"end": 1452,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1443,
											"end": 1497,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1432,
											"end": 1497,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1432,
											"end": 1497,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "tag",
											"source": 8,
											"value": "456"
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1546,
											"end": 1553,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "535"
										},
										{
											"begin": 1593,
											"end": 1598,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "455"
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "tag",
											"source": 8,
											"value": "535"
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1564,
											"end": 1599,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1564,
											"end": 1599,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "tag",
											"source": 8,
											"value": "457"
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "537"
										},
										{
											"begin": 1702,
											"end": 1707,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "456"
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "tag",
											"source": 8,
											"value": "537"
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1677,
											"end": 1682,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "538"
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1724,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1720,
											"end": 1721,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1713,
											"end": 1725,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "tag",
											"source": 8,
											"value": "538"
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "tag",
											"source": 8,
											"value": "458"
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1823,
											"end": 1829,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1810,
											"end": 1830,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "540"
										},
										{
											"begin": 1866,
											"end": 1871,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "457"
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "tag",
											"source": 8,
											"value": "540"
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "tag",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1943,
											"end": 1949,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1992,
											"end": 1994,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1980,
											"end": 1989,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1971,
											"end": 1978,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1967,
											"end": 1990,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1963,
											"end": 1995,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "542"
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "543"
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "451"
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "tag",
											"source": 8,
											"value": "543"
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "tag",
											"source": 8,
											"value": "542"
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2118,
											"end": 2119,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "544"
										},
										{
											"begin": 2188,
											"end": 2195,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2179,
											"end": 2185,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2168,
											"end": 2177,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2164,
											"end": 2186,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "458"
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "tag",
											"source": 8,
											"value": "544"
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2196,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2196,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2089,
											"end": 2206,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2219,
											"end": 2693,
											"name": "tag",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 2219,
											"end": 2693,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2293,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2295,
											"end": 2301,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2344,
											"end": 2346,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2332,
											"end": 2341,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2323,
											"end": 2330,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2319,
											"end": 2342,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2315,
											"end": 2347,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2312,
											"end": 2431,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2312,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "546"
										},
										{
											"begin": 2312,
											"end": 2431,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2350,
											"end": 2429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "547"
										},
										{
											"begin": 2350,
											"end": 2429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "451"
										},
										{
											"begin": 2350,
											"end": 2429,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2350,
											"end": 2429,
											"name": "tag",
											"source": 8,
											"value": "547"
										},
										{
											"begin": 2350,
											"end": 2429,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2312,
											"end": 2431,
											"name": "tag",
											"source": 8,
											"value": "546"
										},
										{
											"begin": 2312,
											"end": 2431,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2470,
											"end": 2471,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2495,
											"end": 2548,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "548"
										},
										{
											"begin": 2540,
											"end": 2547,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2531,
											"end": 2537,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2520,
											"end": 2529,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2516,
											"end": 2538,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2495,
											"end": 2548,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "454"
										},
										{
											"begin": 2495,
											"end": 2548,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2495,
											"end": 2548,
											"name": "tag",
											"source": 8,
											"value": "548"
										},
										{
											"begin": 2495,
											"end": 2548,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2548,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2548,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2441,
											"end": 2558,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2597,
											"end": 2599,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2623,
											"end": 2676,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "549"
										},
										{
											"begin": 2668,
											"end": 2675,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2659,
											"end": 2665,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2648,
											"end": 2657,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2644,
											"end": 2666,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2623,
											"end": 2676,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "454"
										},
										{
											"begin": 2623,
											"end": 2676,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2623,
											"end": 2676,
											"name": "tag",
											"source": 8,
											"value": "549"
										},
										{
											"begin": 2623,
											"end": 2676,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2613,
											"end": 2676,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2613,
											"end": 2676,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2568,
											"end": 2686,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2219,
											"end": 2693,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2219,
											"end": 2693,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2219,
											"end": 2693,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2219,
											"end": 2693,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2219,
											"end": 2693,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2219,
											"end": 2693,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2699,
											"end": 2817,
											"name": "tag",
											"source": 8,
											"value": "459"
										},
										{
											"begin": 2699,
											"end": 2817,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2786,
											"end": 2810,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "551"
										},
										{
											"begin": 2804,
											"end": 2809,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2786,
											"end": 2810,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "456"
										},
										{
											"begin": 2786,
											"end": 2810,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2786,
											"end": 2810,
											"name": "tag",
											"source": 8,
											"value": "551"
										},
										{
											"begin": 2786,
											"end": 2810,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2781,
											"end": 2784,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2774,
											"end": 2811,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2699,
											"end": 2817,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2699,
											"end": 2817,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2699,
											"end": 2817,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2823,
											"end": 3045,
											"name": "tag",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 2823,
											"end": 3045,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2916,
											"end": 2920,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2956,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2943,
											"end": 2952,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2939,
											"end": 2957,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2931,
											"end": 2957,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2931,
											"end": 2957,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2967,
											"end": 3038,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "553"
										},
										{
											"begin": 3035,
											"end": 3036,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3024,
											"end": 3033,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3011,
											"end": 3017,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2967,
											"end": 3038,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "459"
										},
										{
											"begin": 2967,
											"end": 3038,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2967,
											"end": 3038,
											"name": "tag",
											"source": 8,
											"value": "553"
										},
										{
											"begin": 2967,
											"end": 3038,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2823,
											"end": 3045,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2823,
											"end": 3045,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2823,
											"end": 3045,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2823,
											"end": 3045,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2823,
											"end": 3045,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3051,
											"end": 3111,
											"name": "tag",
											"source": 8,
											"value": "460"
										},
										{
											"begin": 3051,
											"end": 3111,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3079,
											"end": 3082,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3100,
											"end": 3105,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3093,
											"end": 3105,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3093,
											"end": 3105,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3051,
											"end": 3111,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3051,
											"end": 3111,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3051,
											"end": 3111,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3051,
											"end": 3111,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3117,
											"end": 3259,
											"name": "tag",
											"source": 8,
											"value": "461"
										},
										{
											"begin": 3117,
											"end": 3259,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3167,
											"end": 3176,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3200,
											"end": 3253,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "556"
										},
										{
											"begin": 3218,
											"end": 3252,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "557"
										},
										{
											"begin": 3227,
											"end": 3251,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "558"
										},
										{
											"begin": 3245,
											"end": 3250,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3227,
											"end": 3251,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "455"
										},
										{
											"begin": 3227,
											"end": 3251,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3227,
											"end": 3251,
											"name": "tag",
											"source": 8,
											"value": "558"
										},
										{
											"begin": 3227,
											"end": 3251,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3218,
											"end": 3252,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "460"
										},
										{
											"begin": 3218,
											"end": 3252,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3218,
											"end": 3252,
											"name": "tag",
											"source": 8,
											"value": "557"
										},
										{
											"begin": 3218,
											"end": 3252,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3200,
											"end": 3253,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "455"
										},
										{
											"begin": 3200,
											"end": 3253,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3200,
											"end": 3253,
											"name": "tag",
											"source": 8,
											"value": "556"
										},
										{
											"begin": 3200,
											"end": 3253,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3187,
											"end": 3253,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3187,
											"end": 3253,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3117,
											"end": 3259,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3117,
											"end": 3259,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3117,
											"end": 3259,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3117,
											"end": 3259,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3265,
											"end": 3391,
											"name": "tag",
											"source": 8,
											"value": "462"
										},
										{
											"begin": 3265,
											"end": 3391,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3315,
											"end": 3324,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3348,
											"end": 3385,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "560"
										},
										{
											"begin": 3379,
											"end": 3384,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3348,
											"end": 3385,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "461"
										},
										{
											"begin": 3348,
											"end": 3385,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3348,
											"end": 3385,
											"name": "tag",
											"source": 8,
											"value": "560"
										},
										{
											"begin": 3348,
											"end": 3385,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3335,
											"end": 3385,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3335,
											"end": 3385,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3265,
											"end": 3391,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3265,
											"end": 3391,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3265,
											"end": 3391,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3265,
											"end": 3391,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3397,
											"end": 3537,
											"name": "tag",
											"source": 8,
											"value": "463"
										},
										{
											"begin": 3397,
											"end": 3537,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3461,
											"end": 3470,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3494,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "562"
										},
										{
											"begin": 3525,
											"end": 3530,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3494,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "462"
										},
										{
											"begin": 3494,
											"end": 3531,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3494,
											"end": 3531,
											"name": "tag",
											"source": 8,
											"value": "562"
										},
										{
											"begin": 3494,
											"end": 3531,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3481,
											"end": 3531,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3481,
											"end": 3531,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3397,
											"end": 3537,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3397,
											"end": 3537,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3397,
											"end": 3537,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3397,
											"end": 3537,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3543,
											"end": 3702,
											"name": "tag",
											"source": 8,
											"value": "464"
										},
										{
											"begin": 3543,
											"end": 3702,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3644,
											"end": 3695,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "564"
										},
										{
											"begin": 3689,
											"end": 3694,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3644,
											"end": 3695,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "463"
										},
										{
											"begin": 3644,
											"end": 3695,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3644,
											"end": 3695,
											"name": "tag",
											"source": 8,
											"value": "564"
										},
										{
											"begin": 3644,
											"end": 3695,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3639,
											"end": 3642,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3632,
											"end": 3696,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3543,
											"end": 3702,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3543,
											"end": 3702,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3543,
											"end": 3702,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3708,
											"end": 3958,
											"name": "tag",
											"source": 8,
											"value": "132"
										},
										{
											"begin": 3708,
											"end": 3958,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3815,
											"end": 3819,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3853,
											"end": 3855,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3842,
											"end": 3851,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3838,
											"end": 3856,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3830,
											"end": 3856,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3830,
											"end": 3856,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3866,
											"end": 3951,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "566"
										},
										{
											"begin": 3948,
											"end": 3949,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3937,
											"end": 3946,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3933,
											"end": 3950,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3924,
											"end": 3930,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3866,
											"end": 3951,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "464"
										},
										{
											"begin": 3866,
											"end": 3951,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3866,
											"end": 3951,
											"name": "tag",
											"source": 8,
											"value": "566"
										},
										{
											"begin": 3866,
											"end": 3951,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3708,
											"end": 3958,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3708,
											"end": 3958,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3708,
											"end": 3958,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3708,
											"end": 3958,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3708,
											"end": 3958,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3964,
											"end": 4133,
											"name": "tag",
											"source": 8,
											"value": "465"
										},
										{
											"begin": 3964,
											"end": 4133,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4048,
											"end": 4059,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4082,
											"end": 4088,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4077,
											"end": 4080,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4070,
											"end": 4089,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4122,
											"end": 4126,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4117,
											"end": 4120,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4113,
											"end": 4127,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4098,
											"end": 4127,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4098,
											"end": 4127,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3964,
											"end": 4133,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3964,
											"end": 4133,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3964,
											"end": 4133,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3964,
											"end": 4133,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3964,
											"end": 4133,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 4139,
											"end": 4321,
											"name": "tag",
											"source": 8,
											"value": "466"
										},
										{
											"begin": 4139,
											"end": 4321,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4279,
											"end": 4313,
											"name": "PUSH",
											"source": 8,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 4275,
											"end": 4276,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4267,
											"end": 4273,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4263,
											"end": 4277,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4256,
											"end": 4314,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4139,
											"end": 4321,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4139,
											"end": 4321,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 4327,
											"end": 4693,
											"name": "tag",
											"source": 8,
											"value": "467"
										},
										{
											"begin": 4327,
											"end": 4693,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4469,
											"end": 4472,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4490,
											"end": 4557,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "570"
										},
										{
											"begin": 4554,
											"end": 4556,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4549,
											"end": 4552,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4490,
											"end": 4557,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "465"
										},
										{
											"begin": 4490,
											"end": 4557,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4490,
											"end": 4557,
											"name": "tag",
											"source": 8,
											"value": "570"
										},
										{
											"begin": 4490,
											"end": 4557,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4483,
											"end": 4557,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4483,
											"end": 4557,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4566,
											"end": 4659,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "571"
										},
										{
											"begin": 4655,
											"end": 4658,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4566,
											"end": 4659,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "466"
										},
										{
											"begin": 4566,
											"end": 4659,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4566,
											"end": 4659,
											"name": "tag",
											"source": 8,
											"value": "571"
										},
										{
											"begin": 4566,
											"end": 4659,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4684,
											"end": 4686,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4679,
											"end": 4682,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4675,
											"end": 4687,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4668,
											"end": 4687,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4668,
											"end": 4687,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4327,
											"end": 4693,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4327,
											"end": 4693,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4327,
											"end": 4693,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4327,
											"end": 4693,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 4699,
											"end": 5118,
											"name": "tag",
											"source": 8,
											"value": "146"
										},
										{
											"begin": 4699,
											"end": 5118,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4865,
											"end": 4869,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4903,
											"end": 4905,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4892,
											"end": 4901,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4888,
											"end": 4906,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4880,
											"end": 4906,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4880,
											"end": 4906,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4952,
											"end": 4961,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4946,
											"end": 4950,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4942,
											"end": 4962,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4938,
											"end": 4939,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4927,
											"end": 4936,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4923,
											"end": 4940,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4916,
											"end": 4963,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4980,
											"end": 5111,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "573"
										},
										{
											"begin": 5106,
											"end": 5110,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4980,
											"end": 5111,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "467"
										},
										{
											"begin": 4980,
											"end": 5111,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4980,
											"end": 5111,
											"name": "tag",
											"source": 8,
											"value": "573"
										},
										{
											"begin": 4980,
											"end": 5111,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4972,
											"end": 5111,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4972,
											"end": 5111,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4699,
											"end": 5118,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4699,
											"end": 5118,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4699,
											"end": 5118,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4699,
											"end": 5118,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 5124,
											"end": 5287,
											"name": "tag",
											"source": 8,
											"value": "468"
										},
										{
											"begin": 5124,
											"end": 5287,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5264,
											"end": 5279,
											"name": "PUSH",
											"source": 8,
											"value": "43616E2774206265207A65726F00000000000000000000000000000000000000"
										},
										{
											"begin": 5260,
											"end": 5261,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5252,
											"end": 5258,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5248,
											"end": 5262,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5241,
											"end": 5280,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5124,
											"end": 5287,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5124,
											"end": 5287,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 5293,
											"end": 5659,
											"name": "tag",
											"source": 8,
											"value": "469"
										},
										{
											"begin": 5293,
											"end": 5659,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5435,
											"end": 5438,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5456,
											"end": 5523,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "576"
										},
										{
											"begin": 5520,
											"end": 5522,
											"name": "PUSH",
											"source": 8,
											"value": "D"
										},
										{
											"begin": 5515,
											"end": 5518,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5456,
											"end": 5523,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "465"
										},
										{
											"begin": 5456,
											"end": 5523,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5456,
											"end": 5523,
											"name": "tag",
											"source": 8,
											"value": "576"
										},
										{
											"begin": 5456,
											"end": 5523,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5449,
											"end": 5523,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5449,
											"end": 5523,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5532,
											"end": 5625,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "577"
										},
										{
											"begin": 5621,
											"end": 5624,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5532,
											"end": 5625,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "468"
										},
										{
											"begin": 5532,
											"end": 5625,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5532,
											"end": 5625,
											"name": "tag",
											"source": 8,
											"value": "577"
										},
										{
											"begin": 5532,
											"end": 5625,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5650,
											"end": 5652,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5645,
											"end": 5648,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5641,
											"end": 5653,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5634,
											"end": 5653,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5634,
											"end": 5653,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5293,
											"end": 5659,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5293,
											"end": 5659,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5293,
											"end": 5659,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5293,
											"end": 5659,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 5665,
											"end": 6084,
											"name": "tag",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 5665,
											"end": 6084,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5831,
											"end": 5835,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5869,
											"end": 5871,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5858,
											"end": 5867,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5854,
											"end": 5872,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5846,
											"end": 5872,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5846,
											"end": 5872,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5918,
											"end": 5927,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5912,
											"end": 5916,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5908,
											"end": 5928,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5904,
											"end": 5905,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5893,
											"end": 5902,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5889,
											"end": 5906,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5882,
											"end": 5929,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5946,
											"end": 6077,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "579"
										},
										{
											"begin": 6072,
											"end": 6076,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5946,
											"end": 6077,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "469"
										},
										{
											"begin": 5946,
											"end": 6077,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5946,
											"end": 6077,
											"name": "tag",
											"source": 8,
											"value": "579"
										},
										{
											"begin": 5946,
											"end": 6077,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5938,
											"end": 6077,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5938,
											"end": 6077,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5665,
											"end": 6084,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5665,
											"end": 6084,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5665,
											"end": 6084,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5665,
											"end": 6084,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 6090,
											"end": 6271,
											"name": "tag",
											"source": 8,
											"value": "470"
										},
										{
											"begin": 6090,
											"end": 6271,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6230,
											"end": 6263,
											"name": "PUSH",
											"source": 8,
											"value": "416D6F756E742073686F756C642062652067726561746572207468616E203000"
										},
										{
											"begin": 6226,
											"end": 6227,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6218,
											"end": 6224,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6214,
											"end": 6228,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6207,
											"end": 6264,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6090,
											"end": 6271,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6090,
											"end": 6271,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 6277,
											"end": 6643,
											"name": "tag",
											"source": 8,
											"value": "471"
										},
										{
											"begin": 6277,
											"end": 6643,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6419,
											"end": 6422,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6440,
											"end": 6507,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "582"
										},
										{
											"begin": 6504,
											"end": 6506,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 6499,
											"end": 6502,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6440,
											"end": 6507,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "465"
										},
										{
											"begin": 6440,
											"end": 6507,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6440,
											"end": 6507,
											"name": "tag",
											"source": 8,
											"value": "582"
										},
										{
											"begin": 6440,
											"end": 6507,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6433,
											"end": 6507,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6433,
											"end": 6507,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6516,
											"end": 6609,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "583"
										},
										{
											"begin": 6605,
											"end": 6608,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6516,
											"end": 6609,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "470"
										},
										{
											"begin": 6516,
											"end": 6609,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6516,
											"end": 6609,
											"name": "tag",
											"source": 8,
											"value": "583"
										},
										{
											"begin": 6516,
											"end": 6609,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6634,
											"end": 6636,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6629,
											"end": 6632,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6625,
											"end": 6637,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6618,
											"end": 6637,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6618,
											"end": 6637,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6277,
											"end": 6643,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6277,
											"end": 6643,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6277,
											"end": 6643,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6277,
											"end": 6643,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 6649,
											"end": 7068,
											"name": "tag",
											"source": 8,
											"value": "154"
										},
										{
											"begin": 6649,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6815,
											"end": 6819,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6853,
											"end": 6855,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6842,
											"end": 6851,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6838,
											"end": 6856,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6830,
											"end": 6856,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6830,
											"end": 6856,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6902,
											"end": 6911,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6896,
											"end": 6900,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6892,
											"end": 6912,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6888,
											"end": 6889,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6877,
											"end": 6886,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6873,
											"end": 6890,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6866,
											"end": 6913,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6930,
											"end": 7061,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "585"
										},
										{
											"begin": 7056,
											"end": 7060,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6930,
											"end": 7061,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "471"
										},
										{
											"begin": 6930,
											"end": 7061,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6930,
											"end": 7061,
											"name": "tag",
											"source": 8,
											"value": "585"
										},
										{
											"begin": 6930,
											"end": 7061,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6922,
											"end": 7061,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6922,
											"end": 7061,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6649,
											"end": 7068,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6649,
											"end": 7068,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6649,
											"end": 7068,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6649,
											"end": 7068,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 7074,
											"end": 7238,
											"name": "tag",
											"source": 8,
											"value": "472"
										},
										{
											"begin": 7074,
											"end": 7238,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7214,
											"end": 7230,
											"name": "PUSH",
											"source": 8,
											"value": "496E76616C696420616D6F756E74000000000000000000000000000000000000"
										},
										{
											"begin": 7210,
											"end": 7211,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7202,
											"end": 7208,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7198,
											"end": 7212,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7191,
											"end": 7231,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7074,
											"end": 7238,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7074,
											"end": 7238,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 7244,
											"end": 7610,
											"name": "tag",
											"source": 8,
											"value": "473"
										},
										{
											"begin": 7244,
											"end": 7610,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7386,
											"end": 7389,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7407,
											"end": 7474,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "588"
										},
										{
											"begin": 7471,
											"end": 7473,
											"name": "PUSH",
											"source": 8,
											"value": "E"
										},
										{
											"begin": 7466,
											"end": 7469,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7407,
											"end": 7474,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "465"
										},
										{
											"begin": 7407,
											"end": 7474,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 7407,
											"end": 7474,
											"name": "tag",
											"source": 8,
											"value": "588"
										},
										{
											"begin": 7407,
											"end": 7474,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7400,
											"end": 7474,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7400,
											"end": 7474,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7483,
											"end": 7576,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "589"
										},
										{
											"begin": 7572,
											"end": 7575,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7483,
											"end": 7576,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "472"
										},
										{
											"begin": 7483,
											"end": 7576,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 7483,
											"end": 7576,
											"name": "tag",
											"source": 8,
											"value": "589"
										},
										{
											"begin": 7483,
											"end": 7576,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7601,
											"end": 7603,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7596,
											"end": 7599,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7592,
											"end": 7604,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7585,
											"end": 7604,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7585,
											"end": 7604,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7244,
											"end": 7610,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7244,
											"end": 7610,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7244,
											"end": 7610,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7244,
											"end": 7610,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 7616,
											"end": 8035,
											"name": "tag",
											"source": 8,
											"value": "157"
										},
										{
											"begin": 7616,
											"end": 8035,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7782,
											"end": 7786,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7820,
											"end": 7822,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7809,
											"end": 7818,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7805,
											"end": 7823,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7797,
											"end": 7823,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7797,
											"end": 7823,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7869,
											"end": 7878,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7863,
											"end": 7867,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7859,
											"end": 7879,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7855,
											"end": 7856,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7844,
											"end": 7853,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7833,
											"end": 7880,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7897,
											"end": 8028,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "591"
										},
										{
											"begin": 8023,
											"end": 8027,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7897,
											"end": 8028,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "473"
										},
										{
											"begin": 7897,
											"end": 8028,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 7897,
											"end": 8028,
											"name": "tag",
											"source": 8,
											"value": "591"
										},
										{
											"begin": 7897,
											"end": 8028,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7889,
											"end": 8028,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7889,
											"end": 8028,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7616,
											"end": 8035,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7616,
											"end": 8035,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7616,
											"end": 8035,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7616,
											"end": 8035,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 8041,
											"end": 8221,
											"name": "tag",
											"source": 8,
											"value": "474"
										},
										{
											"begin": 8041,
											"end": 8221,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8089,
											"end": 8166,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8086,
											"end": 8087,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8079,
											"end": 8167,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8186,
											"end": 8190,
											"name": "PUSH",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 8183,
											"end": 8184,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 8176,
											"end": 8191,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8210,
											"end": 8214,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 8207,
											"end": 8208,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8200,
											"end": 8215,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 8227,
											"end": 8403,
											"name": "tag",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 8227,
											"end": 8403,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8259,
											"end": 8260,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8276,
											"end": 8296,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "594"
										},
										{
											"begin": 8294,
											"end": 8295,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8276,
											"end": 8296,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "448"
										},
										{
											"begin": 8276,
											"end": 8296,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8276,
											"end": 8296,
											"name": "tag",
											"source": 8,
											"value": "594"
										},
										{
											"begin": 8276,
											"end": 8296,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8271,
											"end": 8296,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8271,
											"end": 8296,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8310,
											"end": 8330,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "595"
										},
										{
											"begin": 8328,
											"end": 8329,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8310,
											"end": 8330,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "448"
										},
										{
											"begin": 8310,
											"end": 8330,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8310,
											"end": 8330,
											"name": "tag",
											"source": 8,
											"value": "595"
										},
										{
											"begin": 8310,
											"end": 8330,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8305,
											"end": 8330,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8305,
											"end": 8330,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8349,
											"end": 8350,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8339,
											"end": 8374,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "596"
										},
										{
											"begin": 8339,
											"end": 8374,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8354,
											"end": 8372,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "597"
										},
										{
											"begin": 8354,
											"end": 8372,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "474"
										},
										{
											"begin": 8354,
											"end": 8372,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8354,
											"end": 8372,
											"name": "tag",
											"source": 8,
											"value": "597"
										},
										{
											"begin": 8354,
											"end": 8372,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8339,
											"end": 8374,
											"name": "tag",
											"source": 8,
											"value": "596"
										},
										{
											"begin": 8339,
											"end": 8374,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8395,
											"end": 8396,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8392,
											"end": 8393,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8388,
											"end": 8397,
											"name": "MOD",
											"source": 8
										},
										{
											"begin": 8383,
											"end": 8397,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8383,
											"end": 8397,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8227,
											"end": 8403,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8227,
											"end": 8403,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8227,
											"end": 8403,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8227,
											"end": 8403,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8227,
											"end": 8403,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 8409,
											"end": 8741,
											"name": "tag",
											"source": 8,
											"value": "182"
										},
										{
											"begin": 8409,
											"end": 8741,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8530,
											"end": 8534,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8568,
											"end": 8570,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8557,
											"end": 8566,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8553,
											"end": 8571,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8545,
											"end": 8571,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8545,
											"end": 8571,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8581,
											"end": 8652,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "599"
										},
										{
											"begin": 8649,
											"end": 8650,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8638,
											"end": 8647,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8634,
											"end": 8651,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8625,
											"end": 8631,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 8581,
											"end": 8652,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "459"
										},
										{
											"begin": 8581,
											"end": 8652,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8581,
											"end": 8652,
											"name": "tag",
											"source": 8,
											"value": "599"
										},
										{
											"begin": 8581,
											"end": 8652,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8662,
											"end": 8734,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "600"
										},
										{
											"begin": 8730,
											"end": 8732,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8719,
											"end": 8728,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8715,
											"end": 8733,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8706,
											"end": 8712,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8662,
											"end": 8734,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "449"
										},
										{
											"begin": 8662,
											"end": 8734,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8662,
											"end": 8734,
											"name": "tag",
											"source": 8,
											"value": "600"
										},
										{
											"begin": 8662,
											"end": 8734,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8409,
											"end": 8741,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 8409,
											"end": 8741,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8409,
											"end": 8741,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8409,
											"end": 8741,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8409,
											"end": 8741,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8409,
											"end": 8741,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 8747,
											"end": 8913,
											"name": "tag",
											"source": 8,
											"value": "475"
										},
										{
											"begin": 8747,
											"end": 8913,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8887,
											"end": 8905,
											"name": "PUSH",
											"source": 8,
											"value": "4E6F7468696E6720746F20636C61696D00000000000000000000000000000000"
										},
										{
											"begin": 8883,
											"end": 8884,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8875,
											"end": 8881,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8871,
											"end": 8885,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8864,
											"end": 8906,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8747,
											"end": 8913,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8747,
											"end": 8913,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 8919,
											"end": 9285,
											"name": "tag",
											"source": 8,
											"value": "476"
										},
										{
											"begin": 8919,
											"end": 9285,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9061,
											"end": 9064,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9082,
											"end": 9149,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "603"
										},
										{
											"begin": 9146,
											"end": 9148,
											"name": "PUSH",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 9141,
											"end": 9144,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9082,
											"end": 9149,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "465"
										},
										{
											"begin": 9082,
											"end": 9149,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 9082,
											"end": 9149,
											"name": "tag",
											"source": 8,
											"value": "603"
										},
										{
											"begin": 9082,
											"end": 9149,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9075,
											"end": 9149,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9075,
											"end": 9149,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9158,
											"end": 9251,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "604"
										},
										{
											"begin": 9247,
											"end": 9250,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9158,
											"end": 9251,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "475"
										},
										{
											"begin": 9158,
											"end": 9251,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 9158,
											"end": 9251,
											"name": "tag",
											"source": 8,
											"value": "604"
										},
										{
											"begin": 9158,
											"end": 9251,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9276,
											"end": 9278,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9271,
											"end": 9274,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9267,
											"end": 9279,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9260,
											"end": 9279,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9260,
											"end": 9279,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8919,
											"end": 9285,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8919,
											"end": 9285,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8919,
											"end": 9285,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8919,
											"end": 9285,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 9291,
											"end": 9710,
											"name": "tag",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 9291,
											"end": 9710,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9457,
											"end": 9461,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9495,
											"end": 9497,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9484,
											"end": 9493,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9480,
											"end": 9498,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9472,
											"end": 9498,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9472,
											"end": 9498,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9544,
											"end": 9553,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9538,
											"end": 9542,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9534,
											"end": 9554,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9530,
											"end": 9531,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9519,
											"end": 9528,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9515,
											"end": 9532,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9508,
											"end": 9555,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9572,
											"end": 9703,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "606"
										},
										{
											"begin": 9698,
											"end": 9702,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9572,
											"end": 9703,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "476"
										},
										{
											"begin": 9572,
											"end": 9703,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 9572,
											"end": 9703,
											"name": "tag",
											"source": 8,
											"value": "606"
										},
										{
											"begin": 9572,
											"end": 9703,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9564,
											"end": 9703,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9564,
											"end": 9703,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9291,
											"end": 9710,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9291,
											"end": 9710,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9291,
											"end": 9710,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9291,
											"end": 9710,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 9716,
											"end": 9859,
											"name": "tag",
											"source": 8,
											"value": "477"
										},
										{
											"begin": 9716,
											"end": 9859,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9773,
											"end": 9778,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9804,
											"end": 9810,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9798,
											"end": 9811,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9789,
											"end": 9811,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9789,
											"end": 9811,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9820,
											"end": 9853,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "608"
										},
										{
											"begin": 9847,
											"end": 9852,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9820,
											"end": 9853,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "453"
										},
										{
											"begin": 9820,
											"end": 9853,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 9820,
											"end": 9853,
											"name": "tag",
											"source": 8,
											"value": "608"
										},
										{
											"begin": 9820,
											"end": 9853,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9716,
											"end": 9859,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9716,
											"end": 9859,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9716,
											"end": 9859,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9716,
											"end": 9859,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9716,
											"end": 9859,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 9865,
											"end": 10216,
											"name": "tag",
											"source": 8,
											"value": "196"
										},
										{
											"begin": 9865,
											"end": 10216,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9935,
											"end": 9941,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9984,
											"end": 9986,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9972,
											"end": 9981,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9963,
											"end": 9970,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9959,
											"end": 9982,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9955,
											"end": 9987,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 9952,
											"end": 10071,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9952,
											"end": 10071,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "610"
										},
										{
											"begin": 9952,
											"end": 10071,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9990,
											"end": 10069,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "611"
										},
										{
											"begin": 9990,
											"end": 10069,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "451"
										},
										{
											"begin": 9990,
											"end": 10069,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 9990,
											"end": 10069,
											"name": "tag",
											"source": 8,
											"value": "611"
										},
										{
											"begin": 9990,
											"end": 10069,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9952,
											"end": 10071,
											"name": "tag",
											"source": 8,
											"value": "610"
										},
										{
											"begin": 9952,
											"end": 10071,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10110,
											"end": 10111,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10135,
											"end": 10199,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "612"
										},
										{
											"begin": 10191,
											"end": 10198,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10182,
											"end": 10188,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10171,
											"end": 10180,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 10167,
											"end": 10189,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10135,
											"end": 10199,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "477"
										},
										{
											"begin": 10135,
											"end": 10199,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 10135,
											"end": 10199,
											"name": "tag",
											"source": 8,
											"value": "612"
										},
										{
											"begin": 10135,
											"end": 10199,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10125,
											"end": 10199,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10125,
											"end": 10199,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10081,
											"end": 10209,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9865,
											"end": 10216,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9865,
											"end": 10216,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9865,
											"end": 10216,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9865,
											"end": 10216,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9865,
											"end": 10216,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 10222,
											"end": 10385,
											"name": "tag",
											"source": 8,
											"value": "478"
										},
										{
											"begin": 10222,
											"end": 10385,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10362,
											"end": 10377,
											"name": "PUSH",
											"source": 8,
											"value": "496E73756666696369656E742100000000000000000000000000000000000000"
										},
										{
											"begin": 10358,
											"end": 10359,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10350,
											"end": 10356,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10346,
											"end": 10360,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10339,
											"end": 10378,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10222,
											"end": 10385,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10222,
											"end": 10385,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 10391,
											"end": 10757,
											"name": "tag",
											"source": 8,
											"value": "479"
										},
										{
											"begin": 10391,
											"end": 10757,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10533,
											"end": 10536,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10554,
											"end": 10621,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "615"
										},
										{
											"begin": 10618,
											"end": 10620,
											"name": "PUSH",
											"source": 8,
											"value": "D"
										},
										{
											"begin": 10613,
											"end": 10616,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10554,
											"end": 10621,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "465"
										},
										{
											"begin": 10554,
											"end": 10621,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 10554,
											"end": 10621,
											"name": "tag",
											"source": 8,
											"value": "615"
										},
										{
											"begin": 10554,
											"end": 10621,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10547,
											"end": 10621,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10547,
											"end": 10621,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10630,
											"end": 10723,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "616"
										},
										{
											"begin": 10719,
											"end": 10722,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10630,
											"end": 10723,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "478"
										},
										{
											"begin": 10630,
											"end": 10723,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 10630,
											"end": 10723,
											"name": "tag",
											"source": 8,
											"value": "616"
										},
										{
											"begin": 10630,
											"end": 10723,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10748,
											"end": 10750,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10743,
											"end": 10746,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10739,
											"end": 10751,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10732,
											"end": 10751,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10732,
											"end": 10751,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10391,
											"end": 10757,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10391,
											"end": 10757,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10391,
											"end": 10757,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10391,
											"end": 10757,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 10763,
											"end": 11182,
											"name": "tag",
											"source": 8,
											"value": "236"
										},
										{
											"begin": 10763,
											"end": 11182,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10929,
											"end": 10933,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10967,
											"end": 10969,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10956,
											"end": 10965,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10952,
											"end": 10970,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10944,
											"end": 10970,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10944,
											"end": 10970,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11016,
											"end": 11025,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11010,
											"end": 11014,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11006,
											"end": 11026,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 11002,
											"end": 11003,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10991,
											"end": 11000,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10987,
											"end": 11004,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10980,
											"end": 11027,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11044,
											"end": 11175,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "618"
										},
										{
											"begin": 11170,
											"end": 11174,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11044,
											"end": 11175,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "479"
										},
										{
											"begin": 11044,
											"end": 11175,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 11044,
											"end": 11175,
											"name": "tag",
											"source": 8,
											"value": "618"
										},
										{
											"begin": 11044,
											"end": 11175,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11036,
											"end": 11175,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11036,
											"end": 11175,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10763,
											"end": 11182,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10763,
											"end": 11182,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10763,
											"end": 11182,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10763,
											"end": 11182,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 11188,
											"end": 11349,
											"name": "tag",
											"source": 8,
											"value": "480"
										},
										{
											"begin": 11188,
											"end": 11349,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11328,
											"end": 11341,
											"name": "PUSH",
											"source": 8,
											"value": "43616E2774207374617274000000000000000000000000000000000000000000"
										},
										{
											"begin": 11324,
											"end": 11325,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11316,
											"end": 11322,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11312,
											"end": 11326,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11305,
											"end": 11342,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11188,
											"end": 11349,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11188,
											"end": 11349,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 11355,
											"end": 11721,
											"name": "tag",
											"source": 8,
											"value": "481"
										},
										{
											"begin": 11355,
											"end": 11721,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11497,
											"end": 11500,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11518,
											"end": 11585,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "621"
										},
										{
											"begin": 11582,
											"end": 11584,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 11577,
											"end": 11580,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11518,
											"end": 11585,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "465"
										},
										{
											"begin": 11518,
											"end": 11585,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 11518,
											"end": 11585,
											"name": "tag",
											"source": 8,
											"value": "621"
										},
										{
											"begin": 11518,
											"end": 11585,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11511,
											"end": 11585,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11511,
											"end": 11585,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11594,
											"end": 11687,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "622"
										},
										{
											"begin": 11683,
											"end": 11686,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11594,
											"end": 11687,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "480"
										},
										{
											"begin": 11594,
											"end": 11687,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 11594,
											"end": 11687,
											"name": "tag",
											"source": 8,
											"value": "622"
										},
										{
											"begin": 11594,
											"end": 11687,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11712,
											"end": 11714,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11707,
											"end": 11710,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11703,
											"end": 11715,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11696,
											"end": 11715,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11696,
											"end": 11715,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11355,
											"end": 11721,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11355,
											"end": 11721,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11355,
											"end": 11721,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11355,
											"end": 11721,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 11727,
											"end": 12146,
											"name": "tag",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 11727,
											"end": 12146,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11893,
											"end": 11897,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11931,
											"end": 11933,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11920,
											"end": 11929,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11916,
											"end": 11934,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11908,
											"end": 11934,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11908,
											"end": 11934,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11980,
											"end": 11989,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11974,
											"end": 11978,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11970,
											"end": 11990,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 11966,
											"end": 11967,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11955,
											"end": 11964,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11951,
											"end": 11968,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11944,
											"end": 11991,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12008,
											"end": 12139,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "624"
										},
										{
											"begin": 12134,
											"end": 12138,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12008,
											"end": 12139,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "481"
										},
										{
											"begin": 12008,
											"end": 12139,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 12008,
											"end": 12139,
											"name": "tag",
											"source": 8,
											"value": "624"
										},
										{
											"begin": 12008,
											"end": 12139,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12000,
											"end": 12139,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12000,
											"end": 12139,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11727,
											"end": 12146,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11727,
											"end": 12146,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11727,
											"end": 12146,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11727,
											"end": 12146,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 12152,
											"end": 12314,
											"name": "tag",
											"source": 8,
											"value": "482"
										},
										{
											"begin": 12152,
											"end": 12314,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12292,
											"end": 12306,
											"name": "PUSH",
											"source": 8,
											"value": "496E73756666696369656E740000000000000000000000000000000000000000"
										},
										{
											"begin": 12288,
											"end": 12289,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12280,
											"end": 12286,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12276,
											"end": 12290,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12269,
											"end": 12307,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12152,
											"end": 12314,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12152,
											"end": 12314,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 12320,
											"end": 12686,
											"name": "tag",
											"source": 8,
											"value": "483"
										},
										{
											"begin": 12320,
											"end": 12686,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12462,
											"end": 12465,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12483,
											"end": 12550,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "627"
										},
										{
											"begin": 12547,
											"end": 12549,
											"name": "PUSH",
											"source": 8,
											"value": "C"
										},
										{
											"begin": 12542,
											"end": 12545,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12483,
											"end": 12550,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "465"
										},
										{
											"begin": 12483,
											"end": 12550,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 12483,
											"end": 12550,
											"name": "tag",
											"source": 8,
											"value": "627"
										},
										{
											"begin": 12483,
											"end": 12550,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12476,
											"end": 12550,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12476,
											"end": 12550,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12559,
											"end": 12652,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "628"
										},
										{
											"begin": 12648,
											"end": 12651,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12559,
											"end": 12652,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "482"
										},
										{
											"begin": 12559,
											"end": 12652,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 12559,
											"end": 12652,
											"name": "tag",
											"source": 8,
											"value": "628"
										},
										{
											"begin": 12559,
											"end": 12652,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12677,
											"end": 12679,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12672,
											"end": 12675,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12668,
											"end": 12680,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12661,
											"end": 12680,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12661,
											"end": 12680,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12320,
											"end": 12686,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12320,
											"end": 12686,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12320,
											"end": 12686,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12320,
											"end": 12686,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 12692,
											"end": 13111,
											"name": "tag",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 12692,
											"end": 13111,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12858,
											"end": 12862,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12896,
											"end": 12898,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12885,
											"end": 12894,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12881,
											"end": 12899,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12873,
											"end": 12899,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12873,
											"end": 12899,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12945,
											"end": 12954,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12939,
											"end": 12943,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12935,
											"end": 12955,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 12931,
											"end": 12932,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12920,
											"end": 12929,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12916,
											"end": 12933,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12909,
											"end": 12956,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12973,
											"end": 13104,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "630"
										},
										{
											"begin": 13099,
											"end": 13103,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12973,
											"end": 13104,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "483"
										},
										{
											"begin": 12973,
											"end": 13104,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 12973,
											"end": 13104,
											"name": "tag",
											"source": 8,
											"value": "630"
										},
										{
											"begin": 12973,
											"end": 13104,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12965,
											"end": 13104,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12965,
											"end": 13104,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12692,
											"end": 13111,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12692,
											"end": 13111,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12692,
											"end": 13111,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12692,
											"end": 13111,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 13117,
											"end": 13279,
											"name": "tag",
											"source": 8,
											"value": "484"
										},
										{
											"begin": 13117,
											"end": 13279,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13257,
											"end": 13271,
											"name": "PUSH",
											"source": 8,
											"value": "496E76616C6964204D6F64650000000000000000000000000000000000000000"
										},
										{
											"begin": 13253,
											"end": 13254,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13245,
											"end": 13251,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13241,
											"end": 13255,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13234,
											"end": 13272,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13117,
											"end": 13279,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13117,
											"end": 13279,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 13285,
											"end": 13651,
											"name": "tag",
											"source": 8,
											"value": "485"
										},
										{
											"begin": 13285,
											"end": 13651,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13427,
											"end": 13430,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13448,
											"end": 13515,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "633"
										},
										{
											"begin": 13512,
											"end": 13514,
											"name": "PUSH",
											"source": 8,
											"value": "C"
										},
										{
											"begin": 13507,
											"end": 13510,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13448,
											"end": 13515,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "465"
										},
										{
											"begin": 13448,
											"end": 13515,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 13448,
											"end": 13515,
											"name": "tag",
											"source": 8,
											"value": "633"
										},
										{
											"begin": 13448,
											"end": 13515,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13441,
											"end": 13515,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13441,
											"end": 13515,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13524,
											"end": 13617,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "634"
										},
										{
											"begin": 13613,
											"end": 13616,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13524,
											"end": 13617,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "484"
										},
										{
											"begin": 13524,
											"end": 13617,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 13524,
											"end": 13617,
											"name": "tag",
											"source": 8,
											"value": "634"
										},
										{
											"begin": 13524,
											"end": 13617,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13642,
											"end": 13644,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13637,
											"end": 13640,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13633,
											"end": 13645,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13626,
											"end": 13645,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13626,
											"end": 13645,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13285,
											"end": 13651,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13285,
											"end": 13651,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13285,
											"end": 13651,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13285,
											"end": 13651,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 13657,
											"end": 14076,
											"name": "tag",
											"source": 8,
											"value": "260"
										},
										{
											"begin": 13657,
											"end": 14076,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13823,
											"end": 13827,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13861,
											"end": 13863,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13850,
											"end": 13859,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13846,
											"end": 13864,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13838,
											"end": 13864,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13838,
											"end": 13864,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13910,
											"end": 13919,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13904,
											"end": 13908,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13900,
											"end": 13920,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 13896,
											"end": 13897,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13885,
											"end": 13894,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13881,
											"end": 13898,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13874,
											"end": 13921,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13938,
											"end": 14069,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "636"
										},
										{
											"begin": 14064,
											"end": 14068,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13938,
											"end": 14069,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "485"
										},
										{
											"begin": 13938,
											"end": 14069,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 13938,
											"end": 14069,
											"name": "tag",
											"source": 8,
											"value": "636"
										},
										{
											"begin": 13938,
											"end": 14069,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13930,
											"end": 14069,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13930,
											"end": 14069,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13657,
											"end": 14076,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13657,
											"end": 14076,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13657,
											"end": 14076,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13657,
											"end": 14076,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 14082,
											"end": 14255,
											"name": "tag",
											"source": 8,
											"value": "486"
										},
										{
											"begin": 14082,
											"end": 14255,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14222,
											"end": 14247,
											"name": "PUSH",
											"source": 8,
											"value": "496E76616C6964204C6F636B7570204475726174696F6E000000000000000000"
										},
										{
											"begin": 14218,
											"end": 14219,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14210,
											"end": 14216,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14206,
											"end": 14220,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14199,
											"end": 14248,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14082,
											"end": 14255,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14082,
											"end": 14255,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 14261,
											"end": 14627,
											"name": "tag",
											"source": 8,
											"value": "487"
										},
										{
											"begin": 14261,
											"end": 14627,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14403,
											"end": 14406,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14424,
											"end": 14491,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "639"
										},
										{
											"begin": 14488,
											"end": 14490,
											"name": "PUSH",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 14483,
											"end": 14486,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14424,
											"end": 14491,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "465"
										},
										{
											"begin": 14424,
											"end": 14491,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 14424,
											"end": 14491,
											"name": "tag",
											"source": 8,
											"value": "639"
										},
										{
											"begin": 14424,
											"end": 14491,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14417,
											"end": 14491,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14417,
											"end": 14491,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14500,
											"end": 14593,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "640"
										},
										{
											"begin": 14589,
											"end": 14592,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14500,
											"end": 14593,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "486"
										},
										{
											"begin": 14500,
											"end": 14593,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 14500,
											"end": 14593,
											"name": "tag",
											"source": 8,
											"value": "640"
										},
										{
											"begin": 14500,
											"end": 14593,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14618,
											"end": 14620,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 14613,
											"end": 14616,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14609,
											"end": 14621,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14602,
											"end": 14621,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14602,
											"end": 14621,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14261,
											"end": 14627,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14261,
											"end": 14627,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14261,
											"end": 14627,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14261,
											"end": 14627,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 14633,
											"end": 15052,
											"name": "tag",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 14633,
											"end": 15052,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14799,
											"end": 14803,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14837,
											"end": 14839,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 14826,
											"end": 14835,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14822,
											"end": 14840,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14814,
											"end": 14840,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14814,
											"end": 14840,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14886,
											"end": 14895,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14880,
											"end": 14884,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14876,
											"end": 14896,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 14872,
											"end": 14873,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14861,
											"end": 14870,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14857,
											"end": 14874,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14850,
											"end": 14897,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14914,
											"end": 15045,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "642"
										},
										{
											"begin": 15040,
											"end": 15044,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14914,
											"end": 15045,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "487"
										},
										{
											"begin": 14914,
											"end": 15045,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 14914,
											"end": 15045,
											"name": "tag",
											"source": 8,
											"value": "642"
										},
										{
											"begin": 14914,
											"end": 15045,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14906,
											"end": 15045,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14906,
											"end": 15045,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14633,
											"end": 15052,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14633,
											"end": 15052,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14633,
											"end": 15052,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14633,
											"end": 15052,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 15058,
											"end": 15238,
											"name": "tag",
											"source": 8,
											"value": "488"
										},
										{
											"begin": 15058,
											"end": 15238,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15106,
											"end": 15183,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15103,
											"end": 15104,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15096,
											"end": 15184,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15203,
											"end": 15207,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 15200,
											"end": 15201,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 15193,
											"end": 15208,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15227,
											"end": 15231,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 15224,
											"end": 15225,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15217,
											"end": 15232,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 15244,
											"end": 15549,
											"name": "tag",
											"source": 8,
											"value": "281"
										},
										{
											"begin": 15244,
											"end": 15549,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15284,
											"end": 15287,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15303,
											"end": 15323,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "645"
										},
										{
											"begin": 15321,
											"end": 15322,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15303,
											"end": 15323,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "448"
										},
										{
											"begin": 15303,
											"end": 15323,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 15303,
											"end": 15323,
											"name": "tag",
											"source": 8,
											"value": "645"
										},
										{
											"begin": 15303,
											"end": 15323,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15298,
											"end": 15323,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15298,
											"end": 15323,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15337,
											"end": 15357,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "646"
										},
										{
											"begin": 15355,
											"end": 15356,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15337,
											"end": 15357,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "448"
										},
										{
											"begin": 15337,
											"end": 15357,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 15337,
											"end": 15357,
											"name": "tag",
											"source": 8,
											"value": "646"
										},
										{
											"begin": 15337,
											"end": 15357,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15332,
											"end": 15357,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 15332,
											"end": 15357,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15491,
											"end": 15492,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15423,
											"end": 15489,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15419,
											"end": 15493,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 15416,
											"end": 15417,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15413,
											"end": 15494,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 15410,
											"end": 15517,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 15410,
											"end": 15517,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "647"
										},
										{
											"begin": 15410,
											"end": 15517,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 15497,
											"end": 15515,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "648"
										},
										{
											"begin": 15497,
											"end": 15515,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "488"
										},
										{
											"begin": 15497,
											"end": 15515,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 15497,
											"end": 15515,
											"name": "tag",
											"source": 8,
											"value": "648"
										},
										{
											"begin": 15497,
											"end": 15515,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15410,
											"end": 15517,
											"name": "tag",
											"source": 8,
											"value": "647"
										},
										{
											"begin": 15410,
											"end": 15517,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15541,
											"end": 15542,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15538,
											"end": 15539,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15534,
											"end": 15543,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15527,
											"end": 15543,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15527,
											"end": 15543,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15244,
											"end": 15549,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 15244,
											"end": 15549,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15244,
											"end": 15549,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15244,
											"end": 15549,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15244,
											"end": 15549,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 15555,
											"end": 15731,
											"name": "tag",
											"source": 8,
											"value": "489"
										},
										{
											"begin": 15555,
											"end": 15731,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15695,
											"end": 15723,
											"name": "PUSH",
											"source": 8,
											"value": "496E76616C696420556E7374616B696E67204665652052617465000000000000"
										},
										{
											"begin": 15691,
											"end": 15692,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15683,
											"end": 15689,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15679,
											"end": 15693,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15672,
											"end": 15724,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15555,
											"end": 15731,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15555,
											"end": 15731,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 15737,
											"end": 16103,
											"name": "tag",
											"source": 8,
											"value": "490"
										},
										{
											"begin": 15737,
											"end": 16103,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15879,
											"end": 15882,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15900,
											"end": 15967,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "651"
										},
										{
											"begin": 15964,
											"end": 15966,
											"name": "PUSH",
											"source": 8,
											"value": "1A"
										},
										{
											"begin": 15959,
											"end": 15962,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15900,
											"end": 15967,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "465"
										},
										{
											"begin": 15900,
											"end": 15967,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 15900,
											"end": 15967,
											"name": "tag",
											"source": 8,
											"value": "651"
										},
										{
											"begin": 15900,
											"end": 15967,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15893,
											"end": 15967,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15893,
											"end": 15967,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15976,
											"end": 16069,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "652"
										},
										{
											"begin": 16065,
											"end": 16068,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15976,
											"end": 16069,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "489"
										},
										{
											"begin": 15976,
											"end": 16069,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 15976,
											"end": 16069,
											"name": "tag",
											"source": 8,
											"value": "652"
										},
										{
											"begin": 15976,
											"end": 16069,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16094,
											"end": 16096,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 16089,
											"end": 16092,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16085,
											"end": 16097,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16078,
											"end": 16097,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16078,
											"end": 16097,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15737,
											"end": 16103,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15737,
											"end": 16103,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15737,
											"end": 16103,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15737,
											"end": 16103,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 16109,
											"end": 16528,
											"name": "tag",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 16109,
											"end": 16528,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16275,
											"end": 16279,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16313,
											"end": 16315,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 16302,
											"end": 16311,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16298,
											"end": 16316,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16290,
											"end": 16316,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16290,
											"end": 16316,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16362,
											"end": 16371,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16356,
											"end": 16360,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16352,
											"end": 16372,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 16348,
											"end": 16349,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16337,
											"end": 16346,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 16333,
											"end": 16350,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16326,
											"end": 16373,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 16390,
											"end": 16521,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "654"
										},
										{
											"begin": 16516,
											"end": 16520,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16390,
											"end": 16521,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "490"
										},
										{
											"begin": 16390,
											"end": 16521,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 16390,
											"end": 16521,
											"name": "tag",
											"source": 8,
											"value": "654"
										},
										{
											"begin": 16390,
											"end": 16521,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16382,
											"end": 16521,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16382,
											"end": 16521,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16109,
											"end": 16528,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16109,
											"end": 16528,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16109,
											"end": 16528,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16109,
											"end": 16528,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 16534,
											"end": 16697,
											"name": "tag",
											"source": 8,
											"value": "491"
										},
										{
											"begin": 16534,
											"end": 16697,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16674,
											"end": 16689,
											"name": "PUSH",
											"source": 8,
											"value": "496E76616C69642076616C756500000000000000000000000000000000000000"
										},
										{
											"begin": 16670,
											"end": 16671,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16662,
											"end": 16668,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16658,
											"end": 16672,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16651,
											"end": 16690,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 16534,
											"end": 16697,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16534,
											"end": 16697,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 16703,
											"end": 17069,
											"name": "tag",
											"source": 8,
											"value": "492"
										},
										{
											"begin": 16703,
											"end": 17069,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16845,
											"end": 16848,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16866,
											"end": 16933,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "657"
										},
										{
											"begin": 16930,
											"end": 16932,
											"name": "PUSH",
											"source": 8,
											"value": "D"
										},
										{
											"begin": 16925,
											"end": 16928,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 16866,
											"end": 16933,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "465"
										},
										{
											"begin": 16866,
											"end": 16933,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 16866,
											"end": 16933,
											"name": "tag",
											"source": 8,
											"value": "657"
										},
										{
											"begin": 16866,
											"end": 16933,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16859,
											"end": 16933,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16859,
											"end": 16933,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16942,
											"end": 17035,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "658"
										},
										{
											"begin": 17031,
											"end": 17034,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16942,
											"end": 17035,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "491"
										},
										{
											"begin": 16942,
											"end": 17035,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 16942,
											"end": 17035,
											"name": "tag",
											"source": 8,
											"value": "658"
										},
										{
											"begin": 16942,
											"end": 17035,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17060,
											"end": 17062,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 17055,
											"end": 17058,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17051,
											"end": 17063,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17044,
											"end": 17063,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17044,
											"end": 17063,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16703,
											"end": 17069,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16703,
											"end": 17069,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16703,
											"end": 17069,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16703,
											"end": 17069,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 17075,
											"end": 17494,
											"name": "tag",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 17075,
											"end": 17494,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17241,
											"end": 17245,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17279,
											"end": 17281,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 17268,
											"end": 17277,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17264,
											"end": 17282,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17256,
											"end": 17282,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17256,
											"end": 17282,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17328,
											"end": 17337,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17322,
											"end": 17326,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17318,
											"end": 17338,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 17314,
											"end": 17315,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17303,
											"end": 17312,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 17299,
											"end": 17316,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17292,
											"end": 17339,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 17356,
											"end": 17487,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "660"
										},
										{
											"begin": 17482,
											"end": 17486,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17356,
											"end": 17487,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "492"
										},
										{
											"begin": 17356,
											"end": 17487,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 17356,
											"end": 17487,
											"name": "tag",
											"source": 8,
											"value": "660"
										},
										{
											"begin": 17356,
											"end": 17487,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17348,
											"end": 17487,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17348,
											"end": 17487,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17075,
											"end": 17494,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17075,
											"end": 17494,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17075,
											"end": 17494,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17075,
											"end": 17494,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 17500,
											"end": 17671,
											"name": "tag",
											"source": 8,
											"value": "493"
										},
										{
											"begin": 17500,
											"end": 17671,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17640,
											"end": 17663,
											"name": "PUSH",
											"source": 8,
											"value": "4572726F723A20696E76616C6964207374616B65720000000000000000000000"
										},
										{
											"begin": 17636,
											"end": 17637,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17628,
											"end": 17634,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17624,
											"end": 17638,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17617,
											"end": 17664,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 17500,
											"end": 17671,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17500,
											"end": 17671,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 17677,
											"end": 18043,
											"name": "tag",
											"source": 8,
											"value": "494"
										},
										{
											"begin": 17677,
											"end": 18043,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17819,
											"end": 17822,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17840,
											"end": 17907,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "663"
										},
										{
											"begin": 17904,
											"end": 17906,
											"name": "PUSH",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 17899,
											"end": 17902,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 17840,
											"end": 17907,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "465"
										},
										{
											"begin": 17840,
											"end": 17907,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 17840,
											"end": 17907,
											"name": "tag",
											"source": 8,
											"value": "663"
										},
										{
											"begin": 17840,
											"end": 17907,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17833,
											"end": 17907,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17833,
											"end": 17907,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17916,
											"end": 18009,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "664"
										},
										{
											"begin": 18005,
											"end": 18008,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17916,
											"end": 18009,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "493"
										},
										{
											"begin": 17916,
											"end": 18009,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 17916,
											"end": 18009,
											"name": "tag",
											"source": 8,
											"value": "664"
										},
										{
											"begin": 17916,
											"end": 18009,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18034,
											"end": 18036,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 18029,
											"end": 18032,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18025,
											"end": 18037,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18018,
											"end": 18037,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18018,
											"end": 18037,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17677,
											"end": 18043,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17677,
											"end": 18043,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17677,
											"end": 18043,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17677,
											"end": 18043,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 18049,
											"end": 18468,
											"name": "tag",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 18049,
											"end": 18468,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18215,
											"end": 18219,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18253,
											"end": 18255,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 18242,
											"end": 18251,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18238,
											"end": 18256,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18230,
											"end": 18256,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18230,
											"end": 18256,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18302,
											"end": 18311,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18296,
											"end": 18300,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18292,
											"end": 18312,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 18288,
											"end": 18289,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18277,
											"end": 18286,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 18273,
											"end": 18290,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18266,
											"end": 18313,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 18330,
											"end": 18461,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "666"
										},
										{
											"begin": 18456,
											"end": 18460,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18330,
											"end": 18461,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "494"
										},
										{
											"begin": 18330,
											"end": 18461,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 18330,
											"end": 18461,
											"name": "tag",
											"source": 8,
											"value": "666"
										},
										{
											"begin": 18330,
											"end": 18461,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18322,
											"end": 18461,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18322,
											"end": 18461,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18049,
											"end": 18468,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18049,
											"end": 18468,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18049,
											"end": 18468,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18049,
											"end": 18468,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 18474,
											"end": 18638,
											"name": "tag",
											"source": 8,
											"value": "495"
										},
										{
											"begin": 18474,
											"end": 18638,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18614,
											"end": 18630,
											"name": "PUSH",
											"source": 8,
											"value": "4E6F74207374616B657220796574000000000000000000000000000000000000"
										},
										{
											"begin": 18610,
											"end": 18611,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18602,
											"end": 18608,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18598,
											"end": 18612,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18591,
											"end": 18631,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 18474,
											"end": 18638,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18474,
											"end": 18638,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 18644,
											"end": 19010,
											"name": "tag",
											"source": 8,
											"value": "496"
										},
										{
											"begin": 18644,
											"end": 19010,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18786,
											"end": 18789,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18807,
											"end": 18874,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "669"
										},
										{
											"begin": 18871,
											"end": 18873,
											"name": "PUSH",
											"source": 8,
											"value": "E"
										},
										{
											"begin": 18866,
											"end": 18869,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 18807,
											"end": 18874,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "465"
										},
										{
											"begin": 18807,
											"end": 18874,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 18807,
											"end": 18874,
											"name": "tag",
											"source": 8,
											"value": "669"
										},
										{
											"begin": 18807,
											"end": 18874,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18800,
											"end": 18874,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18800,
											"end": 18874,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18883,
											"end": 18976,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "670"
										},
										{
											"begin": 18972,
											"end": 18975,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18883,
											"end": 18976,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "495"
										},
										{
											"begin": 18883,
											"end": 18976,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 18883,
											"end": 18976,
											"name": "tag",
											"source": 8,
											"value": "670"
										},
										{
											"begin": 18883,
											"end": 18976,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19001,
											"end": 19003,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 18996,
											"end": 18999,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18992,
											"end": 19004,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18985,
											"end": 19004,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18985,
											"end": 19004,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18644,
											"end": 19010,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18644,
											"end": 19010,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18644,
											"end": 19010,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18644,
											"end": 19010,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 19016,
											"end": 19435,
											"name": "tag",
											"source": 8,
											"value": "353"
										},
										{
											"begin": 19016,
											"end": 19435,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19182,
											"end": 19186,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19220,
											"end": 19222,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 19209,
											"end": 19218,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19205,
											"end": 19223,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19197,
											"end": 19223,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19197,
											"end": 19223,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19269,
											"end": 19278,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19263,
											"end": 19267,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19259,
											"end": 19279,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 19255,
											"end": 19256,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19244,
											"end": 19253,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 19240,
											"end": 19257,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19233,
											"end": 19280,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 19297,
											"end": 19428,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "672"
										},
										{
											"begin": 19423,
											"end": 19427,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19297,
											"end": 19428,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "496"
										},
										{
											"begin": 19297,
											"end": 19428,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 19297,
											"end": 19428,
											"name": "tag",
											"source": 8,
											"value": "672"
										},
										{
											"begin": 19297,
											"end": 19428,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19289,
											"end": 19428,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19289,
											"end": 19428,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19016,
											"end": 19435,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19016,
											"end": 19435,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19016,
											"end": 19435,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19016,
											"end": 19435,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 19441,
											"end": 19666,
											"name": "tag",
											"source": 8,
											"value": "497"
										},
										{
											"begin": 19441,
											"end": 19666,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19581,
											"end": 19615,
											"name": "PUSH",
											"source": 8,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 19577,
											"end": 19578,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19569,
											"end": 19575,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19565,
											"end": 19579,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19558,
											"end": 19616,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 19650,
											"end": 19658,
											"name": "PUSH",
											"source": 8,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19645,
											"end": 19647,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 19637,
											"end": 19643,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19633,
											"end": 19648,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19626,
											"end": 19659,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 19441,
											"end": 19666,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19441,
											"end": 19666,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 19672,
											"end": 20038,
											"name": "tag",
											"source": 8,
											"value": "498"
										},
										{
											"begin": 19672,
											"end": 20038,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19814,
											"end": 19817,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19835,
											"end": 19902,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "675"
										},
										{
											"begin": 19899,
											"end": 19901,
											"name": "PUSH",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 19894,
											"end": 19897,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 19835,
											"end": 19902,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "465"
										},
										{
											"begin": 19835,
											"end": 19902,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 19835,
											"end": 19902,
											"name": "tag",
											"source": 8,
											"value": "675"
										},
										{
											"begin": 19835,
											"end": 19902,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19828,
											"end": 19902,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19828,
											"end": 19902,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19911,
											"end": 20004,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "676"
										},
										{
											"begin": 20000,
											"end": 20003,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19911,
											"end": 20004,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "497"
										},
										{
											"begin": 19911,
											"end": 20004,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 19911,
											"end": 20004,
											"name": "tag",
											"source": 8,
											"value": "676"
										},
										{
											"begin": 19911,
											"end": 20004,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20029,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 20024,
											"end": 20027,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20020,
											"end": 20032,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20013,
											"end": 20032,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20013,
											"end": 20032,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19672,
											"end": 20038,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19672,
											"end": 20038,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19672,
											"end": 20038,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19672,
											"end": 20038,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 20044,
											"end": 20463,
											"name": "tag",
											"source": 8,
											"value": "380"
										},
										{
											"begin": 20044,
											"end": 20463,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20210,
											"end": 20214,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20248,
											"end": 20250,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 20237,
											"end": 20246,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20233,
											"end": 20251,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20225,
											"end": 20251,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20225,
											"end": 20251,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20297,
											"end": 20306,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20291,
											"end": 20295,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20287,
											"end": 20307,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 20283,
											"end": 20284,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20272,
											"end": 20281,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 20268,
											"end": 20285,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20261,
											"end": 20308,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 20325,
											"end": 20456,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "678"
										},
										{
											"begin": 20451,
											"end": 20455,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20325,
											"end": 20456,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "498"
										},
										{
											"begin": 20325,
											"end": 20456,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 20325,
											"end": 20456,
											"name": "tag",
											"source": 8,
											"value": "678"
										},
										{
											"begin": 20325,
											"end": 20456,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20317,
											"end": 20456,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20317,
											"end": 20456,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20044,
											"end": 20463,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 20044,
											"end": 20463,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20044,
											"end": 20463,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20044,
											"end": 20463,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 20469,
											"end": 20660,
											"name": "tag",
											"source": 8,
											"value": "394"
										},
										{
											"begin": 20469,
											"end": 20660,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20509,
											"end": 20513,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20529,
											"end": 20549,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "680"
										},
										{
											"begin": 20547,
											"end": 20548,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20529,
											"end": 20549,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "448"
										},
										{
											"begin": 20529,
											"end": 20549,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 20529,
											"end": 20549,
											"name": "tag",
											"source": 8,
											"value": "680"
										},
										{
											"begin": 20529,
											"end": 20549,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20524,
											"end": 20549,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 20524,
											"end": 20549,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20563,
											"end": 20583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "681"
										},
										{
											"begin": 20581,
											"end": 20582,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 20563,
											"end": 20583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "448"
										},
										{
											"begin": 20563,
											"end": 20583,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 20563,
											"end": 20583,
											"name": "tag",
											"source": 8,
											"value": "681"
										},
										{
											"begin": 20563,
											"end": 20583,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20558,
											"end": 20583,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 20558,
											"end": 20583,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20602,
											"end": 20603,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20599,
											"end": 20600,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20596,
											"end": 20604,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 20593,
											"end": 20627,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 20593,
											"end": 20627,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "682"
										},
										{
											"begin": 20593,
											"end": 20627,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 20607,
											"end": 20625,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "683"
										},
										{
											"begin": 20607,
											"end": 20625,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "488"
										},
										{
											"begin": 20607,
											"end": 20625,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 20607,
											"end": 20625,
											"name": "tag",
											"source": 8,
											"value": "683"
										},
										{
											"begin": 20607,
											"end": 20625,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20593,
											"end": 20627,
											"name": "tag",
											"source": 8,
											"value": "682"
										},
										{
											"begin": 20593,
											"end": 20627,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20652,
											"end": 20653,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20649,
											"end": 20650,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20645,
											"end": 20654,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 20637,
											"end": 20654,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20637,
											"end": 20654,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20469,
											"end": 20660,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 20469,
											"end": 20660,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 20469,
											"end": 20660,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20469,
											"end": 20660,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20469,
											"end": 20660,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 20666,
											"end": 20851,
											"name": "tag",
											"source": 8,
											"value": "397"
										},
										{
											"begin": 20666,
											"end": 20851,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20706,
											"end": 20707,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20723,
											"end": 20743,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "685"
										},
										{
											"begin": 20741,
											"end": 20742,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20723,
											"end": 20743,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "448"
										},
										{
											"begin": 20723,
											"end": 20743,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 20723,
											"end": 20743,
											"name": "tag",
											"source": 8,
											"value": "685"
										},
										{
											"begin": 20723,
											"end": 20743,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20718,
											"end": 20743,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 20718,
											"end": 20743,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20757,
											"end": 20777,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "686"
										},
										{
											"begin": 20775,
											"end": 20776,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 20757,
											"end": 20777,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "448"
										},
										{
											"begin": 20757,
											"end": 20777,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 20757,
											"end": 20777,
											"name": "tag",
											"source": 8,
											"value": "686"
										},
										{
											"begin": 20757,
											"end": 20777,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20752,
											"end": 20777,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 20752,
											"end": 20777,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20796,
											"end": 20797,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20786,
											"end": 20821,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "687"
										},
										{
											"begin": 20786,
											"end": 20821,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 20801,
											"end": 20819,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "688"
										},
										{
											"begin": 20801,
											"end": 20819,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "474"
										},
										{
											"begin": 20801,
											"end": 20819,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 20801,
											"end": 20819,
											"name": "tag",
											"source": 8,
											"value": "688"
										},
										{
											"begin": 20801,
											"end": 20819,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20786,
											"end": 20821,
											"name": "tag",
											"source": 8,
											"value": "687"
										},
										{
											"begin": 20786,
											"end": 20821,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20843,
											"end": 20844,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20840,
											"end": 20841,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20836,
											"end": 20845,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 20831,
											"end": 20845,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20831,
											"end": 20845,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20666,
											"end": 20851,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 20666,
											"end": 20851,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 20666,
											"end": 20851,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20666,
											"end": 20851,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20666,
											"end": 20851,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 20857,
											"end": 21205,
											"name": "tag",
											"source": 8,
											"value": "400"
										},
										{
											"begin": 20857,
											"end": 21205,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20897,
											"end": 20904,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20920,
											"end": 20940,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "690"
										},
										{
											"begin": 20938,
											"end": 20939,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20920,
											"end": 20940,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "448"
										},
										{
											"begin": 20920,
											"end": 20940,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 20920,
											"end": 20940,
											"name": "tag",
											"source": 8,
											"value": "690"
										},
										{
											"begin": 20920,
											"end": 20940,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20915,
											"end": 20940,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 20915,
											"end": 20940,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20954,
											"end": 20974,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "691"
										},
										{
											"begin": 20972,
											"end": 20973,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 20954,
											"end": 20974,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "448"
										},
										{
											"begin": 20954,
											"end": 20974,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 20954,
											"end": 20974,
											"name": "tag",
											"source": 8,
											"value": "691"
										},
										{
											"begin": 20954,
											"end": 20974,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20949,
											"end": 20974,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 20949,
											"end": 20974,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21142,
											"end": 21143,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 21074,
											"end": 21140,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21070,
											"end": 21144,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 21067,
											"end": 21068,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 21064,
											"end": 21145,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 21059,
											"end": 21060,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21052,
											"end": 21061,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 21045,
											"end": 21062,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 21041,
											"end": 21146,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 21038,
											"end": 21169,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 21038,
											"end": 21169,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "692"
										},
										{
											"begin": 21038,
											"end": 21169,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 21149,
											"end": 21167,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "693"
										},
										{
											"begin": 21149,
											"end": 21167,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "488"
										},
										{
											"begin": 21149,
											"end": 21167,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 21149,
											"end": 21167,
											"name": "tag",
											"source": 8,
											"value": "693"
										},
										{
											"begin": 21149,
											"end": 21167,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21038,
											"end": 21169,
											"name": "tag",
											"source": 8,
											"value": "692"
										},
										{
											"begin": 21038,
											"end": 21169,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21197,
											"end": 21198,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21194,
											"end": 21195,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21190,
											"end": 21199,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 21179,
											"end": 21199,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21179,
											"end": 21199,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20857,
											"end": 21205,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 20857,
											"end": 21205,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 20857,
											"end": 21205,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20857,
											"end": 21205,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20857,
											"end": 21205,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 21211,
											"end": 21653,
											"name": "tag",
											"source": 8,
											"value": "411"
										},
										{
											"begin": 21211,
											"end": 21653,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21360,
											"end": 21364,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21398,
											"end": 21400,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 21387,
											"end": 21396,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21383,
											"end": 21401,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21375,
											"end": 21401,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21375,
											"end": 21401,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21411,
											"end": 21482,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "695"
										},
										{
											"begin": 21479,
											"end": 21480,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21468,
											"end": 21477,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 21464,
											"end": 21481,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21455,
											"end": 21461,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 21411,
											"end": 21482,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "459"
										},
										{
											"begin": 21411,
											"end": 21482,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 21411,
											"end": 21482,
											"name": "tag",
											"source": 8,
											"value": "695"
										},
										{
											"begin": 21411,
											"end": 21482,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21492,
											"end": 21564,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "696"
										},
										{
											"begin": 21560,
											"end": 21562,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 21549,
											"end": 21558,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 21545,
											"end": 21563,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21536,
											"end": 21542,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 21492,
											"end": 21564,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "459"
										},
										{
											"begin": 21492,
											"end": 21564,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 21492,
											"end": 21564,
											"name": "tag",
											"source": 8,
											"value": "696"
										},
										{
											"begin": 21492,
											"end": 21564,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21574,
											"end": 21646,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "697"
										},
										{
											"begin": 21642,
											"end": 21644,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 21631,
											"end": 21640,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 21627,
											"end": 21645,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21618,
											"end": 21624,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 21574,
											"end": 21646,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "449"
										},
										{
											"begin": 21574,
											"end": 21646,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 21574,
											"end": 21646,
											"name": "tag",
											"source": 8,
											"value": "697"
										},
										{
											"begin": 21574,
											"end": 21646,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21211,
											"end": 21653,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 21211,
											"end": 21653,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 21211,
											"end": 21653,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21211,
											"end": 21653,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21211,
											"end": 21653,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21211,
											"end": 21653,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21211,
											"end": 21653,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 21659,
											"end": 21749,
											"name": "tag",
											"source": 8,
											"value": "499"
										},
										{
											"begin": 21659,
											"end": 21749,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21693,
											"end": 21700,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21736,
											"end": 21741,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 21729,
											"end": 21742,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 21722,
											"end": 21743,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 21711,
											"end": 21743,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21711,
											"end": 21743,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21659,
											"end": 21749,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 21659,
											"end": 21749,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21659,
											"end": 21749,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21659,
											"end": 21749,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 21755,
											"end": 21871,
											"name": "tag",
											"source": 8,
											"value": "500"
										},
										{
											"begin": 21755,
											"end": 21871,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21825,
											"end": 21846,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "700"
										},
										{
											"begin": 21840,
											"end": 21845,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 21825,
											"end": 21846,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "499"
										},
										{
											"begin": 21825,
											"end": 21846,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 21825,
											"end": 21846,
											"name": "tag",
											"source": 8,
											"value": "700"
										},
										{
											"begin": 21825,
											"end": 21846,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21818,
											"end": 21823,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 21815,
											"end": 21847,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 21805,
											"end": 21865,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "701"
										},
										{
											"begin": 21805,
											"end": 21865,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 21861,
											"end": 21862,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21858,
											"end": 21859,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 21851,
											"end": 21863,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 21805,
											"end": 21865,
											"name": "tag",
											"source": 8,
											"value": "701"
										},
										{
											"begin": 21805,
											"end": 21865,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21755,
											"end": 21871,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21755,
											"end": 21871,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 21877,
											"end": 22014,
											"name": "tag",
											"source": 8,
											"value": "501"
										},
										{
											"begin": 21877,
											"end": 22014,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21931,
											"end": 21936,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21962,
											"end": 21968,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 21956,
											"end": 21969,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 21947,
											"end": 21969,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21947,
											"end": 21969,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21978,
											"end": 22008,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "703"
										},
										{
											"begin": 22002,
											"end": 22007,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 21978,
											"end": 22008,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "500"
										},
										{
											"begin": 21978,
											"end": 22008,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 21978,
											"end": 22008,
											"name": "tag",
											"source": 8,
											"value": "703"
										},
										{
											"begin": 21978,
											"end": 22008,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21877,
											"end": 22014,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 21877,
											"end": 22014,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 21877,
											"end": 22014,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21877,
											"end": 22014,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21877,
											"end": 22014,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 22020,
											"end": 22365,
											"name": "tag",
											"source": 8,
											"value": "417"
										},
										{
											"begin": 22020,
											"end": 22365,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22087,
											"end": 22093,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 22136,
											"end": 22138,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 22124,
											"end": 22133,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 22115,
											"end": 22122,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 22111,
											"end": 22134,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 22107,
											"end": 22139,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 22104,
											"end": 22223,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 22104,
											"end": 22223,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "705"
										},
										{
											"begin": 22104,
											"end": 22223,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 22142,
											"end": 22221,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "706"
										},
										{
											"begin": 22142,
											"end": 22221,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "451"
										},
										{
											"begin": 22142,
											"end": 22221,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 22142,
											"end": 22221,
											"name": "tag",
											"source": 8,
											"value": "706"
										},
										{
											"begin": 22142,
											"end": 22221,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22104,
											"end": 22223,
											"name": "tag",
											"source": 8,
											"value": "705"
										},
										{
											"begin": 22104,
											"end": 22223,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22262,
											"end": 22263,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 22287,
											"end": 22348,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "707"
										},
										{
											"begin": 22340,
											"end": 22347,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 22331,
											"end": 22337,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 22320,
											"end": 22329,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 22316,
											"end": 22338,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 22287,
											"end": 22348,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "501"
										},
										{
											"begin": 22287,
											"end": 22348,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 22287,
											"end": 22348,
											"name": "tag",
											"source": 8,
											"value": "707"
										},
										{
											"begin": 22287,
											"end": 22348,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22277,
											"end": 22348,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 22277,
											"end": 22348,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22233,
											"end": 22358,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22020,
											"end": 22365,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 22020,
											"end": 22365,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 22020,
											"end": 22365,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22020,
											"end": 22365,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22020,
											"end": 22365,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 22371,
											"end": 22600,
											"name": "tag",
											"source": 8,
											"value": "502"
										},
										{
											"begin": 22371,
											"end": 22600,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22511,
											"end": 22545,
											"name": "PUSH",
											"source": 8,
											"value": "5361666542455032303A204245503230206F7065726174696F6E20646964206E"
										},
										{
											"begin": 22507,
											"end": 22508,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 22499,
											"end": 22505,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 22495,
											"end": 22509,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 22488,
											"end": 22546,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 22580,
											"end": 22592,
											"name": "PUSH",
											"source": 8,
											"value": "6F74207375636365656400000000000000000000000000000000000000000000"
										},
										{
											"begin": 22575,
											"end": 22577,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 22567,
											"end": 22573,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 22563,
											"end": 22578,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 22556,
											"end": 22593,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 22371,
											"end": 22600,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22371,
											"end": 22600,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 22606,
											"end": 22972,
											"name": "tag",
											"source": 8,
											"value": "503"
										},
										{
											"begin": 22606,
											"end": 22972,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22748,
											"end": 22751,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 22769,
											"end": 22836,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "710"
										},
										{
											"begin": 22833,
											"end": 22835,
											"name": "PUSH",
											"source": 8,
											"value": "2A"
										},
										{
											"begin": 22828,
											"end": 22831,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 22769,
											"end": 22836,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "465"
										},
										{
											"begin": 22769,
											"end": 22836,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 22769,
											"end": 22836,
											"name": "tag",
											"source": 8,
											"value": "710"
										},
										{
											"begin": 22769,
											"end": 22836,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22762,
											"end": 22836,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 22762,
											"end": 22836,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22845,
											"end": 22938,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "711"
										},
										{
											"begin": 22934,
											"end": 22937,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 22845,
											"end": 22938,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "502"
										},
										{
											"begin": 22845,
											"end": 22938,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 22845,
											"end": 22938,
											"name": "tag",
											"source": 8,
											"value": "711"
										},
										{
											"begin": 22845,
											"end": 22938,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22963,
											"end": 22965,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 22958,
											"end": 22961,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 22954,
											"end": 22966,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 22947,
											"end": 22966,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 22947,
											"end": 22966,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22606,
											"end": 22972,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 22606,
											"end": 22972,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 22606,
											"end": 22972,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22606,
											"end": 22972,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 22978,
											"end": 23397,
											"name": "tag",
											"source": 8,
											"value": "420"
										},
										{
											"begin": 22978,
											"end": 23397,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23144,
											"end": 23148,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 23182,
											"end": 23184,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 23171,
											"end": 23180,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 23167,
											"end": 23185,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 23159,
											"end": 23185,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 23159,
											"end": 23185,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23231,
											"end": 23240,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 23225,
											"end": 23229,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 23221,
											"end": 23241,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 23217,
											"end": 23218,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 23206,
											"end": 23215,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 23202,
											"end": 23219,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 23195,
											"end": 23242,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 23259,
											"end": 23390,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "713"
										},
										{
											"begin": 23385,
											"end": 23389,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 23259,
											"end": 23390,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "503"
										},
										{
											"begin": 23259,
											"end": 23390,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 23259,
											"end": 23390,
											"name": "tag",
											"source": 8,
											"value": "713"
										},
										{
											"begin": 23259,
											"end": 23390,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23251,
											"end": 23390,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 23251,
											"end": 23390,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22978,
											"end": 23397,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 22978,
											"end": 23397,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 22978,
											"end": 23397,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22978,
											"end": 23397,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 23403,
											"end": 23628,
											"name": "tag",
											"source": 8,
											"value": "504"
										},
										{
											"begin": 23403,
											"end": 23628,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23543,
											"end": 23577,
											"name": "PUSH",
											"source": 8,
											"value": "416464726573733A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 23539,
											"end": 23540,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 23531,
											"end": 23537,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 23527,
											"end": 23541,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 23520,
											"end": 23578,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 23612,
											"end": 23620,
											"name": "PUSH",
											"source": 8,
											"value": "722063616C6C0000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23607,
											"end": 23609,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 23599,
											"end": 23605,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 23595,
											"end": 23610,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 23588,
											"end": 23621,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 23403,
											"end": 23628,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23403,
											"end": 23628,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 23634,
											"end": 24000,
											"name": "tag",
											"source": 8,
											"value": "505"
										},
										{
											"begin": 23634,
											"end": 24000,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23776,
											"end": 23779,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 23797,
											"end": 23864,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "716"
										},
										{
											"begin": 23861,
											"end": 23863,
											"name": "PUSH",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 23856,
											"end": 23859,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 23797,
											"end": 23864,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "465"
										},
										{
											"begin": 23797,
											"end": 23864,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 23797,
											"end": 23864,
											"name": "tag",
											"source": 8,
											"value": "716"
										},
										{
											"begin": 23797,
											"end": 23864,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23790,
											"end": 23864,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 23790,
											"end": 23864,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23873,
											"end": 23966,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "717"
										},
										{
											"begin": 23962,
											"end": 23965,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 23873,
											"end": 23966,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "504"
										},
										{
											"begin": 23873,
											"end": 23966,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 23873,
											"end": 23966,
											"name": "tag",
											"source": 8,
											"value": "717"
										},
										{
											"begin": 23873,
											"end": 23966,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23991,
											"end": 23993,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 23986,
											"end": 23989,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 23982,
											"end": 23994,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 23975,
											"end": 23994,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 23975,
											"end": 23994,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23634,
											"end": 24000,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 23634,
											"end": 24000,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 23634,
											"end": 24000,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23634,
											"end": 24000,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 24006,
											"end": 24425,
											"name": "tag",
											"source": 8,
											"value": "427"
										},
										{
											"begin": 24006,
											"end": 24425,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24172,
											"end": 24176,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 24210,
											"end": 24212,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 24199,
											"end": 24208,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 24195,
											"end": 24213,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 24187,
											"end": 24213,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 24187,
											"end": 24213,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24259,
											"end": 24268,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 24253,
											"end": 24257,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 24249,
											"end": 24269,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 24245,
											"end": 24246,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 24234,
											"end": 24243,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 24230,
											"end": 24247,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 24223,
											"end": 24270,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 24287,
											"end": 24418,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "719"
										},
										{
											"begin": 24413,
											"end": 24417,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 24287,
											"end": 24418,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "505"
										},
										{
											"begin": 24287,
											"end": 24418,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 24287,
											"end": 24418,
											"name": "tag",
											"source": 8,
											"value": "719"
										},
										{
											"begin": 24287,
											"end": 24418,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24279,
											"end": 24418,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 24279,
											"end": 24418,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24006,
											"end": 24425,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 24006,
											"end": 24425,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 24006,
											"end": 24425,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24006,
											"end": 24425,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 24431,
											"end": 24610,
											"name": "tag",
											"source": 8,
											"value": "506"
										},
										{
											"begin": 24431,
											"end": 24610,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24571,
											"end": 24602,
											"name": "PUSH",
											"source": 8,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 24567,
											"end": 24568,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 24559,
											"end": 24565,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 24555,
											"end": 24569,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 24548,
											"end": 24603,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 24431,
											"end": 24610,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24431,
											"end": 24610,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 24616,
											"end": 24982,
											"name": "tag",
											"source": 8,
											"value": "507"
										},
										{
											"begin": 24616,
											"end": 24982,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24758,
											"end": 24761,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 24779,
											"end": 24846,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "722"
										},
										{
											"begin": 24843,
											"end": 24845,
											"name": "PUSH",
											"source": 8,
											"value": "1D"
										},
										{
											"begin": 24838,
											"end": 24841,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 24779,
											"end": 24846,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "465"
										},
										{
											"begin": 24779,
											"end": 24846,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 24779,
											"end": 24846,
											"name": "tag",
											"source": 8,
											"value": "722"
										},
										{
											"begin": 24779,
											"end": 24846,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24772,
											"end": 24846,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 24772,
											"end": 24846,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24855,
											"end": 24948,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "723"
										},
										{
											"begin": 24944,
											"end": 24947,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 24855,
											"end": 24948,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "506"
										},
										{
											"begin": 24855,
											"end": 24948,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 24855,
											"end": 24948,
											"name": "tag",
											"source": 8,
											"value": "723"
										},
										{
											"begin": 24855,
											"end": 24948,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24973,
											"end": 24975,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 24968,
											"end": 24971,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 24964,
											"end": 24976,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 24957,
											"end": 24976,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 24957,
											"end": 24976,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24616,
											"end": 24982,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 24616,
											"end": 24982,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 24616,
											"end": 24982,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24616,
											"end": 24982,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 24988,
											"end": 25407,
											"name": "tag",
											"source": 8,
											"value": "432"
										},
										{
											"begin": 24988,
											"end": 25407,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25154,
											"end": 25158,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 25192,
											"end": 25194,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 25181,
											"end": 25190,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 25177,
											"end": 25195,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 25169,
											"end": 25195,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 25169,
											"end": 25195,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25241,
											"end": 25250,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 25235,
											"end": 25239,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 25231,
											"end": 25251,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 25227,
											"end": 25228,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 25216,
											"end": 25225,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 25212,
											"end": 25229,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 25205,
											"end": 25252,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 25269,
											"end": 25400,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "725"
										},
										{
											"begin": 25395,
											"end": 25399,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 25269,
											"end": 25400,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "507"
										},
										{
											"begin": 25269,
											"end": 25400,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 25269,
											"end": 25400,
											"name": "tag",
											"source": 8,
											"value": "725"
										},
										{
											"begin": 25269,
											"end": 25400,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25261,
											"end": 25400,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 25261,
											"end": 25400,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24988,
											"end": 25407,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 24988,
											"end": 25407,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 24988,
											"end": 25407,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24988,
											"end": 25407,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 25413,
											"end": 25511,
											"name": "tag",
											"source": 8,
											"value": "508"
										},
										{
											"begin": 25413,
											"end": 25511,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25464,
											"end": 25470,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 25498,
											"end": 25503,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 25492,
											"end": 25504,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 25482,
											"end": 25504,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 25482,
											"end": 25504,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25413,
											"end": 25511,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 25413,
											"end": 25511,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 25413,
											"end": 25511,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25413,
											"end": 25511,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 25517,
											"end": 25664,
											"name": "tag",
											"source": 8,
											"value": "509"
										},
										{
											"begin": 25517,
											"end": 25664,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25618,
											"end": 25629,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 25655,
											"end": 25658,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 25640,
											"end": 25658,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 25640,
											"end": 25658,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25517,
											"end": 25664,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 25517,
											"end": 25664,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 25517,
											"end": 25664,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25517,
											"end": 25664,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25517,
											"end": 25664,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 25670,
											"end": 25977,
											"name": "tag",
											"source": 8,
											"value": "510"
										},
										{
											"begin": 25670,
											"end": 25977,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25738,
											"end": 25739,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 25748,
											"end": 25861,
											"name": "tag",
											"source": 8,
											"value": "729"
										},
										{
											"begin": 25748,
											"end": 25861,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25762,
											"end": 25768,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 25759,
											"end": 25760,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 25756,
											"end": 25769,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 25748,
											"end": 25861,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 25748,
											"end": 25861,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "731"
										},
										{
											"begin": 25748,
											"end": 25861,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 25847,
											"end": 25848,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 25842,
											"end": 25845,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 25838,
											"end": 25849,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 25832,
											"end": 25850,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 25828,
											"end": 25829,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 25823,
											"end": 25826,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 25819,
											"end": 25830,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 25812,
											"end": 25851,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 25784,
											"end": 25786,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 25781,
											"end": 25782,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 25777,
											"end": 25787,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 25772,
											"end": 25787,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 25772,
											"end": 25787,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25748,
											"end": 25861,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "729"
										},
										{
											"begin": 25748,
											"end": 25861,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 25748,
											"end": 25861,
											"name": "tag",
											"source": 8,
											"value": "731"
										},
										{
											"begin": 25748,
											"end": 25861,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25879,
											"end": 25885,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 25876,
											"end": 25877,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 25873,
											"end": 25886,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 25870,
											"end": 25971,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 25870,
											"end": 25971,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "732"
										},
										{
											"begin": 25870,
											"end": 25971,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 25959,
											"end": 25960,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 25950,
											"end": 25956,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 25945,
											"end": 25948,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 25941,
											"end": 25957,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 25934,
											"end": 25961,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 25870,
											"end": 25971,
											"name": "tag",
											"source": 8,
											"value": "732"
										},
										{
											"begin": 25870,
											"end": 25971,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25719,
											"end": 25977,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25670,
											"end": 25977,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25670,
											"end": 25977,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25670,
											"end": 25977,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25670,
											"end": 25977,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 25983,
											"end": 26356,
											"name": "tag",
											"source": 8,
											"value": "511"
										},
										{
											"begin": 25983,
											"end": 26356,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26087,
											"end": 26090,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 26115,
											"end": 26153,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "734"
										},
										{
											"begin": 26147,
											"end": 26152,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 26115,
											"end": 26153,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "508"
										},
										{
											"begin": 26115,
											"end": 26153,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 26115,
											"end": 26153,
											"name": "tag",
											"source": 8,
											"value": "734"
										},
										{
											"begin": 26115,
											"end": 26153,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26169,
											"end": 26257,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "735"
										},
										{
											"begin": 26250,
											"end": 26256,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 26245,
											"end": 26248,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 26169,
											"end": 26257,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "509"
										},
										{
											"begin": 26169,
											"end": 26257,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 26169,
											"end": 26257,
											"name": "tag",
											"source": 8,
											"value": "735"
										},
										{
											"begin": 26169,
											"end": 26257,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26162,
											"end": 26257,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 26162,
											"end": 26257,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26266,
											"end": 26318,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "736"
										},
										{
											"begin": 26311,
											"end": 26317,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 26306,
											"end": 26309,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 26299,
											"end": 26303,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 26292,
											"end": 26297,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 26288,
											"end": 26304,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 26266,
											"end": 26318,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "510"
										},
										{
											"begin": 26266,
											"end": 26318,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 26266,
											"end": 26318,
											"name": "tag",
											"source": 8,
											"value": "736"
										},
										{
											"begin": 26266,
											"end": 26318,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26343,
											"end": 26349,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 26338,
											"end": 26341,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 26334,
											"end": 26350,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 26327,
											"end": 26350,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 26327,
											"end": 26350,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26091,
											"end": 26356,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25983,
											"end": 26356,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 25983,
											"end": 26356,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 25983,
											"end": 26356,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25983,
											"end": 26356,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25983,
											"end": 26356,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 26362,
											"end": 26633,
											"name": "tag",
											"source": 8,
											"value": "434"
										},
										{
											"begin": 26362,
											"end": 26633,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26492,
											"end": 26495,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 26514,
											"end": 26607,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "738"
										},
										{
											"begin": 26603,
											"end": 26606,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 26594,
											"end": 26600,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 26514,
											"end": 26607,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "511"
										},
										{
											"begin": 26514,
											"end": 26607,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 26514,
											"end": 26607,
											"name": "tag",
											"source": 8,
											"value": "738"
										},
										{
											"begin": 26514,
											"end": 26607,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26507,
											"end": 26607,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 26507,
											"end": 26607,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26624,
											"end": 26627,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 26617,
											"end": 26627,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 26617,
											"end": 26627,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26362,
											"end": 26633,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 26362,
											"end": 26633,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 26362,
											"end": 26633,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26362,
											"end": 26633,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26362,
											"end": 26633,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 26639,
											"end": 26738,
											"name": "tag",
											"source": 8,
											"value": "512"
										},
										{
											"begin": 26639,
											"end": 26738,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26691,
											"end": 26697,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 26725,
											"end": 26730,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 26719,
											"end": 26731,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 26709,
											"end": 26731,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 26709,
											"end": 26731,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26639,
											"end": 26738,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 26639,
											"end": 26738,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 26639,
											"end": 26738,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26639,
											"end": 26738,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 26744,
											"end": 26846,
											"name": "tag",
											"source": 8,
											"value": "513"
										},
										{
											"begin": 26744,
											"end": 26846,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26785,
											"end": 26791,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 26836,
											"end": 26838,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 26832,
											"end": 26839,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 26827,
											"end": 26829,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 26820,
											"end": 26825,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 26816,
											"end": 26830,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 26812,
											"end": 26840,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 26802,
											"end": 26840,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 26802,
											"end": 26840,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26744,
											"end": 26846,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 26744,
											"end": 26846,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 26744,
											"end": 26846,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26744,
											"end": 26846,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 26852,
											"end": 27216,
											"name": "tag",
											"source": 8,
											"value": "514"
										},
										{
											"begin": 26852,
											"end": 27216,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26940,
											"end": 26943,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 26968,
											"end": 27007,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "742"
										},
										{
											"begin": 27001,
											"end": 27006,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 26968,
											"end": 27007,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "512"
										},
										{
											"begin": 26968,
											"end": 27007,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 26968,
											"end": 27007,
											"name": "tag",
											"source": 8,
											"value": "742"
										},
										{
											"begin": 26968,
											"end": 27007,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 27023,
											"end": 27094,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "743"
										},
										{
											"begin": 27087,
											"end": 27093,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 27082,
											"end": 27085,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 27023,
											"end": 27094,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "465"
										},
										{
											"begin": 27023,
											"end": 27094,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 27023,
											"end": 27094,
											"name": "tag",
											"source": 8,
											"value": "743"
										},
										{
											"begin": 27023,
											"end": 27094,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 27016,
											"end": 27094,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 27016,
											"end": 27094,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 27103,
											"end": 27155,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "744"
										},
										{
											"begin": 27148,
											"end": 27154,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 27143,
											"end": 27146,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 27136,
											"end": 27140,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 27129,
											"end": 27134,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 27125,
											"end": 27141,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 27103,
											"end": 27155,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "510"
										},
										{
											"begin": 27103,
											"end": 27155,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 27103,
											"end": 27155,
											"name": "tag",
											"source": 8,
											"value": "744"
										},
										{
											"begin": 27103,
											"end": 27155,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 27180,
											"end": 27209,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "745"
										},
										{
											"begin": 27202,
											"end": 27208,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 27180,
											"end": 27209,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "513"
										},
										{
											"begin": 27180,
											"end": 27209,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 27180,
											"end": 27209,
											"name": "tag",
											"source": 8,
											"value": "745"
										},
										{
											"begin": 27180,
											"end": 27209,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 27175,
											"end": 27178,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 27171,
											"end": 27210,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 27164,
											"end": 27210,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 27164,
											"end": 27210,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26944,
											"end": 27216,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26852,
											"end": 27216,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 26852,
											"end": 27216,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 26852,
											"end": 27216,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26852,
											"end": 27216,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26852,
											"end": 27216,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 27222,
											"end": 27535,
											"name": "tag",
											"source": 8,
											"value": "447"
										},
										{
											"begin": 27222,
											"end": 27535,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 27335,
											"end": 27339,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 27373,
											"end": 27375,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 27362,
											"end": 27371,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 27358,
											"end": 27376,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 27350,
											"end": 27376,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 27350,
											"end": 27376,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 27422,
											"end": 27431,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 27416,
											"end": 27420,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 27412,
											"end": 27432,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 27408,
											"end": 27409,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 27397,
											"end": 27406,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 27393,
											"end": 27410,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 27386,
											"end": 27433,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 27450,
											"end": 27528,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "747"
										},
										{
											"begin": 27523,
											"end": 27527,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 27514,
											"end": 27520,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 27450,
											"end": 27528,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "514"
										},
										{
											"begin": 27450,
											"end": 27528,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 27450,
											"end": 27528,
											"name": "tag",
											"source": 8,
											"value": "747"
										},
										{
											"begin": 27450,
											"end": 27528,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 27442,
											"end": 27528,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 27442,
											"end": 27528,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 27222,
											"end": 27535,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 27222,
											"end": 27535,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 27222,
											"end": 27535,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 27222,
											"end": 27535,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 27222,
											"end": 27535,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"eventPeriod()": "18b2367e",
							"getMinimumStakingAmount(uint256)": "909f093e",
							"getNumberofStakers()": "5715ec11",
							"getRewardRate()": "7e1a3786",
							"getStakerMode(address)": "aedf562b",
							"getTotalStaked()": "0917e776",
							"harvest()": "4641257d",
							"isLocked(address)": "4a4fbeec",
							"isStartStaking(address)": "fe600f84",
							"lockupPeriod(uint256)": "ce34751f",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"rewardToHarvest(address)": "6ef32435",
							"setCopperMinAmount(uint256)": "c1704a14",
							"setEventPeriod(uint256)": "692642e7",
							"setGoldMinAmount(uint256)": "ae544943",
							"setLockupTime(uint256)": "4b62b70b",
							"setRewardRate(uint256)": "9e447fc6",
							"setSilverMinAmount(uint256)": "23b61117",
							"setThreeMonthMinAmount(uint256)": "c665d80e",
							"setUnstakingFeeRate(uint256)": "91e07e7a",
							"stake(uint256)": "a694fc3a",
							"stakedAmount(address)": "f9931855",
							"startStaking(uint256,uint256)": "4b77dd9e",
							"token()": "fc0c546a",
							"totalStaked()": "817b1cd2",
							"transferOwnership(address)": "f2fde38b",
							"unstakingFeeLate()": "221dfe03",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardToClaim\",\"type\":\"uint256\"}],\"name\":\"Harvest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lockupDuration\",\"type\":\"uint256\"}],\"name\":\"SetEventPeriod\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardRate\",\"type\":\"uint256\"}],\"name\":\"SetRewardRate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"unstakingFeeRate\",\"type\":\"uint256\"}],\"name\":\"SetUnstakingFeeRate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eventPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_mode\",\"type\":\"uint256\"}],\"name\":\"getMinimumStakingAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNumberofStakers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRewardRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getStakerMode\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"harvest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isLocked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isStartStaking\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"mode\",\"type\":\"uint256\"}],\"name\":\"lockupPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"rewardToHarvest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_minAmount\",\"type\":\"uint256\"}],\"name\":\"setCopperMinAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"__eventPeriod\",\"type\":\"uint256\"}],\"name\":\"setEventPeriod\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_minAmount\",\"type\":\"uint256\"}],\"name\":\"setGoldMinAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lockupTime\",\"type\":\"uint256\"}],\"name\":\"setLockupTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"__rewardRate\",\"type\":\"uint256\"}],\"name\":\"setRewardRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_minAmount\",\"type\":\"uint256\"}],\"name\":\"setSilverMinAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_minAmount\",\"type\":\"uint256\"}],\"name\":\"setThreeMonthMinAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"__unstakingFeeRate\",\"type\":\"uint256\"}],\"name\":\"setUnstakingFeeRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"stakedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_mode\",\"type\":\"uint256\"}],\"name\":\"startStaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IBEP20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unstakingFeeLate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Staking.sol\":\"StakingPlatform\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]},\"contracts/IBEP20.sol\":{\"keccak256\":\"0xe10557d770e08d0867c7d7f45f4ecc3aa71fab37aec10f03deac873774d83958\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29c5d9f242fe719f9c99293f895de2c62b11990dcb76b0c5fe29d4bb20debd36\",\"dweb:/ipfs/QmcxmgSN37RwVYQ6uVyyksA7q9rbs7ZfAGxLg9ZAqetzVc\"]},\"contracts/SafeBEP20.sol\":{\"keccak256\":\"0x6ddb1e1687ec39379d8d51c1dd37f9fc5bdbcf76d13b12bb2ef97218f17af728\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c317daa7645bea9fb8926f04a64e9dda06454035d35dd618fb8865bead0b343\",\"dweb:/ipfs/QmcGbnJ9k7RVUBh5HyHxzV7u52hykYsHKqi7VRWSLvEjrG\"]},\"contracts/Staking.sol\":{\"keccak256\":\"0xc9e45cf33375f3d72ef698687aefdd999fa3aaede01996194c4bd202fad05045\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://64c352445c9072d4e4030dd8f178f4fad86a8e4a022984147b0cfed59632fc45\",\"dweb:/ipfs/Qmf3N2qo91xat3gqtBhXkqU5oaDtUAL5UNKg9h1FWMEhMi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "contracts/Staking.sol:StakingPlatform",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 1160,
								"contract": "contracts/Staking.sol:StakingPlatform",
								"label": "_unstakingFeeRate",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 1162,
								"contract": "contracts/Staking.sol:StakingPlatform",
								"label": "_eventPeriod",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 1164,
								"contract": "contracts/Staking.sol:StakingPlatform",
								"label": "_rewardRate",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 1166,
								"contract": "contracts/Staking.sol:StakingPlatform",
								"label": "_rewardFeeRate",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 1168,
								"contract": "contracts/Staking.sol:StakingPlatform",
								"label": "_lockupPeriod",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 1170,
								"contract": "contracts/Staking.sol:StakingPlatform",
								"label": "_minStakeAmount_m",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 1172,
								"contract": "contracts/Staking.sol:StakingPlatform",
								"label": "_minStakeAmount_g",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 1174,
								"contract": "contracts/Staking.sol:StakingPlatform",
								"label": "_minStakeAmount_s",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 1176,
								"contract": "contracts/Staking.sol:StakingPlatform",
								"label": "_minStakeAmount_c",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 1179,
								"contract": "contracts/Staking.sol:StakingPlatform",
								"label": "_stakers",
								"offset": 0,
								"slot": "10",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 1184,
								"contract": "contracts/Staking.sol:StakingPlatform",
								"label": "_staker",
								"offset": 0,
								"slot": "11",
								"type": "t_mapping(t_address,t_struct(Staker)1158_storage)"
							},
							{
								"astId": 1186,
								"contract": "contracts/Staking.sol:StakingPlatform",
								"label": "totalStaked",
								"offset": 0,
								"slot": "12",
								"type": "t_uint256"
							},
							{
								"astId": 1189,
								"contract": "contracts/Staking.sol:StakingPlatform",
								"label": "token",
								"offset": 0,
								"slot": "13",
								"type": "t_contract(IBEP20)912"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_contract(IBEP20)912": {
								"encoding": "inplace",
								"label": "contract IBEP20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(Staker)1158_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct StakingPlatform.Staker)",
								"numberOfBytes": "32",
								"value": "t_struct(Staker)1158_storage"
							},
							"t_struct(Staker)1158_storage": {
								"encoding": "inplace",
								"label": "struct StakingPlatform.Staker",
								"members": [
									{
										"astId": 1147,
										"contract": "contracts/Staking.sol:StakingPlatform",
										"label": "stakerCurrentReward",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1149,
										"contract": "contracts/Staking.sol:StakingPlatform",
										"label": "stakedAmount",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1151,
										"contract": "contracts/Staking.sol:StakingPlatform",
										"label": "mode",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1153,
										"contract": "contracts/Staking.sol:StakingPlatform",
										"label": "stakeStartTime",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 1155,
										"contract": "contracts/Staking.sol:StakingPlatform",
										"label": "lastUpdatedTime",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 1157,
										"contract": "contracts/Staking.sol:StakingPlatform",
										"label": "staked",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "192"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							499
						],
						"Ownable": [
							104
						]
					},
					"id": 105,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 105,
							"sourceUnit": 500,
							"src": "112:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 499,
										"src": "668:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "668:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "144:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 104,
							"linearizedBaseContracts": [
								104,
								499
							],
							"name": "Ownable",
							"nameLocation": "657:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "698:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 104,
									"src": "682:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "682:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "717:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "754:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "738:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "785:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "769:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "769:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:57:0"
									},
									"src": "711:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "911:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 489,
																"src": "940:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "940:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "921:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "921:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "921:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "801:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "908:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "911:0:0"
									},
									"scope": 104,
									"src": "897:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 31,
										"nodeType": "Block",
										"src": "1091:30:0",
										"statements": [
											{
												"expression": {
													"id": 29,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1108:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 28,
												"id": 30,
												"nodeType": "Return",
												"src": "1101:13:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "966:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 32,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1045:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1050:2:0"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "1082:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1082:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1081:9:0"
									},
									"scope": 104,
									"src": "1036:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 45,
										"nodeType": "Block",
										"src": "1230:96:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 36,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 32,
																	"src": "1248:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 37,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1248:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 38,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 489,
																	"src": "1259:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 39,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1259:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1248:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1273:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 35,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1240:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1240:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "1240:68:0"
											},
											{
												"id": 44,
												"nodeType": "PlaceholderStatement",
												"src": "1318:1:0"
											}
										]
									},
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "1127:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 46,
									"name": "onlyOwner",
									"nameLocation": "1218:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1227:2:0"
									},
									"src": "1209:117:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "1722:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 55,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1759:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1751:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 53,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1751:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1751:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 52,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "1732:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1732:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 58,
												"nodeType": "ExpressionStatement",
												"src": "1732:30:0"
											}
										]
									},
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "1332:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 50,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 49,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1712:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1712:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1677:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1694:2:0"
									},
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1722:0:0"
									},
									"scope": 104,
									"src": "1668:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 82,
										"nodeType": "Block",
										"src": "1988:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 69,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 63,
																"src": "2006:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 72,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2026:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 71,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2018:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 70,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2018:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2018:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2006:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 75,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2030:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 68,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1998:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1998:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 77,
												"nodeType": "ExpressionStatement",
												"src": "1998:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 79,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 63,
															"src": "2100:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 78,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "2081:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2081:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 81,
												"nodeType": "ExpressionStatement",
												"src": "2081:28:0"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "1775:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 83,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 66,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 65,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1978:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1978:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1927:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1953:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "1945:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1945:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1944:18:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1988:0:0"
									},
									"scope": 104,
									"src": "1918:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 102,
										"nodeType": "Block",
										"src": "2333:124:0",
										"statements": [
											{
												"assignments": [
													90
												],
												"declarations": [
													{
														"constant": false,
														"id": 90,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2351:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 102,
														"src": "2343:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 89,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2343:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 92,
												"initialValue": {
													"id": 91,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2362:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2343:25:0"
											},
											{
												"expression": {
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 93,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2378:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 94,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "2387:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2378:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2378:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 98,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 90,
															"src": "2431:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 99,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 86,
															"src": "2441:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 97,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2410:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2410:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 101,
												"nodeType": "EmitStatement",
												"src": "2405:45:0"
											}
										]
									},
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "2122:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2279:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2306:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "2298:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2298:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2297:18:0"
									},
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2333:0:0"
									},
									"scope": 104,
									"src": "2270:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 105,
							"src": "639:1820:0",
							"usedErrors": []
						}
					],
					"src": "87:2373:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							182
						]
					},
					"id": 183,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 106,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 107,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 182,
							"linearizedBaseContracts": [
								182
							],
							"name": "IERC20",
							"nameLocation": "212:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 108,
										"nodeType": "StructuredDocumentation",
										"src": "225:66:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 113,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "305:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "316:2:1"
									},
									"returnParameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "342:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "342:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "341:9:1"
									},
									"scope": 182,
									"src": "296:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 114,
										"nodeType": "StructuredDocumentation",
										"src": "357:72:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 121,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "443:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "461:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "453:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "453:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "452:17:1"
									},
									"returnParameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "493:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 118,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "493:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "492:9:1"
									},
									"scope": 182,
									"src": "434:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 122,
										"nodeType": "StructuredDocumentation",
										"src": "508:202:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 131,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "724:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 124,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "741:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "733:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 123,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "733:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "753:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "745:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 125,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "745:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "732:28:1"
									},
									"returnParameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "779:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 128,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "779:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "778:6:1"
									},
									"scope": 182,
									"src": "715:70:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "791:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 141,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1069:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1087:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "1079:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1079:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1102:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "1094:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 135,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1078:32:1"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "1134:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1134:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1133:9:1"
									},
									"scope": 182,
									"src": "1060:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 142,
										"nodeType": "StructuredDocumentation",
										"src": "1149:642:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 151,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1805:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1821:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 151,
												"src": "1813:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1813:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1838:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 151,
												"src": "1830:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 145,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1830:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1812:33:1"
									},
									"returnParameters": {
										"id": 150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 151,
												"src": "1864:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 148,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1864:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1863:6:1"
									},
									"scope": 182,
									"src": "1796:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 152,
										"nodeType": "StructuredDocumentation",
										"src": "1876:287:1",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 163,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2177:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2207:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "2199:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 153,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2199:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2229:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "2221:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 155,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2221:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2249:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "2241:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2241:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2189:72:1"
									},
									"returnParameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "2280:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 160,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2280:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2279:6:1"
									},
									"scope": 182,
									"src": "2168:118:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 164,
										"nodeType": "StructuredDocumentation",
										"src": "2292:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 172,
									"name": "Transfer",
									"nameLocation": "2461:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2486:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "2470:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 165,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2470:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 168,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2508:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "2492:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 167,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2492:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 170,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2520:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "2512:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2512:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2469:57:1"
									},
									"src": "2455:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 173,
										"nodeType": "StructuredDocumentation",
										"src": "2533:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 181,
									"name": "Approval",
									"nameLocation": "2692:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2717:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "2701:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 177,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2740:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "2724:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2724:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 179,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2757:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "2749:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2749:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2700:63:1"
									},
									"src": "2686:78:1"
								}
							],
							"scope": 183,
							"src": "202:2564:1",
							"usedErrors": []
						}
					],
					"src": "106:2661:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							477
						]
					},
					"id": 478,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 184,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 185,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:2",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 477,
							"linearizedBaseContracts": [
								477
							],
							"name": "Address",
							"nameLocation": "202:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 199,
										"nodeType": "Block",
										"src": "1241:254:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 193,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 188,
																"src": "1465:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 194,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1465:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 195,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1465:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 196,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1487:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1465:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 192,
												"id": 198,
												"nodeType": "Return",
												"src": "1458:30:2"
											}
										]
									},
									"documentation": {
										"id": 186,
										"nodeType": "StructuredDocumentation",
										"src": "216:954:2",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 200,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1184:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1203:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "1195:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:17:2"
									},
									"returnParameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "1235:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 190,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1235:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1234:6:2"
									},
									"scope": 477,
									"src": "1175:320:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 233,
										"nodeType": "Block",
										"src": "2483:241:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 215,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 211,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2509:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$477",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$477",
																				"typeString": "library Address"
																			}
																		],
																		"id": 210,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2501:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 209,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2501:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 212,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2501:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 213,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2501:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 214,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 205,
																"src": "2526:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2501:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 216,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2534:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 208,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2493:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:73:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 218,
												"nodeType": "ExpressionStatement",
												"src": "2493:73:2"
											},
											{
												"assignments": [
													220,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 220,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2583:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 233,
														"src": "2578:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 219,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2578:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 227,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 225,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 221,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 203,
																"src": "2596:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2596:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 224,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 223,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 205,
																"src": "2618:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2596:29:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2596:33:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2577:52:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 229,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 220,
															"src": "2647:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 230,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2656:60:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 228,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2639:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2639:78:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 232,
												"nodeType": "ExpressionStatement",
												"src": "2639:78:2"
											}
										]
									},
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "1501:906:2",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 234,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2421:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2447:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "2431:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2431:15:2",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2466:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "2458:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2458:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:43:2"
									},
									"returnParameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2483:0:2"
									},
									"scope": 477,
									"src": "2412:312:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 250,
										"nodeType": "Block",
										"src": "3555:84:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 245,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "3585:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 246,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 239,
															"src": "3593:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 247,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3599:32:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 244,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															251,
															271
														],
														"referencedDeclaration": 271,
														"src": "3572:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3572:60:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 243,
												"id": 249,
												"nodeType": "Return",
												"src": "3565:67:2"
											}
										]
									},
									"documentation": {
										"id": 235,
										"nodeType": "StructuredDocumentation",
										"src": "2730:731:2",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 251,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3475:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3496:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "3488:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 236,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3488:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3517:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "3504:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 238,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3504:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3487:35:2"
									},
									"returnParameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "3541:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 241,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3541:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3540:14:2"
									},
									"scope": 477,
									"src": "3466:173:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 270,
										"nodeType": "Block",
										"src": "4008:76:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 264,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 254,
															"src": "4047:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 265,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 256,
															"src": "4055:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 266,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4061:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 267,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 258,
															"src": "4064:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 263,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															291,
															341
														],
														"referencedDeclaration": 341,
														"src": "4025:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4025:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 262,
												"id": 269,
												"nodeType": "Return",
												"src": "4018:59:2"
											}
										]
									},
									"documentation": {
										"id": 252,
										"nodeType": "StructuredDocumentation",
										"src": "3645:211:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 271,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3870:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3900:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "3892:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3892:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3929:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "3916:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 255,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3916:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3957:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "3943:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 257,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3943:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3882:93:2"
									},
									"returnParameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "3994:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 260,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3994:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3993:14:2"
									},
									"scope": 477,
									"src": "3861:223:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 290,
										"nodeType": "Block",
										"src": "4589:111:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 284,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "4628:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 285,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "4636:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 286,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 278,
															"src": "4642:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 287,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4649:43:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 283,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															291,
															341
														],
														"referencedDeclaration": 341,
														"src": "4606:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4606:87:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 282,
												"id": 289,
												"nodeType": "Return",
												"src": "4599:94:2"
											}
										]
									},
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "4090:351:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 291,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4455:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4494:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "4486:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4486:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4523:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "4510:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 275,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4510:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4545:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "4537:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4537:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4476:80:2"
									},
									"returnParameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "4575:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 280,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4575:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4574:14:2"
									},
									"scope": 477,
									"src": "4446:254:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 340,
										"nodeType": "Block",
										"src": "5127:320:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 308,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5153:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$477",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$477",
																				"typeString": "library Address"
																			}
																		],
																		"id": 307,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5145:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 306,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5145:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 309,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5145:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 310,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5145:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 311,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 298,
																"src": "5170:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5145:30:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 313,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5177:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 305,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5137:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5137:81:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 315,
												"nodeType": "ExpressionStatement",
												"src": "5137:81:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 318,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 294,
																	"src": "5247:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 317,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 200,
																"src": "5236:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 319,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5236:18:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 320,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5256:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 316,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5228:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5228:60:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 322,
												"nodeType": "ExpressionStatement",
												"src": "5228:60:2"
											},
											{
												"assignments": [
													324,
													326
												],
												"declarations": [
													{
														"constant": false,
														"id": 324,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5305:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 340,
														"src": "5300:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 323,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5300:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 326,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5327:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 340,
														"src": "5314:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 325,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5314:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 333,
												"initialValue": {
													"arguments": [
														{
															"id": 331,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 296,
															"src": "5367:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 327,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 294,
																"src": "5341:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 328,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5341:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 330,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 329,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 298,
																"src": "5360:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5341:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5341:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5299:73:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 335,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 324,
															"src": "5406:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 336,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 326,
															"src": "5415:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 337,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 300,
															"src": "5427:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 334,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 476,
														"src": "5389:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5389:51:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 304,
												"id": 339,
												"nodeType": "Return",
												"src": "5382:58:2"
											}
										]
									},
									"documentation": {
										"id": 292,
										"nodeType": "StructuredDocumentation",
										"src": "4706:237:2",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 341,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4957:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4996:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "4988:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4988:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5025:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "5012:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 295,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5012:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 298,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5047:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "5039:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 297,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5039:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5076:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "5062:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 299,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5062:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4978:116:2"
									},
									"returnParameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "5113:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 302,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5113:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5112:14:2"
									},
									"scope": 477,
									"src": "4948:499:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 357,
										"nodeType": "Block",
										"src": "5724:97:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 352,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 344,
															"src": "5760:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 353,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 346,
															"src": "5768:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 354,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5774:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 351,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															358,
															393
														],
														"referencedDeclaration": 393,
														"src": "5741:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5741:73:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 350,
												"id": 356,
												"nodeType": "Return",
												"src": "5734:80:2"
											}
										]
									},
									"documentation": {
										"id": 342,
										"nodeType": "StructuredDocumentation",
										"src": "5453:166:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 358,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5633:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5660:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "5652:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5652:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5681:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "5668:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 345,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5668:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5651:35:2"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "5710:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 348,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5710:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5709:14:2"
									},
									"scope": 477,
									"src": "5624:197:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 392,
										"nodeType": "Block",
										"src": "6163:228:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 372,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 361,
																	"src": "6192:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 371,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 200,
																"src": "6181:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 373,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6181:18:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 374,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6201:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 370,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6173:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6173:67:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 376,
												"nodeType": "ExpressionStatement",
												"src": "6173:67:2"
											},
											{
												"assignments": [
													378,
													380
												],
												"declarations": [
													{
														"constant": false,
														"id": 378,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6257:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 392,
														"src": "6252:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 377,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6252:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 380,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6279:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 392,
														"src": "6266:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 379,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6266:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 385,
												"initialValue": {
													"arguments": [
														{
															"id": 383,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 363,
															"src": "6311:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 381,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 361,
															"src": "6293:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 382,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6293:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6293:23:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6251:65:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 387,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 378,
															"src": "6350:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 388,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 380,
															"src": "6359:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 389,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 365,
															"src": "6371:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 386,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 476,
														"src": "6333:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6333:51:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 369,
												"id": 391,
												"nodeType": "Return",
												"src": "6326:58:2"
											}
										]
									},
									"documentation": {
										"id": 359,
										"nodeType": "StructuredDocumentation",
										"src": "5827:173:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 393,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6014:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6050:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "6042:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 360,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6042:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6079:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "6066:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 362,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6066:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6107:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "6093:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 364,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6093:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6032:93:2"
									},
									"returnParameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "6149:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 367,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6149:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6148:14:2"
									},
									"scope": 477,
									"src": "6005:386:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 409,
										"nodeType": "Block",
										"src": "6667:101:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 404,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "6705:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 405,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 398,
															"src": "6713:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 406,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6719:41:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 403,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															410,
															445
														],
														"referencedDeclaration": 445,
														"src": "6684:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6684:77:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 402,
												"id": 408,
												"nodeType": "Return",
												"src": "6677:84:2"
											}
										]
									},
									"documentation": {
										"id": 394,
										"nodeType": "StructuredDocumentation",
										"src": "6397:168:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 410,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6579:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6608:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "6600:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 395,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6600:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "6616:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 397,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6599:35:2"
									},
									"returnParameters": {
										"id": 402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "6653:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 400,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6653:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6652:14:2"
									},
									"scope": 477,
									"src": "6570:198:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 444,
										"nodeType": "Block",
										"src": "7109:232:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 424,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 413,
																	"src": "7138:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 423,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 200,
																"src": "7127:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 425,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7127:18:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 426,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7147:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 422,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7119:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7119:69:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 428,
												"nodeType": "ExpressionStatement",
												"src": "7119:69:2"
											},
											{
												"assignments": [
													430,
													432
												],
												"declarations": [
													{
														"constant": false,
														"id": 430,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7205:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 444,
														"src": "7200:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 429,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7200:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 432,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7227:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 444,
														"src": "7214:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 431,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7214:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 437,
												"initialValue": {
													"arguments": [
														{
															"id": 435,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 415,
															"src": "7261:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 433,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 413,
															"src": "7241:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7241:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7241:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7199:67:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 439,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 430,
															"src": "7300:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 440,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 432,
															"src": "7309:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 441,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "7321:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 438,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 476,
														"src": "7283:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7283:51:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 421,
												"id": 443,
												"nodeType": "Return",
												"src": "7276:58:2"
											}
										]
									},
									"documentation": {
										"id": 411,
										"nodeType": "StructuredDocumentation",
										"src": "6774:175:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 445,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6963:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7001:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "6993:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 412,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6993:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7030:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "7017:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 414,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7017:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7058:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "7044:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 416,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7044:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6983:93:2"
									},
									"returnParameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "7095:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 419,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7095:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7094:14:2"
									},
									"scope": 477,
									"src": "6954:387:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 475,
										"nodeType": "Block",
										"src": "7721:532:2",
										"statements": [
											{
												"condition": {
													"id": 457,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 448,
													"src": "7735:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 473,
													"nodeType": "Block",
													"src": "7792:455:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 464,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 461,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 450,
																		"src": "7876:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 462,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7876:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 463,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7896:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7876:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 471,
																"nodeType": "Block",
																"src": "8184:53:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 468,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 452,
																					"src": "8209:12:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 467,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "8202:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 469,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8202:20:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 470,
																		"nodeType": "ExpressionStatement",
																		"src": "8202:20:2"
																	}
																]
															},
															"id": 472,
															"nodeType": "IfStatement",
															"src": "7872:365:2",
															"trueBody": {
																"id": 466,
																"nodeType": "Block",
																"src": "7899:279:2",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "8019:145:2",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "8041:40:2",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "8070:10:2"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "8064:5:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8064:17:2"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "8045:15:2",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8113:2:2",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "8117:10:2"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8109:3:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8109:19:2"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "8130:15:2"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "8102:6:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8102:44:2"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "8102:44:2"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 450,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8070:10:2",
																				"valueSize": 1
																			},
																			{
																				"declaration": 450,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8117:10:2",
																				"valueSize": 1
																			}
																		],
																		"id": 465,
																		"nodeType": "InlineAssembly",
																		"src": "8010:154:2"
																	}
																]
															}
														}
													]
												},
												"id": 474,
												"nodeType": "IfStatement",
												"src": "7731:516:2",
												"trueBody": {
													"id": 460,
													"nodeType": "Block",
													"src": "7744:42:2",
													"statements": [
														{
															"expression": {
																"id": 458,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 450,
																"src": "7765:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 456,
															"id": 459,
															"nodeType": "Return",
															"src": "7758:17:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 446,
										"nodeType": "StructuredDocumentation",
										"src": "7347:209:2",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 476,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7570:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7601:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "7596:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 447,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7596:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7631:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "7618:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 449,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7618:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7665:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "7651:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 451,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7651:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7586:97:2"
									},
									"returnParameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "7707:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 454,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7707:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7706:14:2"
									},
									"scope": 477,
									"src": "7561:692:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 478,
							"src": "194:8061:2",
							"usedErrors": []
						}
					],
					"src": "101:8155:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							499
						]
					},
					"id": 500,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 479,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 480,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 499,
							"linearizedBaseContracts": [
								499
							],
							"name": "Context",
							"nameLocation": "626:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 488,
										"nodeType": "Block",
										"src": "702:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 485,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 484,
												"id": 487,
												"nodeType": "Return",
												"src": "712:17:3"
											}
										]
									},
									"id": 489,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:3"
									},
									"returnParameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "693:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:3"
									},
									"scope": 499,
									"src": "640:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 497,
										"nodeType": "Block",
										"src": "809:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 494,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 493,
												"id": 496,
												"nodeType": "Return",
												"src": "819:15:3"
											}
										]
									},
									"id": 498,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:3"
									},
									"returnParameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "793:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 491,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:3"
									},
									"scope": 499,
									"src": "742:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 500,
							"src": "608:235:3",
							"usedErrors": []
						}
					],
					"src": "86:758:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							811
						]
					},
					"id": 812,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 501,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "92:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 502,
								"nodeType": "StructuredDocumentation",
								"src": "270:196:4",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 811,
							"linearizedBaseContracts": [
								811
							],
							"name": "SafeMath",
							"nameLocation": "475:8:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 533,
										"nodeType": "Block",
										"src": "702:140:4",
										"statements": [
											{
												"id": 532,
												"nodeType": "UncheckedBlock",
												"src": "712:124:4",
												"statements": [
													{
														"assignments": [
															515
														],
														"declarations": [
															{
																"constant": false,
																"id": 515,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "744:1:4",
																"nodeType": "VariableDeclaration",
																"scope": 532,
																"src": "736:9:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 514,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "736:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 519,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 518,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 516,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 505,
																"src": "748:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 517,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 507,
																"src": "752:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "748:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "736:17:4"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 522,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 520,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 515,
																"src": "771:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 521,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 505,
																"src": "775:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "771:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 527,
														"nodeType": "IfStatement",
														"src": "767:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 523,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "786:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 524,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "793:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 525,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "785:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 513,
															"id": 526,
															"nodeType": "Return",
															"src": "778:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 528,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "817:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 529,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 515,
																	"src": "823:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 530,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "816:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 513,
														"id": 531,
														"nodeType": "Return",
														"src": "809:16:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 503,
										"nodeType": "StructuredDocumentation",
										"src": "490:131:4",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 534,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "635:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "650:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "642:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 504,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "642:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "661:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "653:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 506,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "653:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "641:22:4"
									},
									"returnParameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "687:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 509,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "687:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "693:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 511,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "686:15:4"
									},
									"scope": 811,
									"src": "626:216:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 561,
										"nodeType": "Block",
										"src": "1064:113:4",
										"statements": [
											{
												"id": 560,
												"nodeType": "UncheckedBlock",
												"src": "1074:97:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 548,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 546,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 539,
																"src": "1102:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 547,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 537,
																"src": "1106:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1102:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 553,
														"nodeType": "IfStatement",
														"src": "1098:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 549,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1117:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 550,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1124:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 551,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1116:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 545,
															"id": 552,
															"nodeType": "Return",
															"src": "1109:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 554,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1148:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 557,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 555,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 537,
																		"src": "1154:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 556,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 539,
																		"src": "1158:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1154:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 558,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1147:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 545,
														"id": 559,
														"nodeType": "Return",
														"src": "1140:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 535,
										"nodeType": "StructuredDocumentation",
										"src": "848:135:4",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 562,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "997:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1012:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "1004:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 536,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1004:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1023:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "1015:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 538,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1015:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1003:22:4"
									},
									"returnParameters": {
										"id": 545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "1049:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 541,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1049:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "1055:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 543,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1055:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1048:15:4"
									},
									"scope": 811,
									"src": "988:189:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 603,
										"nodeType": "Block",
										"src": "1401:417:4",
										"statements": [
											{
												"id": 602,
												"nodeType": "UncheckedBlock",
												"src": "1411:401:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 576,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 574,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 565,
																"src": "1669:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 575,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1674:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1669:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 581,
														"nodeType": "IfStatement",
														"src": "1665:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 577,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1685:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 578,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1691:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 579,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1684:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 573,
															"id": 580,
															"nodeType": "Return",
															"src": "1677:16:4"
														}
													},
													{
														"assignments": [
															583
														],
														"declarations": [
															{
																"constant": false,
																"id": 583,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1715:1:4",
																"nodeType": "VariableDeclaration",
																"scope": 602,
																"src": "1707:9:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 582,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1707:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 587,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 586,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 584,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 565,
																"src": "1719:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 585,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 567,
																"src": "1723:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1719:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1707:17:4"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 592,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 590,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 588,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 583,
																	"src": "1742:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 589,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 565,
																	"src": "1746:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1742:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 591,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 567,
																"src": "1751:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1742:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 597,
														"nodeType": "IfStatement",
														"src": "1738:33:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 593,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1762:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1769:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 595,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1761:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 573,
															"id": 596,
															"nodeType": "Return",
															"src": "1754:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 598,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1793:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 599,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 583,
																	"src": "1799:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 600,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1792:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 573,
														"id": 601,
														"nodeType": "Return",
														"src": "1785:16:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 563,
										"nodeType": "StructuredDocumentation",
										"src": "1183:137:4",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 604,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1334:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1349:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "1341:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 564,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1341:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1360:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "1352:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 566,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1352:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1340:22:4"
									},
									"returnParameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "1386:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 569,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1386:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "1392:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 571,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1392:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1385:15:4"
									},
									"scope": 811,
									"src": "1325:493:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 631,
										"nodeType": "Block",
										"src": "2043:114:4",
										"statements": [
											{
												"id": 630,
												"nodeType": "UncheckedBlock",
												"src": "2053:98:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 618,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 616,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 609,
																"src": "2081:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2086:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2081:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 623,
														"nodeType": "IfStatement",
														"src": "2077:29:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 619,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2097:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 620,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2104:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 621,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2096:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 615,
															"id": 622,
															"nodeType": "Return",
															"src": "2089:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 624,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2128:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 627,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 625,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 607,
																		"src": "2134:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 626,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 609,
																		"src": "2138:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2134:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 628,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2127:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 615,
														"id": 629,
														"nodeType": "Return",
														"src": "2120:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 605,
										"nodeType": "StructuredDocumentation",
										"src": "1824:138:4",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 632,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1976:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1991:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "1983:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 606,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1983:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2002:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "1994:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1982:22:4"
									},
									"returnParameters": {
										"id": 615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "2028:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 611,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2028:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "2034:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 613,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2034:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:4"
									},
									"scope": 811,
									"src": "1967:190:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 659,
										"nodeType": "Block",
										"src": "2392:114:4",
										"statements": [
											{
												"id": 658,
												"nodeType": "UncheckedBlock",
												"src": "2402:98:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 646,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 644,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 637,
																"src": "2430:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 645,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2435:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2430:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 651,
														"nodeType": "IfStatement",
														"src": "2426:29:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 647,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2446:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 648,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2453:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 649,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2445:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 643,
															"id": 650,
															"nodeType": "Return",
															"src": "2438:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 652,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2477:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 655,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 653,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 635,
																		"src": "2483:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 654,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 637,
																		"src": "2487:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2483:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 656,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2476:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 643,
														"id": 657,
														"nodeType": "Return",
														"src": "2469:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 633,
										"nodeType": "StructuredDocumentation",
										"src": "2163:148:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 660,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2325:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2340:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "2332:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 634,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2332:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 637,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2351:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "2343:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 636,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2331:22:4"
									},
									"returnParameters": {
										"id": 643,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "2377:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 639,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "2383:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 641,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2383:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:15:4"
									},
									"scope": 811,
									"src": "2316:190:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 674,
										"nodeType": "Block",
										"src": "2808:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 672,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 670,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "2825:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 671,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 665,
														"src": "2829:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2825:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 669,
												"id": 673,
												"nodeType": "Return",
												"src": "2818:12:4"
											}
										]
									},
									"documentation": {
										"id": 661,
										"nodeType": "StructuredDocumentation",
										"src": "2512:224:4",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 675,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2750:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2762:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "2754:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 662,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2754:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2773:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "2765:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 664,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2765:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2753:22:4"
									},
									"returnParameters": {
										"id": 669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 668,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "2799:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 667,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2799:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2798:9:4"
									},
									"scope": 811,
									"src": "2741:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "3175:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 685,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 678,
														"src": "3192:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 686,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 680,
														"src": "3196:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3192:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 684,
												"id": 688,
												"nodeType": "Return",
												"src": "3185:12:4"
											}
										]
									},
									"documentation": {
										"id": 676,
										"nodeType": "StructuredDocumentation",
										"src": "2843:260:4",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3117:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 678,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3129:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "3121:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 677,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3121:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3140:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "3132:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 679,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3132:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3120:22:4"
									},
									"returnParameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "3166:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 682,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3166:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3165:9:4"
									},
									"scope": 811,
									"src": "3108:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 704,
										"nodeType": "Block",
										"src": "3518:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 700,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "3535:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 701,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "3539:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3535:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 699,
												"id": 703,
												"nodeType": "Return",
												"src": "3528:12:4"
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "3210:236:4",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 705,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3460:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3472:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "3464:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 692,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3464:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3483:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "3475:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 694,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3475:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3463:22:4"
									},
									"returnParameters": {
										"id": 699,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 698,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "3509:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 697,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3509:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3508:9:4"
									},
									"scope": 811,
									"src": "3451:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 719,
										"nodeType": "Block",
										"src": "3903:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 715,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 708,
														"src": "3920:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 716,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 710,
														"src": "3924:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3920:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 714,
												"id": 718,
												"nodeType": "Return",
												"src": "3913:12:4"
											}
										]
									},
									"documentation": {
										"id": 706,
										"nodeType": "StructuredDocumentation",
										"src": "3553:278:4",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 720,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3845:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 708,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3857:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "3849:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 707,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3849:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3868:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "3860:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 709,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3860:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3848:22:4"
									},
									"returnParameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "3894:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 712,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3894:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3893:9:4"
									},
									"scope": 811,
									"src": "3836:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 734,
										"nodeType": "Block",
										"src": "4452:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 732,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 730,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 723,
														"src": "4469:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 731,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 725,
														"src": "4473:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4469:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 729,
												"id": 733,
												"nodeType": "Return",
												"src": "4462:12:4"
											}
										]
									},
									"documentation": {
										"id": 721,
										"nodeType": "StructuredDocumentation",
										"src": "3938:442:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 735,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4394:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 726,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4406:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "4398:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4398:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4417:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "4409:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 724,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4409:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4397:22:4"
									},
									"returnParameters": {
										"id": 729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "4443:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 727,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4443:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4442:9:4"
									},
									"scope": 811,
									"src": "4385:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 759,
										"nodeType": "Block",
										"src": "5070:106:4",
										"statements": [
											{
												"id": 758,
												"nodeType": "UncheckedBlock",
												"src": "5080:90:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 750,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 748,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 740,
																		"src": "5112:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 749,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 738,
																		"src": "5117:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5112:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 751,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 742,
																	"src": "5120:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 747,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5104:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 752,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5104:29:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 753,
														"nodeType": "ExpressionStatement",
														"src": "5104:29:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 756,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 754,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 738,
																"src": "5154:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 755,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 740,
																"src": "5158:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5154:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 746,
														"id": 757,
														"nodeType": "Return",
														"src": "5147:12:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 736,
										"nodeType": "StructuredDocumentation",
										"src": "4487:453:4",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 760,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4954:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 743,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 738,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4975:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "4967:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 737,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4967:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4994:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "4986:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 739,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4986:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5019:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "5005:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 741,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5005:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4957:80:4"
									},
									"returnParameters": {
										"id": 746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 745,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "5061:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 744,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:9:4"
									},
									"scope": 811,
									"src": "4945:231:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 784,
										"nodeType": "Block",
										"src": "5785:105:4",
										"statements": [
											{
												"id": 783,
												"nodeType": "UncheckedBlock",
												"src": "5795:89:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 775,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 773,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 765,
																		"src": "5827:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 774,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5831:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5827:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 776,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 767,
																	"src": "5834:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 772,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5819:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 777,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5819:28:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 778,
														"nodeType": "ExpressionStatement",
														"src": "5819:28:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 781,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 779,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 763,
																"src": "5868:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 780,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 765,
																"src": "5872:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5868:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 771,
														"id": 782,
														"nodeType": "Return",
														"src": "5861:12:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 761,
										"nodeType": "StructuredDocumentation",
										"src": "5182:473:4",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 785,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5669:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5690:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "5682:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 762,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5682:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5709:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "5701:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 764,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5734:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "5720:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 766,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5720:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5672:80:4"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "5776:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 769,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5776:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5775:9:4"
									},
									"scope": 811,
									"src": "5660:230:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 809,
										"nodeType": "Block",
										"src": "6661:105:4",
										"statements": [
											{
												"id": 808,
												"nodeType": "UncheckedBlock",
												"src": "6671:89:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 800,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 798,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 790,
																		"src": "6703:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 799,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6707:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6703:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 801,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 792,
																	"src": "6710:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 797,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6695:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 802,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6695:28:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 803,
														"nodeType": "ExpressionStatement",
														"src": "6695:28:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 806,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 804,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 788,
																"src": "6744:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 805,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 790,
																"src": "6748:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6744:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 796,
														"id": 807,
														"nodeType": "Return",
														"src": "6737:12:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 786,
										"nodeType": "StructuredDocumentation",
										"src": "5896:635:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 810,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6545:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 788,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6566:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "6558:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 787,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6558:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 790,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6585:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "6577:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 789,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6577:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 792,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6610:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "6596:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 791,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6596:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6548:80:4"
									},
									"returnParameters": {
										"id": 796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "6652:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 794,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6652:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6651:9:4"
									},
									"scope": 811,
									"src": "6536:230:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 812,
							"src": "467:6301:4",
							"usedErrors": []
						}
					],
					"src": "92:6677:4"
				},
				"id": 4
			},
			"contracts/IBEP20.sol": {
				"ast": {
					"absolutePath": "contracts/IBEP20.sol",
					"exportedSymbols": {
						"IBEP20": [
							912
						]
					},
					"id": 913,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 813,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IBEP20",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 912,
							"linearizedBaseContracts": [
								912
							],
							"name": "IBEP20",
							"nameLocation": "72:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 814,
										"nodeType": "StructuredDocumentation",
										"src": "86:68:5",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 819,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "169:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 815,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "180:2:5"
									},
									"returnParameters": {
										"id": 818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 817,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "206:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 816,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "206:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "205:9:5"
									},
									"scope": 912,
									"src": "160:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 820,
										"nodeType": "StructuredDocumentation",
										"src": "223:53:5",
										"text": " @dev Returns the token decimals."
									},
									"functionSelector": "313ce567",
									"id": 825,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "291:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 821,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "299:2:5"
									},
									"returnParameters": {
										"id": 824,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 823,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 825,
												"src": "325:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 822,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "325:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:7:5"
									},
									"scope": 912,
									"src": "282:50:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 826,
										"nodeType": "StructuredDocumentation",
										"src": "340:51:5",
										"text": " @dev Returns the token symbol."
									},
									"functionSelector": "95d89b41",
									"id": 831,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "406:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 827,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "412:2:5"
									},
									"returnParameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 831,
												"src": "438:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 828,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "438:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "437:15:5"
									},
									"scope": 912,
									"src": "397:56:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 832,
										"nodeType": "StructuredDocumentation",
										"src": "461:49:5",
										"text": " @dev Returns the token name."
									},
									"functionSelector": "06fdde03",
									"id": 837,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "525:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "529:2:5"
									},
									"returnParameters": {
										"id": 836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 835,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 837,
												"src": "555:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 834,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "555:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "554:15:5"
									},
									"scope": 912,
									"src": "516:54:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 838,
										"nodeType": "StructuredDocumentation",
										"src": "578:54:5",
										"text": " @dev Returns the bep token owner."
									},
									"functionSelector": "893d20e8",
									"id": 843,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nameLocation": "647:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 839,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "655:2:5"
									},
									"returnParameters": {
										"id": 842,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 841,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "681:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 840,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "681:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "680:9:5"
									},
									"scope": 912,
									"src": "638:52:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 844,
										"nodeType": "StructuredDocumentation",
										"src": "698:74:5",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 851,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "787:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 847,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 846,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "805:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 851,
												"src": "797:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 845,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "797:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "796:17:5"
									},
									"returnParameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 851,
												"src": "837:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 848,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "837:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "836:9:5"
									},
									"scope": 912,
									"src": "778:68:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 852,
										"nodeType": "StructuredDocumentation",
										"src": "854:215:5",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 861,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1084:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 857,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 854,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1101:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "1093:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 853,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1093:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 856,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1120:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "1112:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 855,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1112:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1092:35:5"
									},
									"returnParameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "1146:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 858,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1146:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1145:6:5"
									},
									"scope": 912,
									"src": "1075:77:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 862,
										"nodeType": "StructuredDocumentation",
										"src": "1160:270:5",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 871,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1445:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 864,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "1463:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "1455:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 863,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1455:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 866,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1479:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "1471:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 865,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1471:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1454:33:5"
									},
									"returnParameters": {
										"id": 870,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "1511:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 868,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:9:5"
									},
									"scope": 912,
									"src": "1436:84:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 872,
										"nodeType": "StructuredDocumentation",
										"src": "1528:655:5",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT:  Beware that changingan allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 881,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2198:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2214:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "2206:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 873,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2206:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 876,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2231:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "2223:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 875,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2223:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2205:33:5"
									},
									"returnParameters": {
										"id": 880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 879,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "2257:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 878,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2257:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2256:6:5"
									},
									"scope": 912,
									"src": "2189:74:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 882,
										"nodeType": "StructuredDocumentation",
										"src": "2271:304:5",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 893,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2590:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 884,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2611:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "2603:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 883,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2603:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 886,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2627:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "2619:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 885,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2619:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2646:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "2638:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 887,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2638:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2602:51:5"
									},
									"returnParameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "2672:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 890,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2672:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2671:6:5"
									},
									"scope": 912,
									"src": "2581:97:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 894,
										"nodeType": "StructuredDocumentation",
										"src": "2686:163:5",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 902,
									"name": "Transfer",
									"nameLocation": "2861:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 896,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2886:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "2870:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 895,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2870:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 898,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2908:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "2892:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 897,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2892:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 900,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2920:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "2912:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 899,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2912:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2869:57:5"
									},
									"src": "2855:72:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 903,
										"nodeType": "StructuredDocumentation",
										"src": "2935:151:5",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 911,
									"name": "Approval",
									"nameLocation": "3098:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 905,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3123:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 911,
												"src": "3107:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 904,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3107:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 907,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3146:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 911,
												"src": "3130:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 906,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3130:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 909,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3163:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 911,
												"src": "3155:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 908,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3155:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3106:63:5"
									},
									"src": "3092:78:5"
								}
							],
							"scope": 913,
							"src": "62:3111:5",
							"usedErrors": []
						}
					],
					"src": "35:3138:5"
				},
				"id": 5
			},
			"contracts/SafeBEP20.sol": {
				"ast": {
					"absolutePath": "contracts/SafeBEP20.sol",
					"exportedSymbols": {
						"Address": [
							477
						],
						"IBEP20": [
							912
						],
						"SafeBEP20": [
							1130
						],
						"SafeMath": [
							811
						]
					},
					"id": 1131,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 914,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 915,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1131,
							"sourceUnit": 812,
							"src": "60:57:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "@openzeppelin/contracts/utils/Address.sol",
							"id": 916,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1131,
							"sourceUnit": 478,
							"src": "119:51:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/IBEP20.sol",
							"file": "./IBEP20.sol",
							"id": 917,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1131,
							"sourceUnit": 913,
							"src": "172:22:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeBEP20",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 1130,
							"linearizedBaseContracts": [
								1130
							],
							"name": "SafeBEP20",
							"nameLocation": "206:9:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 920,
									"libraryName": {
										"id": 918,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 811,
										"src": "229:8:6"
									},
									"nodeType": "UsingForDirective",
									"src": "223:27:6",
									"typeName": {
										"id": 919,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "242:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 923,
									"libraryName": {
										"id": 921,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 477,
										"src": "262:7:6"
									},
									"nodeType": "UsingForDirective",
									"src": "256:26:6",
									"typeName": {
										"id": 922,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "274:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 945,
										"nodeType": "Block",
										"src": "362:105:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 934,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 926,
															"src": "393:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 937,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 926,
																			"src": "423:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$912",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 938,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 861,
																		"src": "423:14:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 939,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "423:23:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 940,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 928,
																	"src": "448:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 941,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 930,
																	"src": "452:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 935,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "400:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 936,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "400:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 942,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "400:58:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 933,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1129,
														"src": "373:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$912_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 943,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "373:86:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 944,
												"nodeType": "ExpressionStatement",
												"src": "373:86:6"
											}
										]
									},
									"id": 946,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "299:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 926,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "319:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "312:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$912",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 925,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 924,
														"name": "IBEP20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 912,
														"src": "312:6:6"
													},
													"referencedDeclaration": 912,
													"src": "312:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$912",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 928,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "334:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "326:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 927,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "326:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 930,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "346:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "338:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 929,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "338:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "311:41:6"
									},
									"returnParameters": {
										"id": 932,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "362:0:6"
									},
									"scope": 1130,
									"src": "290:177:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 971,
										"nodeType": "Block",
										"src": "565:115:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 959,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 949,
															"src": "596:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 962,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 949,
																			"src": "626:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$912",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 963,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 893,
																		"src": "626:18:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 964,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "626:27:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 965,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 951,
																	"src": "655:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 966,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 953,
																	"src": "661:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 967,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 955,
																	"src": "665:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 960,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "603:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 961,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "603:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 968,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "603:68:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 958,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1129,
														"src": "576:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$912_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "576:96:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 970,
												"nodeType": "ExpressionStatement",
												"src": "576:96:6"
											}
										]
									},
									"id": 972,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "484:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 956,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 949,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "508:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "501:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$912",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 948,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 947,
														"name": "IBEP20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 912,
														"src": "501:6:6"
													},
													"referencedDeclaration": 912,
													"src": "501:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$912",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 951,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "523:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "515:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 950,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "515:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 953,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "537:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "529:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 952,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "529:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "549:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "541:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 954,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "541:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "500:55:6"
									},
									"returnParameters": {
										"id": 957,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "565:0:6"
									},
									"scope": 1130,
									"src": "475:205:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1015,
										"nodeType": "Block",
										"src": "1025:546:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 999,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 986,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 984,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 980,
																			"src": "1319:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 985,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1328:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1319:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 987,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1318:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 997,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 992,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "1359:4:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeBEP20_$1130",
																								"typeString": "library SafeBEP20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeBEP20_$1130",
																								"typeString": "library SafeBEP20"
																							}
																						],
																						"id": 991,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1351:7:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 990,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1351:7:6",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 993,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1351:13:6",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 994,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 978,
																					"src": "1366:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 988,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 976,
																					"src": "1335:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IBEP20_$912",
																						"typeString": "contract IBEP20"
																					}
																				},
																				"id": 989,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 871,
																				"src": "1335:15:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 995,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1335:39:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 996,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1378:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1335:44:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 998,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1334:46:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1318:62:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666542455032303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 1000,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1395:56:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_91a9bac926ceb306224f4766a09b4f2ef09ebf6b62503a939a3d65e9ddb75b06",
																"typeString": "literal_string \"SafeBEP20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeBEP20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_91a9bac926ceb306224f4766a09b4f2ef09ebf6b62503a939a3d65e9ddb75b06",
																"typeString": "literal_string \"SafeBEP20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 983,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1310:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1001,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1310:152:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1002,
												"nodeType": "ExpressionStatement",
												"src": "1310:152:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1004,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 976,
															"src": "1493:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1007,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 976,
																			"src": "1523:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$912",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 1008,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 881,
																		"src": "1523:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1009,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1523:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1010,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 978,
																	"src": "1547:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1011,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 980,
																	"src": "1556:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1005,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1500:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1006,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1500:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1012,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1500:62:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1003,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1129,
														"src": "1473:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$912_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 1013,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1473:90:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1014,
												"nodeType": "ExpressionStatement",
												"src": "1473:90:6"
											}
										]
									},
									"documentation": {
										"id": 973,
										"nodeType": "StructuredDocumentation",
										"src": "688:255:6",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IBEP20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 1016,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "958:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 976,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "977:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "970:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$912",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 975,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 974,
														"name": "IBEP20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 912,
														"src": "970:6:6"
													},
													"referencedDeclaration": 912,
													"src": "970:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$912",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 978,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "992:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "984:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 977,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "984:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 980,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1009:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "1001:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 979,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1001:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:46:6"
									},
									"returnParameters": {
										"id": 982,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1025:0:6"
									},
									"scope": 1130,
									"src": "949:622:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1052,
										"nodeType": "Block",
										"src": "1665:200:6",
										"statements": [
											{
												"assignments": [
													1027
												],
												"declarations": [
													{
														"constant": false,
														"id": 1027,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "1684:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 1052,
														"src": "1676:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1026,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1676:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1039,
												"initialValue": {
													"arguments": [
														{
															"id": 1037,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1023,
															"src": "1743:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1032,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "1723:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeBEP20_$1130",
																				"typeString": "library SafeBEP20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeBEP20_$1130",
																				"typeString": "library SafeBEP20"
																			}
																		],
																		"id": 1031,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1715:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1030,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1715:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1033,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1715:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1034,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1021,
																	"src": "1730:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1028,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1019,
																	"src": "1699:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IBEP20_$912",
																		"typeString": "contract IBEP20"
																	}
																},
																"id": 1029,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 871,
																"src": "1699:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 1035,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1699:39:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1036,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 675,
														"src": "1699:43:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1038,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1699:50:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1676:73:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1041,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1019,
															"src": "1780:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1044,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1019,
																			"src": "1810:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$912",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 1045,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 881,
																		"src": "1810:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1046,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1810:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1047,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1021,
																	"src": "1834:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1048,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1027,
																	"src": "1843:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1042,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1787:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1043,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1787:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1049,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1787:69:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1040,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1129,
														"src": "1760:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$912_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 1050,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1760:97:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1051,
												"nodeType": "ExpressionStatement",
												"src": "1760:97:6"
											}
										]
									},
									"id": 1053,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "1588:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1019,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1617:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "1610:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$912",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 1018,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1017,
														"name": "IBEP20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 912,
														"src": "1610:6:6"
													},
													"referencedDeclaration": 912,
													"src": "1610:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$912",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1632:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "1624:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1020,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1624:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1023,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1649:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "1641:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1022,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1641:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1609:46:6"
									},
									"returnParameters": {
										"id": 1025,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1665:0:6"
									},
									"scope": 1130,
									"src": "1579:286:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1090,
										"nodeType": "Block",
										"src": "1959:245:6",
										"statements": [
											{
												"assignments": [
													1064
												],
												"declarations": [
													{
														"constant": false,
														"id": 1064,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "1978:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 1090,
														"src": "1970:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1063,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1970:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1077,
												"initialValue": {
													"arguments": [
														{
															"id": 1074,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1060,
															"src": "2037:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "5361666542455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 1075,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2044:43:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8d8b0d004f76517d0accc4049600ccad745ed1cf03a0a544bc57f891c9ae38a3",
																"typeString": "literal_string \"SafeBEP20: decreased allowance below zero\""
															},
															"value": "SafeBEP20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_8d8b0d004f76517d0accc4049600ccad745ed1cf03a0a544bc57f891c9ae38a3",
																"typeString": "literal_string \"SafeBEP20: decreased allowance below zero\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1069,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2017:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeBEP20_$1130",
																				"typeString": "library SafeBEP20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeBEP20_$1130",
																				"typeString": "library SafeBEP20"
																			}
																		],
																		"id": 1068,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2009:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1067,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2009:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1070,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2009:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1071,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1058,
																	"src": "2024:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1065,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1056,
																	"src": "1993:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IBEP20_$912",
																		"typeString": "contract IBEP20"
																	}
																},
																"id": 1066,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 871,
																"src": "1993:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 1072,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1993:39:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1073,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 760,
														"src": "1993:43:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 1076,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1993:95:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1970:118:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1079,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1056,
															"src": "2119:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1082,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1056,
																			"src": "2149:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$912",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 1083,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 881,
																		"src": "2149:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1084,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2149:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1085,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1058,
																	"src": "2173:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1086,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1064,
																	"src": "2182:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1080,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2126:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1081,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2126:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1087,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2126:69:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1078,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1129,
														"src": "2099:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$912_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 1088,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2099:97:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1089,
												"nodeType": "ExpressionStatement",
												"src": "2099:97:6"
											}
										]
									},
									"id": 1091,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "1882:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1061,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1056,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1911:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "1904:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$912",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 1055,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1054,
														"name": "IBEP20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 912,
														"src": "1904:6:6"
													},
													"referencedDeclaration": 912,
													"src": "1904:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$912",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1058,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1926:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "1918:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1057,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1918:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1060,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1943:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "1935:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1059,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1935:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1903:46:6"
									},
									"returnParameters": {
										"id": 1062,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1959:0:6"
									},
									"scope": 1130,
									"src": "1873:331:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1128,
										"nodeType": "Block",
										"src": "2669:699:6",
										"statements": [
											{
												"assignments": [
													1101
												],
												"declarations": [
													{
														"constant": false,
														"id": 1101,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3044:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1128,
														"src": "3031:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1100,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3031:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1110,
												"initialValue": {
													"arguments": [
														{
															"id": 1107,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1097,
															"src": "3085:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666542455032303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3091:34:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e357ac51478c37023e9e7ad13e9d6e33f2ac0566d41923020f1a6b2e7a541c3e",
																"typeString": "literal_string \"SafeBEP20: low-level call failed\""
															},
															"value": "SafeBEP20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_e357ac51478c37023e9e7ad13e9d6e33f2ac0566d41923020f1a6b2e7a541c3e",
																"typeString": "literal_string \"SafeBEP20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1104,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1095,
																	"src": "3065:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IBEP20_$912",
																		"typeString": "contract IBEP20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IBEP20_$912",
																		"typeString": "contract IBEP20"
																	}
																],
																"id": 1103,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3057:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1102,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3057:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1105,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3057:14:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1106,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 271,
														"src": "3057:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3057:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3031:95:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1111,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1101,
															"src": "3141:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1112,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3141:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1113,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3161:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3141:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1127,
												"nodeType": "IfStatement",
												"src": "3137:224:6",
												"trueBody": {
													"id": 1126,
													"nodeType": "Block",
													"src": "3164:197:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1118,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1101,
																				"src": "3283:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 1120,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "3296:4:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 1119,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "3296:4:6",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 1121,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3295:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 1116,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3272:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1117,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "3272:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1122,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3272:30:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666542455032303a204245503230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 1123,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3304:44:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082",
																			"typeString": "literal_string \"SafeBEP20: BEP20 operation did not succeed\""
																		},
																		"value": "SafeBEP20: BEP20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082",
																			"typeString": "literal_string \"SafeBEP20: BEP20 operation did not succeed\""
																		}
																	],
																	"id": 1115,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3264:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1124,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3264:85:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1125,
															"nodeType": "ExpressionStatement",
															"src": "3264:85:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1092,
										"nodeType": "StructuredDocumentation",
										"src": "2216:377:6",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 1129,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "2608:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1098,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1095,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2635:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1129,
												"src": "2628:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$912",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 1094,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1093,
														"name": "IBEP20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 912,
														"src": "2628:6:6"
													},
													"referencedDeclaration": 912,
													"src": "2628:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$912",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1097,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2655:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1129,
												"src": "2642:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1096,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2642:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2627:33:6"
									},
									"returnParameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2669:0:6"
									},
									"scope": 1130,
									"src": "2599:769:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1131,
							"src": "198:3173:6",
							"usedErrors": []
						}
					],
					"src": "33:3338:6"
				},
				"id": 6
			},
			"contracts/Staking.sol": {
				"ast": {
					"absolutePath": "contracts/Staking.sol",
					"exportedSymbols": {
						"Address": [
							477
						],
						"Context": [
							499
						],
						"IBEP20": [
							912
						],
						"IERC20": [
							182
						],
						"Ownable": [
							104
						],
						"SafeBEP20": [
							1130
						],
						"SafeMath": [
							811
						],
						"StakingPlatform": [
							2184
						]
					},
					"id": 2185,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1132,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1133,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2185,
							"sourceUnit": 105,
							"src": "60:52:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1134,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2185,
							"sourceUnit": 183,
							"src": "114:56:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 1135,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2185,
							"sourceUnit": 812,
							"src": "172:57:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/SafeBEP20.sol",
							"file": "./SafeBEP20.sol",
							"id": 1136,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2185,
							"sourceUnit": 1131,
							"src": "231:25:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1137,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 104,
										"src": "288:7:7"
									},
									"id": 1138,
									"nodeType": "InheritanceSpecifier",
									"src": "288:7:7"
								}
							],
							"canonicalName": "StakingPlatform",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2184,
							"linearizedBaseContracts": [
								2184,
								104,
								499
							],
							"name": "StakingPlatform",
							"nameLocation": "269:15:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1141,
									"libraryName": {
										"id": 1139,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 811,
										"src": "315:8:7"
									},
									"nodeType": "UsingForDirective",
									"src": "309:27:7",
									"typeName": {
										"id": 1140,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "328:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 1145,
									"libraryName": {
										"id": 1142,
										"name": "SafeBEP20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1130,
										"src": "348:9:7"
									},
									"nodeType": "UsingForDirective",
									"src": "342:27:7",
									"typeName": {
										"id": 1144,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1143,
											"name": "IBEP20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 912,
											"src": "362:6:7"
										},
										"referencedDeclaration": 912,
										"src": "362:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IBEP20_$912",
											"typeString": "contract IBEP20"
										}
									}
								},
								{
									"canonicalName": "StakingPlatform.Staker",
									"id": 1158,
									"members": [
										{
											"constant": false,
											"id": 1147,
											"mutability": "mutable",
											"name": "stakerCurrentReward",
											"nameLocation": "440:19:7",
											"nodeType": "VariableDeclaration",
											"scope": 1158,
											"src": "432:27:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1146,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "432:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1149,
											"mutability": "mutable",
											"name": "stakedAmount",
											"nameLocation": "478:12:7",
											"nodeType": "VariableDeclaration",
											"scope": 1158,
											"src": "470:20:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1148,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "470:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1151,
											"mutability": "mutable",
											"name": "mode",
											"nameLocation": "509:4:7",
											"nodeType": "VariableDeclaration",
											"scope": 1158,
											"src": "501:12:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1150,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "501:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1153,
											"mutability": "mutable",
											"name": "stakeStartTime",
											"nameLocation": "532:14:7",
											"nodeType": "VariableDeclaration",
											"scope": 1158,
											"src": "524:22:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1152,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "524:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1155,
											"mutability": "mutable",
											"name": "lastUpdatedTime",
											"nameLocation": "565:15:7",
											"nodeType": "VariableDeclaration",
											"scope": 1158,
											"src": "557:23:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1154,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "557:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1157,
											"mutability": "mutable",
											"name": "staked",
											"nameLocation": "599:6:7",
											"nodeType": "VariableDeclaration",
											"scope": 1158,
											"src": "591:14:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1156,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "591:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Staker",
									"nameLocation": "414:6:7",
									"nodeType": "StructDefinition",
									"scope": 2184,
									"src": "407:206:7",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1160,
									"mutability": "mutable",
									"name": "_unstakingFeeRate",
									"nameLocation": "734:17:7",
									"nodeType": "VariableDeclaration",
									"scope": 2184,
									"src": "718:33:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1159,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "718:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1162,
									"mutability": "mutable",
									"name": "_eventPeriod",
									"nameLocation": "774:12:7",
									"nodeType": "VariableDeclaration",
									"scope": 2184,
									"src": "758:28:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1161,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "758:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1164,
									"mutability": "mutable",
									"name": "_rewardRate",
									"nameLocation": "809:11:7",
									"nodeType": "VariableDeclaration",
									"scope": 2184,
									"src": "793:27:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1163,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "793:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1166,
									"mutability": "mutable",
									"name": "_rewardFeeRate",
									"nameLocation": "843:14:7",
									"nodeType": "VariableDeclaration",
									"scope": 2184,
									"src": "827:30:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1165,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "827:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1168,
									"mutability": "mutable",
									"name": "_lockupPeriod",
									"nameLocation": "880:13:7",
									"nodeType": "VariableDeclaration",
									"scope": 2184,
									"src": "864:29:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1167,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "864:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1170,
									"mutability": "mutable",
									"name": "_minStakeAmount_m",
									"nameLocation": "916:17:7",
									"nodeType": "VariableDeclaration",
									"scope": 2184,
									"src": "900:33:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1169,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "900:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1172,
									"mutability": "mutable",
									"name": "_minStakeAmount_g",
									"nameLocation": "956:17:7",
									"nodeType": "VariableDeclaration",
									"scope": 2184,
									"src": "940:33:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1171,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "940:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1174,
									"mutability": "mutable",
									"name": "_minStakeAmount_s",
									"nameLocation": "996:17:7",
									"nodeType": "VariableDeclaration",
									"scope": 2184,
									"src": "980:33:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1173,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "980:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1176,
									"mutability": "mutable",
									"name": "_minStakeAmount_c",
									"nameLocation": "1036:17:7",
									"nodeType": "VariableDeclaration",
									"scope": 2184,
									"src": "1020:33:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1175,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1020:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1179,
									"mutability": "mutable",
									"name": "_stakers",
									"nameLocation": "1084:8:7",
									"nodeType": "VariableDeclaration",
									"scope": 2184,
									"src": "1066:26:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 1177,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1066:7:7",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 1178,
										"nodeType": "ArrayTypeName",
										"src": "1066:9:7",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1184,
									"mutability": "mutable",
									"name": "_staker",
									"nameLocation": "1136:7:7",
									"nodeType": "VariableDeclaration",
									"scope": 2184,
									"src": "1101:42:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
										"typeString": "mapping(address => struct StakingPlatform.Staker)"
									},
									"typeName": {
										"id": 1183,
										"keyType": {
											"id": 1180,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1109:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1101:26:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
											"typeString": "mapping(address => struct StakingPlatform.Staker)"
										},
										"valueType": {
											"id": 1182,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1181,
												"name": "Staker",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1158,
												"src": "1120:6:7"
											},
											"referencedDeclaration": 1158,
											"src": "1120:6:7",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Staker_$1158_storage_ptr",
												"typeString": "struct StakingPlatform.Staker"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "817b1cd2",
									"id": 1186,
									"mutability": "mutable",
									"name": "totalStaked",
									"nameLocation": "1221:11:7",
									"nodeType": "VariableDeclaration",
									"scope": 2184,
									"src": "1206:26:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1185,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1206:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fc0c546a",
									"id": 1189,
									"mutability": "mutable",
									"name": "token",
									"nameLocation": "1253:5:7",
									"nodeType": "VariableDeclaration",
									"scope": 2184,
									"src": "1239:19:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IBEP20_$912",
										"typeString": "contract IBEP20"
									},
									"typeName": {
										"id": 1188,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1187,
											"name": "IBEP20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 912,
											"src": "1239:6:7"
										},
										"referencedDeclaration": 912,
										"src": "1239:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IBEP20_$912",
											"typeString": "contract IBEP20"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 1195,
									"name": "Staked",
									"nameLocation": "1352:6:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1191,
												"indexed": false,
												"mutability": "mutable",
												"name": "staker",
												"nameLocation": "1367:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1195,
												"src": "1359:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1190,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1359:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1193,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1383:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1195,
												"src": "1375:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1375:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1358:32:7"
									},
									"src": "1346:45:7"
								},
								{
									"anonymous": false,
									"id": 1201,
									"name": "Harvest",
									"nameLocation": "1403:7:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1197,
												"indexed": false,
												"mutability": "mutable",
												"name": "staker",
												"nameLocation": "1419:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1201,
												"src": "1411:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1411:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1199,
												"indexed": false,
												"mutability": "mutable",
												"name": "rewardToClaim",
												"nameLocation": "1435:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 1201,
												"src": "1427:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1427:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1410:39:7"
									},
									"src": "1397:53:7"
								},
								{
									"anonymous": false,
									"id": 1207,
									"name": "Withdraw",
									"nameLocation": "1462:8:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1203,
												"indexed": false,
												"mutability": "mutable",
												"name": "staker",
												"nameLocation": "1479:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "1471:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1471:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1205,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1495:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "1487:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1487:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1470:32:7"
									},
									"src": "1456:47:7"
								},
								{
									"anonymous": false,
									"id": 1211,
									"name": "SetRewardRate",
									"nameLocation": "1515:13:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1209,
												"indexed": false,
												"mutability": "mutable",
												"name": "rewardRate",
												"nameLocation": "1537:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1211,
												"src": "1529:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1208,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1529:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1528:20:7"
									},
									"src": "1509:40:7"
								},
								{
									"anonymous": false,
									"id": 1215,
									"name": "SetEventPeriod",
									"nameLocation": "1561:14:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1213,
												"indexed": false,
												"mutability": "mutable",
												"name": "lockupDuration",
												"nameLocation": "1584:14:7",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "1576:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1576:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1575:24:7"
									},
									"src": "1555:45:7"
								},
								{
									"anonymous": false,
									"id": 1219,
									"name": "SetUnstakingFeeRate",
									"nameLocation": "1612:19:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1217,
												"indexed": false,
												"mutability": "mutable",
												"name": "unstakingFeeRate",
												"nameLocation": "1640:16:7",
												"nodeType": "VariableDeclaration",
												"scope": 1219,
												"src": "1632:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1632:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1631:26:7"
									},
									"src": "1606:52:7"
								},
								{
									"body": {
										"id": 1233,
										"nodeType": "Block",
										"src": "1694:68:7",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1224,
														"name": "Init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1280,
														"src": "1715:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1715:6:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1226,
												"nodeType": "ExpressionStatement",
												"src": "1715:6:7"
											},
											{
												"expression": {
													"id": 1231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1227,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1189,
														"src": "1732:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IBEP20_$912",
															"typeString": "contract IBEP20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1229,
																"name": "_token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1221,
																"src": "1747:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1228,
															"name": "IBEP20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 912,
															"src": "1740:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IBEP20_$912_$",
																"typeString": "type(contract IBEP20)"
															}
														},
														"id": 1230,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1740:14:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IBEP20_$912",
															"typeString": "contract IBEP20"
														}
													},
													"src": "1732:22:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$912",
														"typeString": "contract IBEP20"
													}
												},
												"id": 1232,
												"nodeType": "ExpressionStatement",
												"src": "1732:22:7"
											}
										]
									},
									"id": 1234,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1221,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "1686:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1234,
												"src": "1678:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1220,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1678:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1677:16:7"
									},
									"returnParameters": {
										"id": 1223,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1694:0:7"
									},
									"scope": 2184,
									"src": "1666:96:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1279,
										"nodeType": "Block",
										"src": "1795:330:7",
										"statements": [
											{
												"expression": {
													"id": 1239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1237,
														"name": "_rewardRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1164,
														"src": "1816:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "323030",
														"id": 1238,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1830:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_200_by_1",
															"typeString": "int_const 200"
														},
														"value": "200"
													},
													"src": "1816:17:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1240,
												"nodeType": "ExpressionStatement",
												"src": "1816:17:7"
											},
											{
												"expression": {
													"id": 1243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1241,
														"name": "_unstakingFeeRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1160,
														"src": "1855:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31353030",
														"id": 1242,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1875:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1500_by_1",
															"typeString": "int_const 1500"
														},
														"value": "1500"
													},
													"src": "1855:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1244,
												"nodeType": "ExpressionStatement",
												"src": "1855:24:7"
											},
											{
												"expression": {
													"id": 1247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1245,
														"name": "_rewardFeeRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1166,
														"src": "1890:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "313030",
														"id": 1246,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1907:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "1890:20:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1248,
												"nodeType": "ExpressionStatement",
												"src": "1890:20:7"
											},
											{
												"expression": {
													"id": 1251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1249,
														"name": "_eventPeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1162,
														"src": "1921:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "37",
														"id": 1250,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1936:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_7_by_1",
															"typeString": "int_const 7"
														},
														"value": "7"
													},
													"src": "1921:16:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1252,
												"nodeType": "ExpressionStatement",
												"src": "1921:16:7"
											},
											{
												"expression": {
													"id": 1255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1253,
														"name": "_lockupPeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1168,
														"src": "1948:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3930",
														"id": 1254,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1964:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_90_by_1",
															"typeString": "int_const 90"
														},
														"value": "90"
													},
													"src": "1948:18:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1256,
												"nodeType": "ExpressionStatement",
												"src": "1948:18:7"
											},
											{
												"expression": {
													"id": 1261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1257,
														"name": "_minStakeAmount_m",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1170,
														"src": "1977:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_rational_3000000000000000000000000_by_1",
															"typeString": "int_const 3000000000000000000000000"
														},
														"id": 1260,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "33",
															"id": 1258,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1997:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3_by_1",
																"typeString": "int_const 3"
															},
															"value": "3"
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "31653234",
															"id": 1259,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2000:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000000000"
															},
															"value": "1e24"
														},
														"src": "1997:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3000000000000000000000000_by_1",
															"typeString": "int_const 3000000000000000000000000"
														}
													},
													"src": "1977:27:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1262,
												"nodeType": "ExpressionStatement",
												"src": "1977:27:7"
											},
											{
												"expression": {
													"id": 1265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1263,
														"name": "_minStakeAmount_c",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1176,
														"src": "2015:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31653234",
														"id": 1264,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2035:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000000000"
														},
														"value": "1e24"
													},
													"src": "2015:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1266,
												"nodeType": "ExpressionStatement",
												"src": "2015:24:7"
											},
											{
												"expression": {
													"id": 1271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1267,
														"name": "_minStakeAmount_s",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1174,
														"src": "2050:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_rational_3000000000000000000000000_by_1",
															"typeString": "int_const 3000000000000000000000000"
														},
														"id": 1270,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "33",
															"id": 1268,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2070:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3_by_1",
																"typeString": "int_const 3"
															},
															"value": "3"
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "31653234",
															"id": 1269,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2074:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000000000"
															},
															"value": "1e24"
														},
														"src": "2070:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3000000000000000000000000_by_1",
															"typeString": "int_const 3000000000000000000000000"
														}
													},
													"src": "2050:28:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1272,
												"nodeType": "ExpressionStatement",
												"src": "2050:28:7"
											},
											{
												"expression": {
													"id": 1277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1273,
														"name": "_minStakeAmount_g",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1172,
														"src": "2089:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_rational_7000000000000000000000000_by_1",
															"typeString": "int_const 7000000000000000000000000"
														},
														"id": 1276,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "37",
															"id": 1274,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2109:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_7_by_1",
																"typeString": "int_const 7"
															},
															"value": "7"
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "31653234",
															"id": 1275,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2113:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000000000"
															},
															"value": "1e24"
														},
														"src": "2109:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_7000000000000000000000000_by_1",
															"typeString": "int_const 7000000000000000000000000"
														}
													},
													"src": "2089:28:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1278,
												"nodeType": "ExpressionStatement",
												"src": "2089:28:7"
											}
										]
									},
									"id": 1280,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "Init",
									"nameLocation": "1779:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1235,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1783:2:7"
									},
									"returnParameters": {
										"id": 1236,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1795:0:7"
									},
									"scope": 2184,
									"src": "1770:355:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1339,
										"nodeType": "Block",
										"src": "2231:423:7",
										"statements": [
											{
												"assignments": [
													1284
												],
												"declarations": [
													{
														"constant": false,
														"id": 1284,
														"mutability": "mutable",
														"name": "stakerStakedAmount",
														"nameLocation": "2260:18:7",
														"nodeType": "VariableDeclaration",
														"scope": 1339,
														"src": "2252:26:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1283,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2252:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1290,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 1285,
															"name": "_staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1184,
															"src": "2281:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
															}
														},
														"id": 1288,
														"indexExpression": {
															"expression": {
																"id": 1286,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2289:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1287,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2289:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2281:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$1158_storage",
															"typeString": "struct StakingPlatform.Staker storage ref"
														}
													},
													"id": 1289,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "stakedAmount",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1149,
													"src": "2281:32:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2252:61:7"
											},
											{
												"assignments": [
													1292
												],
												"declarations": [
													{
														"constant": false,
														"id": 1292,
														"mutability": "mutable",
														"name": "newReward",
														"nameLocation": "2342:9:7",
														"nodeType": "VariableDeclaration",
														"scope": 1339,
														"src": "2334:17:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1291,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2334:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1314,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "316534",
															"id": 1312,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2471:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10000_by_1",
																"typeString": "int_const 10000"
															},
															"value": "1e4"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_10000_by_1",
																"typeString": "int_const 10000"
															}
														],
														"expression": {
															"arguments": [
																{
																	"hexValue": "31",
																	"id": 1309,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2456:9:7",
																	"subdenomination": "minutes",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_60_by_1",
																		"typeString": "int_const 60"
																	},
																	"value": "1"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_60_by_1",
																		"typeString": "int_const 60"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 1306,
																			"name": "_rewardRate",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1164,
																			"src": "2439:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"expression": {
																								"baseExpression": {
																									"id": 1298,
																									"name": "_staker",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1184,
																									"src": "2397:7:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																										"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																									}
																								},
																								"id": 1301,
																								"indexExpression": {
																									"expression": {
																										"id": 1299,
																										"name": "msg",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 4294967281,
																										"src": "2405:3:7",
																										"typeDescriptions": {
																											"typeIdentifier": "t_magic_message",
																											"typeString": "msg"
																										}
																									},
																									"id": 1300,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "sender",
																									"nodeType": "MemberAccess",
																									"src": "2405:10:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "2397:19:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_Staker_$1158_storage",
																									"typeString": "struct StakingPlatform.Staker storage ref"
																								}
																							},
																							"id": 1302,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "lastUpdatedTime",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1155,
																							"src": "2397:35:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"expression": {
																								"id": 1295,
																								"name": "block",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967292,
																								"src": "2377:5:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_block",
																									"typeString": "block"
																								}
																							},
																							"id": 1296,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "timestamp",
																							"nodeType": "MemberAccess",
																							"src": "2377:15:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1297,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "sub",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 690,
																						"src": "2377:19:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 1303,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2377:56:7",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 1293,
																					"name": "stakerStakedAmount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1284,
																					"src": "2354:18:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1294,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 705,
																				"src": "2354:22:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1304,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2354:80:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1305,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 705,
																		"src": "2354:84:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1307,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2354:97:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1308,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 720,
																"src": "2354:101:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1310,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2354:112:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1311,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 720,
														"src": "2354:116:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2354:121:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2334:141:7"
											},
											{
												"expression": {
													"id": 1328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1315,
																"name": "_staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1184,
																"src": "2486:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																	"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																}
															},
															"id": 1318,
															"indexExpression": {
																"expression": {
																	"id": 1316,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2494:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1317,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2494:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2486:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1158_storage",
																"typeString": "struct StakingPlatform.Staker storage ref"
															}
														},
														"id": 1319,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "stakerCurrentReward",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1147,
														"src": "2486:39:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1326,
																"name": "newReward",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1292,
																"src": "2572:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"baseExpression": {
																		"id": 1320,
																		"name": "_staker",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1184,
																		"src": "2528:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																			"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																		}
																	},
																	"id": 1323,
																	"indexExpression": {
																		"expression": {
																			"id": 1321,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2536:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1322,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2536:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2528:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Staker_$1158_storage",
																		"typeString": "struct StakingPlatform.Staker storage ref"
																	}
																},
																"id": 1324,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "stakerCurrentReward",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1147,
																"src": "2528:39:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1325,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 675,
															"src": "2528:43:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1327,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2528:54:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2486:96:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1329,
												"nodeType": "ExpressionStatement",
												"src": "2486:96:7"
											},
											{
												"expression": {
													"id": 1337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1330,
																"name": "_staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1184,
																"src": "2593:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																	"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																}
															},
															"id": 1333,
															"indexExpression": {
																"expression": {
																	"id": 1331,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2601:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1332,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2601:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2593:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1158_storage",
																"typeString": "struct StakingPlatform.Staker storage ref"
															}
														},
														"id": 1334,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "lastUpdatedTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1155,
														"src": "2593:35:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1335,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2631:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1336,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "2631:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2593:53:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1338,
												"nodeType": "ExpressionStatement",
												"src": "2593:53:7"
											}
										]
									},
									"id": 1340,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updateReward",
									"nameLocation": "2209:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1281,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2221:2:7"
									},
									"returnParameters": {
										"id": 1282,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2231:0:7"
									},
									"scope": 2184,
									"src": "2200:454:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1462,
										"nodeType": "Block",
										"src": "2729:834:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1350,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1348,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1342,
																"src": "2758:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1349,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2768:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2758:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e742073686f756c642062652067726561746572207468616e2030",
															"id": 1351,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2771:33:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580",
																"typeString": "literal_string \"Amount should be greater than 0\""
															},
															"value": "Amount should be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580",
																"typeString": "literal_string \"Amount should be greater than 0\""
															}
														],
														"id": 1347,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2750:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2750:55:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1353,
												"nodeType": "ExpressionStatement",
												"src": "2750:55:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1361,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1357,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2840:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1358,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2840:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1355,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1189,
																		"src": "2824:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IBEP20_$912",
																			"typeString": "contract IBEP20"
																		}
																	},
																	"id": 1356,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 851,
																	"src": "2824:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1359,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2824:27:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1360,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1342,
																"src": "2854:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2824:37:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e7421",
															"id": 1362,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2863:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811",
																"typeString": "literal_string \"Insufficient!\""
															},
															"value": "Insufficient!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811",
																"typeString": "literal_string \"Insufficient!\""
															}
														],
														"id": 1354,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2816:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2816:63:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1364,
												"nodeType": "ExpressionStatement",
												"src": "2816:63:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1371,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1367,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2907:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1368,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2907:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1366,
																	"name": "isLocked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1653,
																	"src": "2898:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 1369,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2898:20:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1370,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2922:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2898:25:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e2774207374617274",
															"id": 1372,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2925:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e6e278564af6d8c908aa9321b451f41be1c60de060e90719489e8365cbf57f9f",
																"typeString": "literal_string \"Can't start\""
															},
															"value": "Can't start"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e6e278564af6d8c908aa9321b451f41be1c60de060e90719489e8365cbf57f9f",
																"typeString": "literal_string \"Can't start\""
															}
														],
														"id": 1365,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2890:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2890:49:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1374,
												"nodeType": "ExpressionStatement",
												"src": "2890:49:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1375,
														"name": "_mode",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1344,
														"src": "2964:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1376,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2973:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2964:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1387,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1385,
															"name": "_mode",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1344,
															"src": "3049:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 1386,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3058:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3049:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1397,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1395,
																"name": "_mode",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1344,
																"src": "3134:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "32",
																"id": 1396,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3143:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "3134:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1407,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1405,
																	"name": "_mode",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1344,
																	"src": "3219:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "33",
																	"id": 1406,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3228:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_3_by_1",
																		"typeString": "int_const 3"
																	},
																	"value": "3"
																},
																"src": "3219:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"expression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1418,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1416,
																				"name": "_amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1342,
																				"src": "3308:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 1417,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3318:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "3308:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		{
																			"hexValue": "496e76616c6964204d6f6465",
																			"id": 1419,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3321:14:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_deac108a7d54cf66b12f6e883ab8551f52667d7b9815f115365cc11ce5c44062",
																				"typeString": "literal_string \"Invalid Mode\""
																			},
																			"value": "Invalid Mode"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			{
																				"typeIdentifier": "t_stringliteral_deac108a7d54cf66b12f6e883ab8551f52667d7b9815f115365cc11ce5c44062",
																				"typeString": "literal_string \"Invalid Mode\""
																			}
																		],
																		"id": 1415,
																		"name": "require",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			4294967278,
																			4294967278
																		],
																		"referencedDeclaration": 4294967278,
																		"src": "3300:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																			"typeString": "function (bool,string memory) pure"
																		}
																	},
																	"id": 1420,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3300:36:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1421,
																"nodeType": "ExpressionStatement",
																"src": "3300:36:7"
															},
															"id": 1422,
															"nodeType": "IfStatement",
															"src": "3215:121:7",
															"trueBody": {
																"expression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1411,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1409,
																				"name": "_amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1342,
																				"src": "3239:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">=",
																			"rightExpression": {
																				"id": 1410,
																				"name": "_minStakeAmount_g",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1172,
																				"src": "3250:17:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3239:28:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		{
																			"hexValue": "496e73756666696369656e74",
																			"id": 1412,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3269:14:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_0d617be88096c346284999e0c326580edf46a27365999d8d83893f396c546e11",
																				"typeString": "literal_string \"Insufficient\""
																			},
																			"value": "Insufficient"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			{
																				"typeIdentifier": "t_stringliteral_0d617be88096c346284999e0c326580edf46a27365999d8d83893f396c546e11",
																				"typeString": "literal_string \"Insufficient\""
																			}
																		],
																		"id": 1408,
																		"name": "require",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			4294967278,
																			4294967278
																		],
																		"referencedDeclaration": 4294967278,
																		"src": "3231:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																			"typeString": "function (bool,string memory) pure"
																		}
																	},
																	"id": 1413,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3231:53:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1414,
																"nodeType": "ExpressionStatement",
																"src": "3231:53:7"
															}
														},
														"id": 1423,
														"nodeType": "IfStatement",
														"src": "3130:206:7",
														"trueBody": {
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1401,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1399,
																			"name": "_amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1342,
																			"src": "3154:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 1400,
																			"name": "_minStakeAmount_s",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1174,
																			"src": "3165:17:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3154:28:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "496e73756666696369656e74",
																		"id": 1402,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3184:14:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_0d617be88096c346284999e0c326580edf46a27365999d8d83893f396c546e11",
																			"typeString": "literal_string \"Insufficient\""
																		},
																		"value": "Insufficient"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_0d617be88096c346284999e0c326580edf46a27365999d8d83893f396c546e11",
																			"typeString": "literal_string \"Insufficient\""
																		}
																	],
																	"id": 1398,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3146:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1403,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3146:53:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1404,
															"nodeType": "ExpressionStatement",
															"src": "3146:53:7"
														}
													},
													"id": 1424,
													"nodeType": "IfStatement",
													"src": "3045:291:7",
													"trueBody": {
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1391,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1389,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1342,
																		"src": "3069:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 1390,
																		"name": "_minStakeAmount_c",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1176,
																		"src": "3080:17:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3069:28:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "496e73756666696369656e74",
																	"id": 1392,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3099:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_0d617be88096c346284999e0c326580edf46a27365999d8d83893f396c546e11",
																		"typeString": "literal_string \"Insufficient\""
																	},
																	"value": "Insufficient"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_0d617be88096c346284999e0c326580edf46a27365999d8d83893f396c546e11",
																		"typeString": "literal_string \"Insufficient\""
																	}
																],
																"id": 1388,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "3061:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1393,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3061:53:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1394,
														"nodeType": "ExpressionStatement",
														"src": "3061:53:7"
													}
												},
												"id": 1425,
												"nodeType": "IfStatement",
												"src": "2960:376:7",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1381,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1379,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1342,
																	"src": "2984:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 1380,
																	"name": "_minStakeAmount_m",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1170,
																	"src": "2995:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2984:28:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															{
																"hexValue": "496e73756666696369656e74",
																"id": 1382,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3014:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_0d617be88096c346284999e0c326580edf46a27365999d8d83893f396c546e11",
																	"typeString": "literal_string \"Insufficient\""
																},
																"value": "Insufficient"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																{
																	"typeIdentifier": "t_stringliteral_0d617be88096c346284999e0c326580edf46a27365999d8d83893f396c546e11",
																	"typeString": "literal_string \"Insufficient\""
																}
															],
															"id": 1378,
															"name": "require",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																4294967278,
																4294967278
															],
															"referencedDeclaration": 4294967278,
															"src": "2976:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																"typeString": "function (bool,string memory) pure"
															}
														},
														"id": 1383,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2976:53:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1384,
													"nodeType": "ExpressionStatement",
													"src": "2976:53:7"
												}
											},
											{
												"expression": {
													"id": 1432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1426,
																"name": "_staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1184,
																"src": "3357:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																	"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																}
															},
															"id": 1429,
															"indexExpression": {
																"expression": {
																	"id": 1427,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3365:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1428,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3365:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3357:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1158_storage",
																"typeString": "struct StakingPlatform.Staker storage ref"
															}
														},
														"id": 1430,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "mode",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1151,
														"src": "3357:24:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1431,
														"name": "_mode",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1344,
														"src": "3384:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3357:32:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1433,
												"nodeType": "ExpressionStatement",
												"src": "3357:32:7"
											},
											{
												"expression": {
													"id": 1441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1434,
																"name": "_staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1184,
																"src": "3400:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																	"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																}
															},
															"id": 1437,
															"indexExpression": {
																"expression": {
																	"id": 1435,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3408:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1436,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3408:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3400:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1158_storage",
																"typeString": "struct StakingPlatform.Staker storage ref"
															}
														},
														"id": 1438,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "stakeStartTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1153,
														"src": "3400:34:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1439,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3437:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1440,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "3437:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3400:52:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1442,
												"nodeType": "ExpressionStatement",
												"src": "3400:52:7"
											},
											{
												"expression": {
													"id": 1449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1443,
																"name": "_staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1184,
																"src": "3463:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																	"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																}
															},
															"id": 1446,
															"indexExpression": {
																"expression": {
																	"id": 1444,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3471:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1445,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3471:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3463:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1158_storage",
																"typeString": "struct StakingPlatform.Staker storage ref"
															}
														},
														"id": 1447,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "staked",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1157,
														"src": "3463:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3535",
														"id": 1448,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3492:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_55_by_1",
															"typeString": "int_const 55"
														},
														"value": "55"
													},
													"src": "3463:31:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1450,
												"nodeType": "ExpressionStatement",
												"src": "3463:31:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1454,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3519:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1455,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3519:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1451,
															"name": "_stakers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1179,
															"src": "3505:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1453,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "3505:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
															"typeString": "function (address[] storage pointer,address)"
														}
													},
													"id": 1456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3505:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1457,
												"nodeType": "ExpressionStatement",
												"src": "3505:25:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1459,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1342,
															"src": "3547:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1458,
														"name": "stake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1541,
														"src": "3541:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1460,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3541:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1461,
												"nodeType": "ExpressionStatement",
												"src": "3541:14:7"
											}
										]
									},
									"functionSelector": "4b77dd9e",
									"id": 1463,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "startStaking",
									"nameLocation": "2675:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1342,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "2696:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1463,
												"src": "2688:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2688:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1344,
												"mutability": "mutable",
												"name": "_mode",
												"nameLocation": "2713:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1463,
												"src": "2705:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1343,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2705:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2687:32:7"
									},
									"returnParameters": {
										"id": 1346,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2729:0:7"
									},
									"scope": 2184,
									"src": "2666:897:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1540,
										"nodeType": "Block",
										"src": "3669:542:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1471,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1469,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1465,
																"src": "3698:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1470,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3708:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3698:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e742073686f756c642062652067726561746572207468616e2030",
															"id": 1472,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3711:33:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580",
																"typeString": "literal_string \"Amount should be greater than 0\""
															},
															"value": "Amount should be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580",
																"typeString": "literal_string \"Amount should be greater than 0\""
															}
														],
														"id": 1468,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3690:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3690:55:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1474,
												"nodeType": "ExpressionStatement",
												"src": "3690:55:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1482,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1478,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3780:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1479,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3780:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1476,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1189,
																		"src": "3764:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IBEP20_$912",
																			"typeString": "contract IBEP20"
																		}
																	},
																	"id": 1477,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 851,
																	"src": "3764:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1480,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3764:27:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1481,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1465,
																"src": "3794:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3764:37:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e7421",
															"id": 1483,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3803:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811",
																"typeString": "literal_string \"Insufficient!\""
															},
															"value": "Insufficient!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811",
																"typeString": "literal_string \"Insufficient!\""
															}
														],
														"id": 1475,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3756:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3756:63:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1485,
												"nodeType": "ExpressionStatement",
												"src": "3756:63:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1493,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1487,
																		"name": "_staker",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1184,
																		"src": "3838:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																			"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																		}
																	},
																	"id": 1490,
																	"indexExpression": {
																		"expression": {
																			"id": 1488,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3846:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1489,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3846:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3838:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Staker_$1158_storage",
																		"typeString": "struct StakingPlatform.Staker storage ref"
																	}
																},
																"id": 1491,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "staked",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1157,
																"src": "3838:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "3535",
																"id": 1492,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3868:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_55_by_1",
																	"typeString": "int_const 55"
																},
																"value": "55"
															},
															"src": "3838:32:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4572726f723a20696e76616c6964207374616b6572",
															"id": 1494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3872:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684",
																"typeString": "literal_string \"Error: invalid staker\""
															},
															"value": "Error: invalid staker"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684",
																"typeString": "literal_string \"Error: invalid staker\""
															}
														],
														"id": 1486,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3830:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3830:66:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1496,
												"nodeType": "ExpressionStatement",
												"src": "3830:66:7"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1497,
														"name": "updateReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1340,
														"src": "3917:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3917:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1499,
												"nodeType": "ExpressionStatement",
												"src": "3917:14:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1503,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3975:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1504,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3975:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1507,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3995:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakingPlatform_$2184",
																		"typeString": "contract StakingPlatform"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_StakingPlatform_$2184",
																		"typeString": "contract StakingPlatform"
																	}
																],
																"id": 1506,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3987:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1505,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3987:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1508,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3987:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1509,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1465,
															"src": "4002:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1500,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1189,
															"src": "3952:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															}
														},
														"id": 1502,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 972,
														"src": "3952:22:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$912_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IBEP20_$912_$",
															"typeString": "function (contract IBEP20,address,address,uint256)"
														}
													},
													"id": 1510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3952:58:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1511,
												"nodeType": "ExpressionStatement",
												"src": "3952:58:7"
											},
											{
												"expression": {
													"id": 1525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1512,
																"name": "_staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1184,
																"src": "4021:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																	"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																}
															},
															"id": 1515,
															"indexExpression": {
																"expression": {
																	"id": 1513,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4029:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1514,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "4029:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4021:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1158_storage",
																"typeString": "struct StakingPlatform.Staker storage ref"
															}
														},
														"id": 1516,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "stakedAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1149,
														"src": "4021:32:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1523,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1465,
																"src": "4093:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"baseExpression": {
																		"id": 1517,
																		"name": "_staker",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1184,
																		"src": "4056:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																			"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																		}
																	},
																	"id": 1520,
																	"indexExpression": {
																		"expression": {
																			"id": 1518,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4064:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1519,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4064:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4056:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Staker_$1158_storage",
																		"typeString": "struct StakingPlatform.Staker storage ref"
																	}
																},
																"id": 1521,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "stakedAmount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1149,
																"src": "4056:32:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1522,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 675,
															"src": "4056:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1524,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4056:45:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4021:80:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1526,
												"nodeType": "ExpressionStatement",
												"src": "4021:80:7"
											},
											{
												"expression": {
													"id": 1532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1527,
														"name": "totalStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1186,
														"src": "4112:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1530,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1465,
																"src": "4142:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1528,
																"name": "totalStaked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1186,
																"src": "4126:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1529,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 675,
															"src": "4126:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1531,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4126:24:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4112:38:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1533,
												"nodeType": "ExpressionStatement",
												"src": "4112:38:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1535,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4183:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1536,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4183:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1537,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1465,
															"src": "4195:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1534,
														"name": "Staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1195,
														"src": "4176:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4176:27:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1539,
												"nodeType": "EmitStatement",
												"src": "4171:32:7"
											}
										]
									},
									"functionSelector": "a694fc3a",
									"id": 1541,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stake",
									"nameLocation": "3640:5:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1465,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "3654:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1541,
												"src": "3646:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1464,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3646:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3645:17:7"
									},
									"returnParameters": {
										"id": 1467,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3669:0:7"
									},
									"scope": 2184,
									"src": "3631:580:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1548,
										"nodeType": "Block",
										"src": "4275:39:7",
										"statements": [
											{
												"expression": {
													"id": 1546,
													"name": "totalStaked",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1186,
													"src": "4295:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1545,
												"id": 1547,
												"nodeType": "Return",
												"src": "4288:18:7"
											}
										]
									},
									"functionSelector": "0917e776",
									"id": 1549,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTotalStaked",
									"nameLocation": "4228:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1542,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4242:2:7"
									},
									"returnParameters": {
										"id": 1545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1544,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1549,
												"src": "4266:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1543,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4266:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4265:9:7"
									},
									"scope": 2184,
									"src": "4219:95:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1557,
										"nodeType": "Block",
										"src": "4382:43:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1554,
														"name": "_stakers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1179,
														"src": "4402:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"id": 1555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "4402:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1553,
												"id": 1556,
												"nodeType": "Return",
												"src": "4395:22:7"
											}
										]
									},
									"functionSelector": "5715ec11",
									"id": 1558,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getNumberofStakers",
									"nameLocation": "4331:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1550,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4349:2:7"
									},
									"returnParameters": {
										"id": 1553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1552,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1558,
												"src": "4373:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1551,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4373:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4372:9:7"
									},
									"scope": 2184,
									"src": "4322:103:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1579,
										"nodeType": "Block",
										"src": "4504:118:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1570,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1567,
																		"name": "_address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1560,
																		"src": "4540:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1566,
																	"name": "isStartStaking",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1593,
																	"src": "4525:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 1568,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4525:24:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "3535",
																"id": 1569,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4553:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_55_by_1",
																	"typeString": "int_const 55"
																},
																"value": "55"
															},
															"src": "4525:30:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f74207374616b657220796574",
															"id": 1571,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4557:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2c0bb5e0c4ac567371ecbd023733bd581a3977e4ec4f3ce35a1885aefc6bd283",
																"typeString": "literal_string \"Not staker yet\""
															},
															"value": "Not staker yet"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2c0bb5e0c4ac567371ecbd023733bd581a3977e4ec4f3ce35a1885aefc6bd283",
																"typeString": "literal_string \"Not staker yet\""
															}
														],
														"id": 1565,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4517:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4517:57:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1573,
												"nodeType": "ExpressionStatement",
												"src": "4517:57:7"
											},
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 1574,
															"name": "_staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1184,
															"src": "4592:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
															}
														},
														"id": 1576,
														"indexExpression": {
															"id": 1575,
															"name": "_address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1560,
															"src": "4600:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4592:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$1158_storage",
															"typeString": "struct StakingPlatform.Staker storage ref"
														}
													},
													"id": 1577,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "mode",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1151,
													"src": "4592:22:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1564,
												"id": 1578,
												"nodeType": "Return",
												"src": "4585:29:7"
											}
										]
									},
									"functionSelector": "aedf562b",
									"id": 1580,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStakerMode",
									"nameLocation": "4442:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1560,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "4464:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1580,
												"src": "4456:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1559,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4456:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4455:18:7"
									},
									"returnParameters": {
										"id": 1564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1563,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1580,
												"src": "4495:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1562,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4495:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4494:9:7"
									},
									"scope": 2184,
									"src": "4433:189:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1592,
										"nodeType": "Block",
										"src": "4706:52:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 1587,
															"name": "_staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1184,
															"src": "4726:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
															}
														},
														"id": 1589,
														"indexExpression": {
															"id": 1588,
															"name": "_address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1582,
															"src": "4734:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4726:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$1158_storage",
															"typeString": "struct StakingPlatform.Staker storage ref"
														}
													},
													"id": 1590,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "staked",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1157,
													"src": "4726:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1586,
												"id": 1591,
												"nodeType": "Return",
												"src": "4719:31:7"
											}
										]
									},
									"functionSelector": "fe600f84",
									"id": 1593,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isStartStaking",
									"nameLocation": "4643:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1582,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "4666:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1593,
												"src": "4658:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1581,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4658:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4657:18:7"
									},
									"returnParameters": {
										"id": 1586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1585,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1593,
												"src": "4697:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1584,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4697:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4696:9:7"
									},
									"scope": 2184,
									"src": "4634:124:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1652,
										"nodeType": "Block",
										"src": "4832:351:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 1600,
																"name": "_staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1184,
																"src": "4849:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																	"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																}
															},
															"id": 1602,
															"indexExpression": {
																"id": 1601,
																"name": "_address",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1595,
																"src": "4857:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4849:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1158_storage",
																"typeString": "struct StakingPlatform.Staker storage ref"
															}
														},
														"id": 1603,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staked",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1157,
														"src": "4849:24:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "3535",
														"id": 1604,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4877:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_55_by_1",
															"typeString": "int_const 55"
														},
														"value": "55"
													},
													"src": "4849:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1608,
												"nodeType": "IfStatement",
												"src": "4845:57:7",
												"trueBody": {
													"expression": {
														"hexValue": "30",
														"id": 1606,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4901:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 1599,
													"id": 1607,
													"nodeType": "Return",
													"src": "4894:8:7"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1614,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 1609,
																"name": "_staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1184,
																"src": "4917:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																	"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																}
															},
															"id": 1611,
															"indexExpression": {
																"id": 1610,
																"name": "_address",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1595,
																"src": "4925:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4917:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1158_storage",
																"typeString": "struct StakingPlatform.Staker storage ref"
															}
														},
														"id": 1612,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mode",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1151,
														"src": "4917:22:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1613,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4943:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4917:27:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"expression": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1646,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"baseExpression": {
																				"id": 1637,
																				"name": "_staker",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1184,
																				"src": "5105:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																					"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																				}
																			},
																			"id": 1639,
																			"indexExpression": {
																				"id": 1638,
																				"name": "_address",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1595,
																				"src": "5113:8:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "5105:17:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Staker_$1158_storage",
																				"typeString": "struct StakingPlatform.Staker storage ref"
																			}
																		},
																		"id": 1640,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "stakeStartTime",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1153,
																		"src": "5105:32:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 1634,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "5085:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1635,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "5085:15:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1636,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 690,
																	"src": "5085:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1641,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5085:53:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 1644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5160:6:7",
																		"subdenomination": "days",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_86400_by_1",
																			"typeString": "int_const 86400"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_86400_by_1",
																			"typeString": "int_const 86400"
																		}
																	],
																	"expression": {
																		"id": 1642,
																		"name": "_lockupPeriod",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1168,
																		"src": "5142:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1643,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 705,
																	"src": "5142:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1645,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5142:25:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5085:82:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"hexValue": "31",
															"id": 1648,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5174:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"id": 1649,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "5085:90:7",
														"trueExpression": {
															"hexValue": "30",
															"id": 1647,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5170:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"functionReturnParameters": 1599,
													"id": 1650,
													"nodeType": "Return",
													"src": "5078:97:7"
												},
												"id": 1651,
												"nodeType": "IfStatement",
												"src": "4913:262:7",
												"trueBody": {
													"expression": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1629,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1627,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"hexValue": "31",
																			"id": 1624,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5024:6:7",
																			"subdenomination": "days",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_86400_by_1",
																				"typeString": "int_const 86400"
																			},
																			"value": "1"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_86400_by_1",
																				"typeString": "int_const 86400"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"expression": {
																						"baseExpression": {
																							"id": 1618,
																							"name": "_staker",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1184,
																							"src": "4986:7:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																								"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																							}
																						},
																						"id": 1620,
																						"indexExpression": {
																							"id": 1619,
																							"name": "_address",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1595,
																							"src": "4994:8:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "4986:17:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Staker_$1158_storage",
																							"typeString": "struct StakingPlatform.Staker storage ref"
																						}
																					},
																					"id": 1621,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "stakeStartTime",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1153,
																					"src": "4986:32:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"expression": {
																						"id": 1615,
																						"name": "block",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967292,
																						"src": "4966:5:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_block",
																							"typeString": "block"
																						}
																					},
																					"id": 1616,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "timestamp",
																					"nodeType": "MemberAccess",
																					"src": "4966:15:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1617,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sub",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 690,
																				"src": "4966:19:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4966:53:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1623,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 720,
																		"src": "4966:57:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1625,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4966:65:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "%",
																"rightExpression": {
																	"hexValue": "37",
																	"id": 1626,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5034:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_7_by_1",
																		"typeString": "int_const 7"
																	},
																	"value": "7"
																},
																"src": "4966:69:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1628,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5039:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4966:74:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"hexValue": "31",
															"id": 1631,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5047:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"id": 1632,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "4966:82:7",
														"trueExpression": {
															"hexValue": "30",
															"id": 1630,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5043:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"functionReturnParameters": 1599,
													"id": 1633,
													"nodeType": "Return",
													"src": "4959:89:7"
												}
											}
										]
									},
									"functionSelector": "4a4fbeec",
									"id": 1653,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isLocked",
									"nameLocation": "4775:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1595,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "4792:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1653,
												"src": "4784:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1594,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4784:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4783:18:7"
									},
									"returnParameters": {
										"id": 1599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1598,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1653,
												"src": "4823:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1597,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4823:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4822:9:7"
									},
									"scope": 2184,
									"src": "4766:417:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1665,
										"nodeType": "Block",
										"src": "5265:66:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 1660,
															"name": "_staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1184,
															"src": "5293:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
															}
														},
														"id": 1662,
														"indexExpression": {
															"id": 1661,
															"name": "_address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1655,
															"src": "5301:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5293:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$1158_storage",
															"typeString": "struct StakingPlatform.Staker storage ref"
														}
													},
													"id": 1663,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "stakedAmount",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1149,
													"src": "5293:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1659,
												"id": 1664,
												"nodeType": "Return",
												"src": "5286:37:7"
											}
										]
									},
									"functionSelector": "f9931855",
									"id": 1666,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stakedAmount",
									"nameLocation": "5204:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1656,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1655,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "5225:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1666,
												"src": "5217:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1654,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5217:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5216:18:7"
									},
									"returnParameters": {
										"id": 1659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1658,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1666,
												"src": "5256:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1657,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5256:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5255:9:7"
									},
									"scope": 2184,
									"src": "5195:136:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1673,
										"nodeType": "Block",
										"src": "5394:39:7",
										"statements": [
											{
												"expression": {
													"id": 1671,
													"name": "_rewardRate",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1164,
													"src": "5414:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1670,
												"id": 1672,
												"nodeType": "Return",
												"src": "5407:18:7"
											}
										]
									},
									"functionSelector": "7e1a3786",
									"id": 1674,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRewardRate",
									"nameLocation": "5348:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1667,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5361:2:7"
									},
									"returnParameters": {
										"id": 1670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1669,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1674,
												"src": "5385:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1668,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5385:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5384:9:7"
									},
									"scope": 2184,
									"src": "5339:94:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1689,
										"nodeType": "Block",
										"src": "5507:94:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1683,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1681,
														"name": "mode",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1676,
														"src": "5532:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1682,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5540:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5532:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1686,
												"nodeType": "IfStatement",
												"src": "5528:35:7",
												"trueBody": {
													"expression": {
														"id": 1684,
														"name": "_lockupPeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1168,
														"src": "5550:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"functionReturnParameters": 1680,
													"id": 1685,
													"nodeType": "Return",
													"src": "5543:20:7"
												}
											},
											{
												"expression": {
													"id": 1687,
													"name": "_eventPeriod",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1162,
													"src": "5581:12:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1680,
												"id": 1688,
												"nodeType": "Return",
												"src": "5574:19:7"
											}
										]
									},
									"functionSelector": "ce34751f",
									"id": 1690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "lockupPeriod",
									"nameLocation": "5450:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1676,
												"mutability": "mutable",
												"name": "mode",
												"nameLocation": "5471:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1690,
												"src": "5463:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5463:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5462:14:7"
									},
									"returnParameters": {
										"id": 1680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1679,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1690,
												"src": "5498:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5498:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5497:9:7"
									},
									"scope": 2184,
									"src": "5441:160:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1697,
										"nodeType": "Block",
										"src": "5662:48:7",
										"statements": [
											{
												"expression": {
													"id": 1695,
													"name": "_eventPeriod",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1162,
													"src": "5690:12:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1694,
												"id": 1696,
												"nodeType": "Return",
												"src": "5683:19:7"
											}
										]
									},
									"functionSelector": "18b2367e",
									"id": 1698,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "eventPeriod",
									"nameLocation": "5618:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1691,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5629:2:7"
									},
									"returnParameters": {
										"id": 1694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1693,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1698,
												"src": "5653:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1692,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5653:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5652:9:7"
									},
									"scope": 2184,
									"src": "5609:101:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1705,
										"nodeType": "Block",
										"src": "5776:45:7",
										"statements": [
											{
												"expression": {
													"id": 1703,
													"name": "_unstakingFeeRate",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1160,
													"src": "5796:17:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1702,
												"id": 1704,
												"nodeType": "Return",
												"src": "5789:24:7"
											}
										]
									},
									"functionSelector": "221dfe03",
									"id": 1706,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unstakingFeeLate",
									"nameLocation": "5727:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1699,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5743:2:7"
									},
									"returnParameters": {
										"id": 1702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1701,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1706,
												"src": "5767:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1700,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5767:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5766:9:7"
									},
									"scope": 2184,
									"src": "5718:103:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1751,
										"nodeType": "Block",
										"src": "5952:314:7",
										"statements": [
											{
												"assignments": [
													1714
												],
												"declarations": [
													{
														"constant": false,
														"id": 1714,
														"mutability": "mutable",
														"name": "stakerStakedAmount",
														"nameLocation": "5981:18:7",
														"nodeType": "VariableDeclaration",
														"scope": 1751,
														"src": "5973:26:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1713,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5973:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1719,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 1715,
															"name": "_staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1184,
															"src": "6002:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
															}
														},
														"id": 1717,
														"indexExpression": {
															"id": 1716,
															"name": "_address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1708,
															"src": "6010:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6002:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$1158_storage",
															"typeString": "struct StakingPlatform.Staker storage ref"
														}
													},
													"id": 1718,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "stakedAmount",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1149,
													"src": "6002:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5973:59:7"
											},
											{
												"assignments": [
													1721
												],
												"declarations": [
													{
														"constant": false,
														"id": 1721,
														"mutability": "mutable",
														"name": "newReward",
														"nameLocation": "6051:9:7",
														"nodeType": "VariableDeclaration",
														"scope": 1751,
														"src": "6043:17:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1720,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6043:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1742,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "316534",
															"id": 1740,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6175:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10000_by_1",
																"typeString": "int_const 10000"
															},
															"value": "1e4"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_10000_by_1",
																"typeString": "int_const 10000"
															}
														],
														"expression": {
															"arguments": [
																{
																	"hexValue": "31",
																	"id": 1737,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6163:6:7",
																	"subdenomination": "days",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_86400_by_1",
																		"typeString": "int_const 86400"
																	},
																	"value": "1"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_86400_by_1",
																		"typeString": "int_const 86400"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 1734,
																			"name": "_rewardRate",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1164,
																			"src": "6146:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"expression": {
																								"baseExpression": {
																									"id": 1727,
																									"name": "_staker",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1184,
																									"src": "6106:7:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																										"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																									}
																								},
																								"id": 1729,
																								"indexExpression": {
																									"id": 1728,
																									"name": "_address",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1708,
																									"src": "6114:8:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "6106:17:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_Staker_$1158_storage",
																									"typeString": "struct StakingPlatform.Staker storage ref"
																								}
																							},
																							"id": 1730,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "lastUpdatedTime",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1155,
																							"src": "6106:33:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"expression": {
																								"id": 1724,
																								"name": "block",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967292,
																								"src": "6086:5:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_block",
																									"typeString": "block"
																								}
																							},
																							"id": 1725,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "timestamp",
																							"nodeType": "MemberAccess",
																							"src": "6086:15:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1726,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "sub",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 690,
																						"src": "6086:19:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 1731,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "6086:54:7",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 1722,
																					"name": "stakerStakedAmount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1714,
																					"src": "6063:18:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1723,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 705,
																				"src": "6063:22:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1732,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6063:78:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1733,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 705,
																		"src": "6063:82:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1735,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6063:95:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1736,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 720,
																"src": "6063:99:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1738,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6063:107:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1739,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 720,
														"src": "6063:111:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6063:116:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6043:136:7"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1749,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 1743,
																"name": "_staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1184,
																"src": "6207:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																	"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																}
															},
															"id": 1746,
															"indexExpression": {
																"expression": {
																	"id": 1744,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "6215:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "6215:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6207:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1158_storage",
																"typeString": "struct StakingPlatform.Staker storage ref"
															}
														},
														"id": 1747,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "stakerCurrentReward",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1147,
														"src": "6207:39:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1748,
														"name": "newReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1721,
														"src": "6249:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6207:51:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1712,
												"id": 1750,
												"nodeType": "Return",
												"src": "6200:58:7"
											}
										]
									},
									"functionSelector": "6ef32435",
									"id": 1752,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "rewardToHarvest",
									"nameLocation": "5889:15:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1708,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "5913:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1752,
												"src": "5905:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1707,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5905:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5904:18:7"
									},
									"returnParameters": {
										"id": 1712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1711,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1752,
												"src": "5944:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5944:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5943:9:7"
									},
									"scope": 2184,
									"src": "5880:386:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1892,
										"nodeType": "Block",
										"src": "6355:1030:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1760,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1758,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1754,
																"src": "6384:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1759,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6393:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6384:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e742073686f756c642062652067726561746572207468616e2030",
															"id": 1761,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6396:33:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580",
																"typeString": "literal_string \"Amount should be greater than 0\""
															},
															"value": "Amount should be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580",
																"typeString": "literal_string \"Amount should be greater than 0\""
															}
														],
														"id": 1757,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6376:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1762,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6376:54:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1763,
												"nodeType": "ExpressionStatement",
												"src": "6376:54:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1771,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1765,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1754,
																"src": "6449:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1766,
																		"name": "_staker",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1184,
																		"src": "6459:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																			"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																		}
																	},
																	"id": 1769,
																	"indexExpression": {
																		"expression": {
																			"id": 1767,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "6467:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1768,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "6467:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6459:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Staker_$1158_storage",
																		"typeString": "struct StakingPlatform.Staker storage ref"
																	}
																},
																"id": 1770,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "stakedAmount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1149,
																"src": "6459:32:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6449:42:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420616d6f756e74",
															"id": 1772,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6493:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1",
																"typeString": "literal_string \"Invalid amount\""
															},
															"value": "Invalid amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1",
																"typeString": "literal_string \"Invalid amount\""
															}
														],
														"id": 1764,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6441:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6441:69:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1774,
												"nodeType": "ExpressionStatement",
												"src": "6441:69:7"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1775,
														"name": "updateReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1340,
														"src": "6523:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6523:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1777,
												"nodeType": "ExpressionStatement",
												"src": "6523:14:7"
											},
											{
												"assignments": [
													1779
												],
												"declarations": [
													{
														"constant": false,
														"id": 1779,
														"mutability": "mutable",
														"name": "amountTobeWithdrawn",
														"nameLocation": "6556:19:7",
														"nodeType": "VariableDeclaration",
														"scope": 1892,
														"src": "6548:27:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1778,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6548:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1781,
												"initialValue": {
													"id": 1780,
													"name": "amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1754,
													"src": "6578:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6548:36:7"
											},
											{
												"assignments": [
													1783
												],
												"declarations": [
													{
														"constant": false,
														"id": 1783,
														"mutability": "mutable",
														"name": "during",
														"nameLocation": "6603:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1892,
														"src": "6595:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1782,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6595:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1796,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31",
															"id": 1794,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6672:6:7",
															"subdenomination": "days",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_86400_by_1",
																"typeString": "int_const 86400"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_86400_by_1",
																"typeString": "int_const 86400"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"baseExpression": {
																			"id": 1787,
																			"name": "_staker",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1184,
																			"src": "6632:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																				"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																			}
																		},
																		"id": 1790,
																		"indexExpression": {
																			"expression": {
																				"id": 1788,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "6640:3:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1789,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "6640:10:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6632:19:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Staker_$1158_storage",
																			"typeString": "struct StakingPlatform.Staker storage ref"
																		}
																	},
																	"id": 1791,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "stakeStartTime",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1153,
																	"src": "6632:34:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"expression": {
																		"id": 1784,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "6612:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1785,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "6612:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1786,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 690,
																"src": "6612:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1792,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6612:55:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1793,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 720,
														"src": "6612:59:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1795,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6612:67:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6595:84:7"
											},
											{
												"assignments": [
													1798
												],
												"declarations": [
													{
														"constant": false,
														"id": 1798,
														"mutability": "mutable",
														"name": "fee",
														"nameLocation": "6698:3:7",
														"nodeType": "VariableDeclaration",
														"scope": 1892,
														"src": "6690:11:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1797,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6690:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1800,
												"initialValue": {
													"hexValue": "313030",
													"id": 1799,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6704:3:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_100_by_1",
														"typeString": "int_const 100"
													},
													"value": "100"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6690:17:7"
											},
											{
												"assignments": [
													1802
												],
												"declarations": [
													{
														"constant": false,
														"id": 1802,
														"mutability": "mutable",
														"name": "isLockupTimeOver",
														"nameLocation": "6723:16:7",
														"nodeType": "VariableDeclaration",
														"scope": 1892,
														"src": "6718:21:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1801,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6718:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1834,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1809,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"baseExpression": {
																	"id": 1803,
																	"name": "_staker",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1184,
																	"src": "6742:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																		"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																	}
																},
																"id": 1806,
																"indexExpression": {
																	"expression": {
																		"id": 1804,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "6750:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1805,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "6750:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6742:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Staker_$1158_storage",
																	"typeString": "struct StakingPlatform.Staker storage ref"
																}
															},
															"id": 1807,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "mode",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1151,
															"src": "6742:24:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 1808,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6770:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "6742:29:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1832,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1819,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "6830:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1820,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "6830:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"hexValue": "31",
																			"id": 1829,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6906:6:7",
																			"subdenomination": "days",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_86400_by_1",
																				"typeString": "int_const 86400"
																			},
																			"value": "1"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_86400_by_1",
																				"typeString": "int_const 86400"
																			}
																		],
																		"expression": {
																			"id": 1827,
																			"name": "_lockupPeriod",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1168,
																			"src": "6888:13:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1828,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 705,
																		"src": "6888:17:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1830,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6888:25:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"expression": {
																		"baseExpression": {
																			"id": 1821,
																			"name": "_staker",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1184,
																			"src": "6849:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																				"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																			}
																		},
																		"id": 1824,
																		"indexExpression": {
																			"expression": {
																				"id": 1822,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "6857:3:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1823,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "6857:10:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6849:19:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Staker_$1158_storage",
																			"typeString": "struct StakingPlatform.Staker storage ref"
																		}
																	},
																	"id": 1825,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "stakeStartTime",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1153,
																	"src": "6849:34:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1826,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 675,
																"src": "6849:38:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1831,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6849:65:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6830:84:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1833,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "6742:172:7",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1818,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1814,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1812,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1810,
																	"name": "during",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1783,
																	"src": "6774:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "%",
																"rightExpression": {
																	"id": 1811,
																	"name": "_eventPeriod",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1162,
																	"src": "6783:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6774:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1813,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6799:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6774:26:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1817,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1815,
																"name": "during",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1783,
																"src": "6804:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1816,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6813:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6804:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "6774:40:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6718:196:7"
											},
											{
												"condition": {
													"id": 1836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6929:17:7",
													"subExpression": {
														"id": 1835,
														"name": "isLockupTimeOver",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1802,
														"src": "6930:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1842,
												"nodeType": "IfStatement",
												"src": "6925:73:7",
												"trueBody": {
													"id": 1841,
													"nodeType": "Block",
													"src": "6948:50:7",
													"statements": [
														{
															"expression": {
																"id": 1839,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1837,
																	"name": "fee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1798,
																	"src": "6963:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1838,
																	"name": "_unstakingFeeRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1160,
																	"src": "6969:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6963:23:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1840,
															"nodeType": "ExpressionStatement",
															"src": "6963:23:7"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1856,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1843,
																"name": "_staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1184,
																"src": "7008:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																	"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																}
															},
															"id": 1846,
															"indexExpression": {
																"expression": {
																	"id": 1844,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "7016:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1845,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "7016:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7008:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1158_storage",
																"typeString": "struct StakingPlatform.Staker storage ref"
															}
														},
														"id": 1847,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "stakedAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1149,
														"src": "7008:32:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1854,
																"name": "amountTobeWithdrawn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1779,
																"src": "7080:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"baseExpression": {
																		"id": 1848,
																		"name": "_staker",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1184,
																		"src": "7043:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																			"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																		}
																	},
																	"id": 1851,
																	"indexExpression": {
																		"expression": {
																			"id": 1849,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "7051:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1850,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "7051:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7043:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Staker_$1158_storage",
																		"typeString": "struct StakingPlatform.Staker storage ref"
																	}
																},
																"id": 1852,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "stakedAmount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1149,
																"src": "7043:32:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1853,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 690,
															"src": "7043:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1855,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7043:57:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7008:92:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1857,
												"nodeType": "ExpressionStatement",
												"src": "7008:92:7"
											},
											{
												"expression": {
													"id": 1863,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1858,
														"name": "totalStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1186,
														"src": "7111:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1861,
																"name": "amountTobeWithdrawn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1779,
																"src": "7141:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1859,
																"name": "totalStaked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1186,
																"src": "7125:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1860,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 690,
															"src": "7125:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1862,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7125:36:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7111:50:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1864,
												"nodeType": "ExpressionStatement",
												"src": "7111:50:7"
											},
											{
												"expression": {
													"id": 1876,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1865,
														"name": "amountTobeWithdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1779,
														"src": "7172:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"hexValue": "316534",
																		"id": 1873,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7251:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10000_by_1",
																			"typeString": "int_const 10000"
																		},
																		"value": "1e4"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_10000_by_1",
																			"typeString": "int_const 10000"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1870,
																				"name": "fee",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1798,
																				"src": "7242:3:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1868,
																				"name": "amountTobeWithdrawn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1779,
																				"src": "7218:19:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1869,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 705,
																			"src": "7218:23:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1871,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7218:28:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1872,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 720,
																	"src": "7218:32:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1874,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7218:37:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1866,
																"name": "amountTobeWithdrawn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1779,
																"src": "7194:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1867,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 690,
															"src": "7194:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1875,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7194:62:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7172:84:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1877,
												"nodeType": "ExpressionStatement",
												"src": "7172:84:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1881,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7286:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1882,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7286:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1883,
															"name": "amountTobeWithdrawn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1779,
															"src": "7298:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1878,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1189,
															"src": "7267:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															}
														},
														"id": 1880,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 946,
														"src": "7267:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$912_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IBEP20_$912_$",
															"typeString": "function (contract IBEP20,address,uint256)"
														}
													},
													"id": 1884,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7267:51:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1885,
												"nodeType": "ExpressionStatement",
												"src": "7267:51:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1887,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7345:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1888,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7345:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1889,
															"name": "amountTobeWithdrawn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1779,
															"src": "7357:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1886,
														"name": "Withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1207,
														"src": "7336:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1890,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7336:41:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1891,
												"nodeType": "EmitStatement",
												"src": "7331:46:7"
											}
										]
									},
									"functionSelector": "2e1a7d4d",
									"id": 1893,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "6322:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1755,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1754,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6339:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1893,
												"src": "6331:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1753,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6331:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6330:16:7"
									},
									"returnParameters": {
										"id": 1756,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6355:0:7"
									},
									"scope": 2184,
									"src": "6313:1072:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1915,
										"nodeType": "Block",
										"src": "7461:163:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1903,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1901,
																"name": "__rewardRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1895,
																"src": "7490:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1902,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7505:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7490:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642076616c7565",
															"id": 1904,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7508:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6",
																"typeString": "literal_string \"Invalid value\""
															},
															"value": "Invalid value"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6",
																"typeString": "literal_string \"Invalid value\""
															}
														],
														"id": 1900,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7482:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1905,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7482:42:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1906,
												"nodeType": "ExpressionStatement",
												"src": "7482:42:7"
											},
											{
												"expression": {
													"id": 1909,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1907,
														"name": "_rewardRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1164,
														"src": "7545:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1908,
														"name": "__rewardRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1895,
														"src": "7559:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7545:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1910,
												"nodeType": "ExpressionStatement",
												"src": "7545:26:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1912,
															"name": "__rewardRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1895,
															"src": "7603:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1911,
														"name": "SetRewardRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1211,
														"src": "7589:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1913,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7589:27:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1914,
												"nodeType": "EmitStatement",
												"src": "7584:32:7"
											}
										]
									},
									"functionSelector": "9e447fc6",
									"id": 1916,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1898,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1897,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "7451:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "7451:9:7"
										}
									],
									"name": "setRewardRate",
									"nameLocation": "7406:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1896,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1895,
												"mutability": "mutable",
												"name": "__rewardRate",
												"nameLocation": "7428:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1916,
												"src": "7420:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1894,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7420:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7419:22:7"
									},
									"returnParameters": {
										"id": 1899,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7461:0:7"
									},
									"scope": 2184,
									"src": "7397:227:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1938,
										"nodeType": "Block",
										"src": "7698:170:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1926,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1924,
																"name": "__eventPeriod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1918,
																"src": "7727:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1925,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7743:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7727:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964204c6f636b7570204475726174696f6e",
															"id": 1927,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7746:25:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561",
																"typeString": "literal_string \"Invalid Lockup Duration\""
															},
															"value": "Invalid Lockup Duration"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561",
																"typeString": "literal_string \"Invalid Lockup Duration\""
															}
														],
														"id": 1923,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7719:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1928,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7719:53:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1929,
												"nodeType": "ExpressionStatement",
												"src": "7719:53:7"
											},
											{
												"expression": {
													"id": 1932,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1930,
														"name": "_eventPeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1162,
														"src": "7785:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1931,
														"name": "__eventPeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1918,
														"src": "7800:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7785:28:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1933,
												"nodeType": "ExpressionStatement",
												"src": "7785:28:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1935,
															"name": "__eventPeriod",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1918,
															"src": "7846:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1934,
														"name": "SetEventPeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1215,
														"src": "7831:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1936,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7831:29:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1937,
												"nodeType": "EmitStatement",
												"src": "7826:34:7"
											}
										]
									},
									"functionSelector": "692642e7",
									"id": 1939,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1921,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1920,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "7688:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "7688:9:7"
										}
									],
									"name": "setEventPeriod",
									"nameLocation": "7641:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1918,
												"mutability": "mutable",
												"name": "__eventPeriod",
												"nameLocation": "7664:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 1939,
												"src": "7656:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1917,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7656:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7655:23:7"
									},
									"returnParameters": {
										"id": 1922,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7698:0:7"
									},
									"scope": 2184,
									"src": "7632:236:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1961,
										"nodeType": "Block",
										"src": "7952:198:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1949,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1947,
																"name": "__unstakingFeeRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1941,
																"src": "7981:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1948,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8002:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7981:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420556e7374616b696e67204665652052617465",
															"id": 1950,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8005:28:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3",
																"typeString": "literal_string \"Invalid Unstaking Fee Rate\""
															},
															"value": "Invalid Unstaking Fee Rate"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3",
																"typeString": "literal_string \"Invalid Unstaking Fee Rate\""
															}
														],
														"id": 1946,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7973:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1951,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7973:61:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1952,
												"nodeType": "ExpressionStatement",
												"src": "7973:61:7"
											},
											{
												"expression": {
													"id": 1955,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1953,
														"name": "_unstakingFeeRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1160,
														"src": "8047:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1954,
														"name": "__unstakingFeeRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1941,
														"src": "8067:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8047:38:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1956,
												"nodeType": "ExpressionStatement",
												"src": "8047:38:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1958,
															"name": "__unstakingFeeRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1941,
															"src": "8123:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1957,
														"name": "SetUnstakingFeeRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1219,
														"src": "8103:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8103:39:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1960,
												"nodeType": "EmitStatement",
												"src": "8098:44:7"
											}
										]
									},
									"functionSelector": "91e07e7a",
									"id": 1962,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1944,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1943,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "7942:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "7942:9:7"
										}
									],
									"name": "setUnstakingFeeRate",
									"nameLocation": "7885:19:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1942,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1941,
												"mutability": "mutable",
												"name": "__unstakingFeeRate",
												"nameLocation": "7913:18:7",
												"nodeType": "VariableDeclaration",
												"scope": 1962,
												"src": "7905:26:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1940,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7905:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7904:28:7"
									},
									"returnParameters": {
										"id": 1945,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7952:0:7"
									},
									"scope": 2184,
									"src": "7876:274:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1980,
										"nodeType": "Block",
										"src": "8220:116:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1972,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1970,
																"name": "lockupTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1964,
																"src": "8249:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1971,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8262:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8249:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e2774206265207a65726f",
															"id": 1973,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8265:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2",
																"typeString": "literal_string \"Can't be zero\""
															},
															"value": "Can't be zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2",
																"typeString": "literal_string \"Can't be zero\""
															}
														],
														"id": 1969,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8241:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1974,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8241:40:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1975,
												"nodeType": "ExpressionStatement",
												"src": "8241:40:7"
											},
											{
												"expression": {
													"id": 1978,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1976,
														"name": "_lockupPeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1168,
														"src": "8302:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1977,
														"name": "lockupTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1964,
														"src": "8318:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8302:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1979,
												"nodeType": "ExpressionStatement",
												"src": "8302:26:7"
											}
										]
									},
									"functionSelector": "4b62b70b",
									"id": 1981,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1967,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1966,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "8210:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "8210:9:7"
										}
									],
									"name": "setLockupTime",
									"nameLocation": "8167:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1965,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1964,
												"mutability": "mutable",
												"name": "lockupTime",
												"nameLocation": "8189:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1981,
												"src": "8181:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1963,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8181:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8180:20:7"
									},
									"returnParameters": {
										"id": 1968,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8220:0:7"
									},
									"scope": 2184,
									"src": "8158:178:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1999,
										"nodeType": "Block",
										"src": "8415:113:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1991,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1989,
																"name": "_minAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1983,
																"src": "8445:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1990,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8458:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8445:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e2774206265207a65726f",
															"id": 1992,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8461:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2",
																"typeString": "literal_string \"Can't be zero\""
															},
															"value": "Can't be zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2",
																"typeString": "literal_string \"Can't be zero\""
															}
														],
														"id": 1988,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8436:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1993,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8436:41:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1994,
												"nodeType": "ExpressionStatement",
												"src": "8436:41:7"
											},
											{
												"expression": {
													"id": 1997,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1995,
														"name": "_minStakeAmount_m",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1170,
														"src": "8490:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1996,
														"name": "_minAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1983,
														"src": "8510:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8490:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1998,
												"nodeType": "ExpressionStatement",
												"src": "8490:30:7"
											}
										]
									},
									"functionSelector": "c665d80e",
									"id": 2000,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1986,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1985,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "8405:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "8405:9:7"
										}
									],
									"name": "setThreeMonthMinAmount",
									"nameLocation": "8353:22:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1984,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1983,
												"mutability": "mutable",
												"name": "_minAmount",
												"nameLocation": "8384:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 2000,
												"src": "8376:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1982,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8376:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8375:20:7"
									},
									"returnParameters": {
										"id": 1987,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8415:0:7"
									},
									"scope": 2184,
									"src": "8344:184:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2018,
										"nodeType": "Block",
										"src": "8607:105:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2010,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2008,
																"name": "_minAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2002,
																"src": "8629:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2009,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8642:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8629:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e2774206265207a65726f",
															"id": 2011,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8645:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2",
																"typeString": "literal_string \"Can't be zero\""
															},
															"value": "Can't be zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2",
																"typeString": "literal_string \"Can't be zero\""
															}
														],
														"id": 2007,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8620:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2012,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8620:41:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2013,
												"nodeType": "ExpressionStatement",
												"src": "8620:41:7"
											},
											{
												"expression": {
													"id": 2016,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2014,
														"name": "_minStakeAmount_c",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1176,
														"src": "8674:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2015,
														"name": "_minAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2002,
														"src": "8694:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8674:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2017,
												"nodeType": "ExpressionStatement",
												"src": "8674:30:7"
											}
										]
									},
									"functionSelector": "c1704a14",
									"id": 2019,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2005,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2004,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "8597:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "8597:9:7"
										}
									],
									"name": "setCopperMinAmount",
									"nameLocation": "8549:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2003,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2002,
												"mutability": "mutable",
												"name": "_minAmount",
												"nameLocation": "8576:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 2019,
												"src": "8568:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2001,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8568:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8567:20:7"
									},
									"returnParameters": {
										"id": 2006,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8607:0:7"
									},
									"scope": 2184,
									"src": "8540:172:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2037,
										"nodeType": "Block",
										"src": "8787:105:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2029,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2027,
																"name": "_minAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2021,
																"src": "8809:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2028,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8822:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8809:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e2774206265207a65726f",
															"id": 2030,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8825:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2",
																"typeString": "literal_string \"Can't be zero\""
															},
															"value": "Can't be zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2",
																"typeString": "literal_string \"Can't be zero\""
															}
														],
														"id": 2026,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8800:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2031,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8800:41:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2032,
												"nodeType": "ExpressionStatement",
												"src": "8800:41:7"
											},
											{
												"expression": {
													"id": 2035,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2033,
														"name": "_minStakeAmount_s",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1174,
														"src": "8854:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2034,
														"name": "_minAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2021,
														"src": "8874:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8854:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2036,
												"nodeType": "ExpressionStatement",
												"src": "8854:30:7"
											}
										]
									},
									"functionSelector": "23b61117",
									"id": 2038,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2024,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2023,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "8777:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "8777:9:7"
										}
									],
									"name": "setSilverMinAmount",
									"nameLocation": "8729:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2021,
												"mutability": "mutable",
												"name": "_minAmount",
												"nameLocation": "8756:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 2038,
												"src": "8748:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2020,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8748:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8747:20:7"
									},
									"returnParameters": {
										"id": 2025,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8787:0:7"
									},
									"scope": 2184,
									"src": "8720:172:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2056,
										"nodeType": "Block",
										"src": "8965:113:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2048,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2046,
																"name": "_minAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2040,
																"src": "8987:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2047,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9000:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8987:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e2774206265207a65726f",
															"id": 2049,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9003:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2",
																"typeString": "literal_string \"Can't be zero\""
															},
															"value": "Can't be zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2",
																"typeString": "literal_string \"Can't be zero\""
															}
														],
														"id": 2045,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8978:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2050,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8978:41:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2051,
												"nodeType": "ExpressionStatement",
												"src": "8978:41:7"
											},
											{
												"expression": {
													"id": 2054,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2052,
														"name": "_minStakeAmount_g",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1172,
														"src": "9040:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2053,
														"name": "_minAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2040,
														"src": "9060:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9040:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2055,
												"nodeType": "ExpressionStatement",
												"src": "9040:30:7"
											}
										]
									},
									"functionSelector": "ae544943",
									"id": 2057,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2043,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2042,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "8955:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "8955:9:7"
										}
									],
									"name": "setGoldMinAmount",
									"nameLocation": "8909:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2041,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2040,
												"mutability": "mutable",
												"name": "_minAmount",
												"nameLocation": "8934:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 2057,
												"src": "8926:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2039,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8926:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8925:20:7"
									},
									"returnParameters": {
										"id": 2044,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8965:0:7"
									},
									"scope": 2184,
									"src": "8900:178:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2133,
										"nodeType": "Block",
										"src": "9148:570:7",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2060,
														"name": "updateReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1340,
														"src": "9169:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2061,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9169:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2062,
												"nodeType": "ExpressionStatement",
												"src": "9169:14:7"
											},
											{
												"assignments": [
													2064
												],
												"declarations": [
													{
														"constant": false,
														"id": 2064,
														"mutability": "mutable",
														"name": "curReward",
														"nameLocation": "9212:9:7",
														"nodeType": "VariableDeclaration",
														"scope": 2133,
														"src": "9204:17:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2063,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9204:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2070,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 2065,
															"name": "_staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1184,
															"src": "9224:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
															}
														},
														"id": 2068,
														"indexExpression": {
															"expression": {
																"id": 2066,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "9232:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2067,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "9232:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "9224:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$1158_storage",
															"typeString": "struct StakingPlatform.Staker storage ref"
														}
													},
													"id": 2069,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "stakerCurrentReward",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1147,
													"src": "9224:39:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9204:59:7"
											},
											{
												"assignments": [
													2072
												],
												"declarations": [
													{
														"constant": false,
														"id": 2072,
														"mutability": "mutable",
														"name": "rewardToClaim",
														"nameLocation": "9282:13:7",
														"nodeType": "VariableDeclaration",
														"scope": 2133,
														"src": "9274:21:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2071,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9274:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2083,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "316534",
																	"id": 2080,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9346:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10000_by_1",
																		"typeString": "int_const 10000"
																	},
																	"value": "1e4"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_10000_by_1",
																		"typeString": "int_const 10000"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 2077,
																			"name": "_rewardFeeRate",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1166,
																			"src": "9326:14:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 2075,
																			"name": "curReward",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2064,
																			"src": "9312:9:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2076,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 705,
																		"src": "9312:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2078,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9312:29:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2079,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 720,
																"src": "9312:33:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2081,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9312:38:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2073,
															"name": "curReward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2064,
															"src": "9298:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2074,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 690,
														"src": "9298:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2082,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9298:53:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9274:77:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2087,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2085,
																"name": "rewardToClaim",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2072,
																"src": "9380:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2086,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9396:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9380:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7468696e6720746f20636c61696d",
															"id": 2088,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9399:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3",
																"typeString": "literal_string \"Nothing to claim\""
															},
															"value": "Nothing to claim"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3",
																"typeString": "literal_string \"Nothing to claim\""
															}
														],
														"id": 2084,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9372:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2089,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9372:46:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2090,
												"nodeType": "ExpressionStatement",
												"src": "9372:46:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2099,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2091,
														"name": "rewardToClaim",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2072,
														"src": "9433:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 2096,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "9473:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_StakingPlatform_$2184",
																			"typeString": "contract StakingPlatform"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_StakingPlatform_$2184",
																			"typeString": "contract StakingPlatform"
																		}
																	],
																	"id": 2095,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9465:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2094,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9465:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 2097,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9465:13:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 2092,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1189,
																"src": "9449:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IBEP20_$912",
																	"typeString": "contract IBEP20"
																}
															},
															"id": 2093,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 851,
															"src": "9449:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 2098,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9449:30:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9433:46:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2110,
												"nodeType": "IfStatement",
												"src": "9429:111:7",
												"trueBody": {
													"expression": {
														"id": 2108,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2100,
															"name": "rewardToClaim",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2072,
															"src": "9494:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2105,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "9534:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_StakingPlatform_$2184",
																				"typeString": "contract StakingPlatform"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_StakingPlatform_$2184",
																				"typeString": "contract StakingPlatform"
																			}
																		],
																		"id": 2104,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "9526:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2103,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "9526:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2106,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9526:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 2101,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1189,
																	"src": "9510:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IBEP20_$912",
																		"typeString": "contract IBEP20"
																	}
																},
																"id": 2102,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 851,
																"src": "9510:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 2107,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9510:30:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "9494:46:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2109,
													"nodeType": "ExpressionStatement",
													"src": "9494:46:7"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2114,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "9570:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2115,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "9570:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2116,
															"name": "rewardToClaim",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2072,
															"src": "9582:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2111,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1189,
															"src": "9551:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															}
														},
														"id": 2113,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 946,
														"src": "9551:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$912_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IBEP20_$912_$",
															"typeString": "function (contract IBEP20,address,uint256)"
														}
													},
													"id": 2117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9551:45:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2118,
												"nodeType": "ExpressionStatement",
												"src": "9551:45:7"
											},
											{
												"expression": {
													"id": 2125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 2119,
																"name": "_staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1184,
																"src": "9607:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																	"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																}
															},
															"id": 2122,
															"indexExpression": {
																"expression": {
																	"id": 2120,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "9615:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2121,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "9615:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9607:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1158_storage",
																"typeString": "struct StakingPlatform.Staker storage ref"
															}
														},
														"id": 2123,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "stakerCurrentReward",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1147,
														"src": "9607:39:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2124,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9649:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9607:43:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2126,
												"nodeType": "ExpressionStatement",
												"src": "9607:43:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2128,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "9684:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2129,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "9684:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2130,
															"name": "rewardToClaim",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2072,
															"src": "9696:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2127,
														"name": "Harvest",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1201,
														"src": "9676:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9676:34:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2132,
												"nodeType": "EmitStatement",
												"src": "9671:39:7"
											}
										]
									},
									"functionSelector": "4641257d",
									"id": 2134,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "harvest",
									"nameLocation": "9132:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2058,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9139:2:7"
									},
									"returnParameters": {
										"id": 2059,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9148:0:7"
									},
									"scope": 2184,
									"src": "9123:595:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2182,
										"nodeType": "Block",
										"src": "9804:350:7",
										"statements": [
											{
												"assignments": [
													2142
												],
												"declarations": [
													{
														"constant": false,
														"id": 2142,
														"mutability": "mutable",
														"name": "_minStakeAmount",
														"nameLocation": "9833:15:7",
														"nodeType": "VariableDeclaration",
														"scope": 2182,
														"src": "9825:23:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2141,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9825:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2144,
												"initialValue": {
													"hexValue": "30",
													"id": 2143,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9851:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9825:27:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2147,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2145,
															"name": "_mode",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2136,
															"src": "9869:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 2146,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9878:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "9869:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2150,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2148,
															"name": "_mode",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2136,
															"src": "9883:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "32",
															"id": 2149,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9892:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "9883:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9869:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2158,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2156,
															"name": "_mode",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2136,
															"src": "9950:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 2157,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9959:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "9950:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2165,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2163,
																"name": "_mode",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2136,
																"src": "10017:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "33",
																"id": 2164,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10026:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_3_by_1",
																	"typeString": "int_const 3"
																},
																"value": "3"
															},
															"src": "10017:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		"id": 2173,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 2171,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10089:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2172,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10093:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "10089:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "496e76616c6964204d6f6465",
																		"id": 2174,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10096:14:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_deac108a7d54cf66b12f6e883ab8551f52667d7b9815f115365cc11ce5c44062",
																			"typeString": "literal_string \"Invalid Mode\""
																		},
																		"value": "Invalid Mode"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_deac108a7d54cf66b12f6e883ab8551f52667d7b9815f115365cc11ce5c44062",
																			"typeString": "literal_string \"Invalid Mode\""
																		}
																	],
																	"id": 2170,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "10080:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 2175,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10080:31:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2176,
															"nodeType": "ExpressionStatement",
															"src": "10080:31:7"
														},
														"id": 2177,
														"nodeType": "IfStatement",
														"src": "10013:98:7",
														"trueBody": {
															"expression": {
																"id": 2168,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2166,
																	"name": "_minStakeAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2142,
																	"src": "10029:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 2167,
																	"name": "_minStakeAmount_g",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1172,
																	"src": "10047:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10029:35:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2169,
															"nodeType": "ExpressionStatement",
															"src": "10029:35:7"
														}
													},
													"id": 2178,
													"nodeType": "IfStatement",
													"src": "9946:165:7",
													"trueBody": {
														"expression": {
															"id": 2161,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2159,
																"name": "_minStakeAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2142,
																"src": "9962:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"id": 2160,
																"name": "_minStakeAmount_c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1176,
																"src": "9980:17:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9962:35:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2162,
														"nodeType": "ExpressionStatement",
														"src": "9962:35:7"
													}
												},
												"id": 2179,
												"nodeType": "IfStatement",
												"src": "9865:246:7",
												"trueBody": {
													"expression": {
														"id": 2154,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2152,
															"name": "_minStakeAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2142,
															"src": "9895:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"id": 2153,
															"name": "_minStakeAmount_m",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1170,
															"src": "9913:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "9895:35:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2155,
													"nodeType": "ExpressionStatement",
													"src": "9895:35:7"
												}
											},
											{
												"expression": {
													"id": 2180,
													"name": "_minStakeAmount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2142,
													"src": "10131:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2140,
												"id": 2181,
												"nodeType": "Return",
												"src": "10124:22:7"
											}
										]
									},
									"functionSelector": "909f093e",
									"id": 2183,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMinimumStakingAmount",
									"nameLocation": "9735:23:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2136,
												"mutability": "mutable",
												"name": "_mode",
												"nameLocation": "9767:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2183,
												"src": "9759:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9759:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9758:15:7"
									},
									"returnParameters": {
										"id": 2140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2139,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2183,
												"src": "9795:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9795:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9794:9:7"
									},
									"scope": 2184,
									"src": "9726:428:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 2185,
							"src": "260:9897:7",
							"usedErrors": []
						}
					],
					"src": "33:10126:7"
				},
				"id": 7
			}
		}
	}
}